window.__require = function e(t, i, n) {
function a(c, s) {
if (!i[c]) {
if (!t[c]) {
var r = c.split("/");
r = r[r.length - 1];
if (!t[r]) {
var l = "function" == typeof __require && __require;
if (!s && l) return l(r, !0);
if (o) return o(r, !0);
throw new Error("Cannot find module '" + c + "'");
}
c = r;
}
var d = i[c] = {
exports: {}
};
t[c][0].call(d.exports, function(e) {
return a(t[c][1][e] || e);
}, d, d.exports, e, t, i, n);
}
return i[c].exports;
}
for (var o = "function" == typeof __require && __require, c = 0; c < n.length; c++) a(n[c]);
return a;
}({
1: [ function(e, t, i) {
i.endianness = function() {
return "LE";
};
i.hostname = function() {
return "undefined" != typeof location ? location.hostname : "";
};
i.loadavg = function() {
return [];
};
i.uptime = function() {
return 0;
};
i.freemem = function() {
return Number.MAX_VALUE;
};
i.totalmem = function() {
return Number.MAX_VALUE;
};
i.cpus = function() {
return [];
};
i.type = function() {
return "Browser";
};
i.release = function() {
return "undefined" != typeof navigator ? navigator.appVersion : "";
};
i.networkInterfaces = i.getNetworkInterfaces = function() {
return {};
};
i.arch = function() {
return "javascript";
};
i.platform = function() {
return "browser";
};
i.tmpdir = i.tmpDir = function() {
return "/tmp";
};
i.EOL = "\n";
}, {} ],
2: [ function(e, t) {
var i, n, a = t.exports = {};
function o() {
throw new Error("setTimeout has not been defined");
}
function c() {
throw new Error("clearTimeout has not been defined");
}
(function() {
try {
i = "function" == typeof setTimeout ? setTimeout : o;
} catch (e) {
i = o;
}
try {
n = "function" == typeof clearTimeout ? clearTimeout : c;
} catch (e) {
n = c;
}
})();
function s(e) {
if (i === setTimeout) return setTimeout(e, 0);
if ((i === o || !i) && setTimeout) {
i = setTimeout;
return setTimeout(e, 0);
}
try {
return i(e, 0);
} catch (t) {
try {
return i.call(null, e, 0);
} catch (t) {
return i.call(this, e, 0);
}
}
}
function r(e) {
if (n === clearTimeout) return clearTimeout(e);
if ((n === c || !n) && clearTimeout) {
n = clearTimeout;
return clearTimeout(e);
}
try {
return n(e);
} catch (t) {
try {
return n.call(null, e);
} catch (t) {
return n.call(this, e);
}
}
}
var l, d = [], h = !1, _ = -1;
function p() {
if (h && l) {
h = !1;
l.length ? d = l.concat(d) : _ = -1;
d.length && u();
}
}
function u() {
if (!h) {
var e = s(p);
h = !0;
for (var t = d.length; t; ) {
l = d;
d = [];
for (;++_ < t; ) l && l[_].run();
_ = -1;
t = d.length;
}
l = null;
h = !1;
r(e);
}
}
a.nextTick = function(e) {
var t = new Array(arguments.length - 1);
if (arguments.length > 1) for (var i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
d.push(new f(e, t));
1 !== d.length || h || s(u);
};
function f(e, t) {
this.fun = e;
this.array = t;
}
f.prototype.run = function() {
this.fun.apply(null, this.array);
};
a.title = "browser";
a.browser = !0;
a.env = {};
a.argv = [];
a.version = "";
a.versions = {};
function g() {}
a.on = g;
a.addListener = g;
a.once = g;
a.off = g;
a.removeListener = g;
a.removeAllListeners = g;
a.emit = g;
a.prependListener = g;
a.prependOnceListener = g;
a.listeners = function() {
return [];
};
a.binding = function() {
throw new Error("process.binding is not supported");
};
a.cwd = function() {
return "/";
};
a.chdir = function() {
throw new Error("process.chdir is not supported");
};
a.umask = function() {
return 0;
};
}, {} ],
ActionType: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e7f69JXiOJJ0biVYQo/61tY", "ActionType");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.ActionType = i.EasingType = void 0;
(function(e) {
e[e.None = 1] = "None";
e[e.sineOut = 2] = "sineOut";
e[e.quadOut = 3] = "quadOut";
e[e.backOut = 4] = "backOut";
e[e.backIn = 5] = "backIn";
})(i.EasingType || (i.EasingType = {}));
(function(e) {
e[e.None = 1] = "None";
e[e.MOVE = 2] = "MOVE";
e[e.SCALE = 3] = "SCALE";
e[e.OPACITY = 4] = "OPACITY";
})(i.ActionType || (i.ActionType = {}));
cc._RF.pop();
}, {} ],
AlertViewMgr: [ function(e, t) {
"use strict";
cc._RF.push(t, "275f7NqQtdAlpyKtQwZoWaq", "AlertViewMgr");
cc.Class({
extends: cc.Component,
properties: {
_prefab: null,
_prefaburl: null
},
init: function(e) {
this._prefaburl = e;
this._loadCommPrefab(e);
},
showTips: function(e, t, i, n) {
var a = this;
if (cc.director.getScene() && e) {
var o = function() {
var o = cc.director.getScene().getChildByName("node_alterview");
o && o.destroy();
var c = cc.instantiate(a._prefab);
c.name = "node_alterview";
c.getComponent("AlertView").showTips(e, t, i, n);
cc.director.getScene().addChild(c);
};
this._prefab ? o() : this._loadCommPrefab(this._prefaburl, o);
}
},
show: function(e, t, i, n, a, o, c, s, r, l) {
var d = this;
if (e) {
var h = function() {
var h = cc.director.getScene().getChildByName("node_alterview");
h && h.destroy();
var _ = cc.instantiate(d._prefab);
_.name = "node_alterview";
_.getComponent("AlertView").show(e, t, i, n, a, o, c, s, r, l);
cc.director.getScene().addChild(_);
};
this._prefab ? h() : this._loadCommPrefab(this._prefaburl, h);
}
},
showSimple: function(e, t, i, n, a, o, c, s) {
cc.loader.loadRes("common/prefab/cashhero_AlterView", cc.Prefab, function(r, l) {
if (!r && !cc.director.getScene().getChildByName("simple_alterview")) {
var d = cc.instantiate(l);
d.name = "simple_alterview";
d.getComponent("AlertView").show(e, t, i, n, a, o, c, s);
cc.director.getScene().addChild(d);
}
});
},
hide: function() {
var e = cc.director.getScene().getChildByName("node_alterview");
e && e.destroy();
},
_loadCommPrefab: function(e, t) {
var i = this;
cc.loader.loadRes(e, cc.Prefab, function(e, n) {
if (!e) {
i._prefab = n;
t && t();
}
});
},
start: function() {}
});
cc._RF.pop();
}, {} ],
AlertView: [ function(e, t) {
"use strict";
cc._RF.push(t, "3dce5WFyPtJD6tUtOQ/3Mlp", "AlertView");
cc.Class({
extends: cc.Component,
properties: {
btn_close: cc.Button,
btn_sure: cc.Button,
btn_cancel: cc.Button,
lbl_content: cc.Label,
_sure_btn_posx: 0,
_cancel_btn_posx: 0,
_center_posx: 0,
_sureBtnCb: null,
_cancelBtnCb: null,
_closeBtnCb: null
},
onLoad: function() {
this.node.zIndex = Global.CONST_NUM.HIGHT_ZORDER;
this.autoAdaptSize();
},
start: function() {},
autoAdaptSize: function() {
Global.FixDesignScale_V(this.node);
},
onEnable: function() {
this.node.x = cc.winSize.width / 2;
this.node.y = cc.winSize.height / 2;
var e = this.node.scale;
Global.showAlertAction(this.node, !0, .1, e, null);
},
showTips: function(e, t, i, n) {
this.hideBtns();
this.lbl_content.string = e && e.length > 0 ? e : "";
this.btn_sure.node.active = !0;
t && (this._sureBtnCb = t);
this._setTitle(i);
this._setBtnText(this.btn_sure.node, n);
Global.playComEff("ch_notification");
},
show: function(e, t, i, n, a, o, c, s, r, l) {
var d = this;
void 0 === r && (r = 0);
this.hideBtns();
this.lbl_content.string = e && e.length > 0 ? e : "";
this.unscheduleAllCallbacks();
if (t) {
this._sureBtnCb = t;
this.btn_sure.node.active = !0;
}
if (i) {
this._cancelBtnCb = i;
this.btn_cancel.node.active = !0;
}
if (n) {
this.btn_close.node.active = !0;
a && (this._closeBtnCb = a);
}
o && this._setTitle(o);
this._setBtnText(this.btn_cancel.node, c);
this._setBtnText(this.btn_sure.node, s);
Global.playComEff("ch_notification");
r > 0 && this.scheduleOnce(function() {
if (l) {
d._autoCb = l;
d.onAutoFunc();
} else d.onCloseBtnClicked();
}, r);
},
hideBtns: function() {
this.btn_close.node.active = !1;
this.btn_cancel.node.active = !1;
this.btn_sure.node.active = !1;
this._closeBtnCb = null;
this._sureBtnCb = null;
this._cancelBtnCb = null;
},
onCloseBtnClicked: function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
this._closeBtnCb && this._closeBtnCb();
this.node.destroy();
},
onSureBtnClicked: function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
this._sureBtnCb && this._sureBtnCb();
this.node.destroy();
},
onCancelBtnClicked: function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
this._cancelBtnCb && this._cancelBtnCb();
this.node.destroy();
},
onAutoFunc: function() {
this._autoCb && this._autoCb();
this.node.destroy();
},
_setTitle: function(e) {
e = e || "TIPS";
var t = cc.find("lbl_title", this.node);
t.getComponent(cc.Label).string = e || "TIPS";
var i = t.getComponent("i18nLabel");
i && (i.string = e);
},
_setBtnText: function(e, t) {
if (e && t) {
cc.find("btn_text", e).getComponent(cc.Label).string = t;
var i = cc.find("btn_text", e).getComponent("i18nLabel");
i && (i.string = t);
}
}
});
cc._RF.pop();
}, {} ],
Android_IOS_Review: [ function(e, t) {
"use strict";
cc._RF.push(t, "caa08PE3bdPLJGd3lrvjOM1", "Android_IOS_Review");
cc.Class({
extends: cc.Component,
properties: {
android_show: {
default: !0,
displayName: "android提审是否显示"
},
ios_show: {
default: !0,
displayName: "ios提审是否显示"
},
only_review_node: {
default: !1,
displayName: "提审才需要显示，不提审就不显示"
}
},
start: function() {
if (Global.isAndroidReview && Global.isAndroid()) this.node.active = this.android_show; else {
this.only_review_node && (this.node.active = !1);
Global.isIOSReview() ? this.node.active = this.ios_show : this.only_review_node && (this.node.active = !1);
}
}
});
cc._RF.pop();
}, {} ],
AnimSystem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a05daAbYPNFZrLxkruleLb4", "AnimSystem");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../System"), a = cc._decorator, o = a.ccclass, c = (a.property, a.menu), s = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.playSkePrefab = function(e) {
return __awaiter(this, void 0, void 0, function() {
return __generator(this, function() {
e = e || {};
return [ 2, new Promise(function(t) {
var i = e.prefab, n = e.parent, a = e.position, o = e.nextLoopAnimName, c = e.scale, s = e.animName, r = e.zIndex, l = e.timeScale, d = e.preCallback, h = e.startCallback, _ = e.endCallback || e.callback;
if (n) {
var p = cc.instantiate(i);
p.parent = n;
p.zIndex = r || 1e3;
a && (p.position = a);
if (c) if (Array.isArray(c)) {
p.scaleX = c[0];
p.scaleY = c[1];
} else p.scale = c;
var u = p.getComponent(sp.Skeleton);
l && (u.timeScale = l);
(u = u || p.getComponentInChildren(sp.Skeleton)).setCompleteListener(function() {
_ && _(p);
if (o) u.setAnimation(0, o, !0); else {
p.destroy();
t();
}
});
if (s) {
d && d(p);
var f = u.setAnimation(0, s, !1);
h && h(p, u, f);
}
} else t();
}) ];
});
});
};
t.prototype.playSkePrefabs = function(e) {
return __awaiter(this, void 0, void 0, function() {
var t, i;
return __generator(this, function(n) {
switch (n.label) {
case 0:
t = 0;
n.label = 1;

case 1:
if (!(t < e.length)) return [ 3, 5 ];
i = e[t];
return t >= e.length - 1 ? [ 4, this.playSkePrefab(i) ] : [ 3, 3 ];

case 2:
n.sent();
return [ 3, 4 ];

case 3:
this.playSkePrefab(i);
n.label = 4;

case 4:
t++;
return [ 3, 1 ];

case 5:
return [ 2 ];
}
});
});
};
return __decorate([ o, c("ECS/系统/动画系统") ], t);
}(n.default);
i.default = s;
cc._RF.pop();
}, {
"../System": "System"
} ],
AppData: [ function(e, t) {
"use strict";
cc._RF.push(t, "589db09YppH4pwpZVdFTPXz", "AppData");
cc.Class({
extends: cc.Component,
properties: {
_disslc: 0,
_diszbc: 0,
_disgrand: 0,
_dismega: 0,
_isInGame: !1,
_record_GameType: 3,
_record_PageIndex: 0,
_gameId: -1,
_gameJackpotList: [],
_slotsJackpotList: [],
_maxbet: 1e4,
_itemsSpriteAtlasList: null,
_coin: 0,
_level: 1,
_localRedTip: null,
_subgameVerMd5: null
},
init: function() {
cc.vv.NetManager.registerMsg(MsgId.GAME_CONFIG || MsgId.LOGIN_USERID, this.onRcvMsgLoginUserId, this, !0);
cc.vv.NetManager.registerMsg(MsgId.GAME_CONFIG || MsgId.LOGIN_USERID, this.onRcvMsgLoginUserId, this, !0);
cc.vv.NetManager.registerMsg(MsgId.GAME_CREATEROOM, this.onEnterGame, this, !0);
cc.vv.NetManager.registerMsg(MsgId.GAME_JOINROOM, this.onEnterGame, this, !0);
cc.vv.NetManager.registerMsg(MsgId.GAME_RECONNECT_DESKINFO, this.onEnterGame, this, !0);
cc.vv.NetManager.registerMsg(MsgId.GAME_ENTER_MATCH, this.onEnterGame, this, !0);
cc.vv.NetManager.registerMsg(MsgId.NOTIFY_SYS_KICK_LOGIN, this.onRcvLeaveGame, this, !0);
cc.vv.NetManager.registerMsg(MsgId.GAME_LEVELROOM, this.onRcvLeaveGame, this, !0);
cc.vv.NetManager.registerMsg(MsgId.JACKTPOT_HALL, this.onRecvJackpotHall, this);
cc.vv.NetManager.registerMsg(MsgId.PULL_JACKPOT_OTHER, this.onRecvJackpot, this);
var e = cc.sys.localStorage.getItem("select_game");
if (e) {
e = JSON.parse(e);
this._record_GameType = e.type;
this._record_PageIndex = e.index;
}
},
onRecvJackpotHall: function(e) {
if (200 === e.code) {
this._disslc = e.disslc || this._disslc;
this._diszbc = e.diszbc || this._diszbc;
this._disgrand = e.disgrand || this._disgrand;
this._dismega = e.dismega || this._dismega;
}
},
setGameJackpot: function() {},
getGameJackpot: function(e) {
for (var t = 0; t < this._gameJackpotList.length; ++t) if (Number(this._gameJackpotList[t].gameid) === Number(e)) return this._gameJackpotList[t].jp;
for (var i = 0; i < this._slotsJackpotList.length; ++i) if (Number(this._slotsJackpotList[i].gameid) === Number(e)) return this._slotsJackpotList[i].jp;
return [ 10, 10, 10, 10 ];
},
onRcvLeaveGame: function(e) {
200 == e.code && (this._gameId = -1);
},
onEnterGame: function(e) {
200 == e.code && (this._gameId = e.gameid);
},
getGameId: function() {
return this._gameId;
},
setGameId: function(e) {
this._gameId = e;
},
clearGameId: function() {
this._gameId = -1;
},
getIsInGame: function() {
return this._gameId > -1;
},
getMaxBet: function() {
return this._maxbet;
},
onRcvMsgLoginUserId: function(e) {
if (200 === e.code) {
for (var t in e.gamelist) for (var i = e.gamelist[t], n = 0; n < i.length; ++n) {
var a = {};
a.gameid = i[n].id;
a.jp = i[n].jp;
this._gameJackpotList.push(a);
}
if (e.slotslist) for (var o = e.slotslist, c = 0; c < o.length; ++c) {
var s = {};
s.gameid = o[c].id;
s.jp = o[c].jp;
this._slotsJackpotList.push(s);
}
}
this._maxbet = e.maxbet || 1e3;
this._disslc = e.disslc || this._disslc;
this._diszbc = e.diszbc || this._diszbc;
this._disgrand = e.disgrand || this._disgrand;
this._dismega = e.dismega || this._dismega;
this._level = e.level || this._level;
this._coin = e.coin || this._coin;
},
getGrand: function() {
return this._disgrand;
},
getMega: function() {
return this._dismega;
},
getSLC: function() {
return this._disslc;
},
getZBC: function() {
return this._diszbc;
},
setLotteryPot: function(e, t, i, n) {
this._disslc = e || this._disslc;
this._diszbc = t || this._diszbc;
this._disgrand = i || this._disgrand;
this._dismega = n || this._dismega;
},
start: function() {},
onRecvJackpot: function(e) {
if (200 === e.code) {
this._lastnotify = this._lastnotify || cc.vv.UserManager.getServerTime();
if (cc.vv.UserManager.getServerTime() - this._lastnotify > 300) {
Global.dispatchEvent(EventId.GET_JACKPOT_OTHER, e);
this._lastnotify = cc.vv.UserManager.getServerTime();
} else cc.log("中奖太频繁，小于5分钟");
}
},
setSubverMd5: function(e) {
this._subgameVerMd5 = e;
Global.saveLocal("submd5", JSON.stringify(e));
},
getSubverMd5: function() {
if (!this._subgameVerMd5) {
var e = Global.getLocal("submd5");
e && (this._subgameVerMd5 = JSON.parse(e));
}
return this._subgameVerMd5;
},
setLaunchProgress: function(e) {
this._launchProgress = e;
},
getLaunchProgress: function() {
return this._launchProgress;
},
setLaunchAnnousment: function(e) {
this._launchInfo = e;
},
getLaunchAnnousment: function() {
return this._launchInfo;
},
setHotupdateStart: function(e) {
this._bHotupdateStart = e;
},
getHotupdateStart: function() {
return this._bHotupdateStart;
}
});
cc._RF.pop();
}, {} ],
AppLog: [ function(e, t) {
"use strict";
cc._RF.push(t, "bdde8lksOhKO5Zj5w2La0u6", "AppLog");
window.LogMode = cc.debug.DebugMode.INFO;
var i = cc.Class({
extends: cc.Component,
statics: {
getDateString: function() {
var e = new Date(), t = e.getHours(), i = "";
i += (1 == t.length ? "0" + t : t) + ":";
i += (1 == (t = e.getMinutes()).length ? "0" + t : t) + ":";
i += (1 == (t = e.getSeconds()).length ? "0" + t : t) + ":";
1 == (t = e.getMilliseconds()).length && (t = "00" + t);
2 == t.length && (t = "0" + t);
return "[" + (i += t) + "]";
},
stack: function(e) {
var t = new Error().stack.split("\n");
t.shift();
var i = [];
t.forEach(function(e) {
var t = (e = e.substring(7)).split(" ");
if (t.length < 2) i.push(t[0]); else {
var n;
i.push(((n = {})[t[0]] = t[1], n));
}
});
if (-1 == e) {
for (var n = "ERROR Function stack:", a = 2; a < i.length; a++) {
n += "\n\t";
if ("string" != typeof i[a]) {
var o = [];
for (var c in i[a]) o.push(c);
n += o[0];
n += i[a][o[0]];
} else n += i[a];
}
return n + "\nLog: ";
}
if (e < i.length - 1) {
o = [];
for (var c in i[e]) o.push(c);
return o[0] + i[e][o[0]] + "\n\tLog: ";
}
},
log: function(e) {
function t() {
return e.apply(this, arguments);
}
t.toString = function() {
return e.toString();
};
return t;
}(function() {
var e = console.log || cc.log || log;
LogMode <= cc.debug.DebugMode.INFO && (Global.isNative() ? e(i.getDateString() + "Log: " + cc.js.formatStr.apply(cc, arguments)) : e.call(this, "%c%s%s" + cc.js.formatStr.apply(cc, arguments), "color:#4E455F;", this.stack(3), i.getDateString()));
}),
info: function() {
var e = console.log || cc.log || log;
LogMode <= cc.debug.DebugMode.INFO && (Global.isNative() ? e(i.getDateString() + "Info: " + cc.js.formatStr.apply(cc, arguments)) : e.call(this, "%c%s%s:" + cc.js.formatStr.apply(cc, arguments), "color:#00CD00;", this.stack(2), i.getDateString()));
},
warn: function() {
var e = console.log || cc.log || log;
LogMode <= cc.debug.DebugMode.WARN && (Global.isNative() ? e(i.getDateString() + "Warn: " + cc.js.formatStr.apply(cc, arguments)) : e.call(this, "%c%s%s:" + cc.js.formatStr.apply(cc, arguments), "color:#ee7700;", this.stack(2), i.getDateString()));
},
err: function() {
var e = console.log || cc.log || log;
LogMode <= cc.debug.DebugMode.ERROR && (Global.isNative() ? e(i.getDateString() + "Error: " + cc.js.formatStr.apply(cc, arguments)) : e.call(this, "%c%s%s:" + cc.js.formatStr.apply(cc, arguments), "color:red", this.stack(-1), i.getDateString()));
},
ShowScreen: function() {
var e = cc.sys.localStorage.getItem("screen_log");
if (e) {
var t = i.getDateString() + cc.js.formatStr.apply(cc, arguments);
this._screenLogs = this._screenLogs || [];
this._screenLogs.push(t);
var n = cc.find("Canvas/lay_logs");
if (!n) {
(n = new cc.Node("lay_logs")).anchorY = 1;
n.anchorX = 0;
var a = n.addComponent(cc.Widget);
a.isAlignTop = !0;
a.top = 0;
a.isAlignLeft = !0;
a.left = 0;
a.isAlignRight = !0;
a.right = 0;
var o = n.addComponent(cc.Layout);
o.type = cc.Layout.Type.VERTICAL;
o.resizeMode = cc.Layout.ResizeMode.CONTAINER;
o.spacingY = 5;
n.parent = cc.find("Canvas");
}
do {
var c = this._screenLogs.shift();
if (c) {
var s = new cc.Node();
s.anchorX = 0;
var r = s.addComponent(cc.Label);
r.string = c;
n.addChild(s);
}
} while (this._screenLogs.length > 0);
}
}
}
});
window.AppLog = i;
cc._RF.pop();
}, {} ],
AssetMgr: [ function(e, t) {
"use strict";
cc._RF.push(t, "94fbaJUTbZNl71UwPCZSHXf", "AssetMgr");
cc.Class({
extends: cc.Component,
statics: {
_prefabURL: [],
loadAllRes: function() {
this.loadAllBitMapFont();
},
loadAllBitMapFont: function() {
cc.loader.loadResDir("font/", cc.BitmapFont, function(e, t) {
var i = {};
for (var n in t) i[t[n]._name] = t[n];
window.BitMapFont = i;
}.bind(this));
},
loadResSpriteFrame: function(e, t) {
cc.loader.loadRes(e, cc.SpriteFrame, function(e, i) {
e || t(i);
});
},
loadResPrefab: function(e, t) {
var i = this;
cc.loader.loadRes(e, cc.Prefab, function(n, a) {
if (!n) {
i._addPrefab(e);
t(a);
}
});
},
_addPrefab: function(e) {
for (var t = !1, i = 0; i < this._prefabURL.length; i++) if (e == this._prefabURL[i]) {
t = !0;
break;
}
t || this._prefabURL.push(e);
},
releasePrefabs: function() {
for (var e = 0; e < this._prefabURL.length; e++) cc.loader.releaseRes(this._prefabURL[e], cc.Prefab);
this._prefabURL = [];
}
}
});
cc._RF.pop();
}, {} ],
AudioCfgCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7798cGcecdCX4SV6zloQwBU", "AudioCfgCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.AudioCfgItem = void 0;
var n = cc._decorator, a = n.ccclass, o = n.property, c = n.menu, s = function() {
function e() {
this.key = "";
this.audio = null;
}
__decorate([ o({
displayName: "Key"
}) ], e.prototype, "key", void 0);
__decorate([ o({
type: cc.AudioClip,
displayName: "MP3"
}) ], e.prototype, "audio", void 0);
return __decorate([ a("AudioCfgItem") ], e);
}();
i.AudioCfgItem = s;
var r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.config = [];
return t;
}
__decorate([ o({
type: [ s ]
}) ], t.prototype, "config", void 0);
return __decorate([ a, c("ECS/配置/声音配置") ], t);
}(cc.Component);
i.default = r;
cc._RF.pop();
}, {} ],
AudioManager: [ function(e, t) {
"use strict";
cc._RF.push(t, "604ecP8/J1J7orKou3S09Da", "AudioManager");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
cc.Class({
extends: cc.Component,
statics: {
bgmVolume: 1,
effVolume: 1,
bgmAudioId: -1,
tempBgmCfg: JSON.stringify({
suburl: "",
iscommon: !1
}),
languageType: 0,
CHINESE: 0,
ENGLISH: 1,
soundEffectList: null,
bgmUrl: "",
init: function() {
var e = Global.getLocal("bgmVolume", this.bgmVolume);
cc.js.isNumber(Number(e)) && (this.bgmVolume = parseFloat(e));
var t = Global.getLocal("effVolume", this.effVolume);
cc.js.isNumber(Number(t)) && (this.effVolume = parseFloat(t));
var i = Global.getLocal("languageType", this.languageType);
this.languageType = parseInt(i);
this.tempBgmCfg = {
suburl: "",
iscommon: !1
};
cc.game.on(cc.game.EVENT_HIDE, this.onBackGround.bind(this));
cc.game.on(cc.game.EVENT_SHOW, this.onEnterFront.bind(this));
this.soundEffectList = new Map();
},
onBackGround: function() {
this.pauseAll();
},
onEnterFront: function() {
this.resumeAll();
},
getSoundURL: function(e, t, i) {
var n = "";
n += e;
n += "audio/";
i || (this.languageType == this.ENGLISH || "en" == Global.language ? n += "english/" : n += "chinese/");
return n + t;
},
playBgm: function(e, t, i, n, a, o, c) {
void 0 === o && (o = !0);
var s = this;
cc.log("play Bgm music: ", e, " file:", t);
this._cb = null;
this.tempBgmCfg.subpath = e;
this.tempBgmCfg.filename = t;
this.tempBgmCfg.iscommon = i;
var r = this.getSoundURL(e, t, i);
if (this.bgmUrl !== r) {
this.bgmAudioId >= 0 && cc.audioEngine.stop(this.bgmAudioId);
var l = this.bgmVolume;
n && this.bgmVolume > 0 && (l = n);
var d = window[c];
d ? d.load(r, cc.AudioClip, function(e, t) {
if (e) cc.log(e); else {
cc.audioEngine.setMusicVolume(l);
s.bgmAudioId = cc.audioEngine.playMusic(t, o);
if (a) {
s._cb = a;
cc.audioEngine.setFinishCallback(s.bgmAudioId, function() {
if (s._cb) {
s._cb();
s._cb = null;
}
});
}
}
}) : cc.resources.load(r, cc.AudioClip, function(e, t) {
if (e) cc.log(e); else {
cc.audioEngine.setMusicVolume(l);
s.bgmAudioId = cc.audioEngine.playMusic(t, o);
if (a) {
s._cb = a;
cc.audioEngine.setFinishCallback(s.bgmAudioId, function() {
if (s._cb) {
s._cb();
s._cb = null;
}
});
}
}
});
this.bgmUrl = r;
}
return this.bgmAudioId;
},
stopBgm: function() {
if (this.bgmAudioId >= 0) {
cc.audioEngine.stop(this.bgmAudioId);
if (this._cb) {
this._cb();
this._cb = null;
}
this.bgmAudioId = -1;
this.bgmUrl = "";
}
},
setClearBgmCall: function() {
this._cb = null;
},
playAudioClip: function(e, t, i, n) {
var a, o = this, c = n || this.effVolume;
a = cc.audioEngine.play(e, t, c);
this.soundEffectList.set(a, e.name);
cc.audioEngine.setFinishCallback(a, function() {
o.soundEffectList.delete(a);
i && i();
});
return a;
},
playBGMClip: function(e, t, i, n) {
var a = this;
void 0 === t && (t = !0);
this.bgmAudioId >= 0 && cc.audioEngine.stop(this.bgmAudioId);
var o = this.bgmVolume;
n && this.bgmVolume > 0 && (o = n);
cc.audioEngine.setMusicVolume(o);
this.bgmAudioId = cc.audioEngine.playMusic(e, t);
if (i) {
this._cb = i;
cc.audioEngine.setFinishCallback(this.bgmAudioId, function() {
if (a._cb) {
a._cb();
a._cb = null;
}
});
}
return this.bgmAudioId;
},
playEff: function(e, t, i, n, a, o, c, s) {
void 0 === n && (n = !1);
var r = this;
if (t) {
cc.log("Effect:" + t);
var l, d = this.getSoundURL(e, t, i), h = o || this.effVolume;
s && window[s] ? window[s].load(d, cc.AudioClip, function(e, t) {
if (e) cc.log(e); else {
cc.audioEngine.setEffectsVolume(h);
l = cc.audioEngine.playEffect(t, n);
c && c(l);
r.soundEffectList.set(l, t.name);
cc.audioEngine.setFinishCallback(l, function() {
r.soundEffectList.delete(l);
a && a();
});
}
}) : cc.resources.load(d, cc.AudioClip, function(e, t) {
if (e) cc.log(e); else {
cc.audioEngine.setEffectsVolume(h);
l = cc.audioEngine.playEffect(t, n);
c && c(l);
r.soundEffectList.set(l, t.name);
cc.audioEngine.setFinishCallback(l, function() {
r.soundEffectList.delete(l);
a && a();
});
}
});
}
},
playSimpleEff: function(e) {
var t = this, i = this;
cc.resources.load(e, cc.AudioClip, function(e, n) {
if (!e) {
cc.audioEngine.setEffectsVolume(t.effVolume);
var a = cc.audioEngine.playEffect(n, !1);
i.soundEffectList.set(a, n.name);
cc.audioEngine.setFinishCallback(a, function() {
i.soundEffectList.delete(a);
});
}
});
},
setEffVolume: function(e) {
if (this.effVolume != e) {
this.effVolume = e;
Global.saveLocal("effVolume", this.effVolume);
}
for (var t, n = i(this.soundEffectList.entries()); !(t = n()).done; ) {
var a = t.value, o = a[0];
a[1];
cc.audioEngine.setVolume(o, e);
}
},
setBgmVolume: function(e) {
e > 1 && (e = 1);
if (this.bgmVolume != e) {
this.bgmVolume = e;
Global.saveLocal("bgmVolume", this.bgmVolume);
}
cc.audioEngine.setMusicVolume(e);
},
setLanguage: function(e) {
if (this.languageType != e) {
if (e != this.CHINESE && e != this.ENGLISH) return;
Global.saveLocal("languageType", e);
this.languageType = e;
this.tempBgmCfg.iscommon || this.playBgm(this.tempBgmCfg.suburl, this.tempBgmCfg.filename, this.tempBgmCfg.iscommon);
}
},
getLanguage: function() {
return this.languageType;
},
getBgmVolume: function() {
return cc.audioEngine.getMusicVolume();
},
getEffVolume: function() {
return this.effVolume;
},
pauseBgm: function() {
cc.audioEngine.pauseMusic();
},
resumeBgm: function() {
cc.audioEngine.resumeMusic();
},
pauseAll: function() {
cc.audioEngine.pauseAll();
},
resumeAll: function() {
cc.audioEngine.resumeAll();
},
stopAudio: function(e) {
for (var t, n = i(this.soundEffectList.entries()); !(t = n()).done; ) {
var a = t.value, o = a[0], c = (a[1], !1);
o == e && (c = !0);
if (c) {
cc.audioEngine.stop(o);
this.soundEffectList.delete(o);
}
}
},
stopAllEffect: function(e) {
void 0 === e && (e = []);
AppLog.log("!!!!!!!!!!!!!!stop all effect");
for (var t, n = i(this.soundEffectList.entries()); !(t = n()).done; ) {
for (var a = t.value, o = a[0], c = a[1], s = !1, r = 0; r < e.length; ++r) if (c.indexOf(e[r]) >= 0) {
s = !0;
break;
}
if (!s) {
cc.audioEngine.stop(o);
this.soundEffectList.delete(o);
}
}
0 === e.length && this.soundEffectList.clear();
},
pauseAllEffect: function() {
cc.audioEngine.pauseAllEffects();
},
resumeAllEffect: function() {
cc.audioEngine.resumeAllEffects();
},
stopEffectByName: function(e) {
for (var t, n = !1, a = i(this.soundEffectList.entries()); !(t = a()).done; ) {
var o = t.value, c = o[0], s = !1;
o[1].indexOf(e) >= 0 && (s = !0);
if (s) {
cc.audioEngine.stop(c);
this.soundEffectList.delete(c);
n = !0;
}
}
return n;
},
stopAll: function() {
this.bgmUrl = null;
cc.audioEngine.stopAll();
}
}
});
cc._RF.pop();
}, {} ],
BaseHandler: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "374b9ostXdAl4/sDM83O4j+", "BaseHandler");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.BaseHandler = void 0;
var n = function() {
function e() {
this._stopRec = !0;
this.reset();
}
e.prototype.reset = function() {
this._delayCfg = new Map();
this._handlerMap = new Map();
this._noCacheHandlerMap = new Map();
this._msgQueue = [];
this._canPlayCmd = !1;
this._timeCode = 0;
this._stopRec = !0;
};
e.prototype.run = function() {
this._stopRec = !1;
};
e.prototype.stop = function() {
this._stopRec = !0;
};
e.prototype.registerNoCacheHandler = function(e, t) {
this._noCacheHandlerMap.set(e, t);
cc.vv.NetManager.registerMsg(e, this.onData, this, !1);
};
e.prototype.registerHandler = function(e, t, i) {
this._handlerMap.set(e, t);
this._delayCfg.set(e, i);
cc.vv.NetManager.registerMsg(e, this.onData, this, !1);
};
e.prototype.onData = function(e) {
if (!this._stopRec) {
var t = e.c;
if (this._noCacheHandlerMap.has(t)) this._noCacheHandlerMap.get(t)(e); else try {
if (this._canPlayCmd) {
this._msgQueue.push(e);
if (this._msgQueue.length > 5) {
this.clearMsgQueue();
cc.vv.NetManager.reconnect();
} else this.playCmd();
} else if (this._msgQueue.length > 5) {
this.clearMsgQueue();
cc.vv.NetManager.reconnect();
} else this._msgQueue.push(e);
} catch (e) {
cc.log(e);
}
}
};
e.prototype._clearTimer = function() {
if (-1 != this._timeCode) {
clearTimeout(this._timeCode);
this._timeCode = -1;
}
};
e.prototype.pauseCmd = function() {
this._canPlayCmd = !1;
this._clearTimer();
};
e.prototype.resumeCmd = function() {
this._canPlayCmd = !0;
this._msgQueue.length > 0 && this.playCmd();
};
e.prototype._getCmdDelayTime = function(e) {
return this._delayCfg.get(e);
};
e.prototype.clear = function() {
var e = this;
this._handlerMap && this._handlerMap.forEach(function(t, i) {
cc.vv.NetManager.unregisterMsg(i, e.onData, !1, e);
});
this._noCacheHandlerMap && this._noCacheHandlerMap.forEach(function(t, i) {
cc.vv.NetManager.unregisterMsg(i, e.onData, !1, e);
});
this.clearMsgQueue();
this._handlerMap = null;
this._noCacheHandlerMap = null;
};
e.prototype.clearMsgQueue = function() {
this._msgQueue = [];
this._canPlayCmd = !1;
this._timeCode = 0;
};
e.prototype.exeCuteCmd = function(e) {
var t = e.c, i = this._handlerMap.get(t);
i ? i(e) : cc.log("#cannot find handler:" + t);
};
e.prototype.playCmd = function() {
if (!(this._msgQueue.length <= 0)) {
var e = this._msgQueue[0], t = this._getCmdDelayTime(e.c);
t ? this._timeCode = setTimeout(this.playNexCmd.bind(this), 1e3 * t) : this.playNexCmd();
}
};
e.prototype.playNexCmd = function() {
this._clearTimer();
if (this._msgQueue.length > 0 && this._canPlayCmd) {
var e = this._msgQueue.shift();
this.exeCuteCmd(e);
this.playCmd();
}
};
e.prototype.startPlayCmd = function() {
this._canPlayCmd = !0;
this.playNexCmd();
};
return e;
}();
i.BaseHandler = n;
cc._RF.pop();
}, {} ],
BaseRoomCpt: [ function(e, t) {
"use strict";
cc._RF.push(t, "2967eHQL19Gw7srNEFnNDok", "BaseRoomCpt");
var i;
function n(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = a(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var n = 0;
return function() {
return n >= e.length ? {
done: !0
} : {
done: !1,
value: e[n++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function a(e, t) {
if (e) {
if ("string" == typeof e) return o(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? o(e, t) : void 0;
}
}
function o(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
cc.Class(((i = {
extends: cc.Component,
properties: {
titileNode: cc.Node,
itemContent: cc.Node,
roomAtlas: cc.SpriteAtlas,
itemPrefab: cc.Prefab,
btnLeft: cc.Button,
btnRight: cc.Button,
userNodes: [ cc.Node ],
btnRank: cc.Button,
handRoundContainer: cc.ToggleContainer,
balootRankContainer: cc.ToggleContainer,
_isLoading: !1,
isLoading: {
set: function(e) {
this._isLoading = e;
this.updateView && this.updateView();
},
get: function() {
return this._isLoading;
}
}
},
onLoad: function() {
this.netListener = this.node.addComponent("NetListenerCmp");
this.isLoading = !1;
this.itemNodeList = [];
for (var e, t = n(this.userNodes); !(e = t()).done; ) e.value.active = !1;
this.btnRank && (this.btnRank.node.active = !1);
this.handRoundContainer && (this.handRoundContainer.node.active = !1);
this.balootRankContainer && (this.balootRankContainer.node.active = !1);
},
onInit: function(e) {
this.gameid = e.gameid;
this.config = [];
for (var t, i = n(cc.vv.UserManager.gameList); !(t = i()).done; ) {
var a = t.value;
a.id == this.gameid && (this.config = a.sess);
}
this.config.sort(function(e, t) {
return e.entry - t.entry;
});
this.btnLeft.node.on("click", e.onPageLeft);
this.btnRight.node.on("click", e.onPageRight);
this.btnLeft.node.active = 0 != e.index;
this.btnRight.node.active = 3 != e.index;
this.btnRank.node.on("click", this.onClickLeague, this);
if (this.titileNode) {
var o = "";
256 == this.gameid ? o = "Baloot" : 257 == this.gameid ? o = "Hand" : 258 == this.gameid ? o = "Hand Saudi" : 259 == this.gameid ? o = "Tarneeb" : 265 == this.gameid && (o = "Domino");
this.titileNode.getComponent(cc.Label).string = o;
}
for (var c = 0; c < 4; c++) {
var s = cc.instantiate(this.itemPrefab);
this.itemNodeList.push(s);
s.parent = this.itemContent;
var r = s.getComponent(cc.Button);
r && this.onClickRoomItem && r.node.on("click", this.onClickRoomItem.bind(this, this.config[c]), this);
for (var l, d = n(s.getComponentsInChildren(cc.Button)); !(l = d()).done; ) l.value.node.on("click", this.onClickRoomItem.bind(this, this.config[c]), this);
}
this.updateView();
},
onOpen: function() {
this.netListener.registerMsg(MsgId.GAME_ENTER_MATCH, this.GAME_ENTER_MATCH, this, !1);
this.netListener.registerMsg(MsgId.RANK_THREE_DATA, this.RANK_THREE_DATA, this);
cc.vv.NetManager.sendAndCache({
c: MsgId.RANK_THREE_DATA,
type: 1,
gameid: this.gameid
});
},
onClose: function() {
this.netListener.clear();
},
GAME_ENTER_MATCH: function() {
this.isLoading = !1;
},
RANK_THREE_DATA: function(e) {
if (200 == e.code && this.gameid == e.gameid) for (var t = e.datalist || [], i = 0; i < 3; i++) {
var n = this.userNodes[i], a = t[i];
if (a) {
n.active = !0;
var o = cc.find("head", n).getComponent("HeadCmp");
if (o) {
o.setHead(a.uid, a.usericon);
o.setAvatarFrame(a.avatarframe);
}
cc.find("username", n).getComponent(cc.Label).string = a.playername;
} else n.active = !1;
}
},
updateView: function() {
if (this.gameid) for (var e = 0; e < this.itemNodeList.length; e++) if (this.config[e]) {
this.itemNodeList[e].active = !0;
this.updateItemView(this.itemNodeList[e], this.config[e], e);
} else this.itemNodeList[e].active = !1;
},
updateItemView: function(e, t, i) {
if (t) {
cc.find("blind", e).getComponent(cc.Label).string = Global.FormatNumToComma(t.reward || 0);
cc.find("coin/value", e).getComponent(cc.Label).string = Global.FormatNumToComma(t.entry || 0);
e.getComponent(cc.Sprite).spriteFrame = this.roomAtlas.getSpriteFrame("btn_room_" + (i + 1));
cc.find("title", e).getComponent(cc.Sprite).spriteFrame = this.roomAtlas.getSpriteFrame("text_room_" + (i + 1) + "_" + cc.vv.i18nManager.getConfig().lang);
cc.find("needvip", e).active = Math.max(cc.vv.UserManager.svip, 0) < t.vipLevel;
cc.find("unlock", e).active = this.isLoading || this.noHost;
}
},
onClickRoomItem: function(e) {
var t = this;
if (!this.isLoading) if (cc.vv.UserManager.coin < e.section[0]) cc.vv.AlertView.showTips(___("您的金币不足"), function() {
cc.vv.EventManager.emit("HALL_OPEN_SHOP", {
open: 1
});
}); else if (e.section[1] > 0 && cc.vv.UserManager.coin > e.section[1]) cc.vv.AlertView.show(___("您的金币已超出最大携带,是否进入合适的房间?"), function() {
cc.vv.NetManager.send({
c: MsgId.GAME_ENTER_MATCH,
gameid: t.gameid
}, !0);
}, function() {}); else {
this.isLoading = !0;
var i = -1;
if (this.handRoundContainer) for (var a, o = n(this.handRoundContainer.toggleItems); !(a = o()).done; ) {
var c = a.value;
c.isChecked && (i = [ 1, 5 ][this.handRoundContainer.toggleItems.indexOf(c)]);
}
if (this.balootRankContainer) for (var s, r = n(this.balootRankContainer.toggleItems); !(s = r()).done; ) {
var l = s.value;
l.isChecked && (i = [ 5, 1 ][this.balootRankContainer.toggleItems.indexOf(l)]);
}
StatisticsMgr.reqReport(ReportConfig.ONLINE_START_GAME, null, this.gameid);
StatisticsMgr.reqReportNow(ReportConfig.ENTER_GAME, this.gameid, this.gameid);
i >= 0 ? cc.vv.NetManager.send({
c: MsgId.GAME_ENTER_MATCH,
round: i,
ssid: e.ssid,
gameid: this.gameid
}, !0) : cc.vv.NetManager.send({
c: MsgId.GAME_ENTER_MATCH,
ssid: e.ssid,
gameid: this.gameid
}, !0);
}
}
}).GAME_ENTER_MATCH = function() {
this.isLoading = !1;
}, i.onClickLeague = function() {
Global.dispatchEvent("HALL_OPEN_LEAGUE");
}, i));
cc._RF.pop();
}, {} ],
BeInviteView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "dbcbcmGpvtMKpJmup9A3CiT", "BeInviteView");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.btn_agree = null;
t.btn_refuse = null;
return t;
}
t.prototype.onLoad = function() {
this.btn_agree.node.on("click", this.onAgree, this);
this.btn_refuse.node.on("click", this.onRefuse, this);
};
t.prototype.onInit = function(e) {
this.msg = e;
};
t.prototype.onAgree = function() {
var e = cc.vv.UserManager.getSalonVip();
if (e > cc.vv.UserManager.svip) {
var t = cc.js.formatStr("Upgrade your VIP level to VIP%s to enjoy the Salon", e);
cc.vv.AlertView.show(___(t), function() {
Global.dispatchEvent("OpenCharge");
}, function() {}, !1, null, null, null, "Upgrade Now");
cc.vv.PopupManager.removePopup(this.node);
return !1;
}
cc.vv.NetManager.send({
c: MsgId.SALON_INVITE_APPLY,
type: 1,
idx: this.msg.idx,
from: this.msg.from,
gameid: this.msg.gameid,
deskid: this.msg.deskid
});
cc.vv.NetManager.send({
c: MsgId.FRIEND_ROOM_JOIN,
gameid: this.msg.gameid,
deskid: this.msg.deskid
});
cc.vv.PopupManager.removePopup(this.node);
};
t.prototype.onRefuse = function() {
cc.vv.NetManager.send({
c: MsgId.SALON_INVITE_APPLY,
type: 0,
idx: this.msg.idx,
from: this.msg.from,
gameid: this.msg.gameid,
deskid: this.msg.deskid
});
cc.vv.PopupManager.removePopup(this.node);
};
__decorate([ o(cc.Button) ], t.prototype, "btn_agree", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btn_refuse", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
BigWin: [ function(e, t) {
"use strict";
cc._RF.push(t, "0de27nTIKJCPquU38ruJ2Vn", "BigWin");
cc.Class({
extends: cc.Component,
properties: {
_spEffect: 0,
_winNum: 0,
_audioId: -1,
_isShow: !1,
_mult: 1,
_bigWinSprite: null,
_bigWinWitheSprite: null,
_isWaitCloseFreeBalance: !1,
_playSoundIndex: 0,
_playSound: !1,
_delayTime: 0,
_autoClose: !0
},
onLoad: function() {
Global.registerEvent(cc.vv.gameData._EventId.SLOT_STOP_MOVE, this.stopMove, this);
Global.registerEvent(cc.vv.gameData._EventId.SLOT_GAME_START, this.recvGameStart, this);
Global.registerEvent(cc.vv.gameData._EventId.CLEAR_DESK, this.clearDesk, this);
Global.registerEvent(cc.vv.gameData._EventId.HIDE_BIG_WIN, this.hideBigWin, this);
Global.registerEvent(cc.vv.gameData._EventId.SLOT_DELAY_PLAY_WIN_EFFECT, this.recvDelayPlayWinEffect, this);
Global.registerEvent(cc.vv.gameData._EventId.SLOT_DELAY_PLAY_BIGWIN_EFFECT, this.recvDelayPlayWinEffect, this);
Global.registerEvent(cc.vv.gameData._EventId.CALL_BIGWIN_EFFECT, this.callPlayBigWinEffect, this);
Global.registerEvent(cc.vv.gameData._EventId.SLOT_CLOSE_FREE_BALANCE, this.onRecvCloseFreeBalance, this);
if (cc.vv.gameData.addBtnSoundToDebarList) {
cc.vv.gameData.addBtnSoundToDebarList("bigwin");
cc.vv.gameData.addBtnSoundToDebarList("bwin3");
cc.vv.gameData.addBtnSoundToDebarList("bwinefx");
cc.vv.gameData.addBtnSoundToDebarList("emotion_sound_big_win");
cc.vv.gameData.addBtnSoundToDebarList("emotion_sound_huge_win");
cc.vv.gameData.addBtnSoundToDebarList("tnt_react");
}
StatisticsMgr.reqReport(StatisticsMgr.REQ_BIGWIN_POP);
},
onRecvCloseFreeBalance: function() {
this._isWaitCloseFreeBalance = !1;
if (this._isShow) {
this.playEffect();
this._isShow = !1;
}
},
recvDelayPlayWinEffect: function(e) {
this._isDelay = e.detail;
if (!this._isDelay && this._isShow && !this._isWaitCloseFreeBalance) {
this.playEffect();
this._isShow = !1;
}
},
stopMove: function() {
this._isShow = !0;
if (!this._isDelay && !this._isWaitCloseFreeBalance) {
this.playEffect(.5);
this._isShow = !1;
}
},
initAction: function() {
if (!this.isInit) {
Global.dispatchEvent(cc.vv.gameData._EventId.SLOT_PAUSE_AUTO);
cc.loader.loadRes("slots_common/SlotRes/bigwin/prefab_bigwin", cc.Prefab, this.loadPrefabFinish.bind(this));
this.isInit = !0;
}
},
loadPrefabFinish: function(e, t) {
var i = this;
if (null == e) {
if (this.node.getChildByName("BigWinNode")) return;
this._doingHideBigwin = null;
var n = this._spEffect > 5 ? 5 : this._spEffect;
this._soundEffName = [ "win_bigwin_HD", "win_hugewin_HD", "win_massivewin_HD", "win_apocalypticwin_HD", "win_apocalypticwin_HD" ][n - 1];
if (!this._soundEffName) {
console.log("===not found bigwin:" + n);
return;
}
i.playEffStartCall();
this._bigWinNode = cc.instantiate(t);
Global.FixDesignScale_V(this._bigWinNode);
this._bigWinNode.name = "BigWinNode";
this._bigWinNode.parent = this.node;
var a = "slots_common/SlotRes/bigwin/" + [ "bigwin", "hugewin", "Massivewin", "Apocslypticwin", "Apocslypticwin" ][n - 1], o = cc.find("ui/node_spin", this._bigWinNode).getComponent(sp.Skeleton);
cc.loader.loadRes(a, sp.SkeletonData, function(e, t) {
if (cc.isValid(i._bigWinNode) && cc.isValid(o)) {
o.skeletonData = t;
o.setAnimation(0, "Animation1", !1);
o.addAnimation(0, "Animation2", !0);
i.showDropCoins();
i.processStage = "startShow";
o.scheduleOnce(function() {
i.showCoins();
}, .3);
}
});
cc.tween(this._bigWinNode).delay(.5).delay(.2).call(function() {
i._playEffect(i._soundEffName);
}).start();
o.setCompleteListener(this._aniCompCall.bind(this));
cc.loader.loadRes("slots_common/SlotRes/bigwin/reward_g_01", sp.SkeletonData, function(e, t) {
if (cc.isValid(i._bigWinNode)) {
var n = i._bigWinNode.getChildByName("node_spin_bg");
if (cc.isValid(n)) {
var a = n.getComponent(sp.Skeleton);
a.skeletonData = t;
a.setAnimation(0, "animation1", !1);
a.addAnimation(1, "animation2", !0);
}
}
});
}
this.isInit = !1;
},
showDropCoins: function() {
var e = cc.find("ui/bgParticle", this._bigWinNode);
e && e.getComponent(cc.ParticleSystem).resetSystem();
var t = cc.find("ui/node_coin", this._bigWinNode);
t && t.getComponent("DropCoins").setPlay();
},
playEffStartCall: function() {
var e = this;
this._autoClose = !0;
Global.ChangeBgmVol(.3);
this._playEffect("common_win3_HD", function() {
e._autoClose && e.hideBigWin();
});
},
showCoins: function() {
if (this._bigWinNode) {
Global.btnClickEvent(cc.find("New Layout", this._bigWinNode), this.onBtnSkip, this);
this.showCoinsRoll(0, this._winNum);
cc.find("ui/double_coins", this._bigWinNode).getComponent("DoubleWinCoins").show(this._winNum, this);
this.isInit = !1;
}
},
showCoinsRoll: function(e, t) {
var i = this;
this.processStage = "roallbegin";
var n = cc.find("ui/spr_coin_bg", this._bigWinNode);
n.active = !0;
var a = n.getChildByName("lbl_coin");
Global.doRoallNumEff(a, e, t, 2.5, function() {
i.processStage = "roallfinish";
i._playEffect("common_win3end_HD");
}, function() {
n.scale += .003;
}, 2, !0);
},
showDoubleCoin: function() {
this.showCoinsRoll(this._winNum, 2 * this._winNum);
},
hideBigWin: function() {
var e = this;
if (this._bigWinNode) {
if (this._doingHideBigwin) {
cc.log("BigWin已经在关闭了！");
return;
}
this._doingHideBigwin = !0;
Global.ChangeBgmVol(1);
var t = function() {
e._doingHideBigwin = null;
e.bigWinPlayEndCall && e.bigWinPlayEndCall();
e.bigWinPlayEndCall = null;
if (!e.callType) {
Global.dispatchEvent(cc.vv.gameData._EventId.SLOT_SHOW_OPEARATE);
Global.dispatchEvent(cc.vv.gameData._EventId.CLICK_HIDE_BIG_WIN);
Global.dispatchEvent(cc.vv.gameData._EventId.SLOT_RESUME_AUTO);
}
e.callType = null;
e.clearDesk();
e._bigWinNode.destroy();
e._bigWinNode = null;
};
cc.find("ui/double_coins", this._bigWinNode).getComponent("DoubleWinCoins").hide();
var i = cc.find("ui", this._bigWinNode);
cc.tween(i).to(.15, {
scale: i.scale + .1
}, {
easing: "backOut"
}).to(.35, {
scale: 0
}).call(function() {
t();
}).start();
}
},
clearDesk: function() {
this.stopAudio();
},
_aniCompCall: function(e) {
e.animation.name;
},
stopAudio: function() {
if (this._audioId > -1) {
cc.vv.AudioManager.stopAudio(this._audioId);
this._audioId = -1;
}
this._playSoundIndex = -1;
this._playSound = !1;
},
recvGameStart: function(e) {
e = e.detail;
this.clearDesk();
this.hideBigWin();
if (e && e.spEffect) {
this._spEffect = e.spEffect.kind;
this._winNum = e.spEffect.wincoin;
}
this._winNum *= this._mult;
this._isWaitCloseFreeBalance = 0 === e.freeCnt && e.allFreeCnt > 0 && this.getComponent("SlotMachine_FreeBalance");
},
playEffect: function(e) {
var t = this;
if (this._spEffect > 0 && this._isShow) {
var i = function() {
t._playSoundIndex = 0;
t.playBigWinSound();
t.initAction();
};
e ? t.scheduleOnce(i, e) : i();
}
},
playBigWinSound: function() {},
callPlayBigWinEffect: function(e) {
var t = e.detail;
this._spEffect = t.spEffect;
if (this._spEffect > 0) {
this._winNum = t.winNum;
this._isShow = !0;
this.playEffect();
this._isShow = !1;
}
},
onBtnSkip: function() {
var e = this;
if ("roallbegin" == this.processStage) {
var t = cc.find("ui/spr_coin_bg", this._bigWinNode).getChildByName("lbl_coin");
t.stopAllActions();
t.getComponent(cc.Label).string = Global.FormatNumToComma(this._winNum);
this.scheduleOnce(function() {
e.processStage = "roallfinish";
}, .5);
} else if ("roallfinish" == this.processStage) {
cc.vv.AudioManager.stopEffectByName("common_win3_HD");
this.hideBigWin();
}
StatisticsMgr.reqReport(StatisticsMgr.REQ_BIGWIN_CLOSE);
},
ShowBigWin: function(e, t, i) {
this._spEffect = e;
this._winNum = t;
this.bigWinPlayEndCall = i;
this.callType = 1;
if (!this.isInit) {
cc.resources.load("slots_common/SlotRes/bigwin/prefab_bigwin", cc.Prefab, this.loadPrefabFinish.bind(this));
this.isInit = !0;
}
},
_playEffect: function(e, t) {
cc.vv.AudioManager.playEff("slots_common/SlotRes/bigwin/", e, !0, !1, t);
},
setAutoClose: function(e) {
this._autoClose = e;
},
onDestroy: function() {},
update: function(e) {
if (this._playSound) if (this._playSoundIndex < 2) this.playBigWinSound(); else {
this._delayTime += e;
if (this._delayTime >= 4) {
this._playSoundIndex = 0;
this.playBigWinSound();
}
}
}
});
cc._RF.pop();
}, {} ],
BroadcastCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "56607Wf61BJLqShSzjBnjqT", "BroadcastCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../UI/RewardListCpt"), a = cc._decorator, o = a.ccclass, c = a.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.contentNode = null;
t.contentLabel = null;
t.contentLabelRich = null;
t.layout = null;
t.rewardListCpt = null;
t.bgFrames = [];
t.iconFrames = [];
t.btnGo = null;
t.speed = 300;
t.delay = .5;
t.contentLabelShow = null;
t._uid = null;
return t;
}
t.prototype.onLoad = function() {
var e = this;
this.contentLabelShow = this.contentLabel || this.contentLabelRich;
this.layout.node.active = !1;
this.contentLabelShow.node.opacity = 1;
this.btnGo && this.btnGo.node.on("click", function() {
cc.vv.PopupManager.addPopup("BalootClient/UserInfo/PopupPersonalInfo", {
opacityIn: !0,
multiple: !0,
onShow: function(t) {
var i = t.getComponent("PersonalInfo");
i && i.init(e._uid);
}
});
});
};
t.prototype.initUI = function(e) {
var t = e.type;
if (null != e.extra_info && null != e.extra_info) {
var i = cc.Enum({
SLIVER: 4,
GOLD: 5
}), n = e.extra_info;
this._uid = n.uid;
var a = cc.find("bg", this.node), o = cc.find("icon", this.node), c = cc.find("node_head", this.node);
a.getComponent(cc.Sprite).spriteFrame = this.bgFrames[t - i.SLIVER];
o.getComponent(cc.Sprite).spriteFrame = this.iconFrames[t - i.SLIVER];
var s = c.getComponent("HeadCmp");
s.setHead(n.uid, n.usericon);
var r = n.avatarframe.toString();
r = r.indexOf("avatarframe_") >= 0 ? r : "avatarframe_0";
s.setAvatarFrame(r);
}
};
t.prototype.run = function(e) {
var t = this, i = e.count || 1;
this.layout.node.active = !1;
this.closeFunc = e.closeFunc;
this.contentLabelShow.string = e.content;
if (e.rewards) {
var n = this.rewardListCpt.updateView(e.rewards);
n[1] && (n[1].icon.scale = .4);
n[25] && (n[25].icon.scale = .4);
n[53] && (n[53].icon.scale = .3);
n[54] && (n[54].icon.scale = .5);
} else this.rewardListCpt.closeAll();
this.scheduleOnce(function() {
t.layout.node.active = !0;
t.layout.updateLayout();
t.contentLabelShow.node.opacity = 255;
var n, a = -(n = 1 == e.direction ? t.contentNode.width / 2 + t.layout.node.width / 2 : -(t.contentNode.width / 2 + t.layout.node.width / 2));
t.layout.node.x = n;
var o = (t.contentNode.width + t.layout.node.width) / t.speed;
i > 1 && (o *= 2);
var c = cc.tween(t.layout.node).call(function() {
t.layout.node.x = n;
}).to(o, {
x: a
}).start();
cc.tween(t.layout.node).repeat(i, c).delay(t.delay).call(function() {
t.node.destroy();
}).start();
});
};
t.prototype.onDestroy = function() {
this.closeFunc && this.closeFunc();
};
__decorate([ c(cc.Node) ], t.prototype, "contentNode", void 0);
__decorate([ c(cc.Label) ], t.prototype, "contentLabel", void 0);
__decorate([ c(cc.RichText) ], t.prototype, "contentLabelRich", void 0);
__decorate([ c(cc.Layout) ], t.prototype, "layout", void 0);
__decorate([ c(n.default) ], t.prototype, "rewardListCpt", void 0);
__decorate([ c(cc.SpriteFrame) ], t.prototype, "bgFrames", void 0);
__decorate([ c(cc.SpriteFrame) ], t.prototype, "iconFrames", void 0);
__decorate([ c(cc.Button) ], t.prototype, "btnGo", void 0);
__decorate([ c ], t.prototype, "speed", void 0);
__decorate([ c ], t.prototype, "delay", void 0);
return __decorate([ o ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {
"../UI/RewardListCpt": "RewardListCpt"
} ],
BroadcastManager: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "cf1e2guTylEb64byMRGlndu", "BroadcastManager");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.BroadcastManager = void 0;
var n = e("./BroadcastCpt"), a = function() {
function e() {}
e.init = function() {
var e = this;
cc.director.on(cc.Director.EVENT_BEFORE_SCENE_LAUNCH, function() {
cc.find("Canvas/GiftAnim") || cc.loader.loadRes(cc.vv.BroadcastManager.giftAnimPrefabPath, function(e, t) {
if (!e) {
var i = cc.instantiate(t);
i.active = !1;
i.parent = cc.find("Canvas");
i.zIndex = 200;
i.position = cc.v2(0, 400);
}
}.bind(e));
}, this);
};
e.run = function() {
if (!this.isRun) {
this.isRun = !0;
this.timer = setInterval(this.checkQueue.bind(this), 100);
}
};
e.stop = function() {
this.isRun = !1;
clearInterval(this.timer);
};
e.checkQueue = function() {
this.broadcastStack.length <= 0 && this.broadcastQueue.length > 0 && this.handleBroadcast();
this.giftAnimStack.length <= 0 && this.giftAnimQueue.length > 0 && this.handleGiftAnim();
};
e.addBroadcast = function(e) {
if (this.isRun) {
this.broadcastQueue.push(e);
this.broadcastQueue.sort(function(e, t) {
return t.level - e.level;
});
}
};
e.addGiftAnim = function(e) {
this.isRun && this.giftAnimQueue.push(e);
};
e.handleBroadcast = function() {
if (this.broadcastPrefabPath) {
var e = this.broadcastQueue.shift();
this.broadcastStack.push(e);
var t = cc.Enum({
SLIVER: 4,
GOLD: 5
}), i = this.broadcastPrefabPath;
e.type != t.SLIVER && e.type != t.GOLD || (i = this.broadcastPrefabPath2);
cc.loader.loadRes(i, function(i, a) {
var o = this;
if (!i) {
var c = cc.find("Canvas");
if (!cc.isValid(c)) return;
var s = cc.instantiate(a), r = s.getComponent(n.default);
e.type != t.SLIVER && e.type != t.GOLD || r.initUI(e);
r.rewardListCpt.closeAll();
s.position = cc.v3(0, cc.winSize.height / 2 - 220);
s.scaleY = 0;
s.zIndex = 101;
c.addChild(s);
cc.tween(s).to(.5, {
scaleY: s.scaleX
}).call(function() {
r.run({
direction: e.direction || 1,
content: e.content,
rewards: e.rewards,
count: e.count,
closeFunc: function() {
o.broadcastStack = o.broadcastStack.filter(function(t) {
return t !== e;
});
}
});
}).start();
}
}.bind(this));
}
};
e.handleGiftAnim = function() {
var e = this;
if (this.giftAnimPrefabPath) {
var t = this.giftAnimQueue.shift();
this.giftAnimStack.push(t);
var i = cc.find("Canvas/GiftAnim");
if (i) {
var n = i.getComponent("GiftAnimCpt");
if (n) {
i.active = !0;
n.onInit(t, function() {
e.giftAnimStack = e.giftAnimStack.filter(function(e) {
return e !== t;
});
});
}
} else cc.loader.loadRes(cc.vv.BroadcastManager.giftAnimPrefabPath, function(e, i) {
var n = this;
if (!e) {
var a = cc.find("Canvas");
if (!cc.isValid(a)) return;
var o = cc.instantiate(i);
o.parent = a;
o.zIndex = 200;
o.position = cc.v2(0, 400);
var c = o.getComponent("GiftAnimCpt");
c && c.onInit(t, function() {
n.giftAnimStack = n.giftAnimStack.filter(function(e) {
return e !== t;
});
});
}
}.bind(this));
}
};
e.broadcastPrefabPath = "";
e.broadcastPrefabPath2 = "BalootClient/BaseRes/prefabs/newBroadcast";
e.broadcastStack = [];
e.broadcastQueue = [];
e.giftAnimPrefabPath = "";
e.giftAnimStack = [];
e.giftAnimQueue = [];
e.isRun = !1;
return e;
}();
i.BroadcastManager = a;
cc._RF.pop();
}, {
"./BroadcastCpt": "BroadcastCpt"
} ],
BtnEvtCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bfb19NuH1tMBJsp+shbI5tH", "BtnEvtCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = n.menu, s = n.requireComponent, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.key = "event_key";
t.isPress = !1;
t.longPressKey = "event_key";
t.longPressTime = 2;
t.longPressAnimPrefab = null;
t._isPressTouch = !1;
return t;
}
t.prototype.onLoad = function() {
var e = this, t = function() {
e.unschedule(a);
e._isPressTouch = !0;
cc.isValid(e.pressAnimNode) && e.pressAnimNode.destroy();
Global.dispatchEvent(e.longPressKey, e.node.getComponent(cc.Button));
}, i = function() {
if (e.isPress) {
e.unschedule(a);
cc.isValid(e.pressAnimNode) && e.pressAnimNode.destroy();
e.unschedule(t);
}
e._isPressTouch || Global.dispatchEvent(e.key, e.node.getComponent(cc.Button));
e._isPressTouch = !1;
}, n = function() {
if (e.isPress) {
e.unschedule(a);
cc.isValid(e.pressAnimNode) && e.pressAnimNode.destroy();
e.unschedule(t);
}
}, a = function() {
if (e.longPressAnimPrefab) {
e.pressAnimNode = cc.instantiate(e.longPressAnimPrefab);
e.pressAnimNode.parent = e.node;
}
};
this.node.on(cc.Node.EventType.TOUCH_START, function() {
if (!e.getComponent(cc.Button).interactable) return !1;
e._isPressTouch = !1;
if (e.isPress) {
e.scheduleOnce(a, .2);
e.scheduleOnce(t, e.longPressTime);
}
});
this.node.on(cc.Node.EventType.TOUCH_END, function() {
if (!e.getComponent(cc.Button).interactable) return !1;
i();
});
this.node.on(cc.Node.EventType.TOUCH_CANCEL, function() {
if (!e.getComponent(cc.Button).interactable) return !1;
n();
});
};
__decorate([ o ], t.prototype, "key", void 0);
__decorate([ o(cc.Boolean) ], t.prototype, "isPress", void 0);
__decorate([ o({
visible: function() {
return 1 == this.isPress;
}
}) ], t.prototype, "longPressKey", void 0);
__decorate([ o({
visible: function() {
return 1 == this.isPress;
}
}) ], t.prototype, "longPressTime", void 0);
__decorate([ o({
type: cc.Prefab,
visible: function() {
return 1 == this.isPress;
}
}) ], t.prototype, "longPressAnimPrefab", void 0);
return __decorate([ a, c("ECS/发射器/按钮发射器"), s(cc.Button) ], t);
}(cc.Component);
i.default = r;
cc._RF.pop();
}, {} ],
BtnGameChangeCardSizeCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ee876+Tn7FIBrlldMIU3ga1", "BtnGameChangeCardSizeCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.BanakilMenu = void 0;
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.card_change_btn = null;
return t;
}
t.prototype.onLoad = function() {
var e = this;
this.card_change_btn.node.on("click", function() {
e.changeCard();
}, this);
};
t.prototype.changeCard = function() {
1 == facade.dm.cardSizeType ? facade.dm.cardSizeType = 0 : facade.dm.cardSizeType = 1;
Global.saveLocal("SAVE_CARD_SIZE_TYPE", facade.dm.cardSizeType);
Global.dispatchEvent("EVENT_CARD_SIZE_CHANGE", facade.dm.cardSizeType);
};
__decorate([ o(cc.Button) ], t.prototype, "card_change_btn", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.BanakilMenu = c;
cc._RF.pop();
}, {} ],
BtnGameRoundCardsCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "41387WbBNZA6begAHTQeyWq", "BtnGameRoundCardsCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = (n.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isShow = !0;
return t;
}
t.prototype.onLoad = function() {
var e = this;
this.node.on("click", function() {
e.isShow = !e.isShow;
e.updateView();
Global.dispatchEvent("SWITCH_ROOM_CARD_RECORD", e.isShow);
}, this);
this.updateView();
};
t.prototype.updateView = function() {
cc.find("on", this.node).active = this.isShow;
cc.find("off", this.node).active = !this.isShow;
};
return __decorate([ a ], t);
}(cc.Component));
i.default = o;
cc._RF.pop();
}, {} ],
BundleUpdateModule: [ function(e, t) {
"use strict";
cc._RF.push(t, "914634RP+lKyqFancy9HA5a", "BundleUpdateModule");
e("MD5"), cc.Class({
extends: cc.Component,
properties: {
manifestUrl: cc.Asset,
bundleName: "",
_updating: !1,
_canRetry: !1,
_storagePath: "",
_subGameName: "",
_localAppVersion: "",
_remoteAppVersion: "",
_tempProgress: 0,
_realityProgress: 0,
_isWaitFinish: !1
},
onLoad: function() {
if (cc.sys.isNative) {
this._localAppVersion = "1.0.0";
this._remoteAppVersion = "1.0.0";
}
},
onDestroy: function() {
cc.director.getScheduler().unschedule(this.updateProgress, this);
if (this._am) {
this._am.setEventCallback(null);
this._am = null;
}
},
showLog: function(e) {
cc.log("[HotUpdateModule][showLog]----" + e);
},
retry: function() {
if (!this._updating && this._canRetry) {
this._canRetry = !1;
this._am.downloadFailedAssets();
}
},
updateCallback: function(e) {
var t = 0, i = !1;
switch (e.getEventCode()) {
case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
this.showLog("没有发现本地manifest文件，跳过了热更新.");
i = !0;
break;

case jsb.EventAssetsManager.UPDATE_PROGRESSION:
var n = e.getPercent();
if (isNaN(n)) return;
var a = e.getMessage();
this.disPatchRateEvent(n, a);
this.showLog("updateCallback更新进度：" + n + ", msg: " + a);
var o = e.getDownloadedBytes() / e.getTotalBytes() * 100;
o = isNaN(o) ? 0 : o;
this._realityProgress = o;
break;

case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
this.showLog("下载manifest文件失败，跳过热更新.");
i = !0;
break;

case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
this.showLog("已是最新版本.");
t = 1;
break;

case jsb.EventAssetsManager.UPDATE_FINISHED:
this.showLog("更新结束." + e.getMessage());
this.disPatchRateEvent(1);
t = 2;
break;

case jsb.EventAssetsManager.UPDATE_FAILED:
this.showLog("更新错误." + e.getMessage());
this._updating = !1;
this._canRetry = !0;
this._failCount++;
this.retry();
break;

case jsb.EventAssetsManager.ERROR_UPDATING:
this.showLog("更新过程中错误: " + e.getAssetId() + ", " + e.getMessage());
break;

case jsb.EventAssetsManager.ERROR_DECOMPRESS:
this.showLog("解压错误");
}
if (i) {
this._am.setEventCallback(null);
this._updating = !1;
this.hotUpdateFinish(!1);
if (!this._firstReportFail) {
this._firstReportFail = !0;
StatisticsMgr.reqReport(StatisticsMgr.REQ_SUBGAME_DOWNLOAD_FAILE, null, this._updateGameId);
}
}
if (t > 0) if (0 != this._realityProgress) this._isWaitFinish = !0; else {
2 == t && this.updateFinished();
cc.sys.localStorage.setItem(this._subGameName, "1");
this.hotUpdateFinish(!0);
}
},
updateFinished: function() {
cc.vv.SubGameUpdateNode.emit("update_subgame_status", {
txt: "更新完成!",
gameId: this._updateGameId
});
Global.dispatchEvent("checkSubFinish", this._updateGameId);
cc.vv.EventManager.emit("checkSubFinish", this._updateGameId);
var e = this._subGameName + "_LoacalVersion";
Global.saveLocal(e, this._remoteAppVersion);
console.log("存储子游戏更新完成" + this._subGameName + "_LoacalVersion的值...:", this._remoteAppVersion);
StatisticsMgr.reqReport(StatisticsMgr.REQ_SUBGAME_DOWNLOAD_SUCCESS, null, this._updateGameId);
},
_checkLocalVersion: function() {
var e = this._updateGameId, t = cc.vv.GameItemCfg[e];
if (t) {
var i = t.name;
this._subGameName = t.name;
this.bundleName = i;
}
if (this.bundleName && "" != this.bundleName) if (cc.vv.gameEntryVersion && cc.vv.gameEntryVersion[this.bundleName]) {
AppLog.log("子游戏url:" + cc.vv.gameEntryVersion[this.bundleName]);
this._checkOver = !1;
this._remoteAppVersion = cc.vv.gameEntryVersion[this.bundleName];
var n = parseInt(this._remoteAppVersion.split(".").join("")), a = this._subGameName + "_LoacalVersion", o = Global.getLocal(a);
if (o) {
console.log("子游戏mainLocalVer的值:", o);
this._localAppVersion = o;
}
var c = parseInt(this._localAppVersion.split(".").join(""));
console.log("本地版本...:", this._localAppVersion);
if (c < n) {
console.log("子游戏开始检查热更....");
StatisticsMgr.reqReport(StatisticsMgr.REQ_SUBGAME_DOWNLOAD_START, null, this._updateGameId);
var s = this._updateGameId;
this.hotUpdate(s);
} else {
console.log("子游戏直接跳过热更....");
this.hotUpdateFinish(!0);
}
} else {
console.warn("等待接口响应中，或是不支持该玩法，请与web检查该玩法字段是否配置正确");
this.hotUpdateFinish(!1);
}
},
_checkRemoteVisionAction: function(e) {
var t = "string" == typeof e ? JSON.parse(e) : e;
AppLog.log("子游戏远端Version:" + t.version);
this._remoteAppVersion = t.version;
var i = parseInt(t.version.split(".").join("")), n = this._subGameName + "_LoacalVersion", a = Global.getLocal(n);
if (a) {
console.log("子游戏mainLocalVer的值:", a);
this._localAppVersion = a;
}
var o = parseInt(this._localAppVersion.split(".").join(""));
console.log("本地版本...:", this._localAppVersion);
if (o < i) {
console.log("子游戏开始检查热更....");
var c = this._updateGameId;
this.hotUpdate(c);
} else {
console.log("子游戏直接跳过热更....");
this.hotUpdateFinish(!0);
}
},
loadFile: function(e, t, i) {
var n = this._updateGameId, a = cc.vv.GameItemCfg[n];
if (a) {
var o = a.name;
this._subGameName = a.name;
this.bundleName = o;
var c = "Manifest/" + o + "/" + o + e;
console.log("子游戏filePath的路径:", c);
cc.resources.load(c, cc.Asset, function(e, n) {
if (e) console.log("子游戏loadFile:" + e); else {
var a = jsb.fileUtils.getStringFromFile(n.nativeUrl), o = a;
i && (o = JSON.parse(a));
t && t(o);
}
});
}
},
checkForceAppUpdate: function(e) {
this._updateGameId = e;
this._checkLocalVersion();
},
loadManifestFinish: function() {
console.log("new this.bundleName的值:", this.bundleName);
this._storagePath = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "/") + "game-remote-asset/assets/" + this.bundleName;
this.versionCompareHandle = function(e, t) {
for (var i = e.split("."), n = t.split("."), a = 0; a < i.length; ++a) {
var o = parseInt(i[a]), c = parseInt(n[a] || 0);
if (o !== c) return o - c;
}
return n.length > i.length ? -1 : 0;
};
console.log("this.manifestUrl.nativeUrl:", this.manifestUrl.nativeUrl);
this._am = new jsb.AssetsManager(this.manifestUrl.nativeUrl, this._storagePath, this.versionCompareHandle);
this._am.setVerifyCallback(function() {
return !0;
});
cc.sys.os, cc.sys.OS_ANDROID, this._am.setMaxConcurrentTask(2);
if (this._am && !this._updating) {
this._am.setEventCallback(this.updateCallback.bind(this));
if (this._am.getState() === jsb.AssetsManager.State.UNINITED) {
var e = this.manifestUrl.nativeUrl;
this._am.loadLocalManifest(e);
}
this._failCount = 0;
this._am.update();
this._updating = !0;
}
},
hotUpdate: function(e) {
var t = this;
this._updateGameId = e;
this._tempProgress = 0;
this._realityProgress = 0;
this._isWaitFinish = !1;
this._firstReportFail = null;
var i = cc.vv.GameItemCfg[e];
if (i) {
var n = i.name;
t.bundleName = n;
var a = "Manifest/" + n + "/" + n;
console.log("filePath的路径:", a);
Global.dispatchEvent("checkSubStart", e);
cc.director.getScheduler().schedule(this.updateProgress, this, 1 / 60 * 4);
cc.resources.load(a, cc.Asset, function(e, i) {
if (!e) {
console.log("加载到的txt:", i.nativeUrl);
t.manifestUrl = i;
console.log("self.manifestUrl的值:", t.manifestUrl);
t.loadManifestFinish();
}
});
}
},
checkCallback: function(e) {
switch (e.getEventCode()) {
case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
this.showLog("没有发现本地manifest文件，跳过了热更新.");
this.hotUpdateFinish(!0);
break;

case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
this.showLog("下载manifest文件失败，跳过热更新.");
this.hotUpdateFinish(!1);
break;

case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
this.showLog("已更新.");
this.hotUpdateFinish(!0);
break;

case jsb.EventAssetsManager.NEW_VERSION_FOUND:
this.showLog("有新版本,需要更新");
this._updating = !1;
this.hotUpdate();
return;

case jsb.EventAssetsManager.UPDATE_PROGRESSION:
var t = e.getPercent();
if (isNaN(t)) return;
var i = e.getMessage();
this.showLog("checkCallback更新进度：" + t + ", msg: " + i);
return;

default:
console.log("event.getEventCode():" + e.getEventCode());
return;
}
this._am.setEventCallback(null);
this._updating = !1;
},
checkUpdate: function() {
if (this._updating) cc.log("检测更新中..."); else {
if (this._am.getState() === jsb.AssetsManager.State.UNINITED) {
var e = this.manifestUrl.nativeUrl;
this._am.loadLocalManifest(e);
}
if (this._am.getLocalManifest() && this._am.getLocalManifest().isLoaded()) {
this._am.setEventCallback(this.checkCallback.bind(this));
this._am.checkUpdate();
this._updating = !0;
this.disPatchRateEvent(.01);
} else this.showLog("加载manifest文件失败");
}
},
hotUpdateFinish: function(e) {
cc.director.getScheduler().unschedule(this.updateProgress, this);
cc.director.emit("BundleUpdateFinish", [ this.bundleName, e ]);
},
disPatchRateEvent: function() {},
updateProgress: function() {
this._tempProgress > this._realityProgress ? this._tempProgress += .5 : this._tempProgress <= this._realityProgress ? this._tempProgress += 2 : this._tempProgress += 1;
if (this._tempProgress >= 100) {
this._isWaitFinish ? this._tempProgress = 100 : this._tempProgress = 99;
cc.vv.SubGameUpdateNode.emit("update_subgame_pro", {
per: Global.S2P(this._tempProgress, 0),
gameId: this._updateGameId
});
if (this._isWaitFinish) {
this._isWaitFinish = !1;
cc.director.getScheduler().unschedule(this.updateProgress, this);
this.updateFinished();
cc.sys.localStorage.setItem(this._subGameName, "1");
this.hotUpdateFinish(!0);
}
} else cc.vv.SubGameUpdateNode.emit("update_subgame_pro", {
per: Global.S2P(this._tempProgress, 0),
gameId: this._updateGameId
});
}
});
cc._RF.pop();
}, {
MD5: "MD5"
} ],
ButtonClick2SoundCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "8e87bp0JApF0ZoTbpHzSrhm", "ButtonClick2SoundCmp");
cc.Class({
extends: cc.Component,
editor: {
menu: "音效/弹窗"
},
properties: {},
onLoad: function() {
this.node.getComponent(cc.Button) && this.node.on("click", function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_2_SOUNDS");
}, this);
this.node.getComponent(cc.Toggle) && this.node.on("toggle", function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_2_SOUNDS");
}, this);
}
});
cc._RF.pop();
}, {} ],
ButtonClickLimitCmp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2a4d4GFQ+dOY7heAHgKONe4", "ButtonClickLimitCmp");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = n.menu, s = n.requireComponent, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.lockTime = .5;
return t;
}
t.prototype.onLoad = function() {
var e = this, t = this.getComponent(cc.Button), i = this.getComponent("ButtonGrayCmp");
this.node.on("click", function() {
i ? i.interactable = !1 : t.interactable = !1;
e.scheduleOnce(function() {
i ? i.interactable = !0 : t.interactable = !0;
}, e.lockTime);
}, this);
};
__decorate([ o ], t.prototype, "lockTime", void 0);
return __decorate([ a, s(cc.Button), c("UI/按钮时间锁") ], t);
}(cc.Component);
i.default = r;
cc._RF.pop();
}, {} ],
ButtonClickSoundCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "d8545zys0dHtZ5ZAVzt5T2h", "ButtonClickSoundCmp");
cc.Class({
extends: cc.Component,
editor: {
menu: "音效/按钮"
},
properties: {},
onLoad: function() {
this.node.getComponent(cc.Button) && this.node.on("click", function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
}, this);
this.node.getComponent(cc.Toggle) && this.node.on("toggle", function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
}, this);
}
});
cc._RF.pop();
}, {} ],
ButtonGrayCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "e81f49adrhFr4/bC4YX9Lhx", "ButtonGrayCmp");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
cc.Class({
extends: cc.Component,
editor: {
menu: "通用/ButtonGaryCmp",
requireComponent: cc.Button,
executeInEditMode: !0
},
properties: {
_interactable: !0,
interactable: {
get: function() {
return this._interactable;
},
set: function(e) {
this._interactable = e;
var t = this.getComponent(cc.Button);
t.enableAutoGrayEffect = !0;
t.interactable = e;
for (var n, a = i(this.node.getComponentsInChildren(cc.Sprite)); !(n = a()).done; ) n.value.setMaterial(0, cc.Material.getBuiltinMaterial(e ? "2d-sprite" : "2d-gray-sprite"));
for (var o, c = i(this.node.getComponentsInChildren(cc.Label)); !(o = c()).done; ) o.value.setMaterial(0, cc.Material.getBuiltinMaterial(e ? "2d-sprite" : "2d-gray-sprite"));
}
}
}
});
cc._RF.pop();
}, {} ],
ButtonSoundCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7d482+PrhVIuoGpdc4neQdT", "ButtonSoundCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = n.requireComponent, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.soundClip = null;
return t;
}
t.prototype.onLoad = function() {
var e = this;
this.node.getComponent(cc.Button) && this.node.on("click", function() {
cc.audioEngine.playEffect(e.soundClip, !1);
}, this);
};
__decorate([ o({
type: cc.AudioClip
}) ], t.prototype, "soundClip", void 0);
return __decorate([ a, c(cc.Button) ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {} ],
BuyUserHeadCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "1b8dconX6ZP1pKzAeklAmr0", "BuyUserHeadCmp");
cc.Class({
extends: cc.Component,
properties: {
content: cc.Label,
frame: cc.Sprite,
okButton: cc.Button,
cancelButton: cc.Button
},
onLoad: function() {
var e = this;
this.okButton.node.on("click", function() {
cc.vv.NetManager.send({
c: MsgId.BUY_USER_FRAME,
frameid: e.data.id
});
cc.vv.PopupManager.removePopup(e.node);
});
this.cancelButton.node.on("click", function() {
cc.vv.PopupManager.removePopup(e.node);
});
},
setData: function(e) {
this.data = e;
}
});
cc._RF.pop();
}, {} ],
CCAction_Shake: [ function(e, t) {
"use strict";
cc._RF.push(t, "cf0d8BFLydPHYWF0pkto1Oh", "CCAction_Shake");
var i = cc.Class({
name: "Shake",
extends: cc.ActionInterval,
properties: {
nodeInitialPos: null,
nodeShakeStrengthX: 0,
nodeShakeStrengthY: 0,
duration: 0
},
ctor: function(e, t, i) {
this.duration = e;
this.initWithDuration(e, t, i);
},
getRandomStrength: function(e, t) {
return Math.random() * (t - e + 1) + e;
},
update: function(e) {
var t = this.getRandomStrength(-this.nodeShakeStrengthX, this.nodeShakeStrengthX) * e, i = this.getRandomStrength(-this.nodeShakeStrengthY, this.nodeShakeStrengthY) * e;
this.getTarget().setPosition(this.nodeInitialPos.add(cc.v2(t, i)));
},
initWithDuration: function(e, t, i) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, e)) {
this.setDuration(e);
this.nodeShakeStrengthX = t;
this.nodeShakeStrengthY = "undefined" === i ? t : i;
return !0;
}
return !1;
},
startWithTarget: function(e) {
cc.ActionInterval.prototype.startWithTarget.call(this, e);
this.nodeInitialPos = e.position;
},
stop: function() {
this.getTarget().position = this.nodeInitialPos;
}
});
cc.shake = function(e, t, n) {
return new i(e, t, n);
};
cc._RF.pop();
}, {} ],
CCSafeArea: [ function(e, t) {
"use strict";
cc._RF.push(t, "f7aaedf/MZK1a1tb3mxgU7V", "CCSafeArea");
var i = cc.Class({
name: "cc.SafeArea",
extends: cc.Component,
editor: !1,
properties: {
ignoreBottomSafe: {
default: !1,
tooltip: "是否忽略底部安全区域。IOS底部也有安全区域"
}
},
onEnable: function() {
this.updateArea();
cc.view.on("canvas-resize", this.updateArea, this);
},
onDisable: function() {
cc.view.off("canvas-resize", this.updateArea, this);
},
updateArea: function() {
if (cc.sys.os == cc.sys.OS_ANDROID || cc.sys.os == cc.sys.OS_IOS) {
var e = this.node.getComponent(cc.Widget);
if (e) {
e.updateAlignment();
var t = this.node.position, i = this.node.getAnchorPoint();
e.isAlignTop = e.isAlignBottom = e.isAlignLeft = e.isAlignRight = !0;
var n = cc.winSize.width, a = cc.winSize.height, o = cc.sys.getSafeAreaRect();
e.top = a - o.y - o.height;
e.bottom = this.ignoreBottomSafe ? 0 : o.y;
e.left = o.x;
e.right = n - o.x - o.width;
e.updateAlignment();
var c = this.node.position, s = i.x - (c.x - t.x) / this.node.width, r = i.y - (c.y - t.y) / this.node.height;
this.node.setAnchorPoint(s, r);
e.enabled = !0;
}
}
}
});
cc.SafeArea = t.exports = i;
cc._RF.pop();
}, {} ],
CDButtonProxy: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8b7cctf9LxKA6V9ljP4gmbV", "CDButtonProxy");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.CDButtonProxy = void 0;
var n = cc._decorator, a = n.ccclass, o = n.property, c = n.requireComponent, s = n.menu, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.cdTime = .5;
t.autoInteractable = !1;
t.button = null;
t._preTime = 0;
t._clickHandler = null;
return t;
}
t.prototype.onLoad = function() {
var e = this;
this.button = this.node.getComponent(cc.Button);
this.button.node.on("click", function() {
var t = new Date().getTime();
if (!(t - e._preTime < 1e3 * e.cdTime)) {
e._preTime = t;
e._clickHandler && e._clickHandler();
if (e.autoInteractable) {
e.button.interactable = !1;
e.unscheduleAllCallbacks();
e.scheduleOnce(function() {
e.button.interactable = !0;
}, e.cdTime);
}
}
});
};
t.prototype.onDestroy = function() {
this._clickHandler = null;
};
t.prototype.addClickHandler = function(e) {
this._clickHandler = e;
};
__decorate([ o() ], t.prototype, "cdTime", void 0);
__decorate([ o() ], t.prototype, "autoInteractable", void 0);
return __decorate([ a, c(cc.Button), s("通用/CDButtonProxy") ], t);
}(cc.Component);
i.CDButtonProxy = r;
cc._RF.pop();
}, {} ],
CH_CommPopBgLayer: [ function(e, t) {
"use strict";
cc._RF.push(t, "759d8nClNpFiLtKm8XB5N9W", "CH_CommPopBgLayer");
cc.Class({
extends: cc.Component,
properties: {
close_btn: {
default: null,
type: cc.Node,
tooltip: "关闭按钮，此控件并不知道关闭要执行什么逻辑，只是点击了。就模拟点击对应关闭按钮的逻辑。如果不设置就不显示Tap to close"
}
},
onLoad: function() {
cc.find("lay_out", this.node).getComponent(cc.Layout).opacity = 192;
Global.btnClickEvent(this.node, this.onClickClose, this);
},
uiWidgetChange: function() {
this.node.getComponent(cc.Widget).updateAlignment();
for (var e = this.node.getComponentInChildren(cc.Widget), t = 0; t < e.length; t++) e[t].updateAlignment();
},
start: function() {
this.close_btn && this.showTapAction();
this._bCanClose();
},
showTapAction: function() {
var e = this;
cc.loader.loadRes("CashHero/prefab/tap_close_tip", cc.Prefab, function(t, i) {
if (cc.isValid(e.node)) {
var n = cc.find("tap_close_tip", e.node);
if (!cc.find("tap_close_tip", n) && cc.isValid(n)) {
var a = cc.instantiate(i);
a.parent = n;
a.position = cc.v2(0, 0);
n.opacity = 0;
cc.tween(n).to(.5, {
opacity: 255
}).repeatForever(cc.tween().delay(8).to(.5, {
opacity: 0
}).to(.5, {
opacity: 255
})).start();
}
}
});
},
onClickClose: function(e) {
if (this._bCanCloseUI && this.close_btn) {
var t = this.close_btn.getComponent(cc.Button);
if (t) {
var i = t.clickEvents;
cc.Component.EventHandler.emitEvents(i, e);
}
this.close_btn.emit("click", e);
}
},
_bCanClose: function() {
var e = this;
e._bCanCloseUI = !1;
this.scheduleOnce(function() {
e._bCanCloseUI = !0;
}, .5);
}
});
cc._RF.pop();
}, {} ],
CH_List: [ function(e, t) {
"use strict";
cc._RF.push(t, "9e6e0CAMjFGH4v9sSX3g5Uh", "CH_List");
var i = cc.Enum({
NODE: 1,
PREFAB: 2
}), n = cc.Enum({
NORMAL: 1,
ADHERING: 2,
PAGE: 3
}), a = cc.Enum({
NONE: 0,
SINGLE: 1,
MULT: 2
}), o = e("ListItem");
cc.Class({
extends: cc.Component,
editor: {
disallowMultiple: !1,
menu: "自定义组件/CH_List",
requireComponent: "CH_ScrollView",
executionOrder: -5e3
},
properties: {
templateType: {
default: i.NODE,
type: i
},
tmpNode: {
default: null,
type: cc.Node,
tooltip: !1,
visible: function() {
var e = this.templateType == i.NODE;
e || (this.tmpNode = null);
return e;
}
},
tmpPrefab: {
default: null,
type: cc.Prefab,
tooltip: !1,
visible: function() {
var e = this.templateType == i.PREFAB;
e || (this.tmpPrefab = null);
return e;
}
},
_slideMode: 1,
slideMode: {
type: n,
tooltip: !1,
get: function() {
return this._slideMode;
},
set: function(e) {
null != e && (this._slideMode = e);
}
},
pageDistance: {
default: .3,
type: cc.Float,
range: [ 0, 1, .1 ],
tooltip: !1,
slide: !0,
visible: function() {
return this._slideMode == n.PAGE;
}
},
pageChangeEvent: {
default: null,
type: cc.Component.EventHandler,
tooltip: !1,
visible: function() {
var e = this._slideMode == n.PAGE;
e || (this.pageChangeEvent = null);
return e;
}
},
_virtual: !0,
virtual: {
tooltip: !1,
get: function() {
return this._virtual;
},
set: function(e) {
null != e && (this._virtual = e);
0 != this._numItems && this._onScrolling();
}
},
cyclic: {
default: !1,
tooltip: !1,
visible: function() {
var e = this.virtual && this.slideMode == n.NORMAL;
e || (this.cyclic = !1);
return e;
}
},
lackCenter: {
default: !1,
tooltip: !1,
visible: function() {
return this.virtual;
}
},
lackSlide: {
default: !1,
tooltip: !1,
visible: function() {
var e = this.virtual && !this.lackCenter;
e || (this.lackSlide = !1);
return e;
}
},
_updateRate: 0,
updateRate: {
type: cc.Integer,
range: [ 0, 6, 1 ],
tooltip: !1,
slide: !0,
get: function() {
return this._updateRate;
},
set: function(e) {
e >= 0 && e <= 6 && (this._updateRate = e);
}
},
frameByFrameRenderNum: {
default: 0,
type: cc.Integer,
range: [ 0, 12, 1 ],
tooltip: !1,
slide: !0
},
renderEvent: {
default: null,
type: cc.Component.EventHandler,
tooltip: !1
},
selectedMode: {
default: a.NONE,
type: a,
tooltip: !1
},
repeatEventSingle: {
default: !1,
tooltip: !1,
visible: function() {
return this.selectedMode == a.SINGLE;
}
},
selectedEvent: {
default: null,
type: cc.Component.EventHandler,
tooltip: !1,
visible: function() {
var e = this.selectedMode > 0;
e || (this.selectedEvent = null);
return e;
}
},
_selectedId: -1,
selectedId: {
visible: !1,
get: function() {
return this._selectedId;
},
set: function(e) {
var t, i = this;
switch (i.selectedMode) {
case a.SINGLE:
if (!i.repeatEventSingle && e == i._selectedId) return;
t = i.getItemByListId(e);
i._selectedId >= 0 ? i._lastSelectedId = i._selectedId : i._lastSelectedId = null;
i._selectedId = e;
t && (t.listItem.selected = !0);
if (i._lastSelectedId >= 0 && i._lastSelectedId != i._selectedId) {
var n = i.getItemByListId(i._lastSelectedId);
n && (n.listItem.selected = !1);
}
i.selectedEvent && cc.Component.EventHandler.emitEvents([ i.selectedEvent ], t, e % this._actualNumItems, null == i._lastSelectedId ? null : i._lastSelectedId % this._actualNumItems);
break;

case a.MULT:
if (!(t = i.getItemByListId(e))) return;
i._selectedId >= 0 && (i._lastSelectedId = i._selectedId);
i._selectedId = e;
var o = !t.listItem.selected;
t.listItem.selected = o;
var c = i.multSelected.indexOf(e);
o && c < 0 ? i.multSelected.push(e) : !o && c >= 0 && i.multSelected.splice(c, 1);
i.selectedEvent && cc.Component.EventHandler.emitEvents([ i.selectedEvent ], t, e % this._actualNumItems, null == i._lastSelectedId ? null : i._lastSelectedId % this._actualNumItems, o);
}
}
},
_numItems: {
default: 0,
serializable: !1
},
numItems: {
visible: !1,
get: function() {
return this._actualNumItems;
},
set: function(e) {
var t = this;
if (t.checkInited()) if (null == e || e < 0) cc.error("numItems set the wrong::", e); else {
t._actualNumItems = t._numItems = e;
t._forceUpdate = !0;
if (t._virtual) {
t._resizeContent();
t.cyclic && (t._numItems = t._cyclicNum * t._numItems);
t._onScrolling();
t.frameByFrameRenderNum || t.slideMode != n.PAGE || (t.curPageNum = t.nearestListId);
} else {
var i = t.content.getComponent(cc.Layout);
i && (i.enabled = !0);
t._delRedundantItem();
t.firstListId = 0;
if (t.frameByFrameRenderNum > 0) {
for (var a = t.frameByFrameRenderNum > t._numItems ? t._numItems : t.frameByFrameRenderNum, o = 0; o < a; o++) t._createOrUpdateItem2(o);
if (t.frameByFrameRenderNum < t._numItems) {
t._updateCounter = t.frameByFrameRenderNum;
t._updateDone = !1;
}
} else {
for (var c = 0; c < e; c++) t._createOrUpdateItem2(c);
t.displayItemNum = e;
}
}
}
}
}
},
onLoad: function() {
this._init();
},
onDestroy: function() {
this._itemTmp && this._itemTmp.isValid && this._itemTmp.destroy();
for (;this._pool.size(); ) this._pool.get().destroy();
},
onEnable: function() {
this._registerEvent();
this._init();
},
onDisable: function() {
this._unregisterEvent();
},
_registerEvent: function() {
var e = this;
e.node.on(cc.Node.EventType.TOUCH_START, e._onTouchStart, e, !0);
e.node.on("touch-up", e._onTouchUp, e, !0);
e.node.on(cc.Node.EventType.TOUCH_CANCEL, e._onTouchCancelled, e, !0);
e.node.on("scroll-began", e._onScrollBegan, e, !0);
e.node.on("scroll-ended", e._onScrollEnded, e, !0);
e.node.on("scrolling", e._onScrolling, e, !0);
e.node.on(cc.Node.EventType.SIZE_CHANGED, e._onSizeChanged, e);
},
_unregisterEvent: function() {
var e = this;
e.node.off(cc.Node.EventType.TOUCH_START, e._onTouchStart, e, !0);
e.node.off("touch-up", e._onTouchUp, e, !0);
e.node.off(cc.Node.EventType.TOUCH_CANCEL, e._onTouchCancelled, e, !0);
e.node.off("scroll-began", e._onScrollBegan, e, !0);
e.node.off("scroll-ended", e._onScrollEnded, e, !0);
e.node.off("scrolling", e._onScrolling, e, !0);
e.node.off(cc.Node.EventType.SIZE_CHANGED, e._onSizeChanged, e);
},
_init: function() {
var e = this;
if (!e._inited) {
e._scrollView = e.node.getComponent("CH_ScrollView");
e.content = e._scrollView.content;
if (e.content) {
e._layout = e.content.getComponent(cc.Layout);
e._align = e._layout.type;
e._resizeMode = e._layout.resizeMode;
e._startAxis = e._layout.startAxis;
e._topGap = e._layout.paddingTop;
e._rightGap = e._layout.paddingRight;
e._bottomGap = e._layout.paddingBottom;
e._leftGap = e._layout.paddingLeft;
e._columnGap = e._layout.spacingX;
e._lineGap = e._layout.spacingY;
e._colLineNum;
e._verticalDir = e._layout.verticalDirection;
e._horizontalDir = e._layout.horizontalDirection;
e.setTemplateItem(cc.instantiate(e.templateType == i.PREFAB ? e.tmpPrefab : e.tmpNode));
if (e._slideMode == n.ADHERING || e._slideMode == n.PAGE) {
e._scrollView.inertia = !1;
e._scrollView._onMouseWheel = function() {};
}
e.virtual || (e.lackCenter = !1);
e._lastDisplayData = [];
e.displayData = [];
e._pool = new cc.NodePool();
e._forceUpdate = !1;
e._updateCounter = 0;
e._updateDone = !0;
e.curPageNum = 0;
if (e.cyclic) {
e._scrollView._processAutoScrolling = this._processAutoScrolling.bind(e);
e._scrollView._startBounceBackIfNeeded = function() {
return !1;
};
}
switch (e._align) {
case cc.Layout.Type.HORIZONTAL:
switch (e._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
e._alignCalcType = 1;
break;

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
e._alignCalcType = 2;
}
break;

case cc.Layout.Type.VERTICAL:
switch (e._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
e._alignCalcType = 3;
break;

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
e._alignCalcType = 4;
}
break;

case cc.Layout.Type.GRID:
switch (e._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
switch (e._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
e._alignCalcType = 3;
break;

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
e._alignCalcType = 4;
}
break;

case cc.Layout.AxisDirection.VERTICAL:
switch (e._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
e._alignCalcType = 1;
break;

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
e._alignCalcType = 2;
}
}
}
e.content.children.forEach(function(e) {
e.removeFromParent();
e.isValid && e.destroy();
});
e._inited = !0;
} else cc.error(e.node.name + "'s cc.ScrollView unset content!");
}
},
_processAutoScrolling: function(e) {
this._scrollView._autoScrollAccumulatedTime += 1 * e;
var t = Math.min(1, this._scrollView._autoScrollAccumulatedTime / this._scrollView._autoScrollTotalTime);
if (this._scrollView._autoScrollAttenuate) {
var i = t - 1;
t = i * i * i * i * i + 1;
}
var n = this._scrollView._autoScrollStartPosition.add(this._scrollView._autoScrollTargetDelta.mul(t)), a = this._scrollView.getScrollEndedEventTiming(), o = Math.abs(t - 1) <= a;
if (Math.abs(t - 1) <= this._scrollView.getScrollEndedEventTiming() && !this._scrollView._isScrollEndedWithThresholdEventFired) {
this._scrollView._dispatchEvent("scroll-ended-with-threshold");
this._scrollView._isScrollEndedWithThresholdEventFired = !0;
}
o && (this._scrollView._autoScrolling = !1);
var c = n.sub(this._scrollView.getContentPosition());
this._scrollView._moveContent(this._scrollView._clampDelta(c), o);
this._scrollView._dispatchEvent("scrolling");
if (!this._scrollView._autoScrolling) {
this._scrollView._isBouncing = !1;
this._scrollView._scrolling = !1;
this._scrollView._dispatchEvent("scroll-ended");
}
},
setTemplateItem: function(e) {
if (e) {
var t = this;
t._itemTmp = e;
t._resizeMode == cc.Layout.ResizeMode.CHILDREN ? t._itemSize = t._layout.cellSize : t._itemSize = new cc.size(e.width, e.height);
var i = e.getComponent(o), n = !1;
i || (n = !0);
i && (i._btnCom || e.getComponent(cc.Button) || (n = !0));
n && (t.selectedMode = a.NONE);
(i = e.getComponent(cc.Widget)) && i.enabled && (t._needUpdateWidget = !0);
t.selectedMode == a.MULT && (t.multSelected = []);
switch (t._align) {
case cc.Layout.Type.HORIZONTAL:
t._colLineNum = 1;
t._sizeType = !1;
break;

case cc.Layout.Type.VERTICAL:
t._colLineNum = 1;
t._sizeType = !0;
break;

case cc.Layout.Type.GRID:
switch (t._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
var c = t.content.width - t._leftGap - t._rightGap;
t._colLineNum = Math.floor((c + t._columnGap) / (t._itemSize.width + t._columnGap));
t._sizeType = !0;
break;

case cc.Layout.AxisDirection.VERTICAL:
var s = t.content.height - t._topGap - t._bottomGap;
t._colLineNum = Math.floor((s + t._lineGap) / (t._itemSize.height + t._lineGap));
t._sizeType = !1;
}
}
}
},
checkInited: function(e) {
e = null == e || e;
if (!this._inited) {
e && cc.error("CH_List initialization not completed!");
return !1;
}
return !0;
},
_resizeContent: function() {
var e, t = this;
switch (t._align) {
case cc.Layout.Type.HORIZONTAL:
if (t._customSize) {
var i = t._getFixedSize();
e = t._leftGap + i.val + t._itemSize.width * (t._numItems - i.count) + t._columnGap * (t._numItems - 1) + t._rightGap;
} else e = t._leftGap + t._itemSize.width * t._numItems + t._columnGap * (t._numItems - 1) + t._rightGap;
break;

case cc.Layout.Type.VERTICAL:
if (t._customSize) {
var n = t._getFixedSize();
e = t._topGap + n.val + t._itemSize.height * (t._numItems - n.count) + t._lineGap * (t._numItems - 1) + t._bottomGap;
} else e = t._topGap + t._itemSize.height * t._numItems + t._lineGap * (t._numItems - 1) + t._bottomGap;
break;

case cc.Layout.Type.GRID:
t.lackCenter && (t.lackCenter = !1);
switch (t._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
var a = Math.ceil(t._numItems / t._colLineNum);
e = t._topGap + t._itemSize.height * a + t._lineGap * (a - 1) + t._bottomGap;
break;

case cc.Layout.AxisDirection.VERTICAL:
var o = Math.ceil(t._numItems / t._colLineNum);
e = t._leftGap + t._itemSize.width * o + t._columnGap * (o - 1) + t._rightGap;
}
}
var c = t.content.getComponent(cc.Layout);
c && (c.enabled = !1);
t._allItemSize = e;
t._allItemSizeNoEdge = t._allItemSize - (t._sizeType ? t._topGap + t._bottomGap : t._leftGap + t._rightGap);
if (t.cyclic) {
var s = t._sizeType ? t.node.height : t.node.width;
t._cyclicPos1 = 0;
s -= t._cyclicPos1;
t._cyclicNum = Math.ceil(s / t._allItemSizeNoEdge) + 1;
var r = t._sizeType ? t._lineGap : t._columnGap;
t._cyclicPos2 = t._cyclicPos1 + t._allItemSizeNoEdge + r;
t._cyclicAllItemSize = t._allItemSize + t._allItemSizeNoEdge * (t._cyclicNum - 1) + r * (t._cyclicNum - 1);
t._cycilcAllItemSizeNoEdge = t._allItemSizeNoEdge * t._cyclicNum;
t._cycilcAllItemSizeNoEdge += r * (t._cyclicNum - 1);
}
t._lack = !t.cyclic && t._allItemSize < (t._sizeType ? t.node.height : t.node.width);
var l = t._lack && t.lackCenter || !t.lackSlide ? .1 : 0, d = t._lack ? (t._sizeType ? t.node.height : t.node.width) - l : t.cyclic ? t._cyclicAllItemSize : t._allItemSize;
d < 0 && (d = 0);
t._sizeType ? t.content.height = d : t.content.width = d;
},
_onScrolling: function(e) {
null == this.frameCount && (this.frameCount = this._updateRate);
if (!this._forceUpdate && e && "scroll-ended" != e.type && this.frameCount > 0) this.frameCount--; else {
this.frameCount = this._updateRate;
if (!this._aniDelRuning) {
if (this.cyclic) {
var t = this.content.getPosition();
t = this._sizeType ? t.y : t.x;
var i = this._allItemSizeNoEdge + (this._sizeType ? this._lineGap : this._columnGap), n = this._sizeType ? cc.v2(0, i) : cc.v2(i, 0);
switch (this._alignCalcType) {
case 1:
if (t > -this._cyclicPos1) {
this.content.x = -this._cyclicPos2;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(n));
} else if (t < -this._cyclicPos2) {
this.content.x = -this._cyclicPos1;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(n));
}
break;

case 2:
if (t < this._cyclicPos1) {
this.content.x = this._cyclicPos2;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(n));
} else if (t > this._cyclicPos2) {
this.content.x = this._cyclicPos1;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(n));
}
break;

case 3:
if (t < this._cyclicPos1) {
this.content.y = this._cyclicPos2;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(n));
} else if (t > this._cyclicPos2) {
this.content.y = this._cyclicPos1;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(n));
}
break;

case 4:
if (t > -this._cyclicPos1) {
this.content.y = -this._cyclicPos2;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(n));
} else if (t < -this._cyclicPos2) {
this.content.y = -this._cyclicPos1;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(n));
}
}
}
this._calcViewPos();
var a, o, c, s;
if (this._sizeType) {
a = this.viewTop;
c = this.viewBottom;
} else {
o = this.viewRight;
s = this.viewLeft;
}
if (this._virtual) {
this.displayData = [];
var r, l = 0, d = this._numItems - 1;
if (this._customSize) for (var h = !1; l <= d && !h; l++) {
r = this._calcItemPos(l);
switch (this._align) {
case cc.Layout.Type.HORIZONTAL:
r.right >= s && r.left <= o ? this.displayData.push(r) : 0 != l && this.displayData.length > 0 && (h = !0);
break;

case cc.Layout.Type.VERTICAL:
r.bottom <= a && r.top >= c ? this.displayData.push(r) : 0 != l && this.displayData.length > 0 && (h = !0);
break;

case cc.Layout.Type.GRID:
switch (this._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
r.bottom <= a && r.top >= c ? this.displayData.push(r) : 0 != l && this.displayData.length > 0 && (h = !0);
break;

case cc.Layout.AxisDirection.VERTICAL:
r.right >= s && r.left <= o ? this.displayData.push(r) : 0 != l && this.displayData.length > 0 && (h = !0);
}
}
} else {
var _ = this._itemSize.width + this._columnGap, p = this._itemSize.height + this._lineGap;
switch (this._alignCalcType) {
case 1:
l = (s + this._leftGap) / _;
d = (o + this._rightGap) / _;
break;

case 2:
l = (-o - this._rightGap) / _;
d = (-s - this._leftGap) / _;
break;

case 3:
l = (-a - this._topGap) / p;
d = (-c - this._bottomGap) / p;
break;

case 4:
l = (c + this._bottomGap) / p;
d = (a + this._topGap) / p;
}
l = Math.floor(l) * this._colLineNum;
d = Math.ceil(d) * this._colLineNum;
l < 0 && (l = 0);
--d >= this._numItems && (d = this._numItems - 1);
for (;l <= d; l++) this.displayData.push(this._calcItemPos(l));
}
if (this.displayData.length <= 0 || !this._numItems) {
this._lastDisplayData = [];
this._delRedundantItem();
return;
}
this.firstListId = this.displayData[0].id;
this.displayItemNum = this.displayData.length;
var u = this._lastDisplayData.length;
if (this._forceUpdate || this.displayItemNum != u || this.firstListId != this._lastDisplayData[0] || this.displayData[this.displayItemNum - 1].id != this._lastDisplayData[u - 1]) {
this._lastDisplayData = [];
if (this.frameByFrameRenderNum > 0) if (this._numItems > 0) {
this._updateDone ? this._updateCounter = 0 : this._doneAfterUpdate = !0;
this._updateDone = !1;
} else {
this._delRedundantItem();
this._updateCounter = 0;
this._updateDone = !0;
} else {
for (var f = 0; f < this.displayItemNum; f++) this._createOrUpdateItem(this.displayData[f]);
this._delRedundantItem();
this._forceUpdate = !1;
}
}
this._calcNearestItem();
}
}
}
},
_calcViewPos: function() {
var e = this.content.getPosition();
switch (this._alignCalcType) {
case 1:
this.elasticLeft = e.x > 0 ? e.x : 0;
this.viewLeft = (e.x < 0 ? -e.x : 0) - this.elasticLeft;
this.viewRight = this.viewLeft + this.node.width;
this.elasticRight = this.viewRight > this.content.width ? Math.abs(this.viewRight - this.content.width) : 0;
this.viewRight += this.elasticRight;
break;

case 2:
this.elasticRight = e.x < 0 ? -e.x : 0;
this.viewRight = (e.x > 0 ? -e.x : 0) + this.elasticRight;
this.viewLeft = this.viewRight - this.node.width;
this.elasticLeft = this.viewLeft < -this.content.width ? Math.abs(this.viewLeft + this.content.width) : 0;
this.viewLeft -= this.elasticLeft;
break;

case 3:
this.elasticTop = e.y < 0 ? Math.abs(e.y) : 0;
this.viewTop = (e.y > 0 ? -e.y : 0) + this.elasticTop;
this.viewBottom = this.viewTop - this.node.height;
this.elasticBottom = this.viewBottom < -this.content.height ? Math.abs(this.viewBottom + this.content.height) : 0;
this.viewBottom += this.elasticBottom;
break;

case 4:
this.elasticBottom = e.y > 0 ? Math.abs(e.y) : 0;
this.viewBottom = (e.y < 0 ? -e.y : 0) - this.elasticBottom;
this.viewTop = this.viewBottom + this.node.height;
this.elasticTop = this.viewTop > this.content.height ? Math.abs(this.viewTop - this.content.height) : 0;
this.viewTop -= this.elasticTop;
}
},
_calcItemPos: function(e) {
var t, i, n, a, o, c, s, r;
switch (this._align) {
case cc.Layout.Type.HORIZONTAL:
switch (this._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
if (this._customSize) {
var l = this._getFixedSize(e);
o = this._leftGap + (this._itemSize.width + this._columnGap) * (e - l.count) + (l.val + this._columnGap * l.count);
var d = this._customSize[e];
t = d > 0 ? d : this._itemSize.width;
} else {
o = this._leftGap + (this._itemSize.width + this._columnGap) * e;
t = this._itemSize.width;
}
c = o + t;
if (this.lackCenter) {
var h = this.content.width / 2 - this._allItemSizeNoEdge / 2;
o += h;
c += h;
}
return {
id: e,
left: o,
right: c,
x: o + this._itemTmp.anchorX * t,
y: this._itemTmp.y
};

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
if (this._customSize) {
var _ = this._getFixedSize(e);
c = -this._rightGap - (this._itemSize.width + this._columnGap) * (e - _.count) - (_.val + this._columnGap * _.count);
var p = this._customSize[e];
t = p > 0 ? p : this._itemSize.width;
} else {
c = -this._rightGap - (this._itemSize.width + this._columnGap) * e;
t = this._itemSize.width;
}
o = c - t;
if (this.lackCenter) {
var u = this.content.width / 2 - this._allItemSizeNoEdge / 2;
o -= u;
c -= u;
}
return {
id: e,
right: c,
left: o,
x: o + this._itemTmp.anchorX * t,
y: this._itemTmp.y
};
}
break;

case cc.Layout.Type.VERTICAL:
switch (this._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
if (this._customSize) {
var f = this._getFixedSize(e);
n = -this._topGap - (this._itemSize.height + this._lineGap) * (e - f.count) - (f.val + this._lineGap * f.count);
var g = this._customSize[e];
a = n - (i = g > 0 ? g : this._itemSize.height);
} else {
n = -this._topGap - (this._itemSize.height + this._lineGap) * e;
i = this._itemSize.height;
}
a = n - i;
if (this.lackCenter) {
var m = this.content.height / 2 - this._allItemSizeNoEdge / 2;
n -= m;
a -= m;
}
return {
id: e,
top: n,
bottom: a,
x: this._itemTmp.x,
y: a + this._itemTmp.anchorY * i
};

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
if (this._customSize) {
var v = this._getFixedSize(e);
a = this._bottomGap + (this._itemSize.height + this._lineGap) * (e - v.count) + (v.val + this._lineGap * v.count);
var S = this._customSize[e];
i = S > 0 ? S : this._itemSize.height;
} else {
a = this._bottomGap + (this._itemSize.height + this._lineGap) * e;
i = this._itemSize.height;
}
n = a + i;
if (this.lackCenter) {
var C = this.content.height / 2 - this._allItemSizeNoEdge / 2;
n += C;
a += C;
}
return {
id: e,
top: n,
bottom: a,
x: this._itemTmp.x,
y: a + this._itemTmp.anchorY * i
};
}

case cc.Layout.Type.GRID:
var b = Math.floor(e / this._colLineNum);
switch (this._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
switch (this._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
r = (a = (n = -this._topGap - (this._itemSize.height + this._lineGap) * b) - this._itemSize.height) + this._itemTmp.anchorY * this._itemSize.height;
break;

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
n = (a = this._bottomGap + (this._itemSize.height + this._lineGap) * b) + this._itemSize.height;
r = a + this._itemTmp.anchorY * this._itemSize.height;
}
s = this._leftGap + e % this._colLineNum * (this._itemSize.width + this._columnGap);
switch (this._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
s += this._itemTmp.anchorX * this._itemSize.width;
s -= this.content.anchorX * this.content.width;
break;

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
s += (1 - this._itemTmp.anchorX) * this._itemSize.width;
s -= (1 - this.content.anchorX) * this.content.width;
s *= -1;
}
return {
id: e,
top: n,
bottom: a,
x: s,
y: r
};

case cc.Layout.AxisDirection.VERTICAL:
switch (this._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
c = (o = this._leftGap + (this._itemSize.width + this._columnGap) * b) + this._itemSize.width;
s = o + this._itemTmp.anchorX * this._itemSize.width;
s -= this.content.anchorX * this.content.width;
break;

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
s = (o = (c = -this._rightGap - (this._itemSize.width + this._columnGap) * b) - this._itemSize.width) + this._itemTmp.anchorX * this._itemSize.width;
s += (1 - this.content.anchorX) * this.content.width;
}
r = -this._topGap - e % this._colLineNum * (this._itemSize.height + this._lineGap);
switch (this._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
r -= (1 - this._itemTmp.anchorY) * this._itemSize.height;
r += (1 - this.content.anchorY) * this.content.height;
break;

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
r -= this._itemTmp.anchorY * this._itemSize.height;
r += this.content.anchorY * this.content.height;
r *= -1;
}
return {
id: e,
left: o,
right: c,
x: s,
y: r
};
}
}
},
_calcExistItemPos: function(e) {
var t = this.getItemByListId(e);
if (!t) return null;
var i = {
id: e,
x: t.x,
y: t.y
};
if (this._sizeType) {
i.top = t.y + t.height * (1 - t.anchorY);
i.bottom = t.y - t.height * t.anchorY;
} else {
i.left = t.x - t.width * t.anchorX;
i.right = t.x + t.width * (1 - t.anchorX);
}
return i;
},
getItemPos: function(e) {
return this._virtual ? this._calcItemPos(e) : this.frameByFrameRenderNum ? this._calcItemPos(e) : this._calcExistItemPos(e);
},
_getFixedSize: function(e) {
if (!this._customSize) return null;
null == e && (e = this._numItems);
var t = 0, i = 0;
for (var n in this._customSize) if (parseInt(n) < e) {
t += this._customSize[n];
i++;
}
return {
val: t,
count: i
};
},
_onScrollBegan: function() {
this._beganPos = this._sizeType ? this.viewTop : this.viewLeft;
},
_onScrollEnded: function() {
var e = this;
if (null != e.scrollToListId) {
var t = e.getItemByListId(e.scrollToListId);
e.scrollToListId = null;
t && t.runAction(new cc.sequence(new cc.scaleTo(.1, 1.06), new cc.scaleTo(.1, 1)));
}
e._onScrolling();
e._slideMode != n.ADHERING || e.adhering ? e._slideMode == n.PAGE && (null != e._beganPos ? this._pageAdhere() : e.adhere()) : e.adhere();
},
_onTouchStart: function(e, t) {
if (!this._scrollView.hasNestedViewGroup(e, t) && (e.eventPhase !== cc.Event.AT_TARGET || e.target !== this.node)) {
for (var i = e.target; null == i._listId && i.parent; ) i = i.parent;
this._scrollItem = null != i._listId ? i : e.target;
}
},
_onTouchUp: function() {
var e = this;
e._scrollPos = null;
if (e._slideMode == n.ADHERING) {
e.adhering && (e._adheringBarrier = !0);
e.adhere();
} else e._slideMode == n.PAGE && (null != e._beganPos ? e._pageAdhere() : e.adhere());
this._scrollItem = null;
},
_onTouchCancelled: function(e, t) {
var i = this;
if (!i._scrollView.hasNestedViewGroup(e, t) && !e.simulate) {
i._scrollPos = null;
if (i._slideMode == n.ADHERING) {
i.adhering && (i._adheringBarrier = !0);
i.adhere();
} else i._slideMode == n.PAGE && (null != i._beganPos ? i._pageAdhere() : i.adhere());
this._scrollItem = null;
}
},
_onSizeChanged: function() {
this.checkInited(!1) && this._onScrolling();
},
_onItemAdaptive: function(e) {
var t = this;
if (this.checkInited(!1) && (!this._sizeType && e.width != this._itemSize.width || this._sizeType && e.height != this._itemSize.height)) {
this._customSize || (this._customSize = {});
var i = this._sizeType ? e.height : e.width;
if (this._customSize[e._listId] != i) {
this._customSize[e._listId] = i;
this._resizeContent();
this.content.children.forEach(function(e) {
t._updateItemPos(e);
});
if (!isNaN(this._scrollToListId)) {
this._scrollPos = null;
this.unschedule(this._scrollToSo);
this.scrollTo(this._scrollToListId, Math.max(0, this._scrollToEndTime - new Date().getTime() / 1e3));
}
}
}
},
_pageAdhere: function() {
var e = this;
if (e.cyclic || !(e.elasticTop > 0 || e.elasticRight > 0 || e.elasticBottom > 0 || e.elasticLeft > 0)) {
var t = e._sizeType ? e.viewTop : e.viewLeft, i = (e._sizeType ? e.node.height : e.node.width) * e.pageDistance;
if (Math.abs(e._beganPos - t) > i) switch (e._alignCalcType) {
case 1:
case 4:
e._beganPos > t ? e.prePage(.5) : e.nextPage(.5);
break;

case 2:
case 3:
e._beganPos < t ? e.prePage(.5) : e.nextPage(.5);
} else e.elasticTop <= 0 && e.elasticRight <= 0 && e.elasticBottom <= 0 && e.elasticLeft <= 0 && e.adhere();
e._beganPos = null;
}
},
adhere: function() {
var e = this;
if (e.checkInited() && !(e.elasticTop > 0 || e.elasticRight > 0 || e.elasticBottom > 0 || e.elasticLeft > 0)) {
e.adhering = !0;
e._calcNearestItem();
var t = (e._sizeType ? e._topGap : e._leftGap) / (e._sizeType ? e.node.height : e.node.width);
e.scrollTo(e.nearestListId, .7, t);
}
},
update: function() {
if (!(this.frameByFrameRenderNum <= 0 || this._updateDone)) if (this._virtual) {
for (var e = this._updateCounter + this.frameByFrameRenderNum > this.displayItemNum ? this.displayItemNum : this._updateCounter + this.frameByFrameRenderNum, t = this._updateCounter; t < e; t++) {
var i = this.displayData[t];
i && this._createOrUpdateItem(i);
}
if (this._updateCounter >= this.displayItemNum - 1) if (this._doneAfterUpdate) {
this._updateCounter = 0;
this._updateDone = !1;
this._scrollView.isScrolling() || (this._doneAfterUpdate = !1);
} else {
this._updateDone = !0;
this._delRedundantItem();
this._forceUpdate = !1;
this._calcNearestItem();
this.slideMode == n.PAGE && (this.curPageNum = this.nearestListId);
} else this._updateCounter += this.frameByFrameRenderNum;
} else if (this._updateCounter < this._numItems) {
for (var a = this._updateCounter + this.frameByFrameRenderNum > this._numItems ? this._numItems : this._updateCounter + this.frameByFrameRenderNum, o = this._updateCounter; o < a; o++) this._createOrUpdateItem2(o);
this._updateCounter += this.frameByFrameRenderNum;
} else {
this._updateDone = !0;
this._calcNearestItem();
this.slideMode == n.PAGE && (this.curPageNum = this.nearestListId);
}
},
_createOrUpdateItem: function(e) {
var t = this.getItemByListId(e.id);
if (t) {
if (this._forceUpdate && this.renderEvent) {
t.setPosition(new cc.v2(e.x, e.y));
this._resetItemSize(t);
this.renderEvent && cc.Component.EventHandler.emitEvents([ this.renderEvent ], t, e.id % this._actualNumItems);
}
} else {
var i = this._pool.size() > 0;
if ((t = i ? this._pool.get() : cc.instantiate(this._itemTmp))._listId != e.id) {
t._listId = e.id;
t.setContentSize(this._itemSize);
}
t.setPosition(new cc.v2(e.x, e.y));
this._resetItemSize(t);
this.content.addChild(t);
if (i && this._needUpdateWidget) {
var n = t.getComponent(cc.Widget);
n && n.updateAlignment();
}
t.setSiblingIndex(this.content.childrenCount - 1);
var a = t.getComponent(o);
t.listItem = a;
if (a) {
a._list = this;
a._registerEvent();
}
this.renderEvent && cc.Component.EventHandler.emitEvents([ this.renderEvent ], t, e.id % this._actualNumItems);
}
this._resetItemSize(t);
this._updateListItem(t.listItem);
this._lastDisplayData.indexOf(e.id) < 0 && this._lastDisplayData.push(e.id);
},
_createOrUpdateItem2: function(e) {
var t = this.content.children[e];
if (t) {
if (this._forceUpdate && this.renderEvent) {
t._listId = e;
this.renderEvent && cc.Component.EventHandler.emitEvents([ this.renderEvent ], t, e);
}
} else {
(t = cc.instantiate(this._itemTmp))._listId = e;
this.content.addChild(t);
var i = t.getComponent(o);
t.listItem = i;
if (i) {
i._list = this;
i._registerEvent();
}
this.renderEvent && cc.Component.EventHandler.emitEvents([ this.renderEvent ], t, e);
}
this._updateListItem(t.listItem);
this._lastDisplayData.indexOf(e) < 0 && this._lastDisplayData.push(e);
},
_updateListItem: function(e) {
if (e && this.selectedMode > a.NONE) switch (this.selectedMode) {
case a.SINGLE:
e.selected = this.selectedId == e.node._listId;
break;

case a.MULT:
e.selected = this.multSelected.indexOf(e.node._listId) >= 0;
}
},
_resetItemSize: function() {},
_updateItemPos: function(e) {
var t = isNaN(e) ? e : this.getItemByListId(e), i = this.getItemPos(t._listId);
t.setPosition(i.x, i.y);
},
setMultSelected: function(e, t) {
var i = this;
if (i.checkInited()) {
Array.isArray(e) || (e = [ e ]);
if (null == t) i.multSelected = e; else {
var n, a;
if (t) for (var o = e.length - 1; o >= 0; o--) {
n = e[o];
(a = i.multSelected.indexOf(n)) < 0 && i.multSelected.push(n);
} else for (var c = e.length - 1; c >= 0; c--) {
n = e[c];
(a = i.multSelected.indexOf(n)) >= 0 && i.multSelected.splice(a, 1);
}
}
i._forceUpdate = !0;
i._onScrolling();
}
},
updateItem: function(e) {
if (this.checkInited()) {
Array.isArray(e) || (e = [ e ]);
for (var t = 0, i = e.length; t < i; t++) {
var n = e[t], a = this.getItemByListId(n);
a && cc.Component.EventHandler.emitEvents([ this.renderEvent ], a, n % this._actualNumItems);
}
}
},
updateAll: function() {
this.checkInited() && (this.numItems = this.numItems);
},
getItemByListId: function(e) {
for (var t = this.content.childrenCount - 1; t >= 0; t--) if (this.content.children[t]._listId == e) return this.content.children[t];
},
_getOutsideItem: function() {
for (var e, t, i = [], n = this.content.childrenCount - 1; n >= 0; n--) {
e = this.content.children[n];
if (t = !0) for (var a = this.displayItemNum - 1; a >= 0; a--) if (this.displayData[a]) {
var o = this.displayData[a].id;
if (e._listId == o) {
t = !1;
break;
}
}
t && i.push(e);
}
return i;
},
_delRedundantItem: function() {
if (this._virtual) for (var e = this._getOutsideItem(), t = e.length - 1; t >= 0; t--) {
var i = e[t];
this._scrollItem && i._listId == this._scrollItem._listId || this._pool.put(i);
} else for (;this.content.childrenCount > this._numItems; ) this._delSingleItem(this.content.children[this.content.childrenCount - 1]);
},
_delSingleItem: function(e) {
e.removeFromParent();
e.destroy && e.destroy();
e = null;
},
aniDelItem: function(e, t, i) {
var n = this;
if (!n.checkInited() || n.cyclic || !n._virtual) return cc.error("This function is not allowed to be called!");
if (n._aniDelRuning) return cc.warn("Please wait for the current deletion to finish!");
var o = n.getItemByListId(e);
if (o) {
n._aniDelRuning = !0;
var c = n.displayData[n.displayData.length - 1].id, s = o.listItem.selected;
o.listItem.showAni(i, function() {
var i;
c < n._numItems - 2 && (i = c + 1);
if (null != i) {
var r = n._calcItemPos(i);
n.displayData.push(r);
n._virtual ? n._createOrUpdateItem(r) : n._createOrUpdateItem2(i);
} else n._numItems--;
if (n.selectedMode == a.SINGLE) s ? n._selectedId = -1 : n._selectedId - 1 >= 0 && n._selectedId--; else if (n.selectedMode == a.MULT && n.multSelected.length) {
var l = n.multSelected.indexOf(e);
l >= 0 && n.multSelected.splice(l, 1);
for (var d = n.multSelected.length - 1; d >= 0; d--) n.multSelected[d] >= e && n.multSelected[d]--;
}
if (n._customSize) {
n._customSize[e] && delete n._customSize[e];
var h, _ = {};
for (var p in n._customSize) {
h = n._customSize[p];
_[(p = parseInt(p)) - (p >= e ? 1 : 0)] = h;
}
n._customSize = _;
}
for (var u, f, g = null != i ? i : c; g >= e + 1; g--) if (o = n.getItemByListId(g)) {
var m = n._calcItemPos(g - 1);
u = [ new cc.moveTo(.2333, new cc.v2(m.x, m.y)) ];
if (g <= e + 1) {
f = !0;
u.push(new cc.CallFunc(function() {
n._aniDelRuning = !1;
t(e);
}));
}
u.length > 1 ? o.runAction(new cc.Sequence(u)) : o.runAction(u[0]);
}
if (!f) {
n._aniDelRuning = !1;
t(e);
}
}, !0);
} else t(e);
},
scrollTo: function(e, t, i, n) {
var a = this;
if (a.checkInited()) {
null == t ? t = .5 : t < 0 && (t = 0);
e < 0 ? e = 0 : e >= a._numItems && (e = a._numItems - 1);
!a._virtual && a._layout && a._layout.enabled && a._layout.updateLayout();
var o, c, s = a.getItemPos(e);
switch (a._alignCalcType) {
case 1:
o = s.left;
o -= null != i ? a.node.width * i : a._leftGap;
s = new cc.v2(o, 0);
break;

case 2:
o = s.right - a.node.width;
o += null != i ? a.node.width * i : a._rightGap;
s = new cc.v2(o + a.content.width, 0);
break;

case 3:
c = s.top;
c += null != i ? a.node.height * i : a._topGap;
s = new cc.v2(0, -c);
break;

case 4:
c = s.bottom + a.node.height;
c -= null != i ? a.node.height * i : a._bottomGap;
s = new cc.v2(0, -c + a.content.height);
}
var r = a.content.getPosition();
r = Math.abs(a._sizeType ? r.y : r.x);
var l = a._sizeType ? s.y : s.x;
if (Math.abs((null != a._scrollPos ? a._scrollPos : r) - l) > .5) {
a._scrollPos = l;
a._scrollToListId = e;
a._scrollToEndTime = new Date().getTime() / 1e3 + t;
a._scrollView.scrollToOffset(s, t);
a._scrollToSo = a.scheduleOnce(function() {
a._adheringBarrier || (a.adhering = a._adheringBarrier = !1);
a._scrollPos = a._scrollToListId = a._scrollToEndTime = a._scrollToSo = null;
if (n) {
var t = a.getItemByListId(e);
t && t.runAction(new cc.sequence(new cc.scaleTo(.1, 1.05), new cc.scaleTo(.1, 1)));
}
}, t + .1);
t <= 0 && a._onScrolling();
}
}
},
_calcNearestItem: function() {
var e, t, i, n, a, o, c = this;
c.nearestListId = null;
c._virtual && c._calcViewPos();
i = c.viewTop;
n = c.viewRight;
a = c.viewBottom;
o = c.viewLeft;
for (var s = !1, r = 0; r < c.content.childrenCount && !s; r += c._colLineNum) if (e = this._virtual ? this.displayData[r] : this._calcExistItemPos(r)) {
t = this._sizeType ? (e.top + e.bottom) / 2 : t = (e.left + e.right) / 2;
switch (this._alignCalcType) {
case 1:
if (e.right >= o) {
this.nearestListId = e.id;
o > t && (this.nearestListId += this._colLineNum);
s = !0;
}
break;

case 2:
if (e.left <= n) {
this.nearestListId = e.id;
n < t && (this.nearestListId += this._colLineNum);
s = !0;
}
break;

case 3:
if (e.bottom <= i) {
this.nearestListId = e.id;
i < t && (this.nearestListId += this._colLineNum);
s = !0;
}
break;

case 4:
if (e.top >= a) {
this.nearestListId = e.id;
a > t && (this.nearestListId += this._colLineNum);
s = !0;
}
}
}
if ((e = this._virtual ? this.displayData[this.displayItemNum - 1] : this._calcExistItemPos(this._numItems - 1)) && e.id == c._numItems - 1) {
t = c._sizeType ? (e.top + e.bottom) / 2 : t = (e.left + e.right) / 2;
switch (c._alignCalcType) {
case 1:
n > t && (c.nearestListId = e.id);
break;

case 2:
o < t && (c.nearestListId = e.id);
break;

case 3:
a < t && (c.nearestListId = e.id);
break;

case 4:
i > t && (c.nearestListId = e.id);
}
}
},
prePage: function(e) {
if (this.checkInited()) {
null == e && (e = .5);
this.skipPage(this.curPageNum - 1, e);
}
},
nextPage: function(e) {
if (this.checkInited()) {
null == e && (e = .5);
this.skipPage(this.curPageNum + 1, e);
}
},
skipPage: function(e, t) {
var i = this;
if (i.checkInited()) {
if (i._slideMode != n.PAGE) return cc.error("This function is not allowed to be called, Must SlideMode = PAGE!");
if (!(e < 0 || e >= i._numItems) && i.curPageNum != e) {
i.curPageNum = e;
i.pageChangeEvent && cc.Component.EventHandler.emitEvents([ i.pageChangeEvent ], e);
i.scrollTo(e, t);
}
}
},
calcCustomSize: function(e) {
var t = this;
if (t.checkInited()) {
if (!t._itemTmp) return cc.error("Unset template item!");
if (!t.renderEvent) return cc.error("Unset Render-Event!");
t._customSize = {};
var i = cc.instantiate(t._itemTmp);
t.content.addChild(i);
for (var n = 0; n < e; n++) {
cc.Component.EventHandler.emitEvents([ t.renderEvent ], i, n);
i.height == t._itemSize.height && i.width == t._itemSize.width || (t._customSize[n] = t._sizeType ? i.height : i.width);
}
Object.keys(t._customSize).length || (t._customSize = null);
i.removeFromParent();
i.destroy && i.destroy();
return t._customSize;
}
}
});
cc._RF.pop();
}, {
ListItem: "ListItem"
} ],
CH_popwin_base: [ function(e, t) {
"use strict";
cc._RF.push(t, "438d03k9wRGPL3Sa4N/teHf", "CH_popwin_base");
cc.Class({
extends: cc.Component,
properties: {
_cmpAni: null
},
onLoad: function() {
this._cmpAni = this.node.getComponent(cc.Animation);
this._cmpAni.on("finished", this.uiPlayFinish, this);
},
start: function() {
if (this._cmpAni) {
var e = this._getClipName(0);
e && this._cmpAni.play(e);
}
},
setShowEndCall: function(e) {
this._startCall = e;
},
startShowEnd: function() {
var e = this._getClipName(1);
e && this._cmpAni.play(e);
this._startCall && this._startCall();
},
uiPlayFinish: function(e, t) {
t.name == this._getClipName(0) && this.startShowEnd();
},
_getClipName: function(e) {
if (this._cmpAni) {
var t = this._cmpAni.getClips();
if (t[e]) return t[e]._name;
}
}
});
cc._RF.pop();
}, {} ],
CafeGameInvite: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4e8ec+athxLQrz9bYlaXKYb", "CafeGameInvite");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.prefab = null;
t.uidInviteBtn = null;
t.btnFriends = null;
t.btnWhatsApp = null;
t.btnMessage = null;
t.btnOther = null;
t.btnInviteChat = null;
t.gameid = null;
t.tableid = null;
t.pwd = null;
return t;
}
t.prototype.onLoad = function() {
this.uidInviteBtn.node.on("click", this.onClickUIDInvite, this);
this.btnWhatsApp.node.on("click", this.onClickWhatsApp, this);
this.btnMessage.node.on("click", this.onClickMessage, this);
this.btnFriends.node.on("click", this.onClickFriends, this);
this.btnOther.node.on("click", this.onClickOther, this);
this.btnInviteChat.node.on("click", this.onClickChatInvite, this);
this.node.addComponent("NetListenerCmp").registerMsg(MsgId.SALON_INVITE_CHAT, this.SALON_INVITE_CHAT, this);
};
t.prototype.onClickUIDInvite = function() {
var e = this;
cc.vv.PopupManager.addPopup(this.prefab, {
opacityIn: !0,
onShow: function(t) {
t.getComponent("CafeUIDInvite").onInit(e.getGameId(), e.getTableId());
}
});
StatisticsMgr.reqReportNow(ReportConfig.SALON_SHARE, "uid");
cc.vv.PopupManager.removePopup(this.node);
};
t.prototype.shareCallback = function(e) {
"-10" == e.result ? cc.vv.FloatTip.show(___("未安装Messager")) : "-11" == e.result && cc.vv.FloatTip.show(___("未安装whatsapp"));
StatisticsMgr.reqReportNow(ReportConfig.SALON_SHARE, "fb");
};
t.prototype.onClickMessage = function() {
var e = cc.vv.UserConfig.getGameName(this.getGameId());
cc.vv.FBMgr.deskInvite(this._getInviteLink(cc.vv.UserManager.sharelink), "https://inter.yonogames.com/icon.png", 2, ___("快上线,加入我的房间{1},全民都在玩的Poker Hero!", this.getTableId()), e, this.getTableId(), this.getGameId(), this.getPwd(), this.shareCallback.bind(this));
StatisticsMgr.reqReportNow(ReportConfig.SALON_SHARE, "message");
cc.vv.PopupManager.removePopup(this.node);
};
t.prototype.onClickWhatsApp = function() {
var e = cc.vv.UserConfig.getGameName(this.getGameId());
cc.vv.NetManager.send({
c: MsgId.SHARE_WHATSAPP_REPORT
});
var t = this._getInviteLink(cc.vv.UserManager.sharelink), i = cc.vv.UserConfig.getAppName(), n = cc.js.formatStr("Hey! Let's play %s together (It's Fun & Real!) \n Room ID: %s \n Open %s app > Salon>Join Salon Room > Enter Room ID \n Already installed %s app? Play directly with me at:", e, this.getTableId(), i, i);
this.deskInvite(t, "https://inter.yonogames.com/icon.png", 3, n, e, this.getTableId(), this.getGameId(), this.getPwd(), this.shareCallback.bind(this));
StatisticsMgr.reqReportNow(ReportConfig.SALON_SHARE, "whatsapp");
cc.vv.PopupManager.removePopup(this.node);
};
t.prototype.onClickOther = function() {
var e = cc.vv.UserConfig.getGameName(this.getGameId()), t = this._getInviteLink(cc.vv.UserManager.sharelink), i = cc.vv.UserConfig.getAppName(), n = cc.js.formatStr("Hey! Let's play %s together (It's Fun & Real!) \n Room ID: %s \n Open %s app > Salon>Join Salon Room > Enter Room ID \n Already installed %s app? Play directly with me at:", e, this.getTableId(), i, i);
this.deskInvite(t, "https://inter.yonogames.com/icon.png", 4, n, e, this.getTableId(), this.getGameId(), this.getPwd(), this.shareCallback.bind(this));
StatisticsMgr.reqReportNow(ReportConfig.SALON_SHARE, "other");
cc.vv.PopupManager.removePopup(this.node);
};
t.prototype.onClickFriends = function() {
Global.dispatchEvent("EVENT_GAME_CHAT_SWITCH");
StatisticsMgr.reqReportNow(ReportConfig.SALON_SHARE, "friend");
cc.vv.PopupManager.removePopup(this.node);
};
t.prototype.onClickChatInvite = function() {
cc.vv.NetManager.send({
c: MsgId.SALON_INVITE_CHAT,
gameid: this.getGameId(),
deskid: this.getTableId()
});
StatisticsMgr.reqReportNow(ReportConfig.SALON_SHARE, "chat");
Global.dispatchEvent("EVENT_GAME_INVITE_SWITCH");
};
t.prototype.SALON_INVITE_CHAT = function(e) {
if (200 == e.code) {
e.spcode && e.spcode > 0 && cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0);
cc.vv.PopupManager.removePopup(this.node);
}
};
t.prototype._getInviteLink = function(e) {
return e.split("?")[0];
};
t.prototype.deskInvite = function(e, t, i, n, a, o, c, s, r) {
var l = "?roomid=" + (o || 0);
c || (c = "0");
l += "-" + c;
s || (s = "0");
var d = e + (l += "-" + s);
if (1 == i) cc.vv.FBMgr.fbShareWeb(d, t, a, r); else if (2 == i) cc.vv.FBMgr.MessagerShare(n, a, "Play Game", d, t, r); else if (3 == i) {
var h = cc.js.formatStr("%s %s", n, d);
cc.vv.FBMgr.WhatsappShare(h, r);
} else if (4 == i) {
var _ = {
title: ""
};
_.content = cc.js.formatStr("%s %s", n, d);
_.imgUrl = t;
cc.vv.PlatformApiMgr.systemShare(JSON.stringify(_));
}
};
t.prototype.setInviteInfo = function(e, t, i) {
this.gameid = e;
this.tableid = t;
this.pwd = i;
};
t.prototype.getGameId = function() {
return this.gameid || facade.dm && facade.dm.tableInfo && facade.dm.tableInfo.gameId;
};
t.prototype.getTableId = function() {
return this.tableid || facade.dm && facade.dm.tableInfo && facade.dm.tableInfo.tableId;
};
t.prototype.getPwd = function() {
return this.pwd || facade.dm && facade.dm.tableInfo && facade.dm.tableInfo.pwd;
};
__decorate([ o(cc.Prefab) ], t.prototype, "prefab", void 0);
__decorate([ o(cc.Button) ], t.prototype, "uidInviteBtn", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btnFriends", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btnWhatsApp", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btnMessage", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btnOther", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btnInviteChat", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
CafeUIDInvite: [ function(e, t) {
"use strict";
cc._RF.push(t, "c5d6d67TO5ExJPrUtG+9O/S", "CafeUIDInvite");
cc.Class({
extends: cc.Component,
properties: {
hitLabel: cc.Label,
contentLabel: cc.Label
},
onLoad: function() {
this.node.addComponent("NetListenerCmp").registerMsg(MsgId.FRIEND_ROOM_INVITE, this.FRIEND_ROOM_INVITE, this);
},
onInit: function(e, t) {
this.gameid = e;
this.deskid = t;
},
FRIEND_ROOM_INVITE: function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0); else {
cc.vv.FloatTip.show(___("邀请成功"));
cc.vv.PopupManager.removePopup(this.node);
}
},
onClickKeyboard: function(e, t) {
if ("re_enter" == t) {
var i = this.contentLabel.string.trim();
i.length > 0 ? cc.vv.NetManager.send({
c: MsgId.FRIEND_ROOM_INVITE,
frienduid: i,
deskid: this.deskid,
gameid: this.gameid
}) : cc.vv.FloatTip.show(___("请输入UID"));
} else if ("delete" == t) {
this.contentLabel.string = this.contentLabel.string.substring(0, this.contentLabel.string.length - 1);
this.contentLabel.string.length <= 0 && (this.hitLabel.node.active = !0);
} else if (this.contentLabel.string.length < 8) {
this.hitLabel.node.active = !1;
this.contentLabel.string += t;
}
},
onClickInvite: function() {}
});
cc._RF.pop();
}, {} ],
CarouselCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "73d16GVRspMD7usCYjOwDlD", "CarouselCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./CarouselItemCpt"), a = e("./CarouselIndicatorCpt"), o = cc._decorator, c = o.ccclass, s = o.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.showItemList = [];
t.indexItem = null;
t.nextItem = null;
t.isTouch = !1;
t.time = 3;
t.indicatorCpt = null;
t._curIdx = 0;
return t;
}
Object.defineProperty(t.prototype, "curIdx", {
get: function() {
return this._curIdx;
},
set: function(e) {
this._curIdx = e;
this.indicatorCpt && this.indicatorCpt.showPage(e);
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);
this.schedule(this.onToNext, this.time);
};
t.prototype.start = function() {
this.updateView();
};
t.prototype.onEnable = function() {
this.isTouch = !1;
};
t.prototype.onTouchStart = function() {
this.isTouch = !0;
};
t.prototype.onTouchMove = function() {};
t.prototype.onTouchEnd = function() {
this.isTouch = !1;
};
t.prototype.initView = function() {};
t.prototype.updateView = function() {
this.showItemList = [];
for (var e = 0, t = this.node.getComponentsInChildren(n.default); e < t.length; e++) {
(a = t[e]).carouselCpt = this;
if (a.isOpen) {
a.node.active = !0;
this.showItemList.push(a);
} else a.node.active = !1;
}
this.showItemList.sort(function(e, t) {
return e.ord - t.ord;
});
this.indicatorCpt && this.indicatorCpt.initPage(this.showItemList.length);
this.indexItem = this.showItemList[0];
this.nextItem = this.showItemList[1];
for (var i = 0; i < this.showItemList.length; i++) {
var a;
(a = this.showItemList[i]).node.x = 0 == i ? 0 : this.node.width;
}
this.curIdx = 0;
};
t.prototype.onToNext = function() {
var e = this;
if (!this.isTouch && this.nextItem && this.nextItem.node) {
this.indexItem.node.x = 0;
this.nextItem.node.x = this.node.width;
cc.tween(this.indexItem.node).to(.4, {
x: -this.node.width
}).start();
cc.tween(this.nextItem.node).to(.4, {
x: 0
}).call(function() {
e.curIdx = e.showItemList.indexOf(e.nextItem);
e.indexItem = e.nextItem;
var t = e.showItemList.indexOf(e.nextItem) + 1;
e.showItemList[t] ? e.nextItem = e.showItemList[t] : e.nextItem = e.showItemList[0];
}).start();
}
};
__decorate([ s ], t.prototype, "time", void 0);
__decorate([ s(a.default) ], t.prototype, "indicatorCpt", void 0);
return __decorate([ c ], t);
}(cc.Component);
i.default = r;
cc._RF.pop();
}, {
"./CarouselIndicatorCpt": "CarouselIndicatorCpt",
"./CarouselItemCpt": "CarouselItemCpt"
} ],
CarouselIndicatorCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2dbbbzTbM5BBqfo9BjgkNkI", "CarouselIndicatorCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.item = null;
t.itemList = [];
return t;
}
t.prototype.onLoad = function() {};
t.prototype.initPage = function(e) {
for (var t = 0; t < e; t++) if (this.itemList[t]) ; else {
var i = cc.instantiate(this.item);
i.parent = this.node;
i.active = !0;
this.itemList.push(i);
}
};
t.prototype.showPage = function(e) {
this.node.active = this.itemList.length >= 2;
this.itemList.forEach(function(t, i) {
cc.find("select", t).active = i == e;
});
};
__decorate([ o(cc.Node) ], t.prototype, "item", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
CarouselItemCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "95ed99hxYZH34pXViEuqCKP", "CarouselItemCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.carouselCpt = null;
t.reportKey = "";
t._isOpen = !0;
t.ord = 0;
return t;
}
Object.defineProperty(t.prototype, "isOpen", {
get: function() {
return this._isOpen;
},
set: function(e) {
this._isOpen = e;
this.carouselCpt && this.carouselCpt.updateView();
},
enumerable: !1,
configurable: !0
});
__decorate([ o ], t.prototype, "reportKey", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
ChangeLanguageScene: [ function(e, t) {
"use strict";
cc._RF.push(t, "dca5f3P2pdAqbsuSQoBscKO", "ChangeLanguageScene");
cc.Class({
extends: cc.Component,
properties: {},
start: function() {
cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.HALL);
}
});
cc._RF.pop();
}, {} ],
ChangeUserCountryCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "1191aE6EAlLLpb290pdwd47", "ChangeUserCountryCmp");
cc.Class({
extends: cc.Component,
properties: {
list: e("ListView")
},
onLoad: function() {
this.node.addComponent("EventListenerCmp").registerEvent("USER_INFO_CHANGE", this.USER_INFO_CHANGE, this);
this.list.numItems = cc.vv.UserConfig.countryConfig.length;
},
init: function() {},
onRenderItem: function(e, t) {
var i = cc.vv.UserConfig.countryConfig[t];
cc.vv.UserConfig.setCountryFrame(cc.find("country/mask/icon", e).getComponent(cc.Sprite), t);
cc.find("country/gou", e).active = i.id == cc.vv.UserManager.country;
},
onClickItem: function(e) {
var t = cc.vv.UserConfig.countryConfig[e.currentTarget._listId];
cc.vv.NetManager.send({
c: MsgId.UPDATE_USER_INFO,
country: t.id
});
},
USER_INFO_CHANGE: function() {
this.list.numItems = cc.vv.UserConfig.countryConfig.length;
}
});
cc._RF.pop();
}, {
ListView: "ListView"
} ],
ChangeUserGenderCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "92445XIyt1EDY7iStC6A13x", "ChangeUserGenderCmp");
cc.Class({
extends: cc.Component,
properties: {
toggleContainer: cc.ToggleContainer,
button: cc.Button
},
onLoad: function() {
this.node.addComponent("NetListenerCmp").registerMsg(MsgId.UPDATE_USER_INFO, this.UPDATE_USER_INFO, this);
this.button.node.on("click", this.onClickSave, this);
this.button.getComponent("ButtonGrayCmp").interactable = !0;
},
init: function(e) {
this.sex = e.sex;
this.updateToggleContainer(e.sex);
},
updateToggleContainer: function(e) {
this.toggleContainer.toggleItems[e].isChecked = !0;
},
onChange: function(e) {
var t = this.toggleContainer.toggleItems.indexOf(e);
cc.vv.NetManager.send({
c: MsgId.UPDATE_USER_INFO,
gender: t
});
StatisticsMgr.reqReport(ReportConfig.USERINFO_CHANGE_SEX);
},
onClickSave: function() {
cc.vv.PopupManager.removePopup(this.node);
},
UPDATE_USER_INFO: function(e) {
e.code;
}
});
cc._RF.pop();
}, {} ],
ChangeUserHead: [ function(e, t) {
"use strict";
cc._RF.push(t, "321abZe2B9IE5P6XjxEVacf", "ChangeUserHead");
cc.Class({
extends: cc.Component,
properties: {
headCmp: e("HeadCmp"),
headList: e("List")
},
onLoad: function() {
this.count = 0;
var e = this.node.addComponent("EventListenerCmp");
cc.find("btn_upload", this.node).on("click", this.onClickUploadHead, this);
e.registerEvent("USER_INFO_CHANGE", this.USER_INFO_CHANGE, this);
e.registerEvent(EventId.FB_BIND_SUCCESS, this.FB_BIND_SUCCESS, this);
this.headConfig = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ];
cc.vv.UserManager.isbindfb > 0 && cc.vv.UserManager.fbicon && this.headConfig.unshift(cc.vv.UserManager.fbicon);
this.headList.numItems = this.headConfig.length;
this.headCmp.setHead(cc.vv.UserManager.uid, cc.vv.UserManager.userIcon, !0);
this.headCmp.setAvatarFrame(cc.vv.UserManager.avatarframe);
this.updateBindView();
},
init: function() {},
onRenderHeadItem: function(e, t) {
var i = this.headConfig[t], n = cc.find("radio_mask/spr_head", e).getComponent(cc.Sprite);
if (this.isRealNum(i)) cc.vv.UserConfig.setHeadFrame(n, i); else if (i && i.indexOf("http") > -1) {
n._reqHandle && n._reqHandle.rejectFunc();
n._reqHandle = cc.vv.ResManager.loadImage(i, function(e, t) {
cc.isValid(n) && t && (n.spriteFrame = new cc.SpriteFrame(t));
n._reqHandle = null;
});
}
cc.find("select", e).active = cc.vv.UserManager.userIcon == this.headConfig[t];
},
onClickUploadHead: function() {
this.onClickUp();
},
onSelectHeadItem: function(e) {
var t = e.currentTarget._listId, i = this.headConfig[t];
this.headCmp.setHead(cc.vv.UserManager.uid, i, !0);
cc.vv.NetManager.send({
c: MsgId.UPDATE_USER_INFO,
usericon: this.headConfig[t]
});
StatisticsMgr.reqReport(ReportConfig.USERINFO_CHANGE_HEAD_DEFAULT, this.headConfig[t]);
},
USER_INFO_CHANGE: function() {
this.headList.numItems = this.headConfig.length;
},
isRealNum: function(e) {
return "" !== e && null != e && !isNaN(e);
},
onClickUp: function() {
var e = this, t = cc.vv.UserManager.lastChangeUHTime, i = new Date().getTime();
t && i - t < 3e5 ? cc.vv.FloatTip.show("Please try again in five minutes") : Global.isNative() && cc.vv.PlatformApiMgr.OpenTakephoto(JSON.stringify({
width: 200,
height: 200,
size: 1e6,
from: 0,
crop: 1
}), function(t) {
var i = t.result, n = t.data;
if (1 == Number(i)) {
var a = n;
cc.sys.isNative && jsb && (a = "data:image/png;base64," + n);
cc.vv.NetManager.requestHttp("/", {
uid: cc.vv.UserManager.uid,
img: a
}, function(t, i) {
if (t) if (200 == i.code) {
e.headCmp.setHead(cc.vv.UserManager.uid, i.url, !0);
cc.vv.NetManager.send({
c: MsgId.UPDATE_USER_INFO,
usericon: i.url
});
StatisticsMgr.reqReport(ReportConfig.USERINFO_CHANGE_HEAD);
} else 500 == i.code ? cc.vv.FloatTip.show(___("上传失败")) : 501 == i.code ? cc.vv.FloatTip.show(___("用户不在线")) : 502 == i.code && cc.vv.FloatTip.show(___("图片格式错误"));
}, cc.vv.UserManager.uploadlink, "POST", !0, 15e3);
cc.vv.UserManager.lastChangeUHTime = new Date().getTime();
} else -1 == i ? cc.vv.FloatTip.show(___("取消选择图片")) : cc.vv.FloatTip.show(___("选择图片失败"));
});
},
onFbBind: function() {
if (Global.isNative()) {
StatisticsMgr.reqReport(ReportConfig.SETTING_BIND_FB);
cc.vv.PlatformApiMgr.fbLogin(function(e) {
AppLog.log("=======LMSlots--FbAuth=========:  " + JSON.stringify(e));
if (1 == parseInt(e.result)) {
var t = {
c: MsgId.REQ_BIND_FACEBOOK,
accesstoken: e.token,
token: e.token,
user: e.uid,
type: Global.LoginType.FB
};
cc.vv.NetManager.send(t);
} else cc.vv.FloatTip.show(___("FB账号绑定失败!"));
});
}
},
onAppleBind: function() {
Global.isNative() && cc.vv.PlatformApiMgr.startAppleLogin(function(e) {
AppLog.log("=======LMSlots--AppleSignIn=========:  " + JSON.stringify(e));
if (parseInt(e.code)) {
var t = {
c: MsgId.REQ_BIND_FACEBOOK,
accesstoken: e.authorizationCode,
token: e.identityToken,
user: e.user,
type: Global.LoginType.APPLE_LOGIN
};
cc.vv.NetManager.send(t);
} else cc.vv.FloatTip.show(___("Apple账号绑定失败"));
});
},
FB_BIND_SUCCESS: function(e) {
if ((e.detail || {}).type == Global.LoginType.FB) {
this.headCmp.setHead(cc.vv.UserManager.uid, cc.vv.UserManager.fbicon, !0);
cc.vv.NetManager.send({
c: MsgId.UPDATE_USER_INFO,
usericon: cc.vv.UserManager.fbicon
});
}
this.headConfig[1] = cc.vv.UserManager.fbicon;
this.headList.numItems = this.headConfig.length;
this.updateBindView();
},
updateBindView: function() {}
});
cc._RF.pop();
}, {
HeadCmp: "HeadCmp",
List: "List"
} ],
ChangeUserIntroductionCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "85271BDuihOS6Xx9qLOEE3b", "ChangeUserIntroductionCmp");
cc.Class({
extends: cc.Component,
properties: {
inputEdit: cc.EditBox,
button: cc.Button,
numberLabel: cc.Label
},
onLoad: function() {
this.node.addComponent("NetListenerCmp").registerMsg(MsgId.UPDATE_USER_INFO, this.UPDATE_USER_INFO, this);
this.button.getComponent("ButtonGrayCmp").interactable = !1;
this.button.node.on("click", this.onClickSave, this);
this.numberLabel.string = "0/" + this.inputEdit.maxLength;
},
init: function(e) {
if (e.memo) {
this.inputEdit.string = e.memo;
this.numberLabel.string = e.memo.length + "/" + this.inputEdit.maxLength;
}
},
onChangeText: function(e, t) {
this.button.getComponent("ButtonGrayCmp").interactable = e.length > 0;
this.numberLabel.string = e.length + "/" + t.maxLength;
},
onClickSave: function() {
cc.vv.NetManager.send({
c: MsgId.UPDATE_USER_INFO,
introduction: this.inputEdit.string
});
StatisticsMgr.reqReport(ReportConfig.USERINFO_CHANGE_MEMO);
},
UPDATE_USER_INFO: function(e) {
200 == e.code && cc.vv.PopupManager.removePopup(this.node);
}
});
cc._RF.pop();
}, {} ],
ChangeUserNameCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "dfd363s6oJCeLGzb14Kt1qx", "ChangeUserNameCmp");
cc.Class({
extends: cc.Component,
properties: {
inputEdit: cc.EditBox,
button: cc.Button
},
onLoad: function() {
this.node.addComponent("NetListenerCmp").registerMsg(MsgId.UPDATE_USER_INFO, this.UPDATE_USER_INFO, this);
this.button.getComponent("ButtonGrayCmp").interactable = !1;
this.button.node.on("click", this.onClickSave, this);
},
init: function(e) {
this.inputEdit.string = e.playername;
},
onChangeText: function(e) {
for (var t = e.trim(), i = t.split(""), n = [], a = 0; a < i.length; a++) {
var o = i[a].charCodeAt(0);
o > 127 && o < 2304 || o > 2431 || n.push(i[a]);
}
t = n.join("");
this.inputEdit.string = t;
this.button.getComponent("ButtonGrayCmp").interactable = t.length > 0;
},
onClickSave: function() {
cc.vv.NetManager.send({
c: MsgId.UPDATE_USER_INFO,
nickname: this.inputEdit.string.trim()
});
StatisticsMgr.reqReport(ReportConfig.USERINFO_CHANGE_NAME);
},
UPDATE_USER_INFO: function(e) {
200 == e.code && cc.vv.PopupManager.removePopup(this.node);
}
});
cc._RF.pop();
}, {} ],
ChineseCfg: [ function(e, t) {
"use strict";
cc._RF.push(t, "fc0d0TNAkVC2YcAeVzRUmF+", "ChineseCfg");
t.exports = {
loggin_in: "正在登录中...",
network_connecting: "网络连接中...",
new_ver: "发现新版本，请点击更新按钮将游戏更新到最新的版本",
kick_out_game: "由于长时间未操作，您已被踢出游戏！",
go_back_login: "请重新登陆！",
cannot_entergame: "无法进入%s游戏,因为%s游戏还没有下载!",
dissolve_room: "系统强制解散房间",
acc_online: "当前账号已在线",
add_score_succ: "成功加了%s分",
app_restart: "发现新版本，请重启将游戏更新到最新的版本",
user_tick_notice: "您已被强制下线，如有疑问请联系管理员",
get_luckypack_tips: "你已经获得红包  去点击红包开启吧",
reconnect: "重连中...",
login_fail_again: "登录失败，请检查网络后再重新登录连接",
system_maintenance_tips: "系统维护期间无法登录",
not_enough_coins: "余额不足",
invalid_token: "自动登录已过期，请重新登录",
Purchasing: "购买中，请耐心等待...",
loading: "加载中，请稍后...",
network_error: "网络已断开，请检查你的网络"
};
cc._RF.pop();
}, {} ],
CommonStyle: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c70a5WTaBdF1qKpmheH4Zup", "CommonStyle");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.CommonStyle = void 0;
var n = function() {
function e() {}
e.prototype.fastShow = function(e, t) {
void 0 === t && (t = null);
e.active = !0;
e.scale = .9;
e.opacity = 1;
e.stopAllActions();
cc.tween(e).to(.1, {
opacity: 255,
scale: 1
}, {
easing: "backOut"
}).call(function() {
t && t();
}).start();
};
e.prototype.fastHide = function(e, t) {
void 0 === t && (t = null);
e.stopAllActions();
e.active && cc.tween(e).to(.1, {
opacity: 0,
scale: .9
}, {
easing: "backIn"
}).call(function() {
e.active = !1;
t && t();
}).start();
};
return e;
}();
i.CommonStyle = new n();
cc._RF.pop();
}, {} ],
DebugGameBtn: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bfcbcxN0ztI9Ld9UuQHPiPo", "DebugGameBtn");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = n.requireComponent, s = function(t) {
__extends(i, t);
function i() {
var e = null !== t && t.apply(this, arguments) || this;
e.gameid = 0;
e.userCount = 0;
e.chair = 5;
return e;
}
i.prototype.onLoad = function() {
var t = this;
this.node.on("click", function() {
for (var i = {
c: 43,
deskinfo: {
bet: 1e3,
gameid: t.gameid,
preWinners: [],
deskid: 581326,
mult: 1,
users: [],
isViewer: 0,
round: {
delayTime: 0,
pots: []
},
state: 1,
prize: 3600,
ssid: 1,
conf: {
shuffle: 1,
entry: 1e3,
voice: 0,
turntime: 0,
create_time: 1663146509,
score: 1e3,
private: 0,
round: 1,
roomtype: 6,
seat: 4
},
seat: t.chair,
owner: 11556,
delayTime: 6,
maxView: 20,
leagueInfo: {
stopTime: 3600,
isOpen: 1,
isSign: 0
},
open777: 1,
name: "game",
curround: 0,
isDestroy: !1,
curseat: 1,
views: [],
maxRound: 5,
betList: [ 500, 1e3 ],
potCoin: 0,
can_show: 1,
can_side_show: 0
},
gameid: t.gameid,
c_idx: 110,
code: 200
}, n = {
score: 0,
usericon: "1",
race_type: 0,
wincoinshow: 0,
round: {
cards: [],
needScore: -1,
score: 0,
tags: [],
dashCall: -1,
pass: -1,
isWin: 0
},
diamond: 100,
race_id: 0,
chatskin: "chat_000",
state: 1,
create_time: 1663144951,
levelexp: 0,
svip: 0,
isexit: 0,
resetTimes: 0,
autoTotalTime: 0,
luckBuff: !0,
isnew: 1,
rp: 0,
leavetime: 1663149596,
playername: "123",
winTimes: 0,
wincoin: 0,
coin: 25e3,
ssid: 1,
level: 1,
leaguelevel: 1,
auto: 0,
mic: 0,
settlewin: 0,
uid: 11556,
token: "006c91030f6f2bc4ac39748f72ad5fdf1aaIAAsPfHZnwjyyrw7g5MMulkMA2lwK0TEBbOLSUv9rd7Gyh/BVDi7id9dIgCfOAAAjesiYwQAAQAdqCFjAwAdqCFjAgAdqCFjBAAdqCFj",
avatarframe: "avatarframe_1000",
frontskin: "font_color_0",
offline: 0,
leagueexp: 0,
seatid: 1
}, a = 0; a < t.userCount; a++) {
var o = Global.deepClone(n);
o.uid = a + 1;
o.seatid = a + 1;
o.usericon = a + 1;
o.playername = "User" + a + 1;
o.mic = a % 2 == 0 ? 1 : 0;
i.deskinfo.users.push(o);
}
window.debug_game = !0;
if (293 == i.gameid) {
var c = e("Delphi_GameData");
cc.vv.gameData = new c();
cc.vv.gameData.init(i.deskinfo, i.gameid, 0);
cc.director.loadScene("Delphi");
} else if (291 == i.gameid) {
c = e("TeenPatti_GameData");
cc.vv.gameData = new c();
cc.vv.gameData.init(i.deskinfo, i.gameid, 0);
cc.director.loadScene("TeenPatti");
}
});
};
__decorate([ o ], i.prototype, "gameid", void 0);
__decorate([ o ], i.prototype, "userCount", void 0);
__decorate([ o ], i.prototype, "chair", void 0);
return __decorate([ a, c(cc.Button) ], i);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {
Delphi_GameData: void 0,
TeenPatti_GameData: void 0
} ],
DebugGameCmdBtn: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "16b78BkrAZE4ZEk/1ukXEvS", "DebugGameCmdBtn");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = n.requireComponent, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.cmd = "";
return t;
}
t.prototype.onLoad = function() {
var e = this;
this.node.on("click", function() {
cc.vv.EventManager.emit("DEBUG_GAME_CMD", e.cmd);
});
};
__decorate([ o ], t.prototype, "cmd", void 0);
return __decorate([ a, c(cc.Button) ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {} ],
DebugLaunch: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8b680ghaLpBPK8MbeQm26T+", "DebugLaunch");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = (n.property, function(t) {
__extends(i, t);
function i() {
return null !== t && t.apply(this, arguments) || this;
}
i.prototype.onLoad = function() {
this.debugLaunch();
};
i.prototype.debugLaunch = function() {
var t = cc;
t.vv = {};
t.vv.UserManager = {};
t.vv.NetManager = {};
t.vv.AudioManager = {};
e("AppLog");
e("GlobalVar");
e("MsgIdDef");
e("EventDef");
e("GlobalCfg");
e("GlobalFunc");
e("MsgIdConfig");
e("GlobalTools");
Global.isAndroid = function() {
return !(cc.sys.os != cc.sys.OS_ANDROID || !cc.sys.isNative || !jsb);
};
Global.isIOS = function() {
return !(cc.sys.os != cc.sys.OS_IOS || !cc.sys.isNative || !jsb);
};
Global.isSingle = function() {
return !1;
};
var i = e("TimerMgr");
i.init();
cc.vv.Timer = i;
var n = e("AudioManager");
n.init();
cc.vv.AudioManager = n;
cc.vv.EventManager = e("EventManager");
var a = e("NetManagerEx");
cc.vv.NetManager = a;
var o = e("PlatformApi");
o.init();
cc.vv.PlatformApiMgr = o;
var c = e("PopupManager");
c.init();
cc.vv.PopupManager = c;
e("StatisticsMgr");
StatisticsMgr.startReport();
var s = e("RedHitManager");
s.init();
cc.vv.RedHitManager = s;
cc.vv.BroadcastManager = e("../Broadcast/BroadcastManager").BroadcastManager;
cc.vv.BroadcastManager.broadcastPrefabPath = "BalootClient/BaseRes/prefabs/Broadcast";
cc.vv.BroadcastManager.giftAnimPrefabPath = "BalootClient/UserInfo/prefabs/PopupGiftAnim";
cc.vv.BroadcastManager.init();
cc.vv.i18nManager = e("../i18n/i18nManager").i18nManager;
cc.vv.i18nLangEnum = e("../i18n/i18nConst").i18nLangEnum;
cc.vv.ResManager = e("ResManager");
cc.vv.UserConfig = e("UserConfig");
var r = e("GameDataCfg");
cc.vv.GameDataCfg = r;
cc.vv.GameDataCfg.init();
e("GameInit").init();
var l = e("FloatTipEx");
cc.vv.FloatTip = new l();
var d = e("AlertViewMgr");
cc.vv.AlertView = new d();
cc.vv.AlertView.init("BalootClient/BaseRes/prefabs/poly99_AlterView");
var h = e("SceneMgr");
cc.vv.SceneMgr = h;
var _ = new cc.Node();
_.addComponent("subGameMgr");
cc.vv.SubGameUpdateNode = _;
cc.game.addPersistRootNode(_);
if (!cc.vv.GameManager) {
var p = e("GameManagerEx");
p.init();
cc.vv.GameManager = p;
}
var u = e("UserManagerEx");
u.init();
cc.vv.UserManager = u;
var f = e("JsonMgr");
cc.vv.JsonMgr = new f();
cc.vv.JsonMgr.Init();
var g = e("HeadManager");
g.init();
cc.vv.HeadManager = g;
cc.vv.Data = {};
cc.vv.FloatTip.init("BalootClient/BaseRes/prefabs/poly99_FloatTip");
this.loadLoadingTip();
AppLog.ShowScreen("加载代码完成");
if (!cc.vv.NetCacheMgr) {
var m = e("PH_NetCacheMgr");
cc.vv.NetCacheMgr = new m();
cc.vv.NetCacheMgr.init();
}
cc.vv.UserManager.uid = 1;
cc.vv.NetManager.send = function() {};
cc.vv.NetManager.reconnect = function() {};
};
i.prototype.loadLoadingTip = function() {
var e = function(e, t) {
if (null == e) {
var i = cc.instantiate(t);
cc.game.addPersistRootNode(i);
} else AppLog.err("prefab(BalootClient/BaseRes/prefabs/poly99_LoadingTip) load error");
};
cc.loader.loadRes("BalootClient/BaseRes/prefabs/poly99_LoadingTip", cc.Prefab, function(t, i) {
e(t, i);
});
};
return __decorate([ a ], i);
}(cc.Component));
i.default = o;
cc._RF.pop();
}, {
"../Broadcast/BroadcastManager": "BroadcastManager",
"../i18n/i18nConst": "i18nConst",
"../i18n/i18nManager": "i18nManager",
AlertViewMgr: "AlertViewMgr",
AppLog: "AppLog",
AudioManager: "AudioManager",
EventDef: "EventDef",
EventManager: "EventManager",
FloatTipEx: "FloatTipEx",
GameDataCfg: "GameDataCfg",
GameInit: "GameInit",
GameManagerEx: "GameManagerEx",
GlobalCfg: "GlobalCfg",
GlobalFunc: "GlobalFunc",
GlobalTools: "GlobalTools",
GlobalVar: "GlobalVar",
HeadManager: "HeadManager",
JsonMgr: "JsonMgr",
MsgIdConfig: "MsgIdConfig",
MsgIdDef: "MsgIdDef",
NetManagerEx: "NetManagerEx",
PH_NetCacheMgr: "PH_NetCacheMgr",
PlatformApi: "PlatformApi",
PopupManager: "PopupManager",
RedHitManager: "RedHitManager",
ResManager: "ResManager",
SceneMgr: "SceneMgr",
StatisticsMgr: "StatisticsMgr",
TimerMgr: "TimerMgr",
UserConfig: "UserConfig",
UserManagerEx: "UserManagerEx"
} ],
DebugPanel: [ function(require, module, exports) {
"use strict";
cc._RF.push(module, "2e7248CP1FDOYMXVbGoJMXf", "DebugPanel");
Object.defineProperty(exports, "__esModule", {
value: !0
});
var CDButtonProxy_1 = require("../../BalootClient/game_common/common_cmp/CDButtonProxy"), _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, DebugPanel = function(_super) {
__extends(DebugPanel, _super);
function DebugPanel() {
var e = null !== _super && _super.apply(this, arguments) || this;
e.panel = null;
e.sv = null;
e.content_item = null;
e.editBox = null;
e.btn_clean = null;
e.btn_exe = null;
e.btn_switch = null;
return e;
}
DebugPanel.prototype.onLoad = function() {
var e = this;
this.btn_switch.node.on("toggle", function() {
e.panel.active = e.btn_switch.isChecked;
});
this.btn_clean.addClickHandler(function() {
e.clean();
});
this.btn_exe.addClickHandler(function() {
e.exeCmd();
});
};
DebugPanel.prototype.start = function() {
var e = cc.vv.PopupManager;
e.maskLayer && (e.maskLayer.active = !1);
e.touchLayer && (e.touchLayer.active = !1);
};
DebugPanel.prototype.exeCmd = function() {
var cmdStr = this.editBox.string.trim();
if (cmdStr) if ("close" != cmdStr) if ("clean" != cmdStr) try {
var exeResult = eval(cmdStr);
this.addAlog(exeResult);
} catch (e) {
this.addAlog(e.toString());
} else this.clean(); else this.close();
};
DebugPanel.prototype.addAlog = function(e) {
var t = "";
switch (typeof e) {
case "number":
case "string":
t = e.toString();
break;

case "object":
t = JSON.stringify(e);
}
var i = cc.instantiate(this.content_item);
i.active = !0;
i.parent = this.sv.content;
i.getComponent(cc.Label).string = t;
i.on(cc.Node.EventType.TOUCH_END, function() {
cc.vv.PlatformApiMgr.Copy();
cc.vv.FloatTip.show("消息复制成功");
});
};
DebugPanel.prototype.clean = function() {
this.sv.content.removeAllChildren();
};
DebugPanel.prototype.close = function() {
cc.vv.PopupManager.removePopup(this.node);
};
DebugPanel.PREFAB_PATH = "games/PokerBase/prefabs/debug_panel";
__decorate([ property(cc.Node) ], DebugPanel.prototype, "panel", void 0);
__decorate([ property(cc.ScrollView) ], DebugPanel.prototype, "sv", void 0);
__decorate([ property(cc.Node) ], DebugPanel.prototype, "content_item", void 0);
__decorate([ property(cc.EditBox) ], DebugPanel.prototype, "editBox", void 0);
__decorate([ property(CDButtonProxy_1.CDButtonProxy) ], DebugPanel.prototype, "btn_clean", void 0);
__decorate([ property(CDButtonProxy_1.CDButtonProxy) ], DebugPanel.prototype, "btn_exe", void 0);
__decorate([ property(cc.Toggle) ], DebugPanel.prototype, "btn_switch", void 0);
DebugPanel = __decorate([ ccclass ], DebugPanel);
return DebugPanel;
}(cc.Component);
exports.default = DebugPanel;
cc._RF.pop();
}, {
"../../BalootClient/game_common/common_cmp/CDButtonProxy": "CDButtonProxy"
} ],
DebugShow: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7e1d2Wx4xdP1bI1yS6lPkx7", "DebugShow");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
this.node.active && (this.node.active = !1);
};
return __decorate([ a ], t);
}(cc.Component));
i.default = o;
cc._RF.pop();
}, {} ],
DelayCmp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "384a3c6KLpGyarFjKOUEgPr", "DelayCmp");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = (n.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.abortFunc = [];
return t;
}
t.prototype.onLoad = function() {};
t.prototype.onDestroy = function() {
this.clear();
};
t.prototype.clear = function() {
for (var e = 0, t = this.abortFunc; e < t.length; e++) {
var i = t[e];
i && i();
}
this.abortFunc = [];
};
t.prototype.getPromise = function(e, t) {
var i;
return {
promise: new Promise(function(t, n) {
i = n;
e(t, n);
}),
abort: function() {
t && t();
i({
message: "the promise is aborted"
});
}
};
};
t.prototype.delay = function(e) {
var t = this, i = this.getPromise(function(i) {
t.scheduleOnce(function() {
i();
t.abortFunc = t.abortFunc.filter(function(e) {
return e != a;
});
}, e);
}), n = i.promise, a = i.abort;
this.abortFunc.push(a);
return n;
};
return __decorate([ a ], t);
}(cc.Component));
i.default = o;
cc._RF.pop();
}, {} ],
DeskFrameMap: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9e9b9uRbcBHhbmzKVF8EhVW", "DeskFrameMap");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.desk_000 = null;
t.desk_001 = null;
t.desk_002 = null;
t.desk_003 = null;
t.desk_004 = null;
t.desk_005 = null;
t.desk_006 = null;
t.desk_007 = null;
t.desk_008 = null;
return t;
}
__decorate([ o(cc.SpriteFrame) ], t.prototype, "desk_000", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "desk_001", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "desk_002", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "desk_003", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "desk_004", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "desk_005", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "desk_006", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "desk_007", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "desk_008", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
DeskLightCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d9954xbg6RNvqKxPx4wZCoG", "DeskLightCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.lightNode = null;
return t;
}
t.prototype.trunTo = function(e, t) {
void 0 === t && (t = .1);
this.lightNode.active = !0;
var i = 180 * cc.Vec3.UP.signAngle(e.sub(this.node.position)) / Math.PI;
if (t > 0) {
this.lightNode.stopAllActions();
cc.tween(this.lightNode).to(t, {
angle: i
}).start();
} else this.lightNode.angle = i;
};
t.prototype.close = function() {
this.lightNode.angle = 0;
this.lightNode.active = !1;
};
__decorate([ o(cc.Node) ], t.prototype, "lightNode", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
Desk_Table_code: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7721f7VbaZK/aogDiaXMxQb", "Desk_Table_code");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
Object.defineProperty(t.prototype, "deskid", {
get: function() {
return this._deskid;
},
set: function(e) {
this._deskid = e;
this.codeLbl.string = this._deskid + "";
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
this.copyBtn.node.on("click", this.onClickCopy, this);
};
t.prototype.onClickCopy = function() {
cc.vv.FloatTip.show(___("Copy successfully! invite your friends now!"));
cc.vv.PlatformApiMgr.Copy(this.deskid + "");
};
__decorate([ o(cc.Label) ], t.prototype, "codeLbl", void 0);
__decorate([ o(cc.Button) ], t.prototype, "copyBtn", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
DoubleWinCoins: [ function(e, t) {
"use strict";
cc._RF.push(t, "c2f651MXoVNl6+A60qaJsHu", "DoubleWinCoins");
cc.Class({
extends: cc.Component,
properties: {
_hided: !1,
_winCoin: 0,
_bigwinScript: null
},
onLoad: function() {
Global.onClick("layout/btn_share", this.node, this.onClickShare, this);
Global.onClick("layout/btn_bind", this.node, this.onClickBind, this);
Global.onClick("layout/btn_notify", this.node, this.onClickNotify, this);
Global.registerEvent(EventId.FB_BIND_SUCCESS, this.OnEventFbBindSuccess, this);
},
onDestroy: function() {
cc.vv.NetManager.unregisterMsg(MsgId.DOUBLE_WIN_COINS, this.onRcvDoubleWinCoins, !1, this);
},
show: function(e, t) {
this._winCoin = e;
this._bigwinScript = t;
if (cc.vv.UserManager.level < 5) return !1;
if ("0" == Global.getLocal("doublecoins_notify")) return !1;
if (cc.vv.Data.doublecoins_show) return !1;
if (Global.isIOSReview()) return !1;
if (!cc.vv.gameData) return !1;
if (Global.appId == Global.APPID.SouthAmerica || Global.appId == Global.APPID.HuaweiDRM) return !1;
cc.vv.Data.doublecoins_show = !0;
cc.vv.NetManager.registerMsg(MsgId.DOUBLE_WIN_COINS, this.onRcvDoubleWinCoins, this);
cc.vv.NetManager.send({
c: MsgId.DOUBLE_WIN_COINS,
rtype: 1,
winCoin: this._winCoin
});
return !0;
},
hide: function() {
this._hided = !0;
this.node.runAction(cc.fadeOut(.2));
},
sendGetCoin: function() {
cc.vv.NetManager.send({
c: MsgId.DOUBLE_WIN_COINS,
rtype: 2,
winCoin: this._winCoin,
gameid: cc.vv.gameData.getGameId()
});
},
onClickShare: function(e) {
var t = this;
e.node.getComponent(cc.Button).interactable = !1;
if (!this._hided) {
Global.isNative();
this._bigwinScript.setAutoClose(!1);
cc.vv.FBMgr.fbShareWeb("https://global.rummyslot.com/fb/index4.html", null, "Hey! Hey! Hey!\nI've got a Jackpot in Cash Hero-Casino Slots!\nWhat are you waiting for?", function(e) {
"1" == e.result && t.sendGetCoin();
});
}
},
onClickBind: function(e) {
e.node.getComponent(cc.Button).interactable = !1;
if (!this._hided && Global.isNative()) {
this._bigwinScript.setAutoClose(!1);
cc.vv.PlatformApiMgr.fbLogin(function(e) {
if (1 == parseInt(e.result)) {
var t = {
c: MsgId.REQ_BIND_FACEBOOK
};
t.accesstoken = e.token;
t.user = e.uid;
t.type = Global.LoginType.FB;
t.bigwin = 1;
cc.vv.NetManager.send(t);
} else cc.vv.FloatTip.show("FB Account Bind Failed!");
});
}
},
showCoinAnimation: function(e) {
var t = cc.find("coin_bg", this.node);
t.stopAllActions();
t.y = e;
t.runAction(cc.repeatForever(cc.sequence(cc.moveTo(1, 0, e + 20), cc.moveTo(1, 0, e))));
},
onRcvDoubleWinCoins: function(e) {
if (200 == e.code) {
if (2 == e.rtype) {
cc.find("layout", this.node).active = !1;
if (0 == e.spcode) {
cc.vv.gameData.AddCoin(e.winCoin, !0);
this._bigwinScript.showDoubleCoin();
this.showCoinAnimation(314);
}
} else if (1 == e.rtype && 0 == e.spcode) {
this.node.active = !0;
this._hided = !1;
cc.find("layout/btn_notify/check", this.node).active = !0;
cc.vv.UserManager.isBindFb();
cc.find("layout/btn_share", this.node).active = !0;
cc.find("layout/btn_bind", this.node).active = !1;
this.showCoinAnimation(64);
this.node.opacity = 0;
this.node.runAction(cc.sequence(cc.delayTime(2), cc.fadeIn(.25)));
}
} else this._bigwinScript.setAutoClose(!0);
},
OnEventFbBindSuccess: function() {
this.sendGetCoin();
},
onClickNotify: function() {
if (!this._hided) {
Global.playComEff("ch_btn_click");
var e = cc.find("layout/btn_notify/check", this.node);
e.active = !e.active;
e.active ? Global.saveLocal("doublecoins_notify", "1") : Global.saveLocal("doublecoins_notify", "0");
}
}
});
cc._RF.pop();
}, {} ],
DragObjCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "6616eGBuIRPtbZDOBYOGJyH", "DragObjCmp");
cc.Class({
extends: cc.Component,
properties: {
bCanOutScreen: {
default: !1,
tooltip: "是否允许拖动超出屏幕"
}
},
onEnable: function() {
this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnd, this);
},
onDisable: function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnd, this);
},
_onTouchMove: function(e) {
var t = e.getLocation();
if (this.bCanOutScreen) this.node.position = this.node.parent.convertToNodeSpaceAR(t); else {
var i = cc.winSize.width, n = cc.winSize.height, a = t, o = this.node.width, c = this.node.height;
a.x + o / 2 > i && (a.x = i - o / 2);
a.x - o / 2 < 0 && (a.x = o / 2);
a.y + c / 2 > n && (a.y = n - c / 2);
a.y - 2 * c / 2 < 0 && (a.y = 2 * c / 2);
this.node.position = this.node.parent.convertToNodeSpaceAR(a);
}
},
_onTouchEnd: function() {},
start: function() {}
});
cc._RF.pop();
}, {} ],
DropCoins: [ function(e, t) {
"use strict";
cc._RF.push(t, "3e978ao1iZMmIm1SxhQpl8B", "DropCoins");
cc.Class({
extends: cc.Component,
properties: {
coin_prefab: cc.Prefab,
autoPlay: !1
},
onLoad: function() {
this._coinPool = new cc.NodePool();
},
start: function() {
this.autoPlay && this.setPlay();
},
setPlay: function(e, t, i, n) {
void 0 === e && (e = 30);
void 0 === t && (t = 100);
void 0 === i && (i = 600);
this._totalNum = e;
this._endWidth = i;
this._startWidth = t;
this._maxHeight = cc.winSize.height;
n && (this._maxHeight = n);
this.node.active = !0;
this._bPlay = !0;
this._frameTime = 0;
},
stopPlay: function() {
this.node.active = !1;
this._bPlay = !1;
this._coinPool.clear();
},
onDestroy: function() {
this._coinPool.clear();
},
_generate: function() {
if (this._bPlay) {
var e = this._coinPool, t = null;
t = e.size() > 0 ? e.get() : cc.instantiate(this.coin_prefab);
this.node.addChild(t);
cc.winSize;
var i = Math.random(), n = -1;
i >= .5 && (n = 1);
t.scale = i;
var a = cc.v2(Math.random() * this._startWidth * n, 0), o = cc.v2(Math.random() * this._endWidth * n, -this._maxHeight / 2);
t.setPosition(a);
var c = (.2 + .4 * Math.random()) * this._maxHeight, s = 1 + Math.random();
t.stopAllActions();
t.runAction(cc.sequence(cc.spawn(cc.scaleTo(s, 1), cc.jumpTo(s, o, c, 1)), cc.callFunc(function(t) {
e.put(t);
})));
}
},
update: function(e) {
this._frameTime += e;
if (this._frameTime > 1 / this._totalNum) {
this._frameTime = 0;
this._generate();
}
}
});
cc._RF.pop();
}, {} ],
DurakGameList: [ function(e, t) {
"use strict";
cc._RF.push(t, "4fc9daF50dGF4UnDWLpBIjE", "DurakGameList");
cc.Class({
extends: cc.Component,
properties: {
gameBtnPrefab: cc.Prefab
},
onLoad: function() {
Global.isDurakApp() && this.showDurakGameList();
},
showDurakGameList: function() {
for (var e = cc.find("view/content/content", this.node), t = [ "btn_hall_game_265", "HallGameBtn", "btn_hall_game_poker" ], i = 0; i < t.length; i++) {
var n = cc.find(t[i], e);
n && (n.active = !1);
}
for (var a = [ 278, 277, 276, 275, 274 ], o = 0; o < a.length; o++) {
var c = cc.instantiate(this.gameBtnPrefab);
c.parent = e;
c.setSiblingIndex(0);
c.getComponent("RoomTypeBtn").gameid = a[o];
c.getComponent("RoomTypeBtn").updateView();
}
var s = cc.find("view/content/share", this.node);
s && (s.active = !1);
}
});
cc._RF.pop();
}, {} ],
EcsUtils: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a49bfDmryxM6pb8BcRYv3sh", "EcsUtils");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = [ {
len: 3,
mark: "K"
}, {
len: 6,
mark: "M"
}, {
len: 9,
mark: "B"
}, {
len: 12,
mark: "T"
} ], a = function() {
function e() {}
e.formatNumWithSymbol = function(e, t, i, n) {
void 0 === t && (t = ",");
void 0 === i && (i = !1);
void 0 === n && (n = 2);
if (!e) return e + "";
var a = "";
e < 0 && (a = "-");
for (var o = Math.abs(e), c = Math.floor(o), s = o - c, r = c + "", l = [], d = r.length - 1; d >= 0; d -= 3) l.unshift(r.slice(Math.max(0, d - 2), d + 1));
var h = "";
(i || s >= 1 / Math.pow(10, n)) && (h = s.toFixed(n).slice(1));
return a + l.join(t) + h;
};
e.formatBigNum = function(t, i, a) {
void 0 === i && (i = 5);
void 0 === a && (a = 2);
if ("number" != typeof t || 0 === t) return t + "";
var o = "";
t < 0 && (o = "-");
var c = Math.abs(t), s = Math.floor(c) + "";
if (s.length < i) return e.formatNumWithSymbol(t);
var r = null;
n.some(function(e) {
if (!(s.length > e.len)) return !0;
r = e;
return !1;
});
if (!r) return o + s;
var l = s.length - r.len, d = s.substring(0, l), h = s.substring(l, s.length), _ = new RegExp("[0]{" + h.length.toString() + "}", "g");
return h.length > 0 && !_.test(h) ? o + d + "." + (h = h.substring(0, Math.min(a, h.length))) + r.mark : o + d + r.mark;
};
e.randomBy = function(e, t, i) {
void 0 === e && (e = 0);
void 0 === t && (t = 1);
void 0 === i && (i = !0);
var n;
"number" == typeof e && "number" == typeof t ? n = Math.random() * (t - e + 1) + e : "number" == typeof e && (n = Math.random() * e + 1);
i && (n = Math.min(Math.max(Math.round(n), e), t));
return n;
};
e.merge = function(e, t, i, n) {
void 0 === i && (i = !1);
var a;
if (i) {
a = {};
for (var o in e) a[o] = e[o];
} else a = e;
for (var o in t) n && n(o, a[o], t[o]), a[o] = t[o];
return a;
};
e.randomColor = function() {
return cc.color(e.randomBy(0, 255), e.randomBy(0, 255), e.randomBy(0, 255));
};
e.randomCardUint = function() {
return 256 * e.randomBy(1, 4) + e.randomBy(2, 14);
};
e.getQueryVariable = function(e) {
for (var t = window.location.search.substring(1).split("&"), i = 0; i < t.length; i++) {
var n = t[i].split("=");
if (n[0] == e) return n[1];
}
};
e.prefixInteger = function(e, t) {
return (Array(t).join("0") + e).slice(-t);
};
e.formatDate = function(e, t) {
var i = new Date();
t && i.setTime(t);
var n = {
"M+": i.getMonth() + 1,
"d+": i.getDate(),
"h+": i.getHours(),
"m+": i.getMinutes(),
"s+": i.getSeconds(),
"q+": Math.floor((i.getMonth() + 3) / 3),
S: i.getMilliseconds()
};
/(y+)/.test(e) && (e = e.replace(RegExp.$1, (i.getFullYear() + "").substr(4 - RegExp.$1.length)));
for (var a in n) new RegExp("(" + a + ")").test(e) && (e = e.replace(RegExp.$1, 1 == RegExp.$1.length ? n[a] : ("00" + n[a]).substr(("" + n[a]).length)));
return e;
};
e.playSkeAnims = function(e, t, i, n) {
return __awaiter(this, void 0, void 0, function() {
return __generator(this, function() {
return [ 2, new Promise(function(a) {
var o = e.setAnimation(0, t, !1);
if (o) e.setTrackCompleteListener(o, function() {
n && n();
a();
i && e.setAnimation(0, i, !0);
}); else {
n && n();
a();
}
}) ];
});
});
};
e.getPromise = function(e, t) {
var i;
return {
promise: new Promise(function(t, n) {
i = n;
e(t, n);
}),
abort: function() {
t && t();
i({
message: "the promise is aborted"
});
}
};
};
e.formatString = function() {
for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
for (var i = e[0], n = 1; n < e.length; ++n) i = i.replace("{" + n + "}", e[n]);
return i;
};
e.limitScaleTo = function(e, t) {
var i = 1, n = 1;
t.w && (i = t.w / e.width);
t.h && (n = t.h / e.height);
var a = Math.min(i, n);
t.force ? e.scale = a : a < 1 && (e.scale = a);
};
e.getCardValue = function(e) {
return e > 255 ? e % 256 : (15 & e) % 16;
};
e.getCardVariety = function(e) {
return e > 255 ? Math.floor(e / 256) : (240 & e) / 16;
};
e.base64Encode = function(e) {
var t, i, n, a, o, c = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", s = 0, r = 0, l = "", d = [];
if (!e) return e;
e = unescape(encodeURIComponent(e));
do {
t = (o = e.charCodeAt(s++) << 16 | e.charCodeAt(s++) << 8 | e.charCodeAt(s++)) >> 18 & 63;
i = o >> 12 & 63;
n = o >> 6 & 63;
a = 63 & o;
d[r++] = c.charAt(t) + c.charAt(i) + c.charAt(n) + c.charAt(a);
} while (s < e.length);
l = d.join("");
var h = e.length % 3;
return (h ? l.slice(0, h - 3) : l) + "===".slice(h || 3);
};
e.deepClone = function(t) {
var i = Array.isArray(t), n = "[object Object]" === Object.prototype.toString.call(t);
if (i) {
for (var a = [], o = 0; o < t.length; o++) a[o] = e.deepClone(t[o]);
return a;
}
if (n) {
a = {};
for (var o in t) a[o] = e.deepClone(t[o]);
return a;
}
return t;
};
return e;
}();
i.default = a;
cc._RF.pop();
}, {} ],
EnglishCfg: [ function(e, t) {
"use strict";
cc._RF.push(t, "fe06amycXhMkqsKIfqxT74J", "EnglishCfg");
t.exports = {
loggin_in: "Logging in",
network_connecting: "Network is connecting",
new_ver: "For your better playing experience, please update to the latest version.",
kick_out_game: "Hanging up for a long time, has been automatically kicked out of the table!!",
go_back_login: "Please re-login",
cannot_entergame: "The game no download",
dissolve_room: " System forced to dissolve the room",
acc_online: "Current account is online",
add_score_succ: "Successfully added %s points",
app_restart: "Please restart to update the Game to the latest version",
user_tick_notice: "You have been forced offline, please contact the administrator.",
get_luckypack_tips: "You've got the red envelope  click the red envelope to open",
reconnect: "reconnecting...",
login_fail_again: "Login failed, please check the network and then log in again",
system_maintenance_tips: "Cash Hero is maintaining",
not_enough_coins: "Oops,you don't have enough coins!",
invalid_token: "The automatic login has expired. Please log in again",
Purchasing: "Purchasing...",
loading: "loading...",
network_error: "Network connection failed, please check the network"
};
cc._RF.pop();
}, {} ],
EventBtnCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "88ec83owo5IiaADG5xVoSlR", "EventBtnCmp");
cc.Class({
extends: cc.Component,
editor: {
menu: "通用/事件按钮",
requireComponent: cc.Button
},
properties: {
key: ""
},
onLoad: function() {
var e = this;
this.node.getComponent(cc.Button) && this.node.on("click", function() {
Global.dispatchEvent(e.key, e);
});
}
});
cc._RF.pop();
}, {} ],
EventDef: [ function(e, t) {
"use strict";
cc._RF.push(t, "76cfbWnrjxOI467NvAoYcaF", "EventDef");
var i = cc.Class({
extends: cc.Component,
statics: {
LOGIN_POP_UI: "NEXT_LOGIN_POP_UI",
NOT_ENOUGH_COIN_POP_UI: "NOT_ENOUGH_COIN_POP_UI",
NEXT_POP_UI: "NEXT_POP_UI",
NOT_ENOUGH_COINS: "not_enough_coins",
REFRESH_PLAYER_HEAD: "REFRESH_PLAYER_HEAD",
UPDATE_TASK_REDPOINT: "UPDATE_TASK_REDPOINT",
REFUSH_CH_MAIL_STATE: "REFUSH_CH_MAIL_STATE",
REMOVE_CH_MAIL_ITEM: "REMOVE_CH_MAIL_ITEM",
CHANGE_USER_HEAD: "CHANGE_USER_HEAD",
REFRESH_SHOP_COIN: "REFRESH_SHOP_COIN",
SYS_CHANGE_LANGUAGE: "SYS_CHANGE_LANGUAGE"
}
});
window.EventId = i;
cc._RF.pop();
}, {} ],
EventJump: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5a142LK5SBPFbnZjO6ekBJi", "EventJump");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.EventJump = void 0;
var n = cc._decorator, a = n.ccclass, o = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.setNodePosition = function(e) {
var t = e.convertToWorldSpaceAR(cc.v2(0, 0));
t = this.node.parent.convertToNodeSpaceAR(t);
this.node.x = t.x;
this.node.y = t.y;
cc.log("jump position", t);
this.scheduleOnce(function() {
cc.vv.PopupManager.removeTop();
}, 3);
};
return __decorate([ a ], t);
}(cc.Component));
i.EventJump = o;
cc._RF.pop();
}, {} ],
EventListenerCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "b3e911TWoZLh4Z19tO0/EBb", "EventListenerCmp");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.listenerList = [];
},
registerEvent: function(e, t, i) {
var n = {
eventName: e,
func: t,
obj: i
};
Global.registerEvent(n.eventName, n.func, n.obj);
this.listenerList.push(n);
},
clear: function() {
for (var e, t = cc.find("Canvas"), n = i(this.listenerList); !(e = n()).done; ) {
var a = e.value;
t && t.off(a.eventName, a.func, a.obj);
}
this.listenerList = [];
},
onDestroy: function() {
this.clear();
}
});
cc._RF.pop();
}, {} ],
EventManager: [ function(e, t) {
"use strict";
cc._RF.push(t, "0ff2bTm9f1KK6HvNRck4Y9j", "EventManager");
cc.Class({
extends: cc.Component,
statics: {
_listeners: null,
emit: function(e) {
this._listeners = this._listeners || {};
var t = [].slice.call(arguments, 1), i = this._listeners["$" + e];
if (i) for (var n = (i = i.slice(0)).length - 1; n >= 0; n--) i[n].tgt ? i[n].cb.apply(i[n].tgt, t) : i[n].cb.apply(t);
try {
cc.log("emit event (" + e + "): ", JSON.stringify(t));
} catch (e) {}
},
on: function(e, t, i) {
this._listeners = this._listeners || {};
var n = {
cb: t,
tgt: i
};
(this._listeners["$" + e] = this._listeners["$" + e] || []).push(n);
},
once: function(e, t) {
function i() {
this.off(e, i);
t.apply(targtet, arguments);
}
i.fn = t;
this.on(e, i);
},
off: function(e, t) {
this._listeners = this._listeners || {};
0 == arguments.length && (this._listeners = {});
var i = this._listeners["$" + e];
if (i) if (1 != arguments.length) {
for (var n, a = 0; a < i.length; a++) if ((n = i[a]).cb === t || n.cb.fn === t) {
i.splice(a, 1);
break;
}
} else delete this._listeners["$" + e];
}
}
});
cc._RF.pop();
}, {} ],
FBMgr: [ function(e, t) {
"use strict";
cc._RF.push(t, "7be3frQAJhJTpY5514eRYqZ", "FBMgr");
cc.Class({
extends: cc.Component,
statics: {
init: function() {
this.registerAllMsg();
},
registerAllMsg: function() {},
doSendShareAction: function() {
Global.getLocal("doShareAction");
},
fbShareImg: function(e, t) {
this._shareEndCall = t;
var i = {
shareType: 2
};
i.imagePath = e;
cc.vv.PlatformApiMgr.fbShare(JSON.stringify(i), this.shareResultCall.bind(this));
},
fbShareWeb: function(e, t, i, n) {
this._shareEndCall = n;
var a = {
shareType: 1
};
a.linkUrl = e;
t && (a.imgUrl = t);
i && (a.content = i);
cc.vv.PlatformApiMgr.fbShare(JSON.stringify(a), this.shareResultCall.bind(this));
},
fbShareWebEx: function(e, t, i) {
var n = "https://global.rummyslot.com/fb/?code=" + Global.playerData.uid;
this.fbShareWeb(n, e, t, i);
},
shareResultCall: function(e) {
if ("1" == e.result + "") {
cc.vv.FloatTip.show("Sharing success！");
Global.saveLocal("doShareAction", 1);
}
this._shareEndCall && this._shareEndCall(e);
},
FBFriendsInApp: function() {
cc.vv.PlatformApiMgr.FBFriendsInApp(this.FbFriendsCallback.bind(this));
},
FbFriendsCallback: function(e) {
cc.log("好友数据：" + e);
},
MessagerShare: function(e, t, i, n, a, o) {
var c = {};
c.title = e;
c.subtitle = t;
c.linkUrl = n;
c.imgUrl = a;
c.btnTitle = i;
c.fbPageId = "Your page ID";
c.shareWhere = 2;
this._shareEndCall = o;
cc.vv.PlatformApiMgr.fbShare(JSON.stringify(c), this.shareResultCall.bind(this));
},
WhatsappShare: function(e, t) {
this._shareEndCall = t;
var i = "https://wa.me/?text=" + encodeURI(e);
cc.vv.PlatformApiMgr.openURL(i);
},
deskInvite: function(e, t, i, n, a, o, c, s, r) {
void 0 === c && (c = null);
void 0 === s && (s = null);
void 0 === r && (r = null);
var l = "?roomid=" + (o || 0);
c || (c = "0");
l += "-" + c;
s || (s = "0");
var d = e + (l += "-" + s);
if (1 == i) this.fbShareWeb(d, t, a, r); else if (2 == i) this.MessagerShare(n, a, "Play Game", d, t, r); else if (3 == i) {
var h = cc.js.formatStr("%s #%s# %s", a, n, d);
this.WhatsappShare(h, r);
} else if (4 == i) {
var _ = {};
_.title = n;
_.content = d;
_.imgUrl = t;
cc.vv.PlatformApiMgr.systemShare(JSON.stringify(_));
}
}
}
});
cc._RF.pop();
}, {} ],
FeedbackBtn: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4aa23olJPpIOqXC9ft20Yfl", "FeedbackBtn");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
this.node.on("click", this.onClick, this);
};
t.prototype.onClick = function() {
cc.vv.PlatformApiMgr.openURL("https://wa.me/message/YK2DR45JCJBDO1");
};
return __decorate([ a ], t);
}(cc.Component));
i.default = o;
cc._RF.pop();
}, {} ],
FilterWordConfig: [ function(e, t) {
"use strict";
cc._RF.push(t, "45c5cFZ4h5I6r2hylEg06/c", "FilterWordConfig");
cc.Class({
extends: cc.Component,
statics: {
wordConfig: [],
_filterReg: void 0,
get filterReg() {
if (this._filterReg) return this._filterReg;
for (var e = "", t = 0; t < this.wordConfig.length; t++) {
var i = this.wordConfig[t];
0 == t && (e += "(\\b" + i + "\\b)");
e += "|(\\b" + i + "\\b)";
}
this._filterReg = new RegExp(e, "g");
return this._filterReg;
},
filter: function(e) {
return e;
}
}
});
cc._RF.pop();
}, {} ],
FishData: [ function(e, t) {
"use strict";
cc._RF.push(t, "89a940HdXdE+p7wIuCjkX2b", "FishData");
cc.Class({
extends: e("GameDataInterface"),
setEventId: function() {},
registerMsg: function() {},
unregisterMsg: function() {},
getRoomData: function() {
return this._deskInfo;
},
formatNumber: function(e) {
return "" + Math.floor(e);
},
update: function() {}
});
cc._RF.pop();
}, {
GameDataInterface: "GameDataInterface"
} ],
Fish_Animation: [ function(e, t) {
"use strict";
cc._RF.push(t, "1863ckvbEZDu71d+FHcE3xG", "Fish_Animation");
cc.Class({
extends: cc.Component,
properties: {
frames: [ cc.SpriteFrame ],
poses: [ cc.Vec2 ],
sample: 10
},
onLoad: function() {
this._time = 0;
this._frameIdx = 0;
this._interval = 1 / this.sample;
this._frameCount = this.frames.length;
this._sprite = this.node.getComponent(cc.Sprite);
},
update: function(e) {
this._time += e;
if (this._time >= this._interval) {
this._time -= this._interval;
this._frameIdx += 1;
this._frameIdx >= this._frameCount && (this._frameIdx = 0);
this._sprite.spriteFrame = this.frames[this._frameIdx];
this.node.position = this.poses[this._frameIdx];
}
}
});
cc._RF.pop();
}, {} ],
Fish_Bullet: [ function(e, t) {
"use strict";
cc._RF.push(t, "fb0370I6kxBdLWxK/QObYpB", "Fish_Bullet");
cc.Class({
extends: cc.Component,
properties: {
bulletAltas: {
default: null,
type: cc.SpriteAtlas
},
_bulletMgr: null,
_bulletid: 0,
_aid: 0,
_speed: 1e3,
_seat: 0,
_type: 0,
_multiple: 1,
_isMove: !0,
_lockFishId: -1,
_dx: 0,
_dy: 0
},
onLoad: function() {},
init: function(e, t) {
this._bulletMgr = e;
this._bulletid = t.bid;
this._aid = t.aid;
this._idx = t.idx;
this._seat = t.seat;
this._speed = t.speed;
this._type = t.type;
this._multiple = t.multiple;
var i = this.node.getComponent(cc.Sprite);
if (!i) {
var n = this.node.getChildByName("bg");
n && (i = n.getComponent(cc.Sprite));
}
i && (i.spriteFrame = this.bulletAltas.getSpriteFrame(t.spr));
this.node.position = this.node.parent.convertToNodeSpaceAR(t.pos);
this.node.angle = 180 * -t.angle / Math.PI;
this._dx = this._speed * Math.sin(-this.node.angle / 180 * Math.PI);
this._dy = this._speed * Math.cos(-this.node.angle / 180 * Math.PI);
this._isMove = !0;
this.node.active = !0;
this._lockFishId = t.lockId;
this.node.getComponent(cc.BoxCollider).enabled = !0;
},
onCollisionEnter: function(e, t) {
var i = t.node.getComponent("Fish_Bullet"), n = i._lockFishId, a = e.node._id;
if (n <= 0 || n == a) {
i.explode(a);
var o = e.node.getComponent("Fish_Fish");
o && o.onHit();
}
},
explode: function(e) {
this.node.active = !1;
this._isMove = !1;
this._bulletMgr.putBulletPool(this.node, this._type);
this._bulletMgr.explode(e, this._bulletid, this._aid, this._type, this.node.position, this._idx, this._lockFishId);
},
update: function(e) {
if (this._isMove) {
var t = this.node.position;
t.x += e * this._dx;
t.y += e * this._dy;
cc.winSize.width, cc.winSize.height;
var i = this.node.parent.width, n = this.node.parent.height, a = !0;
if (t.x < -i / 2) {
this.node.angle = -this.node.angle;
t.x = -i / 2;
} else if (t.x > i / 2) {
this.node.angle = -this.node.angle;
t.x = i / 2;
} else if (t.y < -n / 2) {
this.node.angle = -(180 + this.node.angle);
t.y = -n / 2;
} else if (t.y > n / 2) {
this.node.angle = -(180 + this.node.angle);
t.y = n / 2;
} else a = !1;
this.node.position = t;
if (a) {
this._dx = this._speed * Math.sin(-this.node.angle / 180 * Math.PI);
this._dy = this._speed * Math.cos(-this.node.angle / 180 * Math.PI);
this._lockFishId = -1;
}
}
}
});
cc._RF.pop();
}, {} ],
Fish_Chains: [ function(e, t) {
"use strict";
cc._RF.push(t, "11592TtdR1I17H6lckTnVpX", "Fish_Chains");
cc.Class({
extends: cc.Component,
properties: {
pAim: cc.Node,
sfArrow: cc.SpriteFrame,
_arrowList: []
},
onLoad: function() {
0 == this._arrowList.length && this.createArrow(20);
},
createArrow: function(e) {
for (var t = 0; t < e; t++) {
var i = new cc.Node();
i.addComponent(cc.Sprite).spriteFrame = this.sfArrow;
this.node.addChild(i);
this._arrowList.push(i);
}
},
setLength: function(e) {
this.pAim.y = e;
var t = Math.floor(e / 64) - 1;
t > this._arrowList.length && this.createArrow(t - this._arrowList.length);
for (var i = 0, n = this._arrowList.length; i < n; i++) {
var a = this._arrowList[i];
a.y = 64 * (i + 1);
a.active = i <= t;
}
}
});
cc._RF.pop();
}, {} ],
Fish_CoinSticks: [ function(e, t) {
"use strict";
cc._RF.push(t, "ee074WgabdC46k+DIswZOMj", "Fish_CoinSticks");
cc.Class({
extends: cc.Component,
properties: {
stickTemplate: cc.Node
},
onLoad: function() {
this._sticks_free = [];
this._sticks_using = [];
for (var e = 0; e < 5; e++) {
var t = cc.instantiate(this.stickTemplate);
this.node.addChild(t);
this._sticks_free.push(t);
}
},
addCoinStick: function(e, t) {
var i = this._sticks_free, n = this._sticks_using, a = i.pop();
if (a) {
n.push(a);
a.active = !0;
a.opacity = 255;
var o = a.getChildByName("score_bg");
o.getChildByName("score").getComponent(cc.Label).string = cc.vv.gameData.formatNumber(t);
o.active = !1;
e = Math.max(e, 3);
e = Math.min(e, 45);
var c = Math.max(.02 * e, .2), s = n.length;
a.position = cc.v2(28 * (3 - s), 0);
var r = 6 * e;
a.getComponent(cc.Animation).play("fish_coin_stick");
a.runAction(cc.sequence(cc.moveBy(c, cc.v2(0, r)), cc.callFunc(function(e) {
e.getChildByName("score_bg").active = !0;
e.getComponent(cc.Animation).stop();
}), cc.delayTime(1 - c), cc.fadeOut(.2), cc.callFunc(function() {
var e = n.shift();
e.active = !1;
i.push(e);
for (var t = 0; t < n.length; t++) n[t].x = 28 * (2 - t);
})));
}
},
update: function() {}
});
cc._RF.pop();
}, {} ],
Fish_FishArray: [ function(e, t) {
"use strict";
cc._RF.push(t, "99a5e8Bi1hAm4DgVHrOiIkc", "Fish_FishArray");
cc.Class({
extends: cc.Component,
loadRes: function(e, t, i, n, a, o, c) {
var s = this;
cc.loader.loadRes(e + "animation/" + c, cc.Prefab, function(i, c) {
if (i) cc.error("error:" + i); else {
var r = cc.instantiate(c);
s.node.addChild(r);
for (var l = 1; l <= 4; l++) {
var d = r.getChildByName("fish" + l);
if (!d) break;
s.loadFishRes(e, t, n, a, o, d);
}
}
});
},
loadFishRes: function(e, t, i, n, a, o) {
cc.loader.loadRes(e + "animation/" + t, cc.SpriteAtlas, function(e, t) {
if (!e) {
var c = function(e) {
return e < 10 ? "_00" + e : e < 100 ? "_0" + e : "_" + e;
}, s = new cc.Node(), r = s.addComponent(cc.Sprite);
r.trim = !1;
r.sizeMode = cc.Sprite.SizeMode.RAW;
o.addChild(s);
for (var l = s.addComponent(cc.Animation), d = [], h = a || 32, _ = 1; _ < h; _++) {
var p = t.getSpriteFrame(i + c(_));
if (!p) break;
d.push(p);
}
var u = cc.AnimationClip.createWithSpriteFrames(d, n);
u.name = i;
u.wrapMode = cc.WrapMode.Loop;
l.addClip(u);
l.play(i);
}
});
},
init: function() {},
getPos: function() {
return this.node.convertToWorldSpaceAR(cc.v2(0, 0));
}
});
cc._RF.pop();
}, {} ],
Fish_FishMgr: [ function(e, t) {
"use strict";
cc._RF.push(t, "08fa1OQxQ5GIbLYkDOECqC9", "Fish_FishMgr");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
cc.Class({
extends: cc.Component,
properties: {
_fishCfg: null,
_fishPools: null,
_fishNumber: 0,
_countdownTime: -1,
_fishLayer: null,
_fishTideLayer: null,
_fishMap: null,
_delayFishes: []
},
init: function(e) {
this._fishCfg = e;
this._fishMap = new Map();
this._fishPools = {};
for (var t in e.fishes) this._fishPools[t] = new cc.NodePool();
Global.registerEvent("put_fish_pool", this.putFishInPool, this);
},
onLoad: function() {
this._fishLayer = cc.find("fish_layer", this.node);
},
onDestroy: function() {
for (var e in this._fishPools) this._fishPools[e].clear();
},
fishCount: function() {
return this._fishMap.size;
},
seekFish: function(e) {
return this._fishMap.get(e);
},
seekBoss: function() {
for (var e, t = i(this._fishMap); !(e = t()).done; ) {
var n = e.value, a = (n[0], n[1]), o = a.getComponent("Fish_Fish");
if (o && o._fishTid >= 21 && o.isInScreen()) return a;
}
return null;
},
removeBosses: function() {
for (var e, t = [], n = i(this._fishMap); !(e = n()).done; ) {
var a = e.value, o = (a[0], a[1].getComponent("Fish_Fish"));
o && o._fishTid >= 21 && t.push(o);
}
for (var c = 0; c < t.length; c++) t[c].onDead();
},
removeAllFishes: function() {
for (var e, t = i(this._fishMap); !(e = t()).done; ) {
var n = e.value, a = (n[0], n[1].getComponent("Fish_Fish"));
if (a) {
a.node.stopAllActions();
this._fishPools[a._fishTid].put(a.node);
}
}
this._fishMap.clear();
},
removeFishesByTid: function(e) {
for (var t, n = [], a = i(this._fishMap); !(t = a()).done; ) {
var o = t.value, c = (o[0], o[1].getComponent("Fish_Fish"));
c && c._fishTid >= e && n.push(c);
}
for (var s = 0; s < n.length; s++) n[s].onDead();
},
driveAwayAllFishes: function() {
this._fishMap.forEach(function(e) {
var t = e.getComponent("Fish_Fish");
t && t.leave();
});
},
removeOvertimeFishes: function() {
for (var e, t = [], n = new Date().getTime(), a = i(this._fishMap); !(e = a()).done; ) {
var o = e.value, c = (o[0], o[1].getComponent("Fish_Fish"));
c && c.checkOverTime(n) && t.push(c);
}
for (var s = 0; s < t.length; s++) t[s].onDead();
},
onTouchFish: function(e) {
for (var t, n = i(this._fishMap); !(t = n()).done; ) {
var a = t.value, o = (a[0], a[1]), c = o.getComponent(cc.BoxCollider);
if (c && c.enabled) {
var s = c.size.width, r = c.size.height;
if (s > 0 || r > 0) {
var l = new cc.Rect(-s / 2, -r / 2, s, r), d = o.convertToNodeSpaceAR(e);
if (l.contains(d)) return o;
} else {
var h = o.getChildByName("objNode");
if (!h) return null;
for (var _ = h.children, p = 0, u = _.length; p < u; ++p) {
var f = _[p], g = f.getComponent(cc.BoxCollider);
if (g) {
var m = g.size.width, v = g.size.height, S = new cc.Rect(-m / 2, -v / 2, m, v), C = f.convertToNodeSpaceAR(e);
if (S.contains(C)) {
var b = o.getComponent("HWFish918_FishOctopus");
b && b.onTouchPart(p);
return o;
}
}
}
}
}
}
return null;
},
findLargestFish: function() {
var e = 0, t = null;
this._fishMap.forEach(function(i) {
var n = i.getComponent("Fish_Fish");
if (n && n.isInScreen() && e < n._fishTid) {
e = n._fishTid;
t = i;
}
});
return t;
},
findFishLargerThanType: function(e) {
for (var t, n = i(this._fishMap); !(t = n()).done; ) {
var a = t.value, o = (a[0], a[1]), c = o.getComponent("Fish_Fish");
if (c && c.isInScreen() && c._fishTid >= e) return o;
}
return null;
},
findFishByType: function(e) {
for (var t, n = i(this._fishMap); !(t = n()).done; ) {
var a = t.value, o = (a[0], a[1]), c = o.getComponent("Fish_Fish");
if (c && c.isInScreen() && c._fishTid == e) return o;
}
return null;
},
shuffle: function(e) {
for (var t = e.length, i = 0; i < t; i++) {
var n = Math.floor(Math.random() * t), a = e[i];
e[i] = e[n];
e[n] = a;
}
},
findFishIdInRange: function(e, t, i, n) {
var a = [];
e = cc.v2(e.x, e.y);
this._fishMap.forEach(function(i) {
var o = i.getComponent("Fish_Fish");
if (o && o._fishTid <= n && o.isInScreen()) {
var c = i.position;
e.sub(c).mag() <= t && a.push(o._fishId);
}
});
this.shuffle(a);
for (;a.length > i; ) a.pop();
return a;
},
findFishIdInRay: function(e, t, i, n, a) {
t.equals(cc.v2(0, 0)) && (t = cc.v2(1, 1));
var o = t.mag(), c = (e = cc.v2(e.x, e.y)).add(t.mul(1600 / o)), s = [];
this._fishMap.forEach(function(t) {
var n = t.getComponent("Fish_Fish");
if (n && n._fishTid <= a && n.isInScreen()) {
var o = t.position, r = c.sub(e), l = o.sub(e), d = o.sub(c);
(r.dot(l) < 0 ? l.mag() : r.dot(d) > 0 ? d.mag() : Math.abs(r.cross(l)) / r.mag()) <= i && s.push(n._fishId);
}
});
this.shuffle(s);
for (;s.length > n; ) s.pop();
return s;
},
findRandomFishId: function(e, t) {
var i = [];
this._fishMap.forEach(function(t) {
var n = t.getComponent("Fish_Fish");
n && n._fishTid <= e && n.isInScreen() && i.push(n._fishId);
});
this.shuffle(i);
for (;i.length > t; ) i.pop();
return i;
},
findFishIdByTid: function(e, t) {
var i = [];
this._fishMap.forEach(function(t) {
var n = t.getComponent("Fish_Fish");
n && n._fishTid == e && n.isInScreen() && i.push(n._fishId);
});
this.shuffle(i);
for (;i.length > t; ) i.pop();
return i;
},
stopMove: function(e) {
this._countdownTime = e;
this._fishMap.forEach(function(e) {
e.pauseAllActions();
});
},
putFishInPool: function(e) {
Global.dispatchEvent("fish_dead", e.detail.node);
this._fishPools[e.detail.tid].put(e.detail.node);
this._fishMap.delete(e.detail.fid);
},
createFish: function(e, t, i, n, a, o) {
if (!this._fishPools[e]) {
cc.log("unkown fish type id", e);
return null;
}
var c = this._fishCfg.fishes[e], s = null;
this._fishPools[e].size() > 0 ? s = this._fishPools[e].get() : (s = new cc.Node()).addComponent("Fish_Fish").create(e, c, this._fishCfg.res_path);
var r = 0;
a && (r = Math.max(a * c.speed / 25, a * c.speed * c.box.width / (cc.winSize.width + c.box.width)));
s.getComponent("Fish_Fish").init(t, i, n, r);
s.parent = o || this._fishLayer;
this._countdownTime > .1 && s.pauseAllActions();
this._fishMap.set(t, s);
return s;
},
start: function() {},
update: function(e) {
if (this._countdownTime > 0) {
this._countdownTime -= e;
this._countdownTime <= 0 && this._fishMap.forEach(function(e) {
e.resumeAllActions();
});
}
},
buildfishtide: function(e, t, i) {
this._delayFishes = [];
return 1 == e ? this.buildfishtide1(t, i) : 2 == e ? this.buildfishtide2(t, i) : 3 == e ? this.buildfishtide3(t, i) : 4 == e ? this.buildfishtide4(t, i) : 5 == e ? this.buildfishtide5(t, i) : 6 == e ? this.buildfishtide6(t, i) : 7 == e ? this.buildfishtide7(t, i) : 8 == e ? this.buildfishtide8(t, i) : 9 == e ? this.buildfishtide9(t, i) : 10 == e ? this.buildfishtide10(t, i) : 11 == e ? this.buildfishtide11(t, i) : 12 == e ? this.buildfishtide12(t, i) : 13 == e ? this.buildfishtide13(t, i) : 14 == e ? this.buildfishtide14(t, i) : 15 == e ? this.buildfishtide15(t, i) : 0;
},
buildfishtide1: function(e, t) {
var i = this;
function n() {
var n = new cc.Node();
n.addComponent("Fish_Recycle");
i.createFish(t.shift(), e.shift(), 0, [ cc.v2(200, 0) ], 0, n);
for (var a = 0; a < 3; a++) i.createFish(t.shift(), e.shift(), 0, [ cc.v2(650 + 200 * a, 0) ], 0, n);
for (var o = 0; o < 2; o++) for (var c = 0; c < 20; c++) {
var s = c / 20 * 2 * Math.PI, r = cc.v2(650 + 400 * o, 0);
i.createFish(t.shift(), e.shift(), 0, [ r.add(cc.v2(100 * Math.cos(s), 100 * Math.sin(s))) ], 0, n);
}
for (var l = 0; l < 7; l++) {
i.createFish(t.shift(), e.shift(), 0, [ cc.v2(520 + 100 * l, 192) ], 0, n);
i.createFish(t.shift(), e.shift(), 0, [ cc.v2(520 + 100 * l, -192) ], 0, n);
}
for (var d = 0; d < 3; d++) {
i.createFish(t.shift(), e.shift(), 0, [ cc.v2(720 + 100 * d, 128) ], 0, n);
i.createFish(t.shift(), e.shift(), 0, [ cc.v2(720 + 100 * d, -128) ], 0, n);
}
for (var h = n.children, _ = 0, p = h.length; _ < p; ++_) h[_].angle = -180;
n.parent = i._fishLayer;
n.x = 640;
n.runAction(cc.sequence(cc.moveBy(18, cc.v2(-2560, 0)), cc.callFunc(function(e) {
e.getComponent("Fish_Recycle").recycle();
})));
}
this.node.runAction(cc.sequence(cc.callFunc(function() {
n();
}), cc.delayTime(12), cc.callFunc(function() {
n();
})));
return 30;
},
buildfishtide2: function(e, t) {
var i = this;
function n(n, a, o, c, s) {
var r = new cc.Node();
r.position = a;
for (var l = 0; l < n; l++) {
var d = l / n * 2 * Math.PI, h = i.createFish(t.shift(), e.shift(), 0, [ cc.v2(o * Math.cos(d), o * Math.sin(d)) ], 0, r);
h.angle = -(90 - d * cc.macro.DEG + c);
h.runAction(cc.sequence(cc.hide(), cc.delayTime(5 * l / n), cc.show(), cc.delayTime(24), cc.callFunc(function(e) {
var t = e.getComponent("Fish_Fish");
t && t.onDead();
})));
}
r.addComponent("Fish_Recycle");
r.runAction(cc.sequence(cc.repeat(cc.rotateBy(5, s), 6), cc.callFunc(function(e) {
e.getComponent("Fish_Recycle").recycle();
})));
return r;
}
for (var a = 0; a < 2; a++) {
var o = cc.v2(600 * a - 300, 0);
i.createFish(t.shift(), e.shift(), 0, [ o ]).runAction(cc.sequence(cc.delayTime(28), cc.callFunc(function(e) {
e.getComponent("Fish_Fish").onDead();
})));
n(8, o, 120, 0, 360).parent = i._fishLayer;
n(12, o, 180, 180, -360).parent = i._fishLayer;
n(24, o, 230, 0, 360).parent = i._fishLayer;
}
return 29;
},
buildfishtide3: function(e, t) {
for (var i = 0; i < 6; i++) {
var n = this.createFish(t.shift(), e.shift(), 0, [ cc.v2(960, 0) ]);
n.runAction(cc.sequence(cc.delayTime(3 * i), cc.moveBy(10, cc.v2(-1920, 0)), cc.callFunc(function(e) {
e.getComponent("Fish_Fish").onDead();
})));
n.angle = -180;
}
var a = new cc.Node();
a.parent = this._fishLayer;
var o = new cc.Node();
o.parent = this._fishLayer;
for (var c = 0; c < 20; c++) for (var s = -1; s <= 1; s++) {
this.createFish(t.shift(), e.shift(), 0, [ cc.v2(128 * c, 216 * s) ], 0, a).angle = -180;
this.createFish(t.shift(), e.shift(), 0, [ cc.v2(380 * s, 72 * c) ], 0, o).angle = -90;
}
a.x = 640;
a.addComponent("Fish_Recycle");
a.runAction(cc.sequence(cc.moveBy(30, cc.v2(-3840, 0)), cc.callFunc(function(e) {
e.getComponent("Fish_Recycle").recycle();
})));
o.y = 360;
o.addComponent("Fish_Recycle");
o.runAction(cc.sequence(cc.moveBy(30, cc.v2(0, -2160)), cc.callFunc(function(e) {
e.getComponent("Fish_Recycle").recycle();
})));
return 30;
},
buildfishtide4: function(e, t) {
var i = new cc.Node();
i.parent = this._fishLayer;
i.x = -740;
i.addComponent("Fish_Recycle");
i.runAction(cc.sequence(cc.moveBy(5, cc.v2(340, 0)), cc.delayTime(22), cc.callFunc(function(e) {
e.getComponent("Fish_Recycle").recycle();
})));
this.createFish(t.shift(), e.shift(), 0, [ cc.v2(0, 0) ], 0, i);
this.createFish(t.shift(), e.shift(), 0, [ cc.v2(-160, 130) ], 0, i);
this.createFish(t.shift(), e.shift(), 0, [ cc.v2(-160, -130) ], 0, i);
var n = new cc.Node();
n.parent = this._fishLayer;
n.x = 740;
n.addComponent("Fish_Recycle");
n.runAction(cc.sequence(cc.moveBy(5, cc.v2(-340, 0)), cc.delayTime(22), cc.callFunc(function(e) {
e.getComponent("Fish_Recycle").recycle();
})));
this.createFish(t.shift(), e.shift(), 0, [ cc.v2(0, 0) ], 0, n).angle = -180;
this.createFish(t.shift(), e.shift(), 0, [ cc.v2(160, 130) ], 0, n).angle = -180;
this.createFish(t.shift(), e.shift(), 0, [ cc.v2(160, -130) ], 0, n).angle = -180;
var a = new cc.Node();
a.position = cc.v2(-640, -320);
a.parent = this._fishLayer;
var o = new cc.Node();
o.position = cc.v2(640, -320);
o.parent = this._fishLayer;
for (var c = 0; c < 30; c++) {
this.createFish(t.shift(), e.shift(), 0, [ cc.v2(160 * -c, 90 * -c) ], 0, a).angle = 30;
this.createFish(t.shift(), e.shift(), 0, [ cc.v2(160 * c, 90 * -c) ], 0, o).angle = 150;
}
a.addComponent("Fish_Recycle");
a.runAction(cc.sequence(cc.moveBy(30, cc.v2(6e3, 3375)), cc.callFunc(function(e) {
e.getComponent("Fish_Recycle").recycle();
})));
o.addComponent("Fish_Recycle");
o.runAction(cc.sequence(cc.moveBy(30, cc.v2(-6e3, 3375)), cc.callFunc(function(e) {
e.getComponent("Fish_Recycle").recycle();
})));
return 30;
},
buildfishtide5: function(e, t) {
var i = this;
function n() {
var n = new cc.Node();
n.addComponent("Fish_Recycle");
for (var a = 0; a < 6; a++) {
i.createFish(t.shift(), e.shift(), 0, [ cc.v2(80 * a, 50 * a) ], 0, n);
a > 0 && i.createFish(t.shift(), e.shift(), 0, [ cc.v2(80 * a, 50 * -a) ], 0, n);
}
for (var o = 0; o < 5; o++) i.createFish(t.shift(), e.shift(), 0, [ cc.v2(400, 160 - 80 * o) ], 0, n);
for (var c = 0; c < 6; c++) {
i.createFish(t.shift(), e.shift(), 0, [ cc.v2(500 + 70 * c, 40 * c) ], 0, n);
c > 0 && i.createFish(t.shift(), e.shift(), 0, [ cc.v2(500 + 70 * c, 40 * -c) ], 0, n);
}
for (var s = 0; s < 5; s++) i.createFish(t.shift(), e.shift(), 0, [ cc.v2(850, 140 - 70 * s) ], 0, n);
for (var r = 0; r < 4; r++) i.createFish(t.shift(), e.shift(), 0, [ cc.v2(1e3, 80 * (r - 1.5)) ], 0, n);
for (var l = n.children, d = 0, h = l.length; d < h; ++d) l[d].angle = -180;
n.parent = i._fishLayer;
n.x = 640;
n.runAction(cc.sequence(cc.moveBy(18, cc.v2(-2560, 0)), cc.callFunc(function(e) {
e.getComponent("Fish_Recycle").recycle();
})));
}
this.node.runAction(cc.sequence(cc.callFunc(function() {
n();
}), cc.delayTime(10), cc.callFunc(function() {
n();
})));
return 28;
},
buildfishtide6: function(e, t) {
function i(e) {
var t = new cc.Node();
t.position = e;
t.addComponent("Fish_Recycle");
t.runAction(cc.sequence(cc.rotateBy(30, 360), cc.callFunc(function(e) {
e.getComponent("Fish_Recycle").recycle();
})));
return t;
}
for (var n = 0; n < 2; n++) {
var a = i(cc.v2(600 * n - 300, 0));
a.parent = this._fishLayer;
for (var o = 0; o < 5; o++) for (var c = 0; c < 12; c++) {
var s = c / 12 * 2 * Math.PI, r = this.createFish(t.shift(), e.shift(), 0, [ cc.v2(0, 0) ], 0, a);
r.angle = s * cc.macro.DEG;
r.runAction(cc.sequence(cc.hide(), cc.delayTime(4 * o), cc.show(), cc.spawn(cc.moveBy(15, cc.v2(960 * Math.cos(s), 960 * Math.sin(s))), cc.rotateBy(15, 90))));
}
}
return 31;
},
buildfishtide7: function(e, t) {
var i = this;
function n() {
var n = new cc.Node();
n.position = cc.v2(860, 0);
n.parent = i._fishLayer;
n.addComponent("Fish_Recycle");
n.runAction(cc.sequence(cc.moveTo(15, cc.v2(-860, 0)), cc.callFunc(function(e) {
e.getComponent("Fish_Recycle").recycle();
})));
for (var a = 0; a < 15; a++) {
var o = a / 15 * 2 * Math.PI, c = cc.v2(220 * Math.cos(o), 220 * Math.sin(o));
i.createFish(t.shift(), e.shift(), 0, [ c ], 0, n).angle = -180;
}
}
for (var a = [], o = 0; o < 12; o++) {
a.push(cc.callFunc(function() {
n();
}));
a.push(cc.delayTime(1.85));
}
this.node.runAction(cc.sequence(a));
return 35;
},
buildfishtide8: function(e, t) {
var i = this;
function n(n, a, o) {
var c = new cc.Node();
c.position = a;
c.parent = i._fishLayer;
c.addComponent("Fish_Recycle");
c.runAction(cc.sequence(cc.moveTo(32, o), cc.callFunc(function(e) {
e.getComponent("Fish_Recycle").recycle();
})));
i.createFish(t.shift(), e.shift(), 0, [ cc.v2(0, 0) ], null, c).angle = -n;
for (var s = [ 18, 27, 36 ], r = [ 170, 230, 280 ], l = 0; l < 3; l++) for (var d = s[l], h = r[l], _ = 0; _ < d; _++) {
var p = _ / d * 2 * Math.PI, u = cc.v2(h * Math.cos(p), h * Math.sin(p));
i.createFish(t.shift(), e.shift(), 0, [ u ], null, c).angle = -n;
}
}
n(0, cc.v2(-cc.winSize.width / 2 - 300, 0), cc.v2(cc.winSize.width / 2 + 300, 0));
n(180, cc.v2(cc.winSize.width / 2 + 300, 0), cc.v2(-cc.winSize.width / 2 - 300, 0));
return 32;
},
buildfishtide9: function(e, t) {
var i = this, n = 0, a = [ 15, 12, 15, 12, 15, 12, 15, 12, 6, 3 ];
function o() {
var o = new cc.Node();
o.parent = i._fishLayer;
o.addComponent("Fish_Recycle");
o.runAction(cc.sequence(cc.delayTime(15), cc.callFunc(function(e) {
e.getComponent("Fish_Recycle").recycle();
})));
var c = a[n];
n += 1;
for (var s = 0; s < c; s++) {
var r = (s + (n % 2 == 0 ? 0 : .5)) / c * 2 * Math.PI, l = i.createFish(t.shift(), e.shift(), 0, [ cc.v2(0, 0) ], 0, o);
l.angle = r * cc.macro.DEG;
l.runAction(cc.moveBy(15, cc.v2(800 * Math.cos(r), 800 * Math.sin(r))));
}
}
for (var c = [], s = 0; s < a.length; s++) {
c.push(cc.callFunc(function() {
o();
}));
s == a.length - 2 ? c.push(cc.delayTime(2.5)) : c.push(cc.delayTime(2.2));
}
this.node.runAction(cc.sequence(c));
return 35;
},
buildfishtide10: function(e, t) {
var i = new cc.Node();
i.parent = this._fishLayer;
i.position = cc.v2(-cc.winSize.width / 2 - 150, 0);
i.addComponent("Fish_Recycle");
for (var n = [ cc.v2(140, 0), cc.v2(0, 100), cc.v2(0, -100), cc.v2(-140, -60), cc.v2(-140, 60) ], a = 0; a < 3; a++) for (var o = 0; o < 2; o++) {
var c = cc.v2(500 * -a, 300 * (o - .5));
this.createFish(t.shift(), e.shift(), 0, [ c ], 0, i);
for (var s = 0; s < 5; s++) this.createFish(t.shift(), e.shift(), 0, [ c.add(n[s]) ], 0, i);
}
this.createFish(t.shift(), e.shift(), 0, [ cc.v2(-1400, 150) ], 0, i);
this.createFish(t.shift(), e.shift(), 0, [ cc.v2(-1400, -150) ], 0, i);
this.createFish(t.shift(), e.shift(), 0, [ cc.v2(-1700, 0) ], 0, i);
i.runAction(cc.sequence(cc.moveBy(30, cc.v2(2e3 + cc.winSize.width, 0)), cc.callFunc(function(e) {
e.getComponent("Fish_Recycle").recycle();
})));
return 30;
},
buildfishtide11: function(e, t) {
var i = new cc.Node();
i.parent = this._fishLayer;
i.position = cc.v2(0, -cc.winSize.height / 2 - 100);
i.addComponent("Fish_Recycle");
i.runAction(cc.sequence(cc.moveBy(30, cc.v2(0, cc.winSize.height + 1450)), cc.callFunc(function(e) {
e.getComponent("Fish_Recycle").recycle();
})));
for (var n = 0; n < 5; n++) for (var a = 0; a < 5; a++) this.createFish(t.shift(), e.shift(), 0, [ cc.v2(240 * (a - 2), 220 * -n) ], 0, i).angle = 90;
this.createFish(t.shift(), e.shift(), 0, [ cc.v2(0, -1200) ], 0, i).angle = 90;
var o = new cc.Node();
o.parent = this._fishLayer;
o.position = cc.v2(0, cc.winSize.height / 2 + 100);
o.addComponent("Fish_Recycle");
o.runAction(cc.sequence(cc.moveBy(30, cc.v2(0, -cc.winSize.height - 1450)), cc.callFunc(function(e) {
e.getComponent("Fish_Recycle").recycle();
})));
for (var c = 0; c < 5; c++) for (var s = 0; s < 4; s++) this.createFish(t.shift(), e.shift(), 0, [ cc.v2(240 * (s - 1.5), 220 * c) ], 0, o).angle = -90;
this.createFish(t.shift(), e.shift(), 0, [ cc.v2(-240, 1200) ], 0, o).angle = -90;
this.createFish(t.shift(), e.shift(), 0, [ cc.v2(240, 1200) ], 0, o).angle = -90;
return 30;
},
buildfishtide12: function(e, t) {
var i = [ 0, 160, 320, 490, 660, 840, 1040, 1260 ], n = new cc.Node();
n.parent = this._fishLayer;
n.position = cc.v2(-cc.winSize.width / 2 - 100, 0);
n.addComponent("Fish_Recycle");
n.runAction(cc.sequence(cc.moveBy(30, cc.v2(cc.winSize.width + 1500, 0)), cc.callFunc(function(e) {
e.getComponent("Fish_Recycle").recycle();
})));
for (var a = 0; a < 8; a++) for (var o = 0; o < 4; o++) this.createFish(t.shift(), e.shift(), 0, [ cc.v2(-i[a], 160 * (o - 1.5)) ], 0, n);
var c = new cc.Node();
c.parent = this._fishLayer;
c.position = cc.v2(cc.winSize.width / 2 + 100, 0);
c.addComponent("Fish_Recycle");
c.runAction(cc.sequence(cc.moveBy(30, cc.v2(-cc.winSize.width - 1500, 0)), cc.callFunc(function(e) {
e.getComponent("Fish_Recycle").recycle();
})));
for (var s = 0; s < 8; s++) for (var r = 0; r < 3; r++) this.createFish(t.shift(), e.shift(), 0, [ cc.v2(i[s], 160 * (r - 1)) ], 0, c).angle = -180;
return 30;
},
buildfishtide13: function(e, t) {
var i = this;
function n(e, t, n, a, o, c) {
var s, r = i.createFish(e, t, 0, a);
s = 1 == n ? cc.moveTo(o, a[1]) : cc.cardinalSplineTo(o, a, 0);
r.angle = -180;
r.getComponent("Fish_Fish")._traceType = 2;
r.runAction(cc.sequence(cc.delayTime(c), s, cc.callFunc(function(e) {
e.getComponent("Fish_Fish").onComplete();
})));
return r;
}
for (var a = cc.winSize.width, o = cc.winSize.height, c = cc.v2(a / 2 + 96, 0), s = [ c, cc.v2(-a / 2 - 96, 0) ], r = [ c, cc.v2(0, o / 4 + 32), cc.v2(-a / 4, o / 2 + 64) ], l = [ c, cc.v2(0, -o / 4 - 32), cc.v2(-a / 4, -o / 2 - 64) ], d = 0; d < 3; d++) {
var h = 11 * d;
n(t.shift(), e.shift(), 1, s, 15, h + 0);
n(t.shift(), e.shift(), 2, r, 15, h + 2);
n(t.shift(), e.shift(), 2, l, 15, h + 2);
n(t.shift(), e.shift(), 2, r, 15, h + 4);
n(t.shift(), e.shift(), 2, l, 15, h + 4);
n(t.shift(), e.shift(), 2, r, 15, h + 6);
n(t.shift(), e.shift(), 2, l, 15, h + 6);
}
function _() {
for (var n = cc.v2(0, -cc.winSize.height / 2 - 32), a = cc.v2(0, cc.winSize.height / 2 + 32), o = [ [ n, a ], [ a, n ] ], c = [ -90, 90 ], s = 0; s < 2; s++) {
var r = new cc.Node();
r.parent = i._fishLayer;
r.addComponent("Fish_Recycle");
r.position = o[s][0];
r.runAction(cc.sequence(cc.moveTo(12, o[s][1]), cc.callFunc(function(e) {
e.getComponent("Fish_Recycle").recycle();
})));
for (var l = -cc.winSize.width / 2, d = cc.winSize.width / 29, h = 0; h < 30; h++) i.createFish(t.shift(), e.shift(), 0, [ cc.v2(l + d * h, 0) ], null, r).angle = -c[s];
}
}
for (var p = [], u = 0; u < 3; u++) {
p.push(cc.callFunc(function() {
_();
}));
u < 2 && p.push(cc.delayTime(15));
}
this.node.runAction(cc.sequence(p));
return 42;
},
buildfishtide14: function(e, t) {
var i = this, n = new cc.Node();
n.parent = this._fishLayer;
n.addComponent("Fish_Recycle");
n.runAction(cc.sequence(cc.delayTime(30), cc.callFunc(function(e) {
e.getComponent("Fish_Recycle").recycle();
})));
for (var a = cc.winSize.width, o = cc.winSize.height, c = [ cc.v2(-224, 0), cc.v2(224, 0) ], s = [ 0, 180 ], r = [ cc.v2(a / 2 + 128, 0), cc.v2(-a / 2 - 128) ], l = 0; l < 2; l++) {
var d = i.createFish(t.shift(), e.shift(), 0, [ c[l] ], null, n);
d.angle = -s[l];
d.runAction(cc.sequence(cc.delayTime(15), cc.moveTo(15, r[l])));
}
for (var h = 0; h < 10; h++) {
var _ = i.createFish(t.shift(), e.shift(), 0, [ cc.v2(0, 0) ], null, n);
if (h < 5) {
_.angle = 90;
_.position = cc.v2(100 * h - 200, 120);
_.runAction(cc.sequence(cc.delayTime(15), cc.moveBy(12, cc.v2(0, o / 2))));
} else {
_.angle = -90;
_.position = cc.v2(100 * (h - 5) - 200, -120);
_.runAction(cc.sequence(cc.delayTime(15), cc.moveBy(12, cc.v2(0, -o / 2))));
}
}
function p(a, o, c) {
for (var s = 0; s < o; s++) {
var r = s / o * 2 * Math.PI, l = cc.v2(a * Math.cos(r), a * Math.sin(r));
s <= o / 4 || s >= 3 * o / 4 ? l.x += 320 : l.x -= 320;
var d = i.createFish(t.shift(), e.shift(), 0, [ l ], null, n);
d.angle = r * cc.macro.DEG;
d.runAction(cc.sequence(cc.delayTime(15), cc.moveBy(12, cc.v2(256 * Math.cos(r), 256 * Math.sin(r)))));
}
for (var h = Math.floor(c / 2), _ = 640 / h, p = 0; p < 2; p++) for (var u = 0; u < h; u++) {
var f = cc.v2(.2 * _ - 320 + u * _, 0 == p ? a : -a), g = i.createFish(t.shift(), e.shift(), 0, [ f ], null, n);
if (0 == p) {
g.angle = 90;
g.runAction(cc.sequence(cc.delayTime(15), cc.moveBy(12, cc.v2(0, 256))));
} else {
g.angle = -90;
g.runAction(cc.sequence(cc.delayTime(15), cc.moveBy(12, cc.v2(0, -256))));
}
}
}
p(150, 32, 28);
p(200, 42, 38);
return 30;
},
buildfishtide15: function(e, t) {
var i = this;
function n(n, a, o) {
var c = new cc.Node();
c.position = a;
c.parent = i._fishLayer;
c.addComponent("Fish_Recycle");
c.runAction(cc.sequence(cc.delayTime(45), cc.callFunc(function(e) {
e.getComponent("Fish_Recycle").recycle();
})));
for (var s = [ 30, 24, 20, 18 ], r = [ 250, 200, 150, 100 ], l = 0; l < 4; l++) for (var d = s[l], h = r[l], _ = 0; _ < d; _++) {
var p = _ / d * 2 * Math.PI, u = cc.v2(h * Math.cos(p), h * Math.sin(p)), f = i.createFish(t.shift(), e.shift(), 0, [ u ], null, c);
f.angle = p * cc.macro.DEG + 90;
var g = p + Math.PI / 2;
f.runAction(cc.sequence(cc.delayTime(8 * (l + 1)), cc.moveBy(16, cc.v2(1024 * Math.cos(g), 1024 * Math.sin(g)))));
}
var m = i.createFish(t.shift(), e.shift(), 0, [ cc.v2(0, 0) ], null, c);
m.angle = -n;
m.runAction(cc.sequence(cc.delayTime(32), cc.moveTo(10, o)));
}
n(0, cc.v2(-cc.winSize.width / 4, 0), cc.v2(5 * cc.winSize.width / 4, 0));
n(180, cc.v2(cc.winSize.width / 4, 0), cc.v2(5 * -cc.winSize.width / 4, 0));
return 40;
}
});
cc._RF.pop();
}, {} ],
Fish_Fish: [ function(e, t) {
"use strict";
cc._RF.push(t, "b8841vAd21L0qi1cdG2A5uk", "Fish_Fish");
cc.Class({
extends: cc.Component,
properties: {
_com: "",
_objNode: null,
_fishId: 0,
_fishTid: 0,
_traceType: 1,
_trace: [],
_speed: 0,
_bornTime: 0,
_lifeTime: 0,
_lastPosition: cc.v2(0, 0),
_angle: 0,
_offset: cc.v2(0, 0),
_size: cc.v2(0, 0),
_hit_snd: "",
_hit_snd_time: 0,
_hit_anim: !1,
_hit_anim_time: 0,
_alive: !0,
_dieParam: null,
_visible: !1
},
onLoad: function() {
this._lastPosition = this.node.position;
},
create: function(e, t, i) {
this._fishTid = e;
this.node.group = "Fish";
this._com = t.com;
this._offset = cc.v2(-t.box.offsetx, -t.box.offsety);
this._size = cc.size(t.box.width, t.box.height);
this._speed = t.speed;
this._hit_snd = t.hit_snd;
this._hit_anim = t.hit_anim;
t.scale && this.node.setScale(t.scale);
this.node.addComponent(cc.BoxCollider).size = this._size;
if ("" != this._com) return this.node.addComponent(this._com).loadRes(i, t.file, t.form, t.anim, t.sample, t.fcnt, t.bg);
this.loadRes(i, t.file, t.form, t.anim, t.sample, t.fcnt, t.bg);
},
init: function(e, t, i, n) {
this.node._id = e;
this._fishId = e;
this._traceType = t;
n = n || 0;
this._alive = !0;
this._dieParam = null;
this._bornTime = new Date().getTime();
this._lifeTime = 1e3 * (this._speed + n);
this.node.getComponent(cc.BoxCollider).enabled = !0;
if (t > 0) {
var a = cc.v2(i[0].x, i[0].y), o = cc.v2(i[1].x, i[1].y);
this.node.position = a;
var c = this.calcDegree(a, o);
this.node.angle = -c;
var s = null;
if (1 == t) s = cc.moveTo(this._speed, o); else if (2 == t) {
var r = [ o, cc.v2(i[2].x, i[2].y), cc.v2(i[3].x, i[3].y) ];
s = cc.bezierTo(this._speed, r);
} else if (3 == t) {
for (var l = [], d = 0, h = i.length; d < h; d++) l.push(cc.v2(i[d].x, i[d].y));
this.node.position = l[0];
s = cc.repeat(cc.cardinalSplineTo(this._speed, l, 0), 7);
this._lifeTime = 7e3 * this._speed;
} else if (4 == t) {
for (var _ = a.sub(o).mag(), p = [], u = 0; u <= 16; u++) {
var f = u * Math.PI * .125 + 1.5 * Math.PI;
p.push(a.add(cc.v2(_ * Math.cos(f), _ * Math.sin(f))));
}
this.node.position = p[0];
s = cc.cardinalSplineTo(this._speed, p, 0);
} else if (5 == t) {
this.node.position = cc.v2(i[0].x, i[0].y);
for (var g = i.length - 1, m = [], v = 1; v <= g; v++) m.push(cc.moveTo(this._speed / g, cc.v2(i[v].x, i[v].y)));
s = cc.sequence(m);
}
s && (n > 0 ? this.node.runAction(cc.sequence(cc.delayTime(n), s, cc.callFunc(this.onComplete.bind(this)))) : this.node.runAction(cc.sequence(s, cc.callFunc(this.onComplete.bind(this)))));
} else {
this.node.position = cc.v2(i[0].x, i[0].y);
this.node.angle = -0;
this._lifeTime = 2e4;
}
if (this._objNode) {
this._objNode.color = cc.Color.WHITE;
this.setVisible(!0);
}
"" != this._com && this.node.getComponent(this._com).init(e);
this.node.active = !0;
},
loadRes: function(e, t, i, n, a, o, c) {
var s = this, r = this;
if (c) {
var l = e + "animation/" + c;
cc.loader.loadRes(l, cc.SpriteFrame, function(e, t) {
if (!e) {
var i = new cc.Node("bg");
i.zIndex = -1;
i.addComponent(cc.Sprite).spriteFrame = t;
s.node.addChild(i);
r._addToLoadList(l, t, cc.SpriteFrame);
}
});
}
this._objNode = this.createObjNode(e, t, i, n, a, o);
this.node.addChild(this._objNode);
this._objNode.position = this._offset;
},
createObjNode: function(e, t, i, n, a, o) {
var c = this, s = new cc.Node("objNode");
if ("spine" == i) {
var r = s.addComponent(sp.Skeleton), l = e + "animation/" + t;
cc.loader.loadRes(l, sp.SkeletonData, function(e, t) {
if (e) cc.error("error:" + e); else {
r.skeletonData = t;
r.setAnimation(0, n, !0);
r.premultipliedAlpha = !1;
c._addToLoadList(l, t, sp.SkeletonData);
}
});
} else if ("plist" == i) {
var d = function(e) {
return e < 10 ? "_00" + e : e < 100 ? "_0" + e : "_" + e;
}, h = s.addComponent(cc.Sprite);
h.trim = !1;
h.sizeMode = cc.Sprite.SizeMode.RAW;
var _ = s.addComponent(cc.Animation), p = e + "animation/" + t;
cc.loader.loadRes(p, cc.SpriteAtlas, function(e, t) {
if (e) cc.error("error:" + e); else {
for (var i = [], s = o || 32, r = 1; r <= s; r++) {
var l = t.getSpriteFrame(n + d(r));
if (!l) break;
i.push(l);
}
var h = cc.AnimationClip.createWithSpriteFrames(i, a);
h.name = n;
h.wrapMode = cc.WrapMode.Loop;
_.addClip(h);
_.play(n);
c._addToLoadList(p, t, cc.SpriteAtlas);
}
});
} else if ("prefab" == i) {
var u = e + "animation/" + t;
cc.loader.loadRes(u, cc.Prefab, function(e, t) {
if (e) cc.error("error:" + e); else {
var i = cc.instantiate(t);
s.addChild(i);
c._addToLoadList(u, t, cc.Prefab);
}
});
} else if ("spriteframe" == i) {
var f = s.addComponent(cc.Sprite);
f.trim = !1;
f.sizeMode = cc.Sprite.SizeMode.RAW;
var g = e + "animation/" + t;
cc.loader.loadRes(g, cc.SpriteAtlas, function(e, t) {
if (e) cc.error("error:" + e); else {
f.spriteFrame = t.getSpriteFrame(n);
c._addToLoadList(g, t, cc.SpriteAtlas);
}
});
} else if ("sprite" == i) {
var m = s.addComponent(cc.Sprite), v = e + "animation/" + t;
cc.loader.loadRes(v, cc.SpriteFrame, function(e, t) {
if (e) cc.error("error:" + e); else {
m.spriteFrame = t;
c._addToLoadList(v, t, cc.SpriteFrame);
}
});
} else cc.log("not supported fish animation form");
return s;
},
onComplete: function() {
this._alive = !1;
Global.dispatchEvent("put_fish_pool", {
fid: this._fishId,
tid: this._fishTid,
node: this.node
});
},
onHit: function() {
if (this._hit_anim) {
this._objNode.color = cc.Color.RED;
this._hit_anim_time = .2;
}
if ("" != this._hit_snd && this._hit_snd_time < 0) {
Global.playFishEffect(this._hit_snd);
this._hit_snd_time = 1;
}
},
onDead: function() {
this._alive = !1;
if (this._dieParam) {
this.showCoin(this._dieParam);
this._dieParam = null;
}
this.node.stopAllActions();
Global.dispatchEvent("put_fish_pool", {
fid: this._fishId,
tid: this._fishTid,
node: this.node
});
},
dieWithParam: function(e) {
if (e && e.delay) {
this._alive = !1;
this.node.stopAllActions();
this.node.getComponent(cc.BoxCollider).enabled = !0;
this._dieParam = e;
}
},
showCoin: function(e) {
if (e.coin && e.coin > 0) {
var t = {
num: e.coin,
tp: this._fishTid,
startpos: this.node.position,
endpos: e.endpos
};
Global.dispatchEvent("show_coin", t);
}
},
leave: function() {
this.node.stopAllActions();
var e, t = [ cc.v2(640, 640), cc.v2(-640, 640), cc.v2(-640, -640), cc.v2(640, -640) ], i = this.node.position;
e = i.x >= 0 && i.y >= 0 ? 0 : i.x < 0 && i.y >= 0 ? 1 : i.x < 0 && i.y < 0 ? 2 : 3;
this.node.runAction(cc.sequence(cc.moveBy(3, t[e]), cc.callFunc(this.onComplete.bind(this))));
},
isInScreen: function() {
if (this._alive) {
var e = cc.winSize.width, t = cc.winSize.height, i = this.node.convertToWorldSpaceAR(cc.v2(0, 0));
if (i.x >= 0 && i.x <= e && i.y >= 0 && i.y <= t) return !0;
var n = this.node.convertToWorldSpaceAR(cc.v2(.4 * -this._size.width, 0));
if (n.x >= 0 && n.x <= e && n.y >= 0 && n.y <= t) return !0;
var a = this.node.convertToWorldSpaceAR(cc.v2(.4 * this._size.width, 0));
if (a.x >= 0 && a.x <= e && a.y >= 0 && a.y <= t) return !0;
}
return !1;
},
getPos: function() {
return "" != this._com ? this.node.getComponent(this._com).getPos() : this.node.convertToWorldSpaceAR(cc.v2(0, 0));
},
setVisible: function(e) {
if (e != this._visible && this._objNode) {
this._visible = e;
this._objNode.active = e;
}
},
checkOverTime: function(e) {
return e >= this._bornTime + this._lifeTime;
},
calcDegree: function(e, t) {
var i = 0;
if (t.x - e.x == 0) i = t.y - e.y > 0 ? -90 : 90; else {
i = -Math.atan((t.y - e.y) / (t.x - e.x)) * cc.macro.DEG;
t.x - e.x < 0 && (i += 180);
}
return i;
},
updateDegree: function() {
var e = this.node.position;
if (!(e.sub(this._lastPosition).lengthSqr() < 1)) {
var t = this.calcDegree(this._lastPosition, e);
this.node.angle = -t;
this._lastPosition = e;
}
},
update: function(e) {
if (this._dieParam) {
this._dieParam.delay -= e;
if (this._dieParam.delay <= 0) {
this.showCoin(this._dieParam);
this._dieParam = null;
Global.dispatchEvent("put_fish_pool", {
fid: this._fishId,
tid: this._fishTid,
node: this.node
});
}
} else {
this._alive && this._traceType >= 2 && this.updateDegree();
this._hit_snd_time -= e;
if (this._hit_anim_time > 0) {
this._hit_anim_time -= e;
this._hit_anim_time <= 0 && (this._objNode.color = cc.Color.WHITE);
}
}
},
_addToLoadList: function(e, t, i) {
cc.vv.gameData.resMgr && cc.vv.gameData.resMgr.addCoustomLoadRes(e, t, i);
}
});
cc._RF.pop();
}, {} ],
Fish_Library_BRS: [ function(e, t) {
"use strict";
cc._RF.push(t, "90095xWi3ND3a5+ld4yAZ0/", "Fish_Library_BRS");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
var e = this, t = cc.find("mask", this.node);
t && t.on(cc.Node.EventType.TOUCH_END, function() {
e.node.active = !1;
}, this);
var i = cc.find("img_bg/btn_close", this.node);
Global.btnClickEvent(i, this.onBtnClose, this);
},
onBtnClose: function() {
this.node.active = !1;
}
});
cc._RF.pop();
}, {} ],
Fish_Menu_BRS: [ function(e, t) {
"use strict";
cc._RF.push(t, "1b58cXRgZpCNYffEAY/SwY+", "Fish_Menu_BRS");
cc.Class({
extends: cc.Component,
properties: {
btnInfo: cc.Node,
btnMuteOn: cc.Node,
btnMuteOff: cc.Node,
btnExit: cc.Node,
btnExpend: cc.Node,
_expend: !1
},
onLoad: function() {
Global.btnClickEvent(this.btnExpend, this.onBtnExpend, this);
Global.btnClickEvent(this.btnInfo, this.onBtnInfo, this);
Global.btnClickEvent(this.btnMuteOn, this.onBtnMuteOn, this);
Global.btnClickEvent(this.btnMuteOff, this.onBtnMuteOff, this);
Global.btnClickEvent(this.btnExit, this.onBtnExit, this);
this._originPos = this.node.position;
var e = cc.vv.AudioManager.getBgmVolume() > 0;
this.btnMuteOn.active = e;
this.btnMuteOff.active = !e;
},
onBtnExpend: function() {
this._expend = !this._expend;
this.node.stopAllActions();
var e = this.node.getChildByName("bg_right");
e && (e.active = this._expend);
var t = this.node.getChildByName("bg_left");
t && (t.active = !this._expend);
if (this._expend) {
this.btnExpend.x = 70;
this.node.runAction(cc.moveBy(.5, cc.v2(-120, 0)));
} else {
this.btnExpend.x = -70;
this.node.runAction(cc.moveTo(.5, this._originPos));
}
},
onBtnInfo: function() {
Global.dispatchEvent("show_library");
},
onBtnMuteOn: function() {
this.btnMuteOn.active = !1;
this.btnMuteOff.active = !0;
cc.vv.AudioManager.setEffVolume(0);
cc.vv.AudioManager.setBgmVolume(0);
},
onBtnMuteOff: function() {
this.btnMuteOn.active = !0;
this.btnMuteOff.active = !1;
cc.vv.AudioManager.setEffVolume(1);
cc.vv.AudioManager.setBgmVolume(1);
},
onBtnExit: function() {
var e = {
c: MsgId.FISH_EXIT
};
cc.vv.NetManager.send(e);
this.onBtnExpend();
}
});
cc._RF.pop();
}, {} ],
Fish_Menu_p99: [ function(e, t) {
"use strict";
cc._RF.push(t, "bde04OaGehAmbfKw/OswWUX", "Fish_Menu_p99");
cc.Class({
extends: cc.Component,
properties: {
btnInfo: cc.Node,
btnMuteOn: cc.Node,
btnMuteOff: cc.Node,
btnExit: cc.Node,
btnExpend: cc.Node,
imgExpand: [ cc.SpriteFrame ],
_pos: null,
_expend: !1
},
onLoad: function() {
var e = this.node.getComponent(cc.Widget);
if (e) {
e.right = -94;
e.updateAlignment();
}
this._pos = this.node.position;
Global.btnClickEvent(this.btnExpend, this.onBtnExpend, this);
Global.btnClickEvent(this.btnInfo, this.onBtnInfo, this);
Global.btnClickEvent(this.btnMuteOn, this.onBtnMuteOn, this);
Global.btnClickEvent(this.btnMuteOff, this.onBtnMuteOff, this);
Global.btnClickEvent(this.btnExit, this.onBtnExit, this);
if (cc.vv.AudioManager.getBgmVolume() <= 0) {
this.btnMuteOn.active = !0;
this.btnMuteOff.active = !1;
}
},
onBtnExpend: function() {
this._expend = !this._expend;
this.node.stopAllActions();
if (this._expend) {
this.node.position = this._pos;
this.node.runAction(cc.moveBy(.5, cc.v2(-94, 0)));
this.btnExpend.getChildByName("img_icon").getComponent(cc.Sprite).spriteFrame = this.imgExpand[0];
} else {
this.node.runAction(cc.moveTo(.5, this._pos));
this.btnExpend.getChildByName("img_icon").getComponent(cc.Sprite).spriteFrame = this.imgExpand[1];
}
},
onBtnInfo: function() {
Global.dispatchEvent("show_library");
},
onBtnMuteOn: function() {
this.btnMuteOn.active = !1;
this.btnMuteOff.active = !0;
cc.vv.AudioManager.setEffVolume(1);
cc.vv.AudioManager.setBgmVolume(1);
},
onBtnMuteOff: function() {
this.btnMuteOn.active = !0;
this.btnMuteOff.active = !1;
cc.vv.AudioManager.setEffVolume(0);
cc.vv.AudioManager.setBgmVolume(0);
},
onBtnExit: function() {
var e = {
c: MsgId.FISH_EXIT
};
cc.vv.NetManager.send(e);
this.onBtnExpend();
}
});
cc._RF.pop();
}, {} ],
Fish_MsgId: [ function(e, t) {
"use strict";
cc._RF.push(t, "a4b3aNCYX5KqYwYZIw+KVYt", "Fish_MsgId");
var i = e("MsgIdDef");
i.FISH_MATCH_SESS = 2401;
i.FISH_PLAYER_JOIN = 1003;
i.FISH_EXIT = 40;
i.FISH_PLAYER_EXIT = 1016;
i.FISH_FIRE = 2402;
i.FISH_CATCH = 2403;
i.FISH_ION_END = 2404;
i.FISH_BOOM = 2405;
i.FISH_LUCK_DRAW = 2406;
i.FISH_ADD_FISH = 102405;
i.FISH_SWITCH_SCENE = 102406;
i.FISH_FISH_TIDE = 102407;
i.FISH_ROOM_STATE = 102408;
i.FISH_FISH_PROG = 102409;
i.FISH_EVENT = 102410;
cc._RF.pop();
}, {
MsgIdDef: "MsgIdDef"
} ],
Fish_Recycle: [ function(e, t) {
"use strict";
cc._RF.push(t, "be333cRheZDnppMy+5iEwJt", "Fish_Recycle");
cc.Class({
extends: cc.Component,
onLoad: function() {},
recycle: function() {
for (var e = [], t = this.node.children, i = 0, n = t.length; i < n; i++) {
var a = t[i].getComponent("Fish_Fish");
a && e.push(a);
}
for (var o = 0, c = e.length; o < c; o++) e[o].onDead();
this.node.destroy();
}
});
cc._RF.pop();
}, {} ],
Fish_Utils: [ function(e, t) {
"use strict";
cc._RF.push(t, "69a0a0sPVlGHKnYL3qNbOXN", "Fish_Utils");
var i = {
createSpriteNode: function(e, t) {
var i = new cc.Node(t), n = i.addComponent(cc.Sprite);
n.trim = !1;
n.sizeMode = cc.Sprite.SizeMode.RAW;
n.spriteFrame = e.getSpriteFrame(t);
return i;
},
createAnimationNode: function(e, t, i, n, a) {
void 0 === a && (a = !0);
var o = new cc.Node(), c = o.addComponent(cc.Sprite);
c.trim = !1;
c.sizeMode = cc.Sprite.SizeMode.RAW;
for (var s = o.addComponent(cc.Animation), r = [], l = 1; l <= i; l++) {
var d = t + (l < 10 ? "0" + l : "" + l), h = e.getSpriteFrame(d);
h && r.push(h);
}
var _ = cc.AnimationClip.createWithSpriteFrames(r, n);
_.name = t;
a && (_.wrapMode = cc.WrapMode.Loop);
s.addClip(_);
s.play(t);
return o;
},
createAnimationNodeEx: function(e, t, i, n) {
void 0 === n && (n = !0);
var a = new cc.Node(), o = a.addComponent(cc.Sprite);
o.trim = !1;
o.sizeMode = cc.Sprite.SizeMode.RAW;
for (var c = a.addComponent(cc.Animation), s = [], r = 0; r < t.length; r++) {
var l = t[r], d = e.getSpriteFrame(l);
d && s.push(d);
}
var h = cc.AnimationClip.createWithSpriteFrames(s, i);
h.name = t[0];
n && (h.wrapMode = cc.WrapMode.Loop);
c.addClip(h);
c.play(t[0]);
return a;
},
createAnimationNodeEx2: function(e, t, i, n, a) {
void 0 === a && (a = !0);
var o = new cc.Node(), c = o.addComponent(cc.Sprite);
c.trim = !1;
c.sizeMode = cc.Sprite.SizeMode.RAW;
var s = o.addComponent(cc.Animation);
cc.loader.loadRes(e, cc.SpriteAtlas, function(e, o) {
if (e) cc.error("error:" + e); else {
for (var c = [], r = 1; r <= i; r++) {
var l = t + (r < 10 ? "0" + r : "" + r), d = o.getSpriteFrame(l);
d && c.push(d);
}
var h = cc.AnimationClip.createWithSpriteFrames(c, n);
h.name = t;
a && (h.wrapMode = cc.WrapMode.Loop);
s.addClip(h);
s.play(t);
}
});
return o;
},
addAnimation: function(e, t, i, n, a, o) {
var c = e.getComponent(cc.Animation);
c || (c = e.addComponent(cc.Animation));
for (var s = [], r = 1; r <= n; r++) {
var l = i + (r < 10 ? "0" + r : "" + r), d = t.getSpriteFrame(l);
d ? s.push(d) : (d = t.getSpriteFrame(i + r)) && s.push(d);
}
var h = cc.AnimationClip.createWithSpriteFrames(s, a);
h.name = i;
o && (h.wrapMode = cc.WrapMode.Loop);
c.addClip(h);
},
addAnimationEx: function(e, t, i, n, a) {
var o = e.getComponent(cc.Animation);
o || (o = e.addComponent(cc.Animation));
for (var c = [], s = 0; s < i.length; s++) {
var r = i[s], l = t.getSpriteFrame(r);
l && c.push(l);
}
var d = cc.AnimationClip.createWithSpriteFrames(c, n);
d.name = i[0];
a && (d.wrapMode = cc.WrapMode.Loop);
o.addClip(d);
},
getDistanceToSegment: function(e, t, i) {
if (t.equals(i)) return e.sub(t).mag();
var n = i.sub(t), a = e.sub(t), o = e.sub(i);
return n.dot(a) < 0 ? a.mag() : n.dot(o) > 0 ? o.mag() : Math.abs(n.cross(a)) / n.mag();
},
getLockPos: function(e, t, i) {
var n = cc.winSize.width, a = cc.winSize.height, o = t.convertToWorldSpaceAR(i[0]), c = o.sub(e).mag(), s = o, r = 1e4, l = null;
if (o.x >= 0 && o.x <= n && o.y >= 0 && o.y <= a) {
r = c;
l = s;
}
for (var d = 1, h = i.length; d < h; d++) {
var _ = t.convertToWorldSpaceAR(i[d]), p = _.sub(e).mag();
if (p < c) {
c = p;
s = _;
}
if (_.x >= 0 && _.x <= n && _.y >= 0 && _.y <= a && (null == l || p < r)) {
r = p;
l = _;
}
}
return l || s;
}
};
t.exports = i;
cc._RF.pop();
}, {} ],
FloatTipEx: [ function(e, t) {
"use strict";
cc._RF.push(t, "5df3apbLuVMTrFqVGxG+9fT", "FloatTipEx");
cc.Class({
extends: e("FloatTip"),
show: function(e, t, i) {
var n = this;
if (this._tips !== e) {
this._tips = e;
if (this._floatTipPrefab) {
var a = null;
if (t) {
for (var o = 0; o < this._topList.length; ++o) if (!this._topList[o].active) {
a = this._topList[o];
break;
}
} else for (var c = 0; c < this._list.length; ++c) if (!this._list[c].active) {
a = this._list[c];
cc.isValid(a, !0) || this._list.splice(c, 1);
break;
}
if (null === a || !cc.isValid(a, !0)) {
a = cc.instantiate(this._floatTipPrefab);
t ? this._topList.push(a) : this._list.push(a);
}
if (t) {
null === a.parent && cc.game.addPersistRootNode(a);
var s = cc.find("Canvas").getComponent(cc.Canvas).designResolution;
a.position = cc.v2(s.width / 2, s.height / 2);
} else {
var r = cc.find("Canvas");
if (cc.isValid(r, !0)) {
a.parent = r;
a.position = cc.v2(0, 0);
}
}
a.zIndex = Global.CONST_NUM.HIGHT_ZORDER;
a.active = !0;
if ((e += "") && "string" == typeof e) {
var l = cc.find("spr_bg/lbl_content", a).getComponent(cc.RichText);
l.string = "<b>" + e + "</b>";
l.node.width > 800 && (l.maxWidth = 800);
l.node.color = i || cc.Color.WHITE;
}
var d = a.getChildByName("spr_bg").getComponent(cc.Animation);
if (d) {
d.play("FloatTipMoveAndFade");
d.on("stop", function() {
a.active = !1;
n._tips = "";
});
} else a.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
a.active = !1;
n._tips = "";
})));
}
}
}
});
cc._RF.pop();
}, {
FloatTip: "FloatTip"
} ],
FloatTip: [ function(e, t) {
"use strict";
cc._RF.push(t, "f441e7ECPtE1bqcpDmo6ij0", "FloatTip");
cc.Class({
extends: cc.Component,
properties: {
spr_bg: cc.Sprite,
lbl_content: cc.Label,
bg_sprire_frame: cc.SpriteFrame,
_floatTipPrefab: null,
_tips: "",
_list: [],
_topList: []
},
init: function(e) {
var t = this;
cc.loader.loadRes(e, cc.Prefab, function(e, i) {
e || (t._floatTipPrefab = i);
});
},
start: function() {},
onEnable: function() {
this.node.position = Global.centerPos;
},
clear: function() {
this._list = [];
},
show: function(e, t, i) {
var n = this;
if (this._tips !== e) {
this._tips = e;
if (this._floatTipPrefab) {
var a = null;
if (t) {
for (var o = 0; o < this._topList.length; ++o) if (!this._topList[o].active) {
a = this._topList[o];
break;
}
} else for (var c = 0; c < this._list.length; ++c) if (!this._list[c].active) {
a = this._list[c];
cc.isValid(a, !0) || this._list.splice(c, 1);
break;
}
if (null === a || !cc.isValid(a, !0)) {
a = cc.instantiate(this._floatTipPrefab);
t ? this._topList.push(a) : this._list.push(a);
}
if (t) {
null === a.parent && cc.game.addPersistRootNode(a);
var s = cc.find("Canvas").getComponent(cc.Canvas).designResolution;
a.position = cc.v2(s.width / 2, s.height / 2);
} else {
var r = cc.find("Canvas");
if (cc.isValid(r, !0)) {
a.parent = r;
a.position = cc.v2(0, 0);
}
}
a.zIndex = Global.CONST_NUM.HIGHT_ZORDER;
a.active = !0;
if ((e += "") && "string" == typeof e) {
var l = cc.find("spr_bg/lbl_content", a).getComponent(cc.Label);
l.string = e;
l.node.color = i || cc.Color.WHITE;
}
var d = a.getChildByName("spr_bg").getComponent(cc.Animation);
if (d) {
d.play("FloatTipMoveAndFade");
d.on("stop", function() {
a.active = !1;
n._tips = "";
});
} else a.runAction(cc.sequence(cc.delayTime(1.2), cc.callFunc(function() {
a.active = !1;
n._tips = "";
})));
}
}
}
});
cc._RF.pop();
}, {} ],
FlyDiamonds: [ function(e, t) {
"use strict";
cc._RF.push(t, "ec9b8hjq3ZPf5siEk0DgI16", "FlyDiamonds");
function i(e) {
void 0 === e && (e = .1);
return 1 - e + Math.random() * e * 2;
}
cc.Class({
extends: cc.Component,
properties: {
diamondSpriteFrame: cc.SpriteFrame,
atlas: cc.SpriteAtlas,
_coinScale: {
default: .8,
serializable: !1
},
_nodePool: null,
_hitNodePool: null
},
onLoad: function() {
this._nodePool = new cc.NodePool();
this._hitNodePool = new cc.NodePool();
},
createCoin: function() {
var e = 0;
if (this._nodePool.size() > 0) e = this._nodePool.get(); else {
var t = (e = new cc.Node("coin")).addComponent(cc.Sprite), i = e.addComponent(cc.Animation);
t.sizeMode = cc.Sprite.SizeMode.RAW;
for (var n = [], a = (Global.random(1, 23), 0); a < 23; a++) {
var o = this.diamondSpriteFrame;
if (!o) break;
n.push(o);
}
var c = cc.AnimationClip.createWithSpriteFrames(n, 40);
c.name = "anim";
c.wrapMode = cc.WrapMode.Loop;
i.addClip(c);
i.play("anim");
}
return e;
},
onDestroy: function() {
cc.vv.AudioManager.stopEffectByName(Global.SOUNDS.sound_fly_coins.filename);
this._nodePool.clear();
this._hitNodePool.clear();
},
around: function() {
return .9 + .2 * Math.random();
},
showFlyCoins: function(e, t, n, a, o) {
var c = this;
void 0 === n && (n = 20);
var s = this;
s._coinNum = n;
s._rollData = o;
o && o.begin && (o.lblCoin.getComponent(cc.Label).string = Global.FormatNumToComma(o.begin));
cc.vv.AudioManager.playEff(Global.SOUNDS.sound_fly_coins.path, Global.SOUNDS.sound_fly_coins.filename, !0, !0);
for (var r = this._nodePool, l = function(o) {
var l = c.createCoin();
l.setScale(c._coinScale * i());
l.position = e;
c.node.addChild(l);
var d = t.sub(e), h = d.mag(), _ = [ cc.v2(e.x * i() - d.x * i() * .4, e.y + .4 * d.y * i()), cc.v2(t.x * i() + d.x * i() * .7, e.y + .7 * d.y * i()), t ];
l.runAction(cc.sequence(cc.hide(), cc.delayTime(.05 * o * i(.05)), cc.show(), cc.bezierTo(h / 3e3, _), cc.callFunc(function(e) {
s._showHitEff(t);
s.doRollLabelCoin();
r.put(e);
if (o === n - 1) {
cc.vv.AudioManager.stopEffectByName(Global.SOUNDS.sound_fly_coins.filename);
cc.isValid(a) && a();
}
})));
}, d = 0; d < n; d++) l(d);
},
setCoinScale: function(e) {
this._coinScale = e;
},
_showHitEff: function(e) {
var t, i = this, n = function(t) {
if (t) {
t.stopAllActions();
t.position = e;
t.parent = i.node;
t.scale = 1;
t.opacity = 255;
cc.tween(t).to(.2, {
scale: 3,
opacity: 100
}).call(function(e) {
cc.isValid(i._hitNodePool) && i._hitNodePool.put(e);
}).start();
}
};
if (this._hitNodePool.size() > 0) {
t = this._hitNodePool.get();
n(t);
} else cc.loader.loadRes("BalootClient/BaseRes/prefabs/spr_flycoin_hit", cc.Prefab, function(e, i) {
t = cc.instantiate(i);
n(t);
});
},
doRollLabelCoin: function() {
if (this._rollData) {
var e = this._rollData.lblCoin, t = this._rollData.addCoin;
if (cc.isValid(e)) {
var i = e.getComponent(cc.Label);
if (i) {
var n = Global.FormatCommaNumToNum(i.string);
i.string = Global.FormatNumToComma(parseInt(t / this._coinNum) + n);
}
}
}
}
});
cc._RF.pop();
}, {} ],
GameBtnList: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ca2fcrT0EtN66r0jVRQADwO", "GameBtnList");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.listViewNode = null;
t.pokerTitleNode = null;
t.moreTitleNode = null;
t.type = 0;
return t;
}
t.prototype.onLoad = function() {
this.listView = this.listViewNode.getComponent("ListView");
};
t.prototype.onInit = function(e) {
this.type = e;
this.listData = [];
for (var t = 0, i = cc.vv.UserManager.gameList; t < i.length; t++) {
var n = i[t];
n.ctype == this.type && this.listData.push(n);
}
this.listData.sort(function(e, t) {
return e.ord - t.ord;
});
this.updateView();
};
t.prototype.updateView = function() {
this.pokerTitleNode.active = 2 == this.type;
this.moreTitleNode.active = 3 == this.type;
this.listView.numItems = this.listData.length;
};
t.prototype.onUpdateItem = function(e, t) {
var i = this.listData[t];
e.getComponent("RoomTypeBtn").gameid = i.id;
e.getComponent("RoomTypeBtn").updateView();
};
__decorate([ o(cc.Node) ], t.prototype, "listViewNode", void 0);
__decorate([ o(cc.Node) ], t.prototype, "pokerTitleNode", void 0);
__decorate([ o(cc.Node) ], t.prototype, "moreTitleNode", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
GameCommUtil: [ function(e, t) {
"use strict";
cc._RF.push(t, "02475xg0C9NgIMlKYYfjZ1p", "GameCommUtil");
var i = e("GlobalVar");
i.loadRes = function(e, t, i) {
return cc.loader.loadRes(e, t, function(e, t) {
i && i(e, t);
});
};
i.S2P = function(e, t) {
t >= 0 || (t = 0);
var i = function(e) {
return Math.round(Number(e) * Math.pow(10, 4)) / Math.pow(10, 4);
};
e = i(e);
var n = Math.pow(10, t), a = Number(e);
return (a = Math.floor(i(a * n)) / n).toFixed(t);
};
i.createClip = function(e, t, i, n, a, o, c) {
void 0 === i && (i = "action");
void 0 === n && (n = !0);
void 0 === a && (a = 1 / 7);
void 0 === o && (o = !0);
void 0 === c && (c = cc.Sprite.SizeMode.RAW);
var s = e.getComponent(cc.Animation);
null === s && (s = e.addComponent(cc.Animation));
s.enabled = !0;
for (var r = s.getClips(), l = 0; l < r.length; ++l) if (r[l].name === i) {
cc.vv.gameData.addAnimationList(e);
return;
}
for (var d = function(e, t) {
return t && e < 10 ? "0" + e : e;
}, h = [], _ = 0; _ < t.length; ++_) for (var p = t[_].start; p <= t[_].end; ++p) {
var u = cc.vv.gameData.resMgr.getAtlas(t[_].atlas), f = t[_].prefix + d(p, o), g = u.getSpriteFrame(f);
g ? h.push(g) : AppLog.warn("######### 没有找到序列帧:" + f);
}
var m = cc.AnimationClip.createWithSpriteFrames(h);
m.wrapMode = n ? cc.WrapMode.Loop : cc.WrapMode.Normal;
m.sample = 30;
m.speed = a;
m.name = i;
e.getComponent(cc.Sprite).trim = !1;
e.getComponent(cc.Sprite).sizeMode = c;
s.addClip(m);
cc.vv.gameData.addAnimationList && cc.vv.gameData.addAnimationList(e);
return m;
};
i.setSpriteSync = function(e, t) {
cc.loader.loadRes(e, cc.SpriteFrame, function(e, i) {
t.getComponent(cc.Sprite).spriteFrame = i;
});
};
i.doRoallNumEff = function(e, t, i, n, a, o, c, s, r, l) {
void 0 === n && (n = 1.5);
void 0 === c && (c = 2);
var d = e.getComponent(cc.Label);
if (d) {
var h = function(e, t) {
var i = Global.SavePoints(t, c), n = i;
s && (n = Global.FormatNumToComma(Number(i)));
r && (n = Global.formatNumShort(Number(i), c));
e.string = l ? cc.js.formatStr(l, n) : n;
};
h(d, t);
if (t == i || i < 1) {
h(d, i);
a && a();
return;
}
var _ = Math.floor(n / .04), p = Math.floor((i - t) / _ * 100) / 100;
if (p % 10 == 0) {
p -= 1;
_ = Math.floor((i - t) / p * 100) / 100;
}
0 == p && (p = 1);
if (_ < 0) {
_ = 1;
p = i - t;
}
var u = t, f = cc.delayTime(.04), g = cc.callFunc(function() {
h(d, u += p);
}), m = cc.callFunc(function() {
o && o(u);
}), v = cc.repeat(cc.sequence(f, g, m), _), S = cc.callFunc(function() {
h(d, i);
a && a();
});
d.node.stopAllActions();
d.node.runAction(cc.sequence(v, S));
}
};
Global.isBoolean = function(e) {
return 1 == e || 0 == e;
};
Global.resetBlink = function(e) {
if (e) {
var t = cc.js.getClassName(e), i = e.node;
"cc.Node" == t && (i = e);
if (i) {
i.stopAllActions();
i.opacity = 255;
i.active = !0;
}
}
};
Global.LoadByQueue = function(e, t, i, n, a, o) {
var c = 0;
a && (c = a);
o || (o = 1);
var s = function(a, s) {
i && i(a, s);
(c += o) < e.length ? Global.LoadByQueue(e, t, i, n, c, o) : n && n();
};
if (o > 1) {
for (var r = [], l = 0; l < o; l++) {
var d = c + l;
d < e.length && r.push(e[d]);
}
cc.loader.loadResArray(r, t, function(e, t) {
s(e, t);
});
} else this.loadRes(e[c], t, s);
};
Global.showSpriteGray = function(e, t) {
if (e) {
var i = "2d-sprite";
t && (i = "2d-gray-sprite");
e.getComponent(cc.Sprite).setMaterial(0, cc.Material.getBuiltinMaterial(i));
}
};
Global.formatNumShort = function(e, t) {
void 0 === t && (t = 2);
var i = Math.pow(10, t);
return e >= 1e9 ? Math.floor(e / 1e9 * i) / i + "B" : e >= 1e6 ? Math.floor(e / 1e6 * i) / i + "M" : e >= 1e3 ? Math.floor(e / 1e3 * i) / i + "K" : e;
};
Global.FixDesignScale = function(e) {
var t = Global.designSize, i = cc.vv.AppData.getGameId();
if (i && i > 0) {
var n = cc.vv.GameDataCfg.getGameData(i);
if (n && "portrait" == n.orientation) {
var a = cc.find("Canvas").getComponent(cc.Canvas), o = a.designResolution.width / t.height, c = a.designResolution.height / t.width, s = o > c ? c : o;
e.scale = e.scale * s;
return s;
}
}
return 1;
};
Global.FixDesignScale_V = function(e, t) {
var i = cc.size(1080, 1920), n = function() {
var t = cc.find("Canvas").getComponent(cc.Canvas), n = t.designResolution.width / i.width, a = t.designResolution.height / i.height, o = n > a ? a : n;
e && (e.scale = e.scale * o);
return o;
};
if (t) return n();
var a = cc.vv.AppData.getGameId();
if (a && a > 0) {
var o = cc.vv.GameDataCfg.getGameData(a);
if (o && "portrait" == o.orientation) return n();
}
return 1;
};
Global.FlyCoin = function(e, t, i, n, a) {
t || (t = cc.find(Global.HALL_COIN_NODE_PATH)) || (t = cc.find(Global.INGAME_COIN_NODE_PATH));
var o = function(o) {
Global.FixDesignScale_V(o);
if (cc.isValid(e) && cc.isValid(t) && cc.isValid(o)) {
var c, s = e.convertToWorldSpaceAR(cc.v2(0, 0)), r = t.convertToWorldSpaceAR(cc.v2(0, 0)), l = o.convertToNodeSpaceAR(s), d = o.convertToNodeSpaceAR(r);
if (a && n) {
if (!(c = cc.find("copyhallcoin", o))) {
var h = cc.find(Global.HALL_TOPCOIN_PATH);
h || (h = cc.find(Global.INGAME_COIN_NODE_PATH).parent);
if (h) {
var _ = cc.instantiate(h), p = o.convertToNodeSpaceAR(h.convertToWorldSpaceAR(cc.v2(0, 0)));
_.name = "copyhallcoin";
_.parent = o;
_.position = p;
c = _;
}
}
n.lblCoin = cc.find("lbl_coin", c);
n.lblCoin || (n.lblCoin = cc.find("lbl_coinsNum", c));
c.active = !0;
}
var u = o.getComponent("FlyCoins");
u && u.showFlyCoins(l, d, 20, function() {
i && i();
if (a) {
Global.dispatchEvent(EventId.UPATE_COINS);
c && (c.active = !1);
}
}, n);
} else i && i();
}, c = cc.find("Canvas/flycoin");
c ? o(c) : cc.loader.loadRes("CashHero/prefab/flycoins", cc.Prefab, function(e, t) {
if (!e) {
var i = cc.instantiate(t);
i.x = 0;
i.y = 0;
i.parent = cc.find("Canvas");
o(i);
}
});
};
Global.FlyCoinInPokerHero = function(e, t, i, n, a) {
t || (t = cc.find("Canvas/UserinfoBar/金币/icon")) || (t = cc.find(Global.INGAME_COIN_NODE_PATH));
var o = function(o) {
Global.FixDesignScale_V(o);
if (cc.isValid(e) && cc.isValid(t) && cc.isValid(o)) {
var c, s = e.convertToWorldSpaceAR(cc.v2(0, 0)), r = t.convertToWorldSpaceAR(cc.v2(0, 0)), l = o.convertToNodeSpaceAR(s), d = o.convertToNodeSpaceAR(r);
if (a && n) {
if (!(c = cc.find("copyhallcoin", o))) {
var h = cc.find("Canvas/UserinfoBar/金币");
h || (h = cc.find(Global.INGAME_COIN_NODE_PATH).parent);
if (h) {
var _ = cc.instantiate(h), p = o.convertToNodeSpaceAR(h.convertToWorldSpaceAR(cc.v2(0, 0)));
_.name = "copyhallcoin";
_.parent = o;
_.position = p;
c = _;
}
}
n.lblCoin = cc.find("lbl_coin", c);
n.lblCoin || (n.lblCoin = cc.find("lbl_coinsNum", c));
c.active = !0;
}
var u = o.getComponent("FlyCoins");
u && u.showFlyCoins(l, d, 20, function() {
i && i();
if (a) {
Global.dispatchEvent(EventId.UPATE_COINS);
c && (c.active = !1);
}
}, n);
} else i && i();
}, c = cc.find("Canvas/flycoin");
c ? o(c) : cc.loader.loadRes("BalootClient/BaseRes/prefabs/flycoins", cc.Prefab, function(e, t) {
if (!e) {
var i = cc.instantiate(t);
i.parent = cc.find("Canvas");
o(i);
}
});
};
Global.ChangeBgmVol = function(e) {
0 != cc.vv.AudioManager.getBgmVolume() && cc.vv.AudioManager.setBgmVolume(e);
};
Global.comloadsprite = function(e, t, i) {
i && (t.userTag = i);
cc.loader.loadRes(e, cc.SpriteFrame, function(e, i) {
e || cc.isValid(t) && (t.userTag ? t.userTag == i.name && (t.getComponent(cc.Sprite).spriteFrame = i) : t.getComponent(cc.Sprite).spriteFrame = i);
});
};
Global.loadSpine = function(e, t, i, n) {
cc.loader.loadRes(e, sp.SkeletonData, function(e, a) {
if (cc.isValid(t)) {
var o = t.getComponent(sp.Skeleton);
o.skeletonData = a;
o.setAnimation(0, i, n);
}
});
};
Global.needPopDayTips = function(e) {
var t = !1, i = Global.getLocal(e);
if (i) {
new Date(i).toDateString(), new Date().toDateString();
if (new Date(i).toDateString() === new Date().toDateString()) t = !1; else {
var n = new Date().toDateString();
Global.saveLocal(e, n);
t = !0;
}
} else {
var a = new Date().toDateString();
Global.saveLocal(e, a);
t = !0;
}
return t;
};
Global.sameDay = function(e) {
return new Date(1e3 * Number(e)).toDateString() === new Date().toDateString() || (new Date(1e3 * Number(e)), 
new Date(), !1);
};
cc._RF.pop();
}, {
GlobalVar: "GlobalVar"
} ],
GameConfig: [ function(e, t) {
"use strict";
cc._RF.push(t, "3dea8Fi7W9GR4weoEoe1rGn", "GameConfig");
var i = e("GlobalVar");
i.SCENE_NAME = {
LAUNCH: "Launch_BC",
HOTUPDATE: "HotUpdate_BC",
LOGIN: "Login_BC",
HALL_PRELOAD: "PreLoading_BC",
HALL: "Hall_BC",
CHANGE_LANGUAGE: "ChangeLanguage"
};
i.APP_ORIENTATION = "portrait";
i.HALL_TOPCOIN_PATH = "Canvas/top/coin_bg";
i.HALL_COIN_NODE_PATH = "Canvas/top/coin_bg/spr_coin";
i.HALL_COIN_LABEL_NODE_PATH = "Canvas/top/coin_bg/lbl_coin";
i.INGAME_COIN_LABEL_NODE_PATH = "Canvas/safe_node/LMSlots_Top/playerCoins/lbl_coinsNum";
i.INGAME_COIN_NODE_PATH = "Canvas/safe_node/LMSlots_Top/playerCoins/icon_coin";
i.QUEST_REWARD = 35e5;
i.SYS_OPEN = {
GUIDE_CHANGEBET: 3,
QUEST_TASK: 4,
PIG_BANK: 8,
PIG_BANK_FREEBUY: 20,
FRIEND: 1500,
HERO_CARD: 12,
LUCKY_SMASH: 16,
BINGO: 10,
DAILYTASK: 5,
LUCKY_CARD: 25,
HERO_PALACE: 1
};
Global.SHOP_POS_ID = {
HALL: 1,
GAME: 2,
PERSONALINFO: 2,
NOENOUGHMONEY: 2,
MULTIPLAYERS: 3
};
cc._RF.pop();
}, {
GlobalVar: "GlobalVar"
} ],
GameDataCfg: [ function(e, t) {
"use strict";
cc._RF.push(t, "62305/EaaZKkoEtenJMig5S", "GameDataCfg");
var i = e("GameIdMgr");
cc.Class({
extends: cc.Component,
statics: {
gameDataList: null,
init: function() {
this.gameDataList = new Map();
this.gameDataList.set(i.MLLM, {
hallScene: "game_2ndHall",
dataCmp: "LMGameData",
dataName: "LMGameData",
gameScene: "mllm"
});
this.gameDataList.set(i.POKER_HUNDRED, {
dataCmp: "RT100nnData",
dataName: "RT100NNData",
gameScene: "100nn"
});
this.gameDataList.set(i.POKER_NIU, {
hallScene: "nn_2ndHall",
dataCmp: "RTNiuniuData",
dataName: "RTNiuNiuData",
gameScene: "niuniu"
});
this.gameDataList.set(i.RED_VS_BLACK, {
dataCmp: "RTHhdzData",
dataName: "RTHhdzData",
gameScene: "hhdz_loading",
mainScene: "hhdz",
orientation: "landscape"
});
this.gameDataList.set(i.INDIA_RUMMY, {
dataCmp: "Rummy_GameData",
dataName: "gameData",
gameScene: "Rummy",
orientation: "portrait",
cfgCmp: "Rummy_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.DRAGON_VS_TIGER, {
dataCmp: "Table_GameData_Base",
dataName: "gameData",
gameScene: "lhdz",
orientation: "portrait",
cfgCmp: "Lhdz_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.CRASH, {
dataCmp: "Crash_GameData",
dataName: "gameData",
gameScene: "Crash",
orientation: "portrait",
cfgCmp: "Crash_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.SEVEN_UP_DOWN, {
dataCmp: "Table_GameData_Base",
dataName: "gameData",
gameScene: "SevenUpDown",
orientation: "portrait",
cfgCmp: "SevenUpDown_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.ALADINGWHEEL, {
dataCmp: "Table_GameData_Base",
dataName: "gameData",
gameScene: "AladingWheel",
orientation: "portrait",
cfgCmp: "AladingWheel_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.TURNRECT_ALB, {
dataCmp: "TurnRect_GameData",
dataName: "gameData",
gameScene: "TurnRect",
orientation: "portrait",
bNoLoading: !0
});
this.gameDataList.set(i.TEXAS_HOLDEM, {
dataCmp: "Delphi_GameData",
dataName: "gameData",
gameScene: "Delphi",
orientation: "portrait",
bNoLoading: !0
});
this.gameDataList.set(i.BACCARAT, {
dataCmp: "Baccarat_GameData",
dataName: "gameData",
gameScene: "Baccarat",
orientation: "portrait",
cfgCmp: "Baccarat_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.WINGO_LOTTERY, {
dataCmp: "Table_GameData_Base",
dataName: "gameData",
gameScene: "WingoLottery",
orientation: "portrait",
cfgCmp: "WingoLottery_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.JHANDI_MUNDA, {
dataCmp: "Table_GameData_Base",
dataName: "gameData",
gameScene: "Jhandimunda",
orientation: "portrait",
cfgCmp: "Jhandimunda_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.HORSE_RACING, {
dataCmp: "HorseRace_GameData",
dataName: "gameData",
gameScene: "HorseRace",
orientation: "portrait",
cfgCmp: "HorseRace_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.ROULETTE, {
dataCmp: "Roulette36_Gamedata",
dataName: "gameData",
gameScene: "Roulette36",
orientation: "portrait",
cfgCmp: "Roulette_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.ANDAR_BAHAR, {
dataCmp: "Table_GameData_Base",
dataName: "gameData",
gameScene: "AndarBahar",
orientation: "portrait",
cfgCmp: "AndarBahar_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.FORTUNE_WHEEL, {
dataCmp: "Table_GameData_Base",
dataName: "gameData",
gameScene: "FortuneWheel",
orientation: "portrait",
cfgCmp: "FortuneWheel_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.FORTUNE_WHEEL_POKER, {
dataCmp: "Table_GameData_Base",
dataName: "gameData",
gameScene: "FortuneWheel",
orientation: "portrait",
cfgCmp: "FortuneWheel_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.POKER_TBNN, {
hallScene: "tbnn_2ndHall",
dataCmp: "RTTbnnData",
dataName: "RTTbnnData",
gameScene: "tbnn_scene"
});
this.gameDataList.set(i.MLMJ, {
hallScene: "mlmj_2ndHall",
dataCmp: "MLMJ_gameData",
dataName: "gameData",
gameScene: "mlmj"
});
this.gameDataList.set(i.JLM, {
hallScene: "game_2ndHall",
dataCmp: "JLM_gameData",
dataName: "gameData",
loadingScene: "game_loading",
gameScene: "jlm",
hallSceneOri: "portrait",
anim: "ginrummy"
});
this.gameDataList.set(i.YDLM, {
hallScene: "game_2ndHall",
dataCmp: "YDLM_gameData",
dataName: "gameData",
loadingScene: "game_loading",
gameScene: "ydlm",
hallSceneOri: "portrait",
anim: "indiarummy"
});
this.gameDataList.set(i.BLACK_JACK, {
dataCmp: "BlackJack21_GameData",
dataName: "gameData",
gameScene: "BlackJack21",
orientation: "portrait",
bNoLoading: !0
});
this.gameDataList.set(i.C_CRICKETX, {
dataCmp: "CricketX_GameData",
dataName: "gameData",
gameScene: "CricketX",
orientation: "portrait",
cfgCmp: "CricketX_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.C_AVIATRIX, {
dataCmp: "Aviatrix_GameData",
dataName: "gameData",
gameScene: "Aviatrix",
orientation: "portrait",
cfgCmp: "Aviatrix_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.C_CRASHX, {
dataCmp: "CrashX_GameData",
dataName: "gameData",
gameScene: "CrashX",
orientation: "portrait",
cfgCmp: "CrashX_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.C_AVIATOR, {
dataCmp: "Aviator_GameData",
dataName: "gameData",
gameScene: "Aviator",
orientation: "portrait",
cfgCmp: "Aviator_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.C_ZEPPELIN, {
dataCmp: "Zeppelin_GameData",
dataName: "gameData",
gameScene: "Zeppelin",
orientation: "portrait",
cfgCmp: "Zeppelin_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.S_LIMBO, {
dataCmp: "Limbo_GameData",
dataName: "gameData",
gameScene: "Limbo",
orientation: "portrait",
cfgCmp: "Limbo_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.S_DICE, {
dataCmp: "Dice_GameData",
dataName: "gameData",
gameScene: "Dice",
orientation: "portrait",
cfgCmp: "Dice_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.S_PLINKO, {
dataCmp: "Plinko_GameData",
dataName: "gameData",
gameScene: "Plinko",
orientation: "portrait",
cfgCmp: "Plinko_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.S_KENO, {
dataCmp: "Keno_GameData",
dataName: "gameData",
gameScene: "Keno",
orientation: "portrait",
cfgCmp: "Keno_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.S_TOWERS, {
dataCmp: "Tower_GameData",
dataName: "gameData",
gameScene: "Tower",
orientation: "portrait",
cfgCmp: "Tower_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.DOUBLE_ROLL, {
dataCmp: "DoubleRoll_GameData",
dataName: "gameData",
gameScene: "DoubleRoll",
orientation: "portrait",
cfgCmp: "DoubleRoll_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.S_CRYPTO, {
dataCmp: "Crypto_GameData",
dataName: "gameData",
gameScene: "Crypto",
orientation: "portrait",
cfgCmp: "Crypto_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.S_TRIPLE, {
dataCmp: "Triple_GameData",
dataName: "gameData",
gameScene: "Triple",
orientation: "portrait",
cfgCmp: "Triple_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.C_JETX, {
dataCmp: "JetX_GameData",
dataName: "gameData",
gameScene: "JetX",
orientation: "portrait",
cfgCmp: "JetX_Cfg",
bNoLoading: !0
});
this.gameDataList.set(i.SLOT_GDF, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_AFG, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_GDT, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_GREAT_BLUE, {
dataCmp: "GB_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_AZT, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_PAN, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_IVAN, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_DR, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_SB, {
dataCmp: "SB_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_TK, {
dataCmp: "TK_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_PJL, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_JF, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.BIRD_AND_ANIMAL, {
dataCmp: "BAA_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_SPARTAN, {
dataCmp: "SP_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_COLABOTTLE, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_PIRATE_SHIP, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "pirateShip_loading"
});
this.gameDataList.set(i.SLOT_TOP_GUN, {
dataCmp: "TG_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_LAURA, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_ALICE, {
dataCmp: "Alice_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_SWK, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_DRAGON5, {
dataCmp: "DG_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_JETION, {
dataCmp: "JX_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_OCEAN, {
dataCmp: "OC_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_MONEY_FROG, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_ZCJB, {
dataCmp: "ZCJB_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_YEARBYYEAR, {
dataCmp: "YBY_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_CAPTAIN9, {
dataCmp: "C9_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_AFRICAN_SAFARI, {
dataCmp: "AS_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_CRAZY_MONEY, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "CrazyMoney_loading"
});
this.gameDataList.set(i.SLOT_IRELAND_LUCKY, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_SEASON, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_SAINTSEIAY, {
dataCmp: "Saint_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_CAPTAIN, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_MATSURI, {
dataCmp: "MS_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_TREX, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_GOLF, {
dataCmp: "Golf_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.HORSE_MONKEY_TREE, {
dataCmp: "MTGameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.HORSE, {
dataCmp: "HorseGameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.MOTOR_RACE, {
dataCmp: "MTRaceGameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.HORSE_RACE, {
dataCmp: "MTRaceGameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.ARC_XYZB, {
dataCmp: "RTMKStoryData",
dataName: "gameData",
gameScene: "mkstoryScene_loading"
});
this.gameDataList.set(i.ARC_YCLS, {
dataCmp: "RTEPSData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.ARC_XYZB_LINE, {
dataCmp: "RTMKStoryData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.BCBM_918, {
dataCmp: "BCBM918GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.FISH_SHRIMP_OYSTER, {
dataCmp: "FSO_NetLogic",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.ONLINE_LHDZ, {
dataCmp: "RTLhdzOLData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.LHDZ_918_1, {
dataCmp: "RTLhdz918Data",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.LHDZ_918_2, {
dataCmp: "RTLhdz918Data",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.LHDZ_918_3, {
dataCmp: "RTLhdz918Data",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SICBO_918, {
dataCmp: "RTDice918Data",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.BACCARAT_918, {
dataCmp: "RTBCT918Data",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.THREE_POKER_918, {
dataCmp: "TPoker_gamedata",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.HOLD_EM_918, {
dataCmp: "Hold_gamedata",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.CASINO_WAR_918, {
dataCmp: "CWar_gamedata",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.MONKEY_ZWBS_918, {
dataCmp: "RTMKStoryData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.ARC_ZWBS_LINE, {
dataCmp: "RTMKStoryData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.BULL_918, {
dataCmp: "Bull918_gamedata",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.ROULET_73, {
dataCmp: "Ro73_gamedata",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.ROULET_24, {
dataCmp: "Ro24_gamedata",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.ROULETTE_MINI, {
dataCmp: "RoMini_gamedata",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.ROULET_36, {
dataCmp: "Ro36_gamedata",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_GLF, {
dataCmp: "GLF_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_JLBD, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.BCBM, {
dataCmp: "bcbm777Data",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.BAIJIALE, {
dataCmp: "baijialeData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.BAIJIALE_MID, {
dataCmp: "baijialeData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.BAIJIALE_HIGH, {
dataCmp: "baijialeData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.BIG_SMALL, {
dataCmp: "bigSmall_data",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.TWENTYONE777, {
dataCmp: "twentyone777Data",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.HWFISH, {
dataCmp: "FishData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_TLG, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "Thelistofgods_loading"
});
this.gameDataList.set(i.ROULETTE_MID, {
dataCmp: "RouletteGameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.ROULETTE_HIGH, {
dataCmp: "RouletteGameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_PD, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_JJX, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_GSGL, {
dataCmp: "GSGL_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_YNXJ, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_SHZ, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.ARC_YCLS, {
dataCmp: "RTEPSData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.FRUIT_SLOT, {
dataCmp: "FUST_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.FRUIT, {
dataCmp: "FruitGameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_SLWH, {
dataCmp: "forestparty777Data",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLWH_918NEW, {
dataCmp: "FP918_Data",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.LEOPARD, {
dataCmp: "LeopardGameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.HULUJI, {
dataCmp: "HLJGameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_ROBIN, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_GLYY, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_SGIRL, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_FORTUNE_PANDA, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_TGSY, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_FOOTBALL, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_ZHANWM, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_FORTUNE, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_CHERRY, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_SPARTA30, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_EASTER, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_STEAMTOWER, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_NEWYEAR, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_VICTORY, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_RALLY, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_WESTERN_PASTURE, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "westernPasture_loading"
});
this.gameDataList.set(i.SLOT_FARM_STORY, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "farmStory_loading"
});
this.gameDataList.set(i.SLOT_BLAZING_STAR, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "blazingStar_loading"
});
this.gameDataList.set(i.SLOT_ICE_AND_SNOW, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_INDIA_MYTH, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_TRAFFIC_LIGHT, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_GARDEN, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_WUFUMEN, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_WANGCAI, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_WOLFER, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_MAGICIAN, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "magician_loading"
});
this.gameDataList.set(i.SLOT_STONE_AGE, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_SPIRITUAL_GARDEN, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_SEA_WORLD, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "seaWorld_loading"
});
this.gameDataList.set(i.SLOT_HUANG_DI_LAI_LE, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "huangDiLaiLe_loading"
});
this.gameDataList.set(i.SLOT_CHEN_PAO_ISLAND, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "treasureIsland_loading"
});
this.gameDataList.set(i.SLOT_CIRCUS, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_AIRPLANE, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_FAME, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_TGFQ, {
dataCmp: "Thaibliss_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_GOLDEN_DRAGON, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_BRAVE_LEGEND, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SINGLE_PICK, {
dataCmp: "SGPK_Data",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_ALADDIN, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_HALLOWEEN, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "halloween_loading"
});
this.gameDataList.set(i.SLOT_HALLOWEEN_SURPRISE, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_GOLDEN_TREE918, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_TERNADO, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_YEMEI, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_WATER, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_XUEMEI, {
dataCmp: "XM_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_ORIENT, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_COYOTECASH, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_MAGICAL_DRAGON, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_MOTOCYCLE, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_FASHION, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_GREAT_CHINA, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_CLEOPATRA, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_BIGSHOT, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.FQZS_SP, {
dataCmp: "Fqzs_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_THE_DISCOVER, {
dataCmp: "TD_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.PHOENIX_SP, {
dataCmp: "Phoenix_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.POKEMON_SP, {
dataCmp: "Pokemon_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_NINJA, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_FRUITSPACE, {
dataCmp: "FS_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_NIGHTCLUB, {
dataCmp: "NC_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_CLASSIC, {
dataCmp: "ClassicSlot_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_CRAZY7, {
dataCmp: "Crazy7_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_HZLB, {
dataCmp: "Slotmonkey_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_8BALL, {
dataCmp: "SlotBall_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_PAYDIRT, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_INFINITY_VENUS, {
dataCmp: "Venus_GameData",
dataName: "gameData",
gameScene: "slot_venus_loading"
});
this.gameDataList.set(i.GLITZ_INFINITY, {
dataCmp: "Glitz_GameData",
dataName: "gameData",
gameScene: "solt_loading"
});
this.gameDataList.set(i.SLOT_GOWV2, {
hallScene: "",
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "godofwealth_v2_loading"
});
this.gameDataList.set(i.SLOT_CHICKEN, {
hallScene: "",
dataCmp: "cckn_GameData",
dataName: "gameData",
gameScene: "solt_chicken_loading"
});
this.gameDataList.set(i.SLOT_DRAGON5_HD, {
dataCmp: "DG_GameData",
dataName: "gameData",
gameScene: "Dragon5_HD_loading"
});
this.gameDataList.set(i.SLOT_ZHAOYUN, {
dataCmp: "SlotMachine_GameData",
dataName: "gameData",
gameScene: "zhaoyun_loading",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_MOMENT_OF_WONDER, {
dataCmp: "MomentOfWonder_GameData",
dataName: "gameData",
gameScene: "MomentOfWonder_loading",
orientation: "portrait"
});
this.gameDataList.set(i.JALAPAND_DELIGHT, {
dataCmp: "JalapandDelight_GameData",
dataName: "gameData",
gameScene: "JalapandDelight_loading",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_THEMEPARKBLAST, {
dataCmp: "ThemeParkBlast_GameData",
dataName: "gameData",
gameScene: "ThemeParkBlast_loading",
cfgCmp: "ThemeParkBlast_Cfg",
mainScene: "ThemeParkBlast",
orientation: "portrait"
});
this.gameDataList.set(i.JALAPAND_DELIGHT, {
dataCmp: "JalapanDelight_GameData",
dataName: "gameData",
cfgCmp: "JalapandDelight_Cfg",
gameScene: "JalapandDelight_loading",
mainScene: "JalapandDelight",
orientation: "portrait"
});
this.gameDataList.set(i.MASKED_HERO, {
dataCmp: "MaskedHero_GameData",
dataName: "gameData",
cfgCmp: "MaskedHero_Cfg",
gameScene: "MaskedHero_loading",
mainScene: "MaskedHero",
orientation: "portrait"
});
this.gameDataList.set(i.LUCKY_BEE, {
dataCmp: "LuckyBee_GameData",
dataName: "gameData",
cfgCmp: "LuckyBee_Cfg",
gameScene: "LuckyBee_loading",
mainScene: "LuckyBee",
orientation: "portrait"
});
this.gameDataList.set(i.YEAR_OF_THE_RAT, {
dataCmp: "YearOfTheRat_GameData",
dataName: "gameData",
cfgCmp: "YearOfTheRat_Cfg",
gameScene: "YearOfTheRat_loading",
mainScene: "YearOfTheRat",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_SUNGODDESS, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "SunGoddess_Cfg",
gameScene: "SunGoddess_loading",
mainScene: "SunGoddess",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_BINGOMEOW, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "BingoMeow_Cfg",
gameScene: "BingoMeow_loading",
mainScene: "BingoMeow",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_TREASUREJUNGLE, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "TreasureJungle_Cfg",
gameScene: "TreasureJungle_loading",
mainScene: "TreasureJungle",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_PRINCECHARMING, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "PrinceCharming_Cfg",
gameScene: "PrinceCharming_loading",
mainScene: "PrinceCharming",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_HIGHPOWER, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "HighPower_Cfg",
gameScene: "HighPower_loading",
mainScene: "HighPower",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_BRILLIANTTREASURES, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "BrilliantTreasures_Cfg",
gameScene: "BrilliantTreasures_loading",
mainScene: "BrilliantTreasures",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_MAMMOTHGRANDGEMS, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "MammothGrandGems_Cfg",
gameScene: "MammothGrandGems_loading",
mainScene: "MammothGrandGems",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_MAMMOTHGRAND, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "MammothGrand_Cfg",
gameScene: "MammothGrand_loading",
mainScene: "MammothGrand",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_SPOOKYHALLOWEEN, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "SpookyHalloween_Cfg",
gameScene: "SpookyHalloween_loading",
mainScene: "SpookyHalloween",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_STONEAGEDTREASURE, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "StoneAgedTreasure_Cfg",
gameScene: "StoneAgedTreasure_loading",
mainScene: "StoneAgedTreasure",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_MONSTERCASH, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "MonsterCash_Cfg",
gameScene: "MonsterCash_loading",
mainScene: "MonsterCash",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_DOUBLECHILI, {
dataCmp: "DoubleChili_GameData",
dataName: "gameData",
cfgCmp: "DoubleChili_Cfg",
gameScene: "DoubleChili_loading",
mainScene: "DoubleChili",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_MAYADEORO, {
dataCmp: "MayaDeoro_GameData",
dataName: "gameData",
cfgCmp: "MayaDeoro_Cfg",
gameScene: "MayaDeoro_loading",
mainScene: "MayaDeoro",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_PRINCENEZHA, {
dataCmp: "PrinceNeZha_GameData",
dataName: "gameData",
cfgCmp: "PrinceNeZha_Cfg",
gameScene: "PrinceNeZha_loading",
mainScene: "PrinceNeZha",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_PIGGYHEIST, {
dataCmp: "PiggyHeist_GameData",
dataName: "gameData",
cfgCmp: "PiggyHeist_Cfg",
gameScene: "PiggyHeist_loading",
mainScene: "PiggyHeist",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_HOWLINGMOON, {
dataCmp: "HowlingMoon_GameData",
dataName: "gameData",
cfgCmp: "HowlingMoon_Cfg",
gameScene: "HowlingMoon_loading",
mainScene: "HowlingMoon",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_ALIENBUSTER, {
dataCmp: "AlienBuster_GameData",
dataName: "gameData",
cfgCmp: "AlienBuster_Cfg",
gameScene: "AlienBuster_loading",
mainScene: "AlienBuster",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_SUMO, {
dataCmp: "Sumo_GameData",
dataName: "gameData",
cfgCmp: "Sumo_Cfg",
gameScene: "Sumo_loading",
mainScene: "Sumo",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_THUMBELINA, {
dataCmp: "Thumbelina_GameData",
dataName: "gameData",
cfgCmp: "Thumbelina_Cfg",
gameScene: "Thumbelina_loading",
mainScene: "Thumbelina",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_DRAGONDIAMOND, {
dataCmp: "DragonDiamond_GameData",
dataName: "gameData",
cfgCmp: "DragonDiamond_Cfg",
gameScene: "DragonDiamond_loading",
mainScene: "DragonDiamond",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_LEPRECHAUNBLAST, {
dataCmp: "LeprechaunBlast_GameData",
dataName: "gameData",
cfgCmp: "LeprechaunBlast_Cfg",
gameScene: "LeprechaunBlast_loading",
mainScene: "LeprechaunBlast",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_AMERICANBILLIONAIRE, {
dataCmp: "AmericanBillionaire_GameData",
dataName: "gameData",
cfgCmp: "AmericanBillionaire_Cfg",
gameScene: "AmericanBillionaire_loading",
mainScene: "AmericanBillionaire",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_BEAUTYANDTHEBEAST, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "BeautyAndTheBeast_Cfg",
gameScene: "BeautyAndTheBeast_loading",
mainScene: "BeautyAndTheBeast",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_YEAROFGOLDENPIG, {
dataCmp: "YearOfGoldenPig_GameData",
dataName: "gameData",
cfgCmp: "YearOfGoldenPig_Cfg",
gameScene: "YearOfGoldenPig_loading",
mainScene: "YearOfGoldenPig",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_DOUBLENUGGETS, {
dataCmp: "DoubleNuggets_GameData",
dataName: "gameData",
cfgCmp: "DoubleNuggets_Cfg",
gameScene: "DoubleNuggets_loading",
mainScene: "DoubleNuggets",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_DOUBLETHUNDER, {
dataCmp: "DoubleThunder_GameData",
dataName: "gameData",
cfgCmp: "DoubleThunder_Cfg",
gameScene: "DoubleThunder_loading",
mainScene: "DoubleThunder",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_BEERFESTIVAL, {
dataCmp: "BeerFestival_GameData",
dataName: "gameData",
cfgCmp: "BeerFestival_Cfg",
gameScene: "BeerFestival_loading",
mainScene: "BeerFestival",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_INVINCIBLEGODDESS, {
dataCmp: "InvincibleGoddess_GameData",
dataName: "gameData",
cfgCmp: "InvincibleGoddess_Cfg",
gameScene: "InvincibleGoddess_loading",
mainScene: "InvincibleGoddess",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_BIGDUEL, {
dataCmp: "BigDuel_GameData",
dataName: "gameData",
cfgCmp: "BigDuel_Cfg",
gameScene: "BigDuel_loading",
mainScene: "BigDuel",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_DOUBLEAGENT, {
dataCmp: "DoubleAgent_GameData",
dataName: "gameData",
cfgCmp: "DoubleAgent_Cfg",
gameScene: "DoubleAgent_loading",
mainScene: "DoubleAgent",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_LUCKYCAT, {
dataCmp: "LuckyCat_GameData",
dataName: "gameData",
cfgCmp: "LuckyCat_Cfg",
gameScene: "LuckyCat_Loading",
mainScene: "LuckyCat",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_VAMPIRECOUNT, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "VampireCount_Cfg",
gameScene: "VampireCount_loading",
mainScene: "VampireCount",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_TAVERNWITCH, {
dataCmp: "TavernWitch_GameData",
dataName: "gameData",
cfgCmp: "TavernWitch_Cfg",
gameScene: "TavernWitch_loading",
mainScene: "TavernWitch",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_BLADEMASTERTOKUGAWA, {
dataCmp: "BladeMasterTokugawa_GameData",
dataName: "gameData",
cfgCmp: "BladeMasterTokugawa_Cfg",
gameScene: "BladeMasterTokugawa_loading",
mainScene: "BladeMasterTokugawa",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_SIXTHDAYTHEDEMON, {
dataCmp: "SixthDayTheDemon_GameData",
dataName: "gameData",
cfgCmp: "SixthDayTheDemon_Cfg",
gameScene: "SixthDayTheDemon_loading",
mainScene: "SixthDayTheDemon",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_THEMAGICHANZO, {
dataCmp: "TheMagicHanzo_GameData",
dataName: "gameData",
cfgCmp: "TheMagicHanzo_Cfg",
gameScene: "TheMagicHanzo_loading",
mainScene: "TheMagicHanzo",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_MINAMOTONOYOSHITSUNE, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "MinamotoNoYoshitsune_Cfg",
gameScene: "MinamotoNoYoshitsune_loading",
mainScene: "MinamotoNoYoshitsune",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_GANGSTERGODFATHER, {
dataCmp: "GangsterGodfather_GameData",
dataName: "gameData",
cfgCmp: "GangsterGodfather_Cfg",
gameScene: "GangsterGodfather_loading",
mainScene: "GangsterGodfather",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_FATHEROFINVENTION, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "FatherOfInvention_Cfg",
gameScene: "FatherOfInvention_loading",
mainScene: "FatherOfInvention",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_WESTCOWBOY, {
dataCmp: "WestCowboy_GameData",
dataName: "gameData",
cfgCmp: "WestCowboy_Cfg",
gameScene: "WestCowboy_loading",
mainScene: "WestCowboy",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_RISINGSUNTHEGREATKING, {
dataCmp: "RisingSunTheGreatKing_GameData",
dataName: "gameData",
cfgCmp: "RisingSunTheGreatKing_Cfg",
gameScene: "RisingSunTheGreatKing_loading",
mainScene: "RisingSunTheGreatKing",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_POLITICALSTRATEGIST, {
dataCmp: "PoliticalStrategist_GameData",
dataName: "gameData",
cfgCmp: "PoliticalStrategist_Cfg",
gameScene: "PoliticalStrategist_loading",
mainScene: "PoliticalStrategist",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_MULAN, {
dataCmp: "Mulan_GameData",
dataName: "gameData",
cfgCmp: "Mulan_Cfg",
gameScene: "Mulan_loading",
mainScene: "Mulan",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_GENGHISKHAN, {
dataCmp: "GenghisKhan_GameData",
dataName: "gameData",
cfgCmp: "GenghisKhan_Cfg",
gameScene: "GenghisKhan_loading",
mainScene: "GenghisKhan",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_THECENTAUR, {
dataCmp: "TheCentaur_GameData",
dataName: "gameData",
cfgCmp: "TheCentaur_Cfg",
gameScene: "TheCentaur_loading",
mainScene: "TheCentaur",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_CHANGE, {
dataCmp: "Change_GameData",
dataName: "gameData",
cfgCmp: "Change_Cfg",
gameScene: "Change_loading",
mainScene: "Change",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_ALIENMONSTER, {
dataCmp: "AlienMonster_GameData",
dataName: "gameData",
cfgCmp: "AlienMonster_Cfg",
gameScene: "AlienMonster_loading",
mainScene: "AlienMonster",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_BASKETBALLKING, {
dataCmp: "BasketballKing_GameData",
dataName: "gameData",
cfgCmp: "BasketballKing_Cfg",
gameScene: "BasketballKing_loading",
mainScene: "BasketballKing",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_JAPANESESINGER, {
dataCmp: "JapaneseSinger_GameData",
dataName: "gameData",
cfgCmp: "JapaneseSinger_Cfg",
gameScene: "JapaneseSinger_loading",
mainScene: "JapaneseSinger",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_NEWKYLIN, {
dataCmp: "NewKylin_GameData",
dataName: "gameData",
cfgCmp: "NewKylin_Cfg",
gameScene: "NewKylin_loading",
mainScene: "NewKylin",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_ODYSSEUS, {
dataCmp: "Odysseus_GameData",
dataName: "gameData",
cfgCmp: "Odysseus_Cfg",
gameScene: "Odysseus_loading",
mainScene: "Odysseus",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_PRINCESSPEA, {
dataCmp: "PrincessPea_GameData",
dataName: "gameData",
cfgCmp: "PrincessPea_Cfg",
gameScene: "PrincessPea_loading",
mainScene: "PrincessPea",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_HERA, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "Hera_Cfg",
gameScene: "Hera_loading",
mainScene: "Hera",
orientation: "portrait"
});
this.gameDataList.set(i.SUSHI_LOVER, {
dataCmp: "SushiLover_GameData",
dataName: "gameData",
cfgCmp: "SushiLover_Cfg",
gameScene: "SushiLover_Loading",
mainScene: "SushiLover",
orientation: "portrait"
});
this.gameDataList.set(i.FORTUNE_GENIE, {
dataCmp: "FortuneGenie_GameData",
dataName: "gameData",
cfgCmp: "FortuneGenie_Cfg",
gameScene: "fortuneGenie_Loading",
mainScene: "fortuneGenie",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_QUEENOFSEA, {
dataCmp: "queenSea_GameData",
dataName: "gameData",
cfgCmp: "queenSea_Cfg",
gameScene: "queenOfSea_loading",
mainScene: "queenOfSea",
orientation: "portrait"
});
this.gameDataList.set(i.GOLD_ISLAND_TREASURE, {
dataCmp: "goldTreasure_GameData",
dataName: "gameData",
cfgCmp: "goldTreasure_Cfg",
gameScene: "goldTreasure_loading",
mainScene: "goldTreasure",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_SUPER_WICKED_BLAST, {
dataCmp: "SuperWickedBlast_GameData",
dataName: "gameData",
gameScene: "SuperWickedBlast_loading",
orientation: "portrait"
});
this.gameDataList.set(i.THUNDER_MUSTANG, {
dataCmp: "ThunderMustang_GameData",
dataName: "gameData",
cfgCmp: "ThunderMustang_Cfg",
gameScene: "ThunderMustang_loading",
mainScene: "ThunderMustang",
orientation: "portrait"
});
this.gameDataList.set(i.POWER_DRAGON, {
dataCmp: "PowerDragon_GameData",
dataName: "gameData",
cfgCmp: "PowerDragon_Cfg",
gameScene: "PowerDragon_loading",
mainScene: "PowerDragon",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_SUPER_WICKED_BLAST, {
dataCmp: "SuperWickedBlast_GameData",
dataName: "gameData",
cfgCmp: "SuperWickedBlast_Cfg",
gameScene: "SuperWickedBlast_loading",
mainScene: "SuperWickedBlast",
orientation: "portrait"
});
this.gameDataList.set(i.HOLIDAY_FRENZY, {
dataCmp: "holidayFrenzy_GameData",
dataName: "gameData",
cfgCmp: "holidayFrenzy_Cfg",
gameScene: "holidayFrenzy_loading",
mainScene: "holidayFrenzy",
orientation: "portrait"
});
this.gameDataList.set(i.JUNGLE_KING, {
dataCmp: "JungleKing_GameData",
dataName: "gameData",
cfgCmp: "JungleKing_Cfg",
gameScene: "JungleKing_loading",
mainScene: "JungleKing",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_SMOKINGHOTPICHES, {
dataCmp: "SmokingHotPiches_GameData",
dataName: "gameData",
cfgCmp: "SmokingHotPiches_Cfg",
gameScene: "SmokingHotPiches_loading",
mainScene: "SmokingHotPiches",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_RISINGMEDUSA, {
dataCmp: "RisingMedusa_GameData",
dataName: "gameData",
cfgCmp: "RisingMedusa_Cfg",
gameScene: "RisingMedusa_loading",
mainScene: "RisingMedusa",
orientation: "portrait"
});
this.gameDataList.set(i.SPEED_FIRE, {
dataCmp: "SpeedFire_GameData",
dataName: "gameData",
cfgCmp: "SpeedFire_Cfg",
gameScene: "SpeedFire_Loading",
mainScene: "SpeedFire",
orientation: "portrait"
});
this.gameDataList.set(i.LET_IS_PARTY, {
dataCmp: "LetIsParty_GameData",
dataName: "gameData",
cfgCmp: "LetIsParty_Cfg",
gameScene: "LetIsParty_loading",
mainScene: "LetIsParty",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_ROCKING_DISCO, {
dataCmp: "RockingDisco_GameData",
dataName: "gameData",
cfgCmp: "RockingDisco_Cfg",
gameScene: "RockingDisco_loading",
mainScene: "RockingDisco",
orientation: "portrait"
});
this.gameDataList.set(i.ADVENTURE_IN_SPACE, {
dataCmp: "AdventureInSpace_GameData",
dataName: "gameData",
cfgCmp: "AdventureInSpace_Cfg",
gameScene: "AdventureInSpace_loading",
mainScene: "AdventureInSpace",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_GRANDGEMINI, {
dataCmp: "GrandGemini_GameData",
dataName: "gameData",
cfgCmp: "GrandGemini_Cfg",
gameScene: "GrandGemini_loading",
mainScene: "GrandGemini",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_CUPIDISCRUSH, {
dataCmp: "CupidIsCrush_GameData",
dataName: "gameData",
cfgCmp: "CupidIsCrush_Cfg",
gameScene: "CupidIsCrush_loading",
mainScene: "CupidIsCrush",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_CUPIDCRUSHDELUXE, {
dataCmp: "CupidCrushDeluxe_GameData",
dataName: "gameData",
cfgCmp: "CupidCrushDeluxe_Cfg",
gameScene: "CupidCrushDeluxe_loading",
mainScene: "CupidCrushDeluxe",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_FORTUNEWILDDELUXE, {
dataCmp: "FortuneWildDeluxe_GameData",
dataName: "gameData",
cfgCmp: "FortuneWildDeluxe_Cfg",
gameScene: "FortuneWildDeluxe_loading",
mainScene: "FortuneWildDeluxe",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_CANDY_CLASH, {
dataCmp: "CandyClash_GameData",
dataName: "gameData",
cfgCmp: "CandyClash_Cfg",
gameScene: "CandyClash_loading",
mainScene: "CandyClash",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_SPLENDID_ISLAND, {
dataCmp: "SplendidIsland_GameData",
dataName: "gameData",
cfgCmp: "SplendidIsland_Cfg",
gameScene: "SplendidIsland_loading",
mainScene: "SplendidIsland",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_SPLENDIDISLAND_DELUXE, {
dataCmp: "SplendidIslandDeluxe_GameData",
dataName: "gameData",
cfgCmp: "SplendidIslandDeluxe_Cfg",
gameScene: "SplendidIslandDeluxe_loading",
mainScene: "SplendidIslandDeluxe",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_EASTERNRICHES, {
dataCmp: "EasternRiches_GameData",
dataName: "gameData",
cfgCmp: "EasternRiches_Cfg",
gameScene: "EasternRiches_loading",
mainScene: "EasternRiches",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_KINGOFOLYMPUS, {
dataCmp: "KingOfOlympus_GameData",
dataName: "gameData",
cfgCmp: "KingOfOlympus_Cfg",
gameScene: "KingOfOlympus_loading",
mainScene: "KingOfOlympus",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_ZUES, {
dataCmp: "Zues_GameData",
dataName: "gameData",
cfgCmp: "Zues_Cfg",
gameScene: "Zues_loading",
mainScene: "Zues",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_GODOFFIRE, {
dataCmp: "GodOfFire_GameData",
dataName: "gameData",
cfgCmp: "GodOfFire_Cfg",
gameScene: "GodOfFire_loading",
mainScene: "GodOfFire",
orientation: "portrait"
});
this.gameDataList.set(i.GORGEOUS_CLEOPATRA, {
dataCmp: "GorgeouscLeopatra_GameData",
dataName: "gameData",
cfgCmp: "GorgeouscLeopatra_Cfg",
gameScene: "Gorgeouscleopatra_Loading",
mainScene: "Gorgeouscleopatra",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_FORTUNEGONG, {
dataCmp: "FortuneGong_GameData",
dataName: "gameData",
cfgCmp: "FortuneGong_Cfg",
gameScene: "FortuneGong_loading",
mainScene: "FortuneGong",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_EGYPTIAN_FANTASY, {
dataCmp: "EgyptianFantasy_GameData",
dataName: "gameData",
cfgCmp: "EgyptianFantasy_Cfg",
gameScene: "EgyptianFantasy_loading",
mainScene: "EgyptianFantasy",
orientation: "portrait"
});
this.gameDataList.set(i.MAJESTIC_PANDA, {
dataCmp: "Panda_GameData",
dataName: "gameData",
cfgCmp: "Panda_Cfg",
gameScene: "Panda_Loading",
mainScene: "Panda",
orientation: "portrait"
});
this.gameDataList.set(i.CANDY_MAGIC, {
dataCmp: "CandyMagic_GameData",
dataName: "gameData",
cfgCmp: "CandyMagic_Cfg",
gameScene: "CandyMagic_loading",
mainScene: "CandyMagic",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_FORTUNEWHEELDELUXE, {
dataCmp: "FortuneWheelDeluxe_GameData",
dataName: "gameData",
cfgCmp: "FortuneWheelDeluxe_Cfg",
gameScene: "FortuneWheelDeluxe_loading",
mainScene: "FortuneWheelDeluxe",
orientation: "portrait"
});
this.gameDataList.set(i.SLOTS_TOWER, {
dataCmp: "SlotsTower_GameData",
dataName: "gameData",
cfgCmp: "SlotsTower_Cfg",
gameScene: "SlotsTower_Loading",
mainScene: "SlotsTower",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_CRICUS_CARNIVAL, {
dataCmp: "CircusCarnival_GameData",
dataName: "gameData",
cfgCmp: "CircusCarnival_Cfg",
gameScene: "CircusCarnival_loading",
mainScene: "CircusCarnival",
orientation: "portrait"
});
this.gameDataList.set(i.HOT_HOT_DRUMS, {
dataCmp: "HotHotDrums_GameData",
dataName: "gameData",
cfgCmp: "HotHotDrums_Cfg",
gameScene: "HotHotDrums_loading",
mainScene: "HotHotDrums",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_RAPID_PLATINUM_PAY, {
dataCmp: "RapidPlatinumPay_GameData",
dataName: "gameData",
cfgCmp: "RapidPlatinumPay_Cfg",
gameScene: "RapidPlatinumPay_loading",
mainScene: "RapidPlatinumPay",
orientation: "portrait"
});
this.gameDataList.set(i.DIAMOND_FOREST, {
dataCmp: "DiamondForest_GameData",
dataName: "gameData",
cfgCmp: "DiamondForest_Cfg",
gameScene: "DiamondForest_Loading",
mainScene: "DiamondForest2",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_BEER_HALL, {
dataCmp: "BeerHall_GameData",
dataName: "gameData",
cfgCmp: "BeerHall_Cfg",
gameScene: "BeerHall_loading",
mainScene: "BeerHall",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_SPACE_CAT, {
dataCmp: "SpaceCat_GameData",
dataName: "gameData",
cfgCmp: "SpaceCat_Cfg",
gameScene: "SpaceCat_loading",
mainScene: "SpaceCat",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_MOMENT_OF_WONDER, {
dataCmp: "MomentOfWonder_GameData",
dataName: "gameData",
cfgCmp: "MomentOfWonder_Cfg",
gameScene: "MomentOfWonder_loading",
mainScene: "MomentOfWonder",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_BONIE_CLYDE, {
dataCmp: "BonieClyde_GameData",
dataName: "gameData",
cfgCmp: "BonieClyde_Cfg",
gameScene: "BonieClyde_loading",
mainScene: "BonieClyde",
orientation: "portrait"
});
this.gameDataList.set(i.REGAL_TIGER, {
dataCmp: "RegalTiger_GameData",
dataName: "gameData",
cfgCmp: "RegalTiger_Cfg",
gameScene: "RegalTiger2_Loading",
mainScene: "RegalTiger2",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_WHEREISSANTACLAUS, {
dataCmp: "WhereIsSantaClaus_GameData",
dataName: "gameData",
cfgCmp: "WhereIsSantaClaus_Cfg",
gameScene: "WhereIsSantaClaus_loading",
mainScene: "WhereIsSantaClaus",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_LEPRECHAUNCOINS, {
dataCmp: "LeprechaunCoins_GameData",
dataName: "gameData",
cfgCmp: "LeprechaunCoins_Cfg",
gameScene: "LeprechaunCoins_Loading",
mainScene: "LeprechaunCoins",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_PELICAN_QUEST, {
dataCmp: "PelicanQuest_GameData",
dataName: "gameData",
cfgCmp: "PelicanQuest_Cfg",
gameScene: "PelicanQuest_loading",
mainScene: "PelicanQuest",
orientation: "portrait"
});
this.gameDataList.set(i.ICYWOLF, {
dataCmp: "IcyWolf_GameData",
dataName: "gameData",
cfgCmp: "IcyWolf_Cfg",
gameScene: "IcyWolf_Loading",
mainScene: "IcyWolf",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_ZOMBLE_NATION, {
dataCmp: "ZombleNation_GameData",
dataName: "gameData",
cfgCmp: "ZombleNation_Cfg",
gameScene: "ZombleNation_loading",
mainScene: "ZombleNation",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_ROYALPUPPIES, {
dataCmp: "RoyalPuppies_GameData",
dataName: "gameData",
cfgCmp: "RoyalPuppies_Cfg",
gameScene: "RoyalPuppies_loading",
mainScene: "RoyalPuppies",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_RISEOFEGYPT, {
dataCmp: "RiseOfEgypt_GameData",
dataName: "gameData",
cfgCmp: "RiseOfEgypt_Cfg",
gameScene: "RiseOfEgypt_loading",
mainScene: "RiseOfEgypt",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_FORTUNETRAINDELUXE, {
dataCmp: "FortuneTrainDeluxe_GameData",
dataName: "gameData",
cfgCmp: "FortuneTrainDeluxe_Cfg",
gameScene: "FortuneTrainDeluxe_loading",
mainScene: "FortuneTrainDeluxe",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_MIGHTYATLANTIS, {
dataCmp: "MightyAtlantis_GameData",
dataName: "gameData",
cfgCmp: "MightyAtlantis_Cfg",
gameScene: "MightyAtlantis_loading",
mainScene: "MightyAtlantis",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_NEVERLANDFANTASY, {
dataCmp: "NeverlandFantasy_GameData",
dataName: "gameData",
cfgCmp: "NeverlandFantasy_Cfg",
gameScene: "NeverlandFantasy_loading",
mainScene: "NeverlandFantasy",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_WEALTHOFPANDA, {
dataCmp: "WealthOfPanda_GameData",
dataName: "gameData",
cfgCmp: "WealthOfPanda_Cfg",
gameScene: "WealthOfPanda_loading",
mainScene: "WealthOfPanda",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_MAGICORB, {
dataCmp: "MagicOrb_GameData",
dataName: "gameData",
cfgCmp: "MagicOrb_Cfg",
gameScene: "MagicOrb_loading",
mainScene: "MagicOrb",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_KANGAROOS, {
dataCmp: "Kangaroos_GameData",
dataName: "gameData",
cfgCmp: "Kangaroos_Cfg",
gameScene: "Kangaroos_loading",
mainScene: "Kangaroos",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_FORTUNETREE, {
dataCmp: "FortuneTree_GameData",
dataName: "gameData",
cfgCmp: "FortuneTree_Cfg",
gameScene: "FortuneTree_loading",
mainScene: "FortuneTree",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_THELIONSJACKPOT, {
dataCmp: "TheLionsjackpot_GameData",
dataName: "gameData",
cfgCmp: "TheLionsjackpot_Cfg",
gameScene: "TheLionsjackpot_loading",
mainScene: "TheLionsjackpot",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_VOLCANOFURY, {
dataCmp: "VolcanoFury_GameData",
dataName: "gameData",
cfgCmp: "VolcanoFury_Cfg",
gameScene: "VolcanoFury_loading",
mainScene: "VolcanoFury",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_CAPTAINJACKPOT, {
dataCmp: "CaptainJackpot_GameData",
dataName: "gameData",
cfgCmp: "CaptainJackpot_Cfg",
gameScene: "CaptainJackpot_loading",
mainScene: "CaptainJackpot",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_HEROINEMULAN, {
dataCmp: "HeroineMulan_GameData",
dataName: "gameData",
cfgCmp: "HeroineMulan_Cfg",
gameScene: "HeroineMulan_loading",
mainScene: "HeroineMulan",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_KINGOFSIBERIAN, {
dataCmp: "KingOfSiberian_GameData",
dataName: "gameData",
cfgCmp: "KingOfSiberian_Cfg",
gameScene: "KingOfSiberian_loading",
mainScene: "KingOfSiberian",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_LEGENDOFOZ, {
dataCmp: "LegendOfOz_GameData",
dataName: "gameData",
cfgCmp: "LegendOfOz_Cfg",
gameScene: "LegendOfOz_loading",
mainScene: "LegendOfOz",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_ULTIMATETIKILINK, {
dataCmp: "UltimateTikiLink_GameData",
dataName: "gameData",
cfgCmp: "UltimateTikiLink_Cfg",
gameScene: "UltimateTikiLink_loading",
mainScene: "UltimateTikiLink",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_FEANNIESHOW, {
dataCmp: "FeannieShow_GameData",
dataName: "gameData",
cfgCmp: "FeannieShow_Cfg",
gameScene: "FeannieShow_loading",
mainScene: "FeannieShow",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_POWEROFTHEKRAKEN, {
dataCmp: "PowerOfTheKraken_GameData",
dataName: "gameData",
cfgCmp: "PowerOfTheKraken_Cfg",
gameScene: "PowerOfTheKraken_loading",
mainScene: "PowerOfTheKraken",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_MEGA_VAULT_BILLIONAIRE, {
dataCmp: "MegaVaultBillionaire_GameData",
dataName: "gameData",
cfgCmp: "MegaVaultBillionaire_Cfg",
gameScene: "MegaVaultBillionaire_loading",
mainScene: "MegaVaultBillionaire",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_PRINCE_CHARMING_DELUXE, {
dataCmp: "PrinceCharmingDeluxe_GameData",
dataName: "gameData",
cfgCmp: "PrinceCharmingDeluxe_Cfg",
gameScene: "PrinceCharmingDeluxe_loading",
mainScene: "PrinceCharmingDeluxe",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_FEAMIN_QUEEN, {
dataCmp: "FeaminQueen_GameData",
dataName: "gameData",
cfgCmp: "FeaminQueen_Cfg",
gameScene: "FeaminQueen_loading",
mainScene: "FeaminQueen",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_LORDOFTHUNDER, {
dataCmp: "LordOfThunder_GameData",
dataName: "gameData",
cfgCmp: "LordOfThunder_Cfg",
gameScene: "LordOfThunder_loading",
mainScene: "LordOfThunder",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_G_CLEOPATRA, {
dataCmp: "G_Cleopatra_GameData",
dataName: "gameData",
cfgCmp: "G_Cleopatra_Cfg",
gameScene: "G_Cleopatra_loading",
mainScene: "G_Cleopatra",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_LEGENDOFJOANOFARC, {
dataCmp: "LegendOfJoanOfArc_GameData",
dataName: "gameData",
cfgCmp: "LegendOfJoanOfArc_Cfg",
gameScene: "LegendOfJoanOfArc_loading",
mainScene: "LegendOfJoanOfArc",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_GODDESSOFDEATH, {
dataCmp: "GoddessOfDeath_GameData",
dataName: "gameData",
cfgCmp: "GoddessOfDeath_Cfg",
gameScene: "GoddessOfDeath_loading",
mainScene: "GoddessOfDeath",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_ELVESBLESSING, {
dataCmp: "ElvesBlessing_GameData",
dataName: "gameData",
cfgCmp: "ElvesBlessing_Cfg",
gameScene: "ElvesBlessing_Loading",
mainScene: "ElvesBlessing",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_THEEVIL, {
dataCmp: "TheEvil_GameData",
dataName: "gameData",
cfgCmp: "TheEvil_Cfg",
gameScene: "TheEvil_loading",
mainScene: "TheEvil",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_THEROUNDTABLEKNIGHTSEXPLORE, {
dataCmp: "TheRoundTableKnightsExplore_GameData",
dataName: "gameData",
cfgCmp: "TheRoundTableKnightsExplore_Cfg",
gameScene: "TheRoundTableKnightsExplore_loading",
mainScene: "TheRoundTableKnightsExplore",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_ODINSANGER, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "OdinsAnger_Cfg",
gameScene: "OdinsAnger_loading",
mainScene: "OdinsAnger",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_LORDCAESAR, {
dataCmp: "LordCaesar_GameData",
dataName: "gameData",
cfgCmp: "LordCaesar_Cfg",
gameScene: "LordCaesar_loading",
mainScene: "LordCaesar",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_LOKI, {
dataCmp: "Loki_GameData",
dataName: "gameData",
cfgCmp: "Loki_Cfg",
gameScene: "Loki_loading",
mainScene: "Loki",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_FREY, {
dataCmp: "Frey_GameData",
dataName: "gameData",
cfgCmp: "Frey_Cfg",
gameScene: "Frey_loading",
mainScene: "Frey",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_ALEXANDER, {
dataCmp: "Alexander_GameData",
dataName: "gameData",
cfgCmp: "Alexander_Cfg",
gameScene: "Alexander_loading",
mainScene: "Alexander",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_FENRIR, {
dataCmp: "Fenrir_GameData",
dataName: "gameData",
cfgCmp: "Fenrir_Cfg",
gameScene: "Fenrir_loading",
mainScene: "Fenrir",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_SPHINX, {
dataCmp: "Sphinx_GameData",
dataName: "gameData",
cfgCmp: "Sphinx_Cfg",
gameScene: "Sphinx_loading",
mainScene: "Sphinx",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_CAOCAO, {
dataCmp: "CaoCao_GameData",
dataName: "gameData",
cfgCmp: "CaoCao_Cfg",
gameScene: "CaoCao_loading",
mainScene: "CaoCao",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_SUNWUKONG, {
dataCmp: "SunWuKong_GameData",
dataName: "gameData",
cfgCmp: "SunWuKong_Cfg",
gameScene: "SunWuKong_loading",
mainScene: "SunWuKong",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_JORMRNGANDER, {
dataCmp: "Jormengander_GameData",
dataName: "gameData",
cfgCmp: "Jormengander_Cfg",
gameScene: "Jormengander_loading",
mainScene: "Jormengander",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_SHAKYAMUNI, {
dataCmp: "Shakyamuni_GameData",
dataName: "gameData",
cfgCmp: "Shakyamuni_Cfg",
gameScene: "Shakyamuni_loading",
mainScene: "Shakyamuni",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_GALILEO, {
dataCmp: "Galileo_GameData",
dataName: "gameData",
cfgCmp: "Galileo_Cfg",
gameScene: "Galileo_loading",
mainScene: "Galileo",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_BADER, {
dataCmp: "Bader_GameData",
dataName: "gameData",
cfgCmp: "Bader_Cfg",
gameScene: "Bader_loading",
mainScene: "Bader",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_HESTIA, {
dataCmp: "Hestia_GameData",
dataName: "gameData",
cfgCmp: "Hestia_Cfg",
gameScene: "Hestia_loading",
mainScene: "Hestia",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_HEPHAESTUS, {
dataCmp: "Hephaestus_GameData",
dataName: "gameData",
cfgCmp: "Hephaestus_Cfg",
gameScene: "Hephaestus_loading",
mainScene: "Hephaestus",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_ROMANTICPRINCESS, {
dataCmp: "RomanticPrincess_GameData",
dataName: "gameData",
cfgCmp: "RomanticPrincess_Cfg",
gameScene: "RomanticPrincess_loading",
mainScene: "RomanticPrincess",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_NEWMULAN, {
dataCmp: "NewMulan_GameData",
dataName: "gameData",
cfgCmp: "NewMulan_Cfg",
gameScene: "NewMulan_loading",
mainScene: "NewMulan",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_YMER, {
dataCmp: "Ymer_GameData",
dataName: "gameData",
cfgCmp: "Ymer_Cfg",
gameScene: "Ymer_loading",
mainScene: "Ymer",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_GODOFWAR, {
dataCmp: "GodOfWar_GameData",
dataName: "gameData",
cfgCmp: "GodOfWar_Cfg",
gameScene: "GodOfWar_loading",
mainScene: "GodOfWar",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_LITTLEREDRIDINGHOOD, {
dataCmp: "LittleRedRidingHood_GameData",
dataName: "gameData",
cfgCmp: "LittleRedRidingHood_Cfg",
gameScene: "LittleRedRidingHood_loading",
mainScene: "LittleRedRidingHood",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_PESEUS, {
dataCmp: "Peseus_GameData",
dataName: "gameData",
cfgCmp: "Peseus_Cfg",
gameScene: "Peseus_loading",
mainScene: "Peseus",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_PRINCE, {
dataCmp: "Prince_GameData",
dataName: "gameData",
cfgCmp: "Prince_Cfg",
gameScene: "Prince_loading",
mainScene: "Prince",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_ARCHER, {
dataCmp: "Archer_GameData",
dataName: "gameData",
cfgCmp: "Archer_Cfg",
gameScene: "Archer_loading",
mainScene: "Archer",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_ALIBABA, {
dataCmp: "Alibaba_GameData",
dataName: "gameData",
cfgCmp: "Alibaba_Cfg",
gameScene: "Alibaba_loading",
mainScene: "Alibaba",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_XERXES, {
dataCmp: "Xerxes_GameData",
dataName: "gameData",
cfgCmp: "Xerxes_Cfg",
gameScene: "Xerxes_loading",
mainScene: "Xerxes",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_SKYGARDEN, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "Skygarden_Cfg",
gameScene: "Skygarden_loading",
mainScene: "Skygarden",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_SINBAD, {
dataCmp: "Sinbad_GameData",
dataName: "gameData",
cfgCmp: "Sinbad_Cfg",
gameScene: "Sinbad_loading",
mainScene: "Sinbad",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_G_CLEOPATRA_a, {
dataCmp: "G_Cleopatra_GameData",
dataName: "gameData",
cfgCmp: "G_Cleopatra_Cfg",
gameScene: "G_Cleopatra_loading",
mainScene: "G_Cleopatra",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_LAMP_OF_ALADDIN_a, {
dataCmp: "LampOfAladdin_GameData",
dataName: "gameData",
cfgCmp: "LampOfAladdin_Cfg",
gameScene: "LampOfAladdin_loading",
mainScene: "LampOfAladdin",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_SPHINX_a, {
dataCmp: "Sphinx_GameData",
dataName: "gameData",
cfgCmp: "Sphinx_Cfg",
gameScene: "Sphinx_loading",
mainScene: "Sphinx",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_JIANNIANGCHRISTMAS, {
dataCmp: "JianniangChristmas_GameData",
dataName: "gameData",
cfgCmp: "JianniangChristmas_Cfg",
gameScene: "JianniangChristmas_loading",
mainScene: "JianniangChristmas",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_RISING_PEGASUS, {
dataCmp: "RisingPegasus_GameData",
dataName: "gameData",
cfgCmp: "RisingPegasus_Cfg",
gameScene: "RisingPegasus_loading",
mainScene: "RisingPegasus",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_GOLD_RUSH_DELUXE, {
dataCmp: "GoldRushDeluxe_GameData",
dataName: "gameData",
cfgCmp: "GoldRushDeluxe_Cfg",
gameScene: "GoldRushDeluxe_loading",
mainScene: "GoldRushDeluxe",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_GODNESS_OF_LOVE, {
dataCmp: "GodnessOfLove_GameData",
dataName: "gameData",
cfgCmp: "GodnessOfLove_Cfg",
gameScene: "GodnessOfLove_loading",
mainScene: "GodnessOfLove",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_POSEIDON, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "Poseidon_Cfg",
gameScene: "Poseidon_loading",
mainScene: "Poseidon",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_NMEDUSA, {
dataCmp: "Nmedusa_GameData",
dataName: "gameData",
cfgCmp: "Nmedusa_Cfg",
gameScene: "Nmedusa_loading",
mainScene: "Nmedusa",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_WARSHIP, {
dataCmp: "Warship_GameData",
dataName: "gameData",
cfgCmp: "Warship_Cfg",
gameScene: "Warship_loading",
mainScene: "Warship",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_ATHENA, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "Athena_Cfg",
gameScene: "Athena_loading",
mainScene: "Athena",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_THANKSGIVINGPARTY, {
dataCmp: "ThanksGivingParty_GameData",
dataName: "gameData",
cfgCmp: "ThanksGivingParty_Cfg",
gameScene: "ThanksGivingParty_loading",
mainScene: "ThanksGivingParty",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_PENGUINBOUNTY, {
dataCmp: "PenguinBounty_GameData",
dataName: "gameData",
cfgCmp: "PenguinBounty_Cfg",
gameScene: "PenguinBounty_loading",
mainScene: "PenguinBounty",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_MERMAID_PEARLS, {
dataCmp: "MermaidAndPearls_GameData",
dataName: "gameData",
cfgCmp: "MermaidAndPearls_Cfg",
gameScene: "MermaidAndPearls_loading",
mainScene: "MermaidAndPearls",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_CLOWN, {
dataCmp: "Clown_GameData",
dataName: "gameData",
cfgCmp: "Clown_Cfg",
gameScene: "Clown_loading",
mainScene: "Clown",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_THEGODOFFORTUNE, {
dataCmp: "TheGodOfFortune_GameData",
dataName: "gameData",
cfgCmp: "TheGodOfFortune_Cfg",
gameScene: "TheGodOfFortune_loading",
mainScene: "TheGodOfFortune",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_INTERSTELLAR, {
dataCmp: "Interstellar_GameData",
dataName: "gameData",
cfgCmp: "Interstellar_Cfg",
gameScene: "Interstellar_loading",
mainScene: "Interstellar",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_KING_KONG, {
dataCmp: "KingKong_GameData",
dataName: "gameData",
cfgCmp: "KingKong_Cfg",
gameScene: "KingKong_loading",
mainScene: "KingKong",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_POWER_OF_ZEUS, {
dataCmp: "PowerOfZeus_GameData",
dataName: "gameData",
cfgCmp: "PowerOfZeus_Cfg",
gameScene: "PowerOfZeus_loading",
mainScene: "PowerOfZeus",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_FLOWERY_PIXIE, {
dataCmp: "FloweryPixie_GameData",
dataName: "gameData",
cfgCmp: "FloweryPixie_Cfg",
gameScene: "FloweryPixie_loading",
mainScene: "FloweryPixie",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_EMPEROR_QIN, {
dataCmp: "EmperorQin_GameData",
dataName: "gameData",
cfgCmp: "EmperorQin_Cfg",
gameScene: "EmperorQin_loading",
mainScene: "EmperorQin",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_MAGICIAN_NEW, {
dataCmp: "Magician_GameData",
dataName: "gameData",
cfgCmp: "Magician_Cfg",
gameScene: "Magician_loading",
mainScene: "Magician",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_FANTASY_CHOCOLATE_FACTORY, {
dataCmp: "FantasyChocolateFactory_GameData",
dataName: "gameData",
cfgCmp: "FantasyChocolateFactory_Cfg",
gameScene: "FantasyChocolateFactory_loading",
mainScene: "FantasyChocolateFactory",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_THE_LION, {
dataCmp: "TheLion_GameData",
dataName: "gameData",
cfgCmp: "TheLion_Cfg",
gameScene: "TheLion_loading",
mainScene: "TheLion",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_THE_PANDA, {
dataCmp: "ThePanda_GameData",
dataName: "gameData",
cfgCmp: "ThePanda_Cfg",
gameScene: "ThePanda_loading",
mainScene: "ThePanda",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_THE_UNICORN, {
dataCmp: "TheUnicorn_GameData",
dataName: "gameData",
cfgCmp: "TheUnicorn_Cfg",
gameScene: "TheUnicorn_loading",
mainScene: "TheUnicorn",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_LAMP_OF_ALADDIN, {
dataCmp: "LampOfAladdin_GameData",
dataName: "gameData",
cfgCmp: "LampOfAladdin_Cfg",
gameScene: "LampOfAladdin_loading",
mainScene: "LampOfAladdin",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_THE_MERMAID, {
dataCmp: "TheMermaid_GameData",
dataName: "gameData",
cfgCmp: "TheMermaid_Cfg",
gameScene: "TheMermaid_loading",
mainScene: "TheMermaid",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_THE_MINSTREL, {
dataCmp: "TheMinstrel_GameData",
dataName: "gameData",
cfgCmp: "TheMinstrel_Cfg",
gameScene: "TheMinstrel_loading",
mainScene: "TheMinstrel",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_THE_FROG_PRINCE, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "TheFrogPrince_Cfg",
gameScene: "TheFrogPrince_loading",
mainScene: "TheFrogPrince",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_THE_MAMMOTH, {
dataCmp: "LMSlots_GameData_Base",
dataName: "gameData",
cfgCmp: "TheMammoth_Cfg",
gameScene: "TheMammoth_loading",
mainScene: "TheMammoth",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_THE_LEGEND_OF_DRAGON, {
dataCmp: "TheLegendOfDragon_GameData",
dataName: "gameData",
cfgCmp: "TheLegendOfDragon_Cfg",
gameScene: "TheLegendOfDragon_loading",
mainScene: "TheLegendOfDragon",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_ROMANTIC_QUEEN, {
dataCmp: "RomanticQueen_GameData",
dataName: "gameData",
cfgCmp: "RomanticQueen_Cfg",
gameScene: "RomanticQueen_loading",
mainScene: "RomanticQueen",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_WILD_GORILLA, {
dataCmp: "WildGorilla_GameData",
dataName: "gameData",
cfgCmp: "WildGorilla_Cfg",
gameScene: "WildGorilla_loading",
mainScene: "WildGorilla",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_WICKED_BELLE, {
dataCmp: "WickedBelle_GameData",
dataName: "gameData",
cfgCmp: "WickedBelle_Cfg",
gameScene: "WickedBelle_loading",
mainScene: "WickedBelle",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_BIRD_NINE_HEADS, {
dataCmp: "BirdNineHeads_GameData",
dataName: "gameData",
cfgCmp: "BirdNineHeads_Cfg",
gameScene: "BirdNineHeads_loading",
mainScene: "BirdNineHeads",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_MAGIC_FROG, {
dataCmp: "MagicFrog_GameData",
dataName: "gameData",
cfgCmp: "MagicFrog_Cfg",
gameScene: "MagicFrog_loading",
mainScene: "MagicFrog",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_DWARFS_AND_PRINCESS, {
dataCmp: "DwarfsAndPrincess_GameData",
dataName: "gameData",
cfgCmp: "DwarfsAndPrincess_Cfg",
gameScene: "DwarfsAndPrincess_loading",
mainScene: "DwarfsAndPrincess",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_LUCKY_SANTA, {
dataCmp: "LuckySanta_GameData",
dataName: "gameData",
cfgCmp: "LuckySanta_Cfg",
gameScene: "LuckySanta_loading",
mainScene: "LuckySanta",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_THE_PHOENIX, {
dataCmp: "ThePhoenix_GameData",
dataName: "gameData",
cfgCmp: "ThePhoenix_Cfg",
gameScene: "ThePhoenix_loading",
mainScene: "ThePhoenix",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_ROBIN_HOOD, {
dataCmp: "RobinHood_GameData",
dataName: "gameData",
cfgCmp: "RobinHood_Cfg",
gameScene: "RobinHood_loading",
mainScene: "RobinHood",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_BUNNY_GIRL, {
dataCmp: "BunnyGirl_GameData",
dataName: "gameData",
cfgCmp: "BunnyGirl_Cfg",
gameScene: "BunnyGirl_loading",
mainScene: "BunnyGirl",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_GOLD_MINER, {
dataCmp: "GoldMiner_GameData",
dataName: "gameData",
cfgCmp: "GoldMiner_Cfg",
gameScene: "GoldMiner_loading",
mainScene: "GoldMiner",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_KYLIN, {
dataCmp: "Kylin_GameData",
dataName: "gameData",
cfgCmp: "Kylin_Cfg",
gameScene: "Kylin_loading",
mainScene: "Kylin",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_THE_LION_GEMS, {
dataCmp: "TheLionGems_GameData",
dataName: "gameData",
cfgCmp: "TheLionGems_Cfg",
gameScene: "TheLionGems_loading",
mainScene: "TheLionGems",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_THE_FOREVER_LOVE, {
dataCmp: "TheForeverLove_GameData",
dataName: "gameData",
cfgCmp: "TheForeverLove_Cfg",
gameScene: "TheForeverLove_loading",
mainScene: "TheForeverLove",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_PUSS_THE_MUSKETEER, {
dataCmp: "PussTheMusketeer_GameData",
dataName: "gameData",
cfgCmp: "PussTheMusketeer_Cfg",
gameScene: "PussTheMusketeer_loading",
mainScene: "PussTheMusketeer",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_WOLF_LEGEND, {
dataCmp: "WolfLegend_GameData",
dataName: "gameData",
cfgCmp: "WolfLegend_Cfg",
gameScene: "WolfLegend_loading",
mainScene: "WolfLegend",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_HADES, {
dataCmp: "Hades_GameData",
dataName: "gameData",
cfgCmp: "Hades_Cfg",
gameScene: "Hades_loading",
mainScene: "Hades",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_DEMETER, {
dataCmp: "CandyClash_GameData",
dataName: "gameData",
cfgCmp: "CandyClash_Cfg",
gameScene: "CandyClash_loading",
mainScene: "CandyClash",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_HERMES, {
dataCmp: "Hermes_GameData",
dataName: "gameData",
cfgCmp: "Hermes_Cfg",
gameScene: "Hermes_loading",
mainScene: "Hermes",
orientation: "portrait"
});
this.gameDataList.set(i.SLOT_PROMETHEUS, {
dataCmp: "Prometheus_GameData",
dataName: "gameData",
cfgCmp: "Prometheus_Cfg",
gameScene: "Prometheus_loading",
mainScene: "Prometheus",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_BALOOT, {
dataCmp: "Baloot_GameData",
dataName: "gameData",
cfgCmp: "Baloot_Cfg",
gameScene: "baloot",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_BALOOT_FAST, {
dataCmp: "Baloot_GameData",
dataName: "gameData",
cfgCmp: "Baloot_Cfg",
gameScene: "baloot",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_HAND, {
dataCmp: "Hand_GameData",
dataName: "gameData",
cfgCmp: "Hand_Cfg",
gameScene: "hand",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_HAND_SAUDI, {
dataCmp: "Hand_GameData",
dataName: "gameData",
cfgCmp: "Hand_Cfg",
gameScene: "hand",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_HAND_PARTNER, {
dataCmp: "Hand_GameData",
dataName: "gameData",
cfgCmp: "Hand_Cfg",
gameScene: "hand",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_HAND_SAUDI_PARTNER, {
dataCmp: "Hand_GameData",
dataName: "gameData",
cfgCmp: "Hand_Cfg",
gameScene: "hand",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_HAND_CONCAN, {
dataCmp: "Hand_GameData",
dataName: "gameData",
cfgCmp: "Hand_Cfg",
gameScene: "hand",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_TARNEEB, {
dataCmp: "Tarneeb_GameData",
dataName: "gameData",
cfgCmp: "Tarneeb_Cfg",
gameScene: "tarneeb",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_TARNEEB_SYRIAN, {
dataCmp: "TarneebSyr_GameData",
dataName: "gameData",
cfgCmp: "TarneebSyr_Cfg",
gameScene: "tarneebsyr",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_BASRA, {
dataCmp: "Basra_GameData",
dataName: "gameData",
cfgCmp: "Basra_Cfg",
gameScene: "basra",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_BANAKIL, {
dataCmp: "Banakil_GameData",
dataName: "gameData",
cfgCmp: "Banakil_Cfg",
gameScene: "banakil",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_TRIX, {
dataCmp: "Trix_GameData",
dataName: "gameData",
cfgCmp: "Trix_Cfg",
gameScene: "Trix",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_TRIXCOMPLEX, {
dataCmp: "Trix_GameData",
dataName: "gameData",
cfgCmp: "Trix_Cfg",
gameScene: "Trix",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_TRIXPARTNER, {
dataCmp: "Trix_GameData",
dataName: "gameData",
cfgCmp: "Trix_Cfg",
gameScene: "Trix",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_COMPLEXPARTNER, {
dataCmp: "Trix_GameData",
dataName: "gameData",
cfgCmp: "Trix_Cfg",
gameScene: "Trix",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_CCCOMPLEX, {
dataCmp: "CC_GameData",
dataName: "gameData",
cfgCmp: "CC_Cfg",
gameScene: "CC",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_CCPARTNER, {
dataCmp: "CC_GameData",
dataName: "gameData",
cfgCmp: "CC_Cfg",
gameScene: "CC",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_KASRA, {
dataCmp: "Kasra_GameData",
dataName: "gameData",
cfgCmp: "Kasra_Cfg",
gameScene: "Kasra",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_KASRAPARTNER, {
dataCmp: "Kasra_GameData",
dataName: "gameData",
cfgCmp: "Kasra_Cfg",
gameScene: "Kasra",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_RONDA, {
dataCmp: "Ronda_GameData",
dataName: "gameData",
cfgCmp: "Ronda_Cfg",
gameScene: "Ronda",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_ESTIMATION, {
dataCmp: "Estimation_GameData",
dataName: "gameData",
cfgCmp: "Estimation_Cfg",
gameScene: "estimation",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_DOMINO, {
dataCmp: "DominoGameData",
dataName: "gameData",
cfgCmp: "Domino_Cfg",
gameScene: "Domino",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_KOUTBO, {
dataCmp: "KoutBo_GameData",
dataName: "gameData",
cfgCmp: "KoutBo_Cfg",
gameScene: "KoutBo",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_UNO, {
dataCmp: "Uno_GameData",
dataName: "gameData",
cfgCmp: "Uno_Cfg",
gameScene: "Uno",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_SAUDIDEAL, {
dataCmp: "SaudiDealGameData",
dataName: "gameData",
cfgCmp: "SaudiDeal_Cfg",
gameScene: "SaudiDeal",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_BINTALSBEET, {
dataCmp: "BintAlSbeet_GameData",
dataName: "gameData",
cfgCmp: "BintAlSbeet_Cfg",
gameScene: "BintAlSbeet",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_LUDOMASTER, {
dataCmp: "LudoMasterGameData",
dataName: "gameData",
gameScene: "LudoMaster",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_LUDO_QUICK, {
dataCmp: "LudoMasterGameData",
dataName: "gameData",
gameScene: "LudoMaster",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_TARNEEB_400, {
dataCmp: "Tarneeb400_GameData",
dataName: "gameData",
cfgCmp: "Tarneeb400_Cfg",
gameScene: "tarneeb400",
orientation: "portrait"
});
this.gameDataList.set(i.TEENPATTI, {
dataCmp: "TeenPatti_GameData",
dataName: "gameData",
cfgCmp: "TeenPatti_Cfg",
gameScene: "TeenPatti",
orientation: "portrait",
bNoLoading: !0
});
this.gameDataList.set(i.POKER_LEEKHA, {
dataCmp: "Leekha_GameData",
dataName: "gameData",
cfgCmp: "Leekha_Cfg",
gameScene: "Leekha",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_DURAK_2, {
dataCmp: "Durak_GameData",
dataName: "gameData",
cfgCmp: "Durak_Cfg",
gameScene: "Durak",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_DURAK_3, {
dataCmp: "Durak_GameData",
dataName: "gameData",
cfgCmp: "Durak_Cfg",
gameScene: "Durak",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_DURAK_4, {
dataCmp: "Durak_GameData",
dataName: "gameData",
cfgCmp: "Durak_Cfg",
gameScene: "Durak",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_DURAK_5, {
dataCmp: "Durak_GameData",
dataName: "gameData",
cfgCmp: "Durak_Cfg",
gameScene: "Durak",
orientation: "portrait"
});
this.gameDataList.set(i.POKER_DURAK_6, {
dataCmp: "Durak_GameData",
dataName: "gameData",
cfgCmp: "Durak_Cfg",
gameScene: "Durak",
orientation: "portrait"
});
this.gameDataList.set(i.S_COINS, {
dataCmp: "Coin_GameData",
dataName: "gameData",
cfgCmp: "Coin_Cfg",
gameScene: "Coins",
orientation: "portrait"
});
this.gameDataList.set(i.S_HILO, {
dataCmp: "Hilo_GameData",
dataName: "gameData",
cfgCmp: "Hilo_Cfg",
gameScene: "Hilo",
orientation: "portrait"
});
this.gameDataList.set(i.S_MINES, {
dataCmp: "Mine_GameData",
dataName: "gameData",
cfgCmp: "Mine_Cfg",
gameScene: "Mine",
orientation: "portrait"
});
},
getGameData: function(e) {
e = Number(e);
if (this.gameDataList.has(e)) return this.gameDataList.get(e);
AppLog.err("没有找到游戏配置gameId:" + e + "，请在GameDataCfg中配置");
return null;
}
}
});
cc._RF.pop();
}, {
GameIdMgr: "GameIdMgr"
} ],
GameDataInterface: [ function(e, t) {
"use strict";
cc._RF.push(t, "66fcaHmyNJFhIQmEEra6w54", "GameDataInterface");
cc.Class({
extends: cc.Component,
properties: {
_deskInfo: null,
_gameId: 0,
_gameJackpot: null,
_EventId: null,
_mySeatIndex: -1,
_users: null,
isOver: {
get: function() {
return this._isOver;
},
set: function(e) {
this._isOver = e;
}
}
},
ctor: function() {
this.isOver = !0;
this._EventId = {};
this.setEventId();
this._EventId.PLAYER_ENTER_ROOM = "player_enter_room";
this._EventId.CLEAR_DESK = "clear_desk";
this._EventId.PLAYER_LEAVE_ROOM = "player_leave_room";
this._EventId.PLAYER_ALREADY = "player_already";
this._EventId.PLAYER_READY_FAIL = "player_ready_fail";
this._EventId.RECONNECT_DESKINFO = "reconnect_deskinfo";
this._EventId.EXIT_GAME = "exit_game";
this._EventId.OFFLINE_STATUS = "offline_status", this._EventId.MONEY_CHANGED = "money_changed", 
this.registerMsg();
},
init: function(e, t, i) {
this._gameId = t;
this._deskInfo = e;
this._gameJackpot = i;
this.clearLevelupData();
this._users = this._deskInfo.users ? this._deskInfo.users : this._deskInfo.user;
for (var n = 0; n < this._users.length; ++n) if (this._users[n].uid === cc.vv.UserManager.uid) {
this._mySeatIndex = this._users[n].seat;
break;
}
},
getMySeatIndex: function() {
if (this._mySeatIndex > -1) return this._mySeatIndex;
AppLog.err("##########没有设置我的座位号");
},
setEventId: function() {
throw '"' + this.constructor.name + "setEventId()方法";
},
getDeskSeatNum: function() {
return this._deskInfo.seat;
},
clear: function() {
this.unregisterMsg();
this._deskInfo = null;
cc.vv.GameDataCfg.getGameData(this._gameId);
cc.vv.gameData && cc.vv.gameData.resMgr && cc.vv.gameData.resMgr.releaseRes();
cc.vv.gameData = null;
},
getUsers: function() {
return this._users;
},
setUsers: function(e) {
this._users = e;
},
getDeskInfo: function() {
return this._deskInfo;
},
getGameJackpot: function() {
return this._gameJackpot;
},
registerMsg: function() {
cc.vv.NetManager.registerMsg(MsgId.GAME_LEVELROOM, this.onRcvNetExitRoom, this);
cc.vv.NetManager.registerMsg(MsgId.GAME_RECONNECT_DESKINFO, this.onRecvNetReconnectDeskinfo, this);
cc.vv.NetManager.registerMsg(MsgId.NOTIFY_KICK, this.onRcvNetKickNotice, this);
cc.vv.NetManager.registerMsg(MsgId.PLAYER_LEAVE, this.onRcvPlayerLeaveNotice, this);
cc.vv.NetManager.registerMsg(MsgId.MONEY_CHANGED, this.onRcvNetMoneyChanged, this);
},
unregisterMsg: function() {
cc.vv.NetManager.unregisterMsg(MsgId.GAME_LEVELROOM, this.onRcvNetExitRoom);
cc.vv.NetManager.unregisterMsg(MsgId.GAME_RECONNECT_DESKINFO, this.onRecvNetReconnectDeskinfo);
cc.vv.NetManager.unregisterMsg(MsgId.NOTIFY_KICK, this.onRcvNetKickNotice);
cc.vv.NetManager.unregisterMsg(MsgId.PLAYER_LEAVE, this.onRcvPlayerLeaveNotice);
cc.vv.NetManager.unregisterMsg(MsgId.MONEY_CHANGED, this.onRcvNetMoneyChanged);
},
onRcvNetMoneyChanged: function(e) {
200 === e.code && e.uid === Global.playerData.uid && Global.dispatchEvent(this._EventId.MONEY_CHANGED, e);
},
onRcvPlayerLeaveNotice: function(e) {
this.delPlayer(e);
},
onRcvNetEnterRoomNotice: function(e) {
for (var t = !1, i = 0; i < this._users.length; ++i) if (this._users[i].uid === e.user.uid) {
this._users[i] = e.user;
t = !0;
break;
}
t || this._users.push(e.user);
Global.dispatchEvent(this._EventId.PLAYER_ENTER_ROOM, e.user);
},
delPlayer: function(e) {
for (var t = 0; t < this._users.length; ++t) if (this._users[t].uid === e.uid) {
this._users.splice(t, 1);
break;
}
Global.dispatchEvent(this._EventId.PLAYER_LEAVE_ROOM, e);
},
onRcvNetKickNotice: function(e) {
var t = this;
e.uid === cc.vv.UserManager.uid ? cc.vv.AlertView.showTips(cc.vv.Language.kick_out_game, function() {
t.onRcvNetExitRoom({
code: 200
});
}) : this.delPlayer(e);
},
onRecvNetReconnectDeskinfo: function(e) {
if (e.gameid !== this._gameId) return !1;
this._deskInfo = e.deskinfo;
Global.dispatchEvent(this._EventId.RECONNECT_DESKINFO, e);
return !0;
},
isExpriteRoom: function() {
var e = !1;
this._deskInfo.free && (e = !0);
return e;
},
getRoomId: function() {
return this._deskInfo.deskid;
},
moveMenu: function() {},
requestExit: function() {
if (cc.vv.GameDataCfg.getGameData(this._gameId)) {
var e = {
c: MsgId.GAME_LEVELROOM
};
e.deskid = this._gameId;
cc.vv.NetManager.send(e);
} else AppLog.err("无法找到gameId:" + this._gameId + "数据");
},
getExpriCoin: function() {
return this._deskInfo.virtualCoin || 0;
},
onExit: function() {
this._gameId;
if (cc.vv.gameData) {
Global.dispatchEvent(cc.vv.gameData._EventId.EXIT_GAME);
Global.dispatchEvent(EventId.EXIT_GAME);
cc.vv.SceneMgr || cc.vv.EventManager.emit(EventId.ENTER_HALL);
}
},
getGameId: function() {
return this._gameId;
},
onRcvNetExitRoom: function(e) {
if (200 === e.code) {
this.onExit();
cc.vv.SceneMgr && cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.HALL);
}
},
getLevelupExp: function() {
return this.levelupData;
},
clearLevelupData: function() {
this.levelupData = null;
}
});
cc._RF.pop();
}, {} ],
GameEventId: [ function(e, t) {
"use strict";
cc._RF.push(t, "ef043OWMthByYih3LNm8BER", "GameEventId");
var i = e("EventDef");
i.SHOW_SCORE_LOG = "show_score_log";
i.SHOW_MODIFY_PSW = "show_modify_psw";
i.ENTER_HALL = "enter_hall";
i.ENTER_GAME_EVENT = "enter_game_event";
i.ENTER_LOGIN_SUCCESS = "enter_login_success";
i.ENTER_LOGIN_FAILE = "ENTER_LOGIN_FAILE";
i.STOP_ACTION = "stop_action";
i.LOGOUT = "logout";
i.UPDATE_GAME_LIST = "update_game_list";
i.UPATE_COINS = "upate_coins";
i.EXIT_GAME = "exit_game";
i.SHOW_BIGBANG = "show_bigbang";
i.HIDE_BIGBANG = "hide_bigbang";
i.RECHARGE_SUCC = "recharge_succ";
i.SPECIAL_ACTION_FINISH = "special_action_finish";
i.LOAD_ITEM_FINISH = "load_Items_finish";
i.SHOW_ALL_GAMEITEM = "show_all_gameitem";
i.SHOW_RANDJACKPOT = "show_randjackpot";
i.HIDE_RANDJACKPOT = "hide_randjackpot";
i.RELOGIN = "game_relogin";
i.PAUSE_PLAY_BIGWIN = "pause_play_bigwin";
i.PLAY_BIGWIN = "play_bigwin";
i.SET_SHAKE = "set_shake";
i.UPDATE_REDPACK = "UPDATE_REDPACK";
i.HALL_EFF_SHOWCOINS = "HALL_EFF_SHOWCOINS";
i.HALL_EFF_SHOWLUCKPACK = "HALL_EFF_SHOWLUCKPACK";
i.HALL_EFF_OPENLUCKBOX = "HALL_EFF_OPENLUCKBOX";
i.HALL_EFF_SHOWLUCKRAIN = "HALL_EFF_SHOWLUCKRAIN";
i.HALL_FAV_GAME_CHANGE = "HALL_FAV_GAME_CHANGE";
i.SHOW_RED_HEART_ANI = "SHOW_RED_HEART_ANI";
i.SHOW_SETTING = "show_setting";
i.REGISTER_ACCOUNT = "register_account";
i.HALL_RECYCLE_ITEM = "HALL_RECYCLE_ITEM";
i.HALL_SHOW_RIBBON = "HALL_SHOW_RIBBON";
i.HALL_SHOW_WINJP = "HALL_SHOW_WINJP";
i.RESUME_HALL_BGM = "RESUME_HALL_BGM";
i.HALL_SHOW_JP_NODE = "HALL_SHOW_JP_NODE";
i.HALL_SHOW_CASINO = "HALL_SHOW_CASINO";
i.SHOW_LOCK_TIP = "SHOW_LOCK_TIP";
i.REFUSH_LV_EXP = "REFUSH_LV_EXP";
i.PULL_LV_UP = "PULL_LV_UP";
i.REFUSH_GAME_JP = "REFUSH_GAME_JP";
i.REFUSH_RED_TIPS = "REFUSH_RED_TIPS";
i.GET_JACKPOT_OTHER = "GET_JACKPOT_OTHER";
i.HALL_ONETIMEONLY_TIME = "HALL_ONETIMEONLY_TIME";
i.SHOW_LEVEL_UP_GIFT = "SHOW_LEVEL_UP_GIFT";
i.HIDE_SHOP = "HIDE_SHOP";
i.START_GAME_ID = "START_GAME_ID";
i.UPDATE_STAMP = "UPDATE_STAMP";
i.HIDE_HALL_MENU = "HIDE_HALL_MENU";
i.FB_BIND_SUCCESS = "FB_BIND_SUCCESS";
i.GO_HALL_TAB = "GO_HALL_TAB";
i.REFUSH_PIG_BANK = "REFUSH_PIG_BANK";
i.CLOSE_POP_SHOP = "CLOSE_POP_SHOP";
i.REFUSH_HALL_BONUS_LIST = "REFUSH_HALL_BONUS_LIST";
i.UPTATE_HALL_TOP_POSITION = "UPTATE_HALL_TOP_POSITION";
i.RESET_HALL_TOP_POSITION = "RESET_HALL_TOP_POSITION";
i.CHANGE_HALLTAB = "CHANGE_HALLTAB";
i.PAY_RESULT = "PAY_RESULT";
i.REFUSH_QUEST_PRO = "REFUSH_QUEST_PRO";
i.CLOSE_BIG_LV_UP = "CLOSE_BIG_LV_UP";
i.HEROCARD_CHANGE_CAMP = "HEROCARD_CHANGE_CAMP";
i.SCROLL_HALL_GAME = "SCROLL_HALL_GAME";
i.HEROCARD_CHANGE_CARD = "HEROCARD_CHANGE_CARD";
i.COMM_ITEM_ADD = "COMM_ITEM_ADD";
i.GET_GUIDETASK_REFUSH = "GET_GUIDETASK_REFUSH";
i.OPEN_BINGO = "OPEN_BINGO";
i.OPEN_EXPLORATION = "OPEN_EXPLORATION";
i.SLIVERICON_SHOW = "SLIVERICON_SHOW";
i.HEROPALACE_SHOW = "HEROPALACE_SHOW";
i.HEROPALACE_CLOSE = "HEROPALACE_CLOSE";
i.HEROPALACE_REFUSH = "HEROPALACE_REFUSH";
i.REFUSH_BONUS_ONLINE_TIME = "REFUSH_BONUS_ONLINE_TIME";
i.RECORD_HALL_SCROLL = "RECORD_HALL_SCROLL";
i.UPATE_DIAMOND = "UPATE_DIAMOND";
i.SET_RED = "SET_RED";
i.CLOSE_FIRST_ICON = "CLOSE_FIRST_ICON";
i.CLEAN_LOCAL_RED = "CLEAN_LOCAL_RED";
i.CLEAN_ACHIEVE_RED = "CLEAN_ACHIEVE_RED";
i.REFUSH_SPINE100_DATA = "REFUSH_SPINE100_DATA";
i.CHANGE_PROCESSLEN = "CHANGE_PROCESSLEN";
i.FILL_HERO_PIECES = "FILL_HERO_PIECES";
i.HAS_REWARDS = "HAS_REWARDS";
i.CHAT_RANK_BET = "CHAT_RANK_BET";
i.CHECK_HALL_USERACTION = "CHECK_HALL_USERACTION";
i.CHAT_RANK_BET_CONFIRM = "CHAT_RANK_BET_CONFIRM";
i.STOP_SCROLL = "STOP_SCROLL";
i.NEWGUIDE_PRO_UI = "NEWGUIDE_PRO_UI";
i.CLICK_SKIP = "CLICK_SKIP";
i.CLICK_SKIP = "CLICK_SKIP";
i.MISSION_CLOSE = "MISSION_CLOSE";
i.MISSION_REWARDS = "MISSION_REWARDS";
i.MISSION_RED_TIPS = "MISSION_RED_TIPS";
i.MISSION_REFUSH = "MISSION_REFUSH";
i.CLOSE_CASHBACK = "CLOSE_CASHBACK";
i.UPDATE_USER_HEAD_PICID = "UPDATE_USER_HEAD_PICID";
i.CLOSE_USER_HEAD = "CLOSE_USER_HEAD";
i.SHOW_USER_HEAD_TIP = "SHOW_USER_HEAD_TIP";
i.REFUSH_HEROCARD_RED_TIPS = "REFUSH_HEROCARD_RED_TIPS";
cc._RF.pop();
}, {
EventDef: "EventDef"
} ],
GameFlagShow: [ function(e, t) {
"use strict";
cc._RF.push(t, "694a1aqjQpG85im0FncZx59", "GameFlagShow");
cc.Class({
extends: cc.Component,
properties: {},
start: function() {},
setData: function(e) {
var t = cc.find("spine", this.node);
if (t) {
var i, n = cc.vv.UserManager.isInLepGames(e), a = cc.vv.UserManager.isInRebateGames(e);
if (n && a) i = "animation3"; else {
n && (i = "animation1");
a && (i = "animation2");
}
if (i) {
t.active = !0;
t.getComponent(sp.Skeleton).setAnimation(0, i, !0);
} else t.active = !1;
}
}
});
cc._RF.pop();
}, {} ],
GameHall: [ function(e, t) {
"use strict";
cc._RF.push(t, "cc96coM53ZMZLHurSXJ8yfB", "GameHall");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
cc.Class({
extends: cc.Component,
properties: {
pageTabbar: e("Tabbar"),
gameBtnContent: cc.Node,
roomBtnPrefab: cc.Prefab,
roomBtnBigPrefab: cc.Prefab,
gamesScrollview: cc.ScrollView
},
onLoad: function() {
var e = this;
this.node.parent.name = Global.SCENE_NAME.HALL;
Global.autoAdaptDevices(!1);
for (var t, n = this.node.addComponent("EventListenerCmp"), a = this.node.addComponent("NetListenerCmp"), o = function() {
var i = t.value, n = i.selectNode.getComponentsInChildren(sp.Skeleton)[0];
if (n) {
n.setAnimation(0, "loop_" + e.getTabbarAnimName(e.pageTabbar.tabs.indexOf(i)), !0);
n.setCompleteListener(function(t) {
cc.isValid(e.pageTabbar, !0) && t.animation && t.animation.name == "idle_" + e.getTabbarAnimName(e.pageTabbar.tabs.indexOf(i)) && n.setAnimation(0, "loop_" + e.getTabbarAnimName(e.pageTabbar.tabs.indexOf(i)), !0);
});
}
var a = i.unSelectNode.getComponentsInChildren(sp.Skeleton)[0];
a && (1 == e.pageTabbar.tabs.indexOf(i) ? a.setAnimation(0, "loop3_" + e.getTabbarAnimName(e.pageTabbar.tabs.indexOf(i)), !0) : a.setAnimation(0, "loop2_" + e.getTabbarAnimName(e.pageTabbar.tabs.indexOf(i)), !0));
}, c = i(this.pageTabbar.tabs); !(t = c()).done; ) o();
this.pageTabbar.setChangeCallback(this.onPageTabbarChange.bind(this));
a.registerMsg(MsgId.FRIEND_ROOM_BE_INVITE, this.FRIEND_ROOM_BE_INVITE, this);
a.registerMsg(MsgId.FRIEND_ROOM_JOIN, this.FRIEND_ROOM_JOIN, this);
a.registerMsg(MsgId.GAME_ENTER_MATCH, this.GAME_ENTER_MATCH, this);
a.registerMsg(MsgId.VIP_FAST_JOIN, this.FRIEND_ROOM_JOIN, this);
n.registerEvent("HALL_OPEN_LEAGUE", this.HALL_OPEN_LEAGUE, this);
n.registerEvent("HALL_TO_GAME", this.HALL_TO_GAME, this);
n.registerEvent("OpenCharge", this.OpenCharge, this);
n.registerEvent("GAME_LIST_UPDATE", this.GAME_LIST_UPDATE, this);
n.registerEvent(EventId.NOT_ENOUGH_COINS, this.NOT_ENOUGH_COINS, this);
Global.registerEvent("EVENT_ADD_REFFER", this.onAddRefferTip, this);
this.backGameId = Global.getLocal("SAVE_FROM_SUBGAME_ID", 0);
this.backGameType = Global.getLocal("SAVE_FROM_SUBGAME_ROOM_TYPE", 0);
this.backNeedCoin = Global.getLocal("SUBGAME_GOLD_SHORTAGE", 0);
this.scheduleOnce(function() {
Global.saveLocal("SAVE_FROM_SUBGAME_ID", "0");
Global.saveLocal("SAVE_FROM_SUBGAME_ROOM_TYPE", "0");
Global.saveLocal("SUBGAME_GOLD_SHORTAGE", "0");
}, 0);
cc.vv.NetManager.send({
c: MsgId.SYNC_COIN
}, !0);
for (var s, r = 0, l = i(cc.vv.UserManager.gameList); !(s = l()).done; ) {
var d = s.value;
if (!(d.ord < 0 || d.ord > 100)) {
var h = null;
(h = cc.instantiate(this.roomBtnPrefab)).parent = this.gameBtnContent;
var _ = h.getComponent("RoomTypeBtn");
_.gameid = d.id;
_.updateView();
r += 1;
}
}
var p = cc.vv.UserManager.slotsList.length || 0, u = cc.find("PageContent2/PageHall/Games/view/content/content/btn_hall_game_slots", this.node);
u && (u.active = p > 0);
if (r % 2 == 0) {
var f = cc.instantiate(this.roomBtnPrefab);
f.parent = this.gameBtnContent;
var g = f.getComponent("RoomTypeBtn");
g.gameid = 9999;
g.updateView();
}
this.GAME_LIST_UPDATE();
this.gamesScrollview.content.getComponent(cc.Layout).updateLayout();
this.gameBtnContent.getComponent(cc.Layout).updateLayout();
},
getCurrentDate: function() {
return new Date().toDateString();
},
getPopupCount: function() {
var e = this.getCurrentDate(), t = cc.sys.localStorage.getItem(e);
return t ? parseInt(t) : 0;
},
canPopup: function() {
return this.getPopupCount() < 3;
},
start: function() {
var e = this;
if (this.backGameId && this.backGameId > 0) if (this.backGameType && 5 == this.backGameType) this.pageTabbar.setPage(1); else {
if (this.backGameId > 600 || 419 == this.backGameId) {
var t = this.node.getComponentInChildren("HallSlotBtn");
t && t.node.emit("click");
}
for (var n, a = 1, o = i(cc.vv.UserManager.gameList); !(n = o()).done; ) {
var c = n.value;
if (c.id == this.backGameId) {
a = c.ctype;
break;
}
}
(Global.isDurakApp() || Global.isYDApp()) && (a = 0);
console.log(this.backGameId, a);
for (var s = function(t) {
var i = e.gameBtnContent.children[t], n = i.getComponent("RoomTypeBtn");
if (n) if (n.gameid == e.backGameId) {
n.showExitState(!0);
e.scheduleOnce(function() {
var t = cc.vv.UserManager.getHallOffset() || e.gamesScrollview.node.convertToNodeSpaceAR(i.convertToWorldSpaceAR(cc.v2(0, i.height)));
e.gamesScrollview.scrollToOffset(cc.v2(0, Math.abs(t.y)));
}, 0);
} else n.showExitState(!1);
}, r = 0; r < this.gameBtnContent.childrenCount; r++) s(r);
2 == a || 3 == a && cc.vv.PopupManager.addPopup("BalootClient/Hall/GameBtnListView", {
bottomIn: !0,
bottomOut: !0,
onShow: function(e) {
e.getComponent("GameBtnList").onInit(3);
}
});
} else {
var l = cc.vv.UserManager.uid;
cc.vv.PlatformApiMgr.KoSDKTrackEvent("reach_lobby_ui", JSON.stringify({
game_uid: l
}));
}
this.scheduleOnce(function() {
cc.vv.AudioManager.playBgm("BalootClient/BaseRes/", "bgm", !0, null, null, !0);
StatisticsMgr.httpAll();
}, 1);
cc.vv.BroadcastManager.run();
StatisticsMgr.reqReport(StatisticsMgr.REQ_ENTER_HALL, JSON.stringify({
novice: cc.vv.UserManager.novice,
charmpack: cc.vv.UserManager.charmpack
}));
cc.vv.UserManager.newapp && Global.needPopDayTips("newappurl") && cc.vv.PopupManager.addPopup("BalootClient/NewAppHint/NewAppHint", {
weight: 997,
isWait: !0,
scaleIn: !0,
onShow: function(e) {
e.getComponent("NewAppHintView").onInit(cc.vv.UserManager.newapp);
cc.vv.UserManager.newapp = null;
}
});
0 === cc.vv.UserManager.isbindphone && cc.vv.PopupManager.addPopup("YD_Pro/prefab/Register", {
onShow: function() {}
});
var d = cc.vv.UserManager.todayrewards, h = 0;
for (var _ in d) h += d[_];
if (h > 0 && !cc.vv.UserManager.hasPopRewardToday) {
cc.vv.PopupManager.addPopup("YD_Pro/prefab/yd_reward_today", {
weight: 993,
isWait: !0,
onShow: function(e) {
e.getComponent("yd_reward_today").updateView();
}
});
cc.vv.UserManager.hasPopRewardToday = !0;
}
if (cc.vv.UserManager.notice && !cc.vv.UserManager.hasPopNotice) {
cc.vv.PopupManager.addPopup("YD_Pro/prefab/yd_activity", {
weight: 992,
isWait: !0,
onShow: function(e) {
e.getComponent("yd_activity").updateView(cc.vv.UserManager.notice);
}
});
cc.vv.UserManager.hasPopNotice = !0;
}
if (0 == cc.vv.UserManager.vipsign) {
cc.vv.PopupManager.addPopup("BalootClient/PopupSign/PopupSign", {
weight: 995,
isWait: !0,
scaleIn: !0
});
cc.vv.UserManager.vipsign = 1;
}
1 == cc.vv.UserManager.popLuckySpin && cc.vv.PopupManager.addPopup("BalootClient/PopLuckySpin/PopLuckySpin", {
weight: 994,
isWait: !0,
scaleIn: !0
});
var p = cc.vv.UserManager.getAddInvite();
p && cc.vv.PopupManager.addPopup("YD_Pro/Refer/ReferAddTips", {
isWait: !0,
scaleIn: !0,
onShow: function(e) {
e.getComponent("ReferAddTips").setInfo(p);
}
});
cc.vv.PayMgr.doReplaceOrder();
this.checkOpenUrlAction();
this.chekBindCodeAction();
},
onDestroy: function() {},
getTabbarAnimName: function(e) {
var t = "";
0 == e ? t = "shop" : 1 == e ? t = "game" : 2 == e ? t = "events" : 3 == e && (t = "social");
return t;
},
onPageTabbarChange: function(e, t) {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
for (var n, a = i(t.selectNode.getComponentsInChildren(sp.Skeleton)); !(n = a()).done; ) {
var o = n.value;
o.node.active && o.setAnimation(0, "idle_" + this.getTabbarAnimName(e), !1);
}
if (0 == e) {
var c = cc.director.getScene().getComponentInChildren("NavigationPageView");
c && c.showPage(0);
}
},
FRIEND_ROOM_BE_INVITE: function(e) {
200 == e.code && (e.spcode && e.spcode > 0 || cc.vv.PopupManager.addPopup("BalootClient/GameInvite/PopupBeInvite", {
scaleIn: !0,
noTouchClose: !0,
noCloseHit: !0,
onShow: function(t) {
var i = t.getComponent("BeInviteView");
i && i.onInit(e);
}
}));
},
FRIEND_ROOM_JOIN: function(e) {
e.spcode && (751 == e.spcode ? e.pwd ? cc.vv.FloatTip.show(___("密码错误")) : cc.vv.PopupManager.addPopup("BalootClient/salon/RoomFriendPwd", {
opacityIn: !0,
onShow: function(t) {
t.getComponent("RoomFriendPwd").setCallback(function(t) {
t.length >= 4 && cc.vv.NetManager.send({
c: MsgId.FRIEND_ROOM_JOIN,
gameid: e.gameid,
deskid: e.deskid,
pwd: t
});
});
}
}) : 804 == e.spcode ? cc.vv.AlertView.show(___("金币不足"), function() {
cc.vv.EventManager.emit("HALL_OPEN_SHOP", {
open: 1
});
}, function() {}, !1, function() {}, ___("提示"), ___("取消"), ___("Deposit")) : cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0));
},
GAME_ENTER_MATCH: function(e) {
e.code && 804 == e.code && cc.vv.AlertView.show(___("金币不足"), function() {
cc.vv.EventManager.emit("HALL_OPEN_SHOP", {
open: 1
});
}, function() {}, !1, function() {}, ___("提示"), ___("取消"), ___("Deposit"));
if (200 == e.code) {
var t = this.gamesScrollview.getScrollOffset();
cc.vv.UserManager.setHallOffset(t);
}
},
HALL_OPEN_LEAGUE: function() {
cc.vv.PopupManager.removeAll();
this.pageTabbar.setPage(1);
},
GAME_LIST_UPDATE: function() {
for (var e = function(e) {
for (var t, n = i(cc.vv.UserManager.gameList); !(t = n()).done; ) if (t.value.id == e || 9999 == e) return !0;
return !1;
}, t = 0; t < this.gameBtnContent.children.length; t++) {
var n = this.gameBtnContent.children[t], a = n.getComponent("RoomTypeBtn");
a && (n.active = e(a.gameid));
}
var o = function(e) {
var t = 1e3;
if (e.getComponent("RoomTypeBtn")) for (var n, a = e.getComponent("RoomTypeBtn").gameid, o = i(cc.vv.UserManager.gameList); !(n = o()).done; ) {
var c = n.value;
c.id == a && (t = c.ord);
} else e.getComponent("HallSlotBtn") && (t = 1);
return t;
};
this.gameBtnContent.children.sort(function(e, t) {
return o(e) - o(t);
});
},
HALL_TO_GAME: function() {
cc.vv.SceneMgr.isInHallScene() && cc.vv.PopupManager.addPopup("BalootClient/BaseRes/prefabs/ToGameLoading", {
noCloseHit: !0,
opacityIn: !0,
parent: cc.find("Canvas")
});
},
checkOpenUrlAction: function() {
var e = cc.vv.PlatformApiMgr.getOpenAppUrlDataStr();
e && cc.vv.GameManager.onOpenAppByURL(JSON.parse(e));
},
chekBindCodeAction: function() {
if (cc.vv.UserManager.invit_uid) console.log("已经绑定了"); else {
var e = cc.vv.PlatformApiMgr.getTxtFromClipboard();
e && e.length;
var t = {
c: MsgId.EVENT_FB_INVITE_BIND_CODE
};
t.gps_adid = cc.vv.PlatformApiMgr.gps_adid();
cc.vv.NetManager.send(t);
}
},
NOT_ENOUGH_COINS: function() {
cc.vv.AlertView.show(___("金币不足"), function() {
cc.vv.EventManager.emit("HALL_OPEN_SHOP", {
open: 1
});
}, function() {}, !1, function() {}, ___("提示"), ___("取消"), ___("Deposit"));
},
onAddRefferTip: function(e) {
var t = e.detail;
t && cc.vv.PopupManager.addPopup("YD_Pro/Refer/ReferAddTips", {
isWait: !0,
scaleIn: !0,
onShow: function(e) {
e.getComponent("ReferAddTips").setInfo(t);
}
});
},
OpenCharge: function() {
var e = cc.find("safeview/UserinfoBar/coin/btn_add", this.node);
e && e.emit("click");
},
update: function(e) {
this._updateIntv || (this._updateIntv = 0);
this._updateIntv += e;
if (this._updateIntv > 1) {
this._updateIntv = 0;
cc.vv.GameManager && cc.vv.GameManager.updateFCMToken();
}
}
});
cc._RF.pop();
}, {
Tabbar: "Tabbar"
} ],
GameHotupdate: [ function(e, t) {
"use strict";
cc._RF.push(t, "1c87dFagYtGjK/l5RQOJoEQ", "GameHotupdate");
cc.Class({
extends: e("hotupdate"),
properties: {},
onLoad: function() {},
start: function() {},
startUpdate: function() {
this.initHotupdate();
this.checkForceAppUpdate();
},
SetUpdateProcess: function(e, t, i) {
cc.vv.AppData.setHotupdateStart(!0);
var n = e;
if (cc.isValid(this.progressBar, !0)) {
var a = this.progressBar.progress;
n = e > a ? e : a;
this.progressBar.progress = n;
}
if (cc.isValid(this.lblTips, !0)) {
console.log("当前进度条值:", o);
var o = cc.js.formatStr("(%sMB/%sMB)", (t / 1024 / 1024).toFixed(2), (i / 1024 / 1024).toFixed(2));
this.lblTips.string = Math.floor(100 * n) + "%" + o;
}
}
});
cc._RF.pop();
}, {
hotupdate: "hotupdate"
} ],
GameIcon: [ function(e, t) {
"use strict";
cc._RF.push(t, "0fd9636IBhLP4X6O7IjVavv", "GameIcon");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
Global.isDurakApp() && (this.node.active = !1);
}
});
cc._RF.pop();
}, {} ],
GameIdMgr: [ function(e, t) {
"use strict";
cc._RF.push(t, "18745fQWrhGyJjeJoz1yATH", "GameIdMgr");
var i, n = ((i = {
SLOT_COMESOON: 9999,
SLOT_COMESOON1: 1e4,
SLOT_COMESOON2: 10001,
SLOT_COMESOON3: 10002,
ANDAR_BAHAR: 11,
CRASH: 12,
JHANDI_MUNDA: 13,
HORSE_RACING: 14,
WINGO_LOTTERY: 15,
FORTUNE_WHEEL: 16,
FORTUNE_WHEEL_POKER: 295,
DRAGON_VS_TIGER: 17,
ROULETTE: 18,
BACCARAT: 19,
SEVEN_UP_DOWN: 20,
BLACK_JACK: 255,
C_AVIATOR: 22,
C_AVIATRIX: 23,
C_CRASHX: 24,
C_CRICKETX: 25,
C_JETX: 26,
C_ZEPPELIN: 27,
S_DICE: 28,
S_LIMBO: 29,
S_PLINKO: 30,
S_KENO: 31,
S_MINES: 32,
S_HILO: 33,
S_TOWERS: 34,
DOUBLE_ROLL: 35,
S_COINS: 36,
S_CRYPTO: 37,
S_TRIPLE: 38,
S_CAPPADOCIA: 39,
TEENPATTI: 291,
INDIA_RUMMY: 292,
TEXAS_HOLDEM: 293,
TURNRECT_ALB: 294,
ALADINGWHEEL: 21,
POKER_NIU: 2,
POKER_HUNDRED: 6,
MLLM: 8,
RED_VS_BLACK: 10,
YDLM: 250,
JLM: 252,
MLMJ: 254,
POKER_BALOOT: 256,
POKER_BALOOT_FAST: 289,
POKER_HAND: 257,
POKER_HAND_SAUDI: 258,
POKER_HAND_PARTNER: 267,
POKER_HAND_SAUDI_PARTNER: 268,
POKER_HAND_CONCAN: 283,
POKER_TARNEEB: 259,
POKER_TARNEEB_SYRIAN: 270,
POKER_BASRA: 260,
POKER_BANAKIL: 261,
POKER_TRIX: 262,
POKER_TRIXCOMPLEX: 273,
POKER_TRIXPARTNER: 263,
POKER_COMPLEXPARTNER: 280,
POKER_CCCOMPLEX: 281,
POKER_CCPARTNER: 282,
POKER_KASRA: 284,
POKER_KASRAPARTNER: 285,
POKER_RONDA: 286,
POKER_UNO: 287,
POKER_SAUDIDEAL: 288,
POKER_ESTIMATION: 264,
POKER_DOMINO: 265,
POKER_KOUTBO: 266,
POKER_BINTALSBEET: 279,
POKER_LUDOMASTER: 269,
POKER_LUDO_QUICK: 290,
POKER_TARNEEB_400: 272
}).TEENPATTI = 291, i.POKER_LEEKHA = 271, i.POKER_DURAK_2 = 274, i.POKER_DURAK_3 = 275, 
i.POKER_DURAK_4 = 276, i.POKER_DURAK_5 = 277, i.POKER_DURAK_6 = 278, i.SLOT_GDF = 101, 
i.SLOT_AFG = 102, i.SLOT_GREAT_BLUE = 103, i.SLOT_DR = 104, i.SLOT_PD = 105, i.SLOT_AZT = 106, 
i.SLOT_JJX = 107, i.SLOT_SB = 108, i.SLOT_TK = 109, i.SLOT_GDT = 110, i.SLOT_GLF = 111, 
i.SLOT_GSGL = 112, i.SLOT_TLG = 113, i.SLOT_PAN = 114, i.SLOT_IVAN = 182, i.SLOT_YNXJ = 115, 
i.SLOT_JLBD = 116, i.SLOT_PJL = 117, i.SLOT_JF = 118, i.SLOT_SHZ = 119, i.FRUIT_SLOT = 120, 
i.SLOT_ROBIN = 121, i.SLOT_GLYY = 122, i.SLOT_FORTUNE_PANDA = 123, i.SLOT_SGIRL = 124, 
i.SLOT_TGSY = 125, i.SLOT_ZHANWM = 127, i.SLOT_FOOTBALL = 126, i.SLOT_SPARTAN = 128, 
i.SLOT_DRAGON5 = 238, i.SLOT_EASTER = 129, i.SLOT_RALLY = 130, i.SLOT_NEWYEAR = 131, 
i.SLOT_WUFUMEN = 132, i.SLOT_TRAFFIC_LIGHT = 133, i.SLOT_GOLDEN_DRAGON = 134, i.SLOT_STEAMTOWER = 135, 
i.SLOT_VICTORY = 136, i.SLOT_GARDEN = 137, i.SLOT_ALADDIN = 138, i.SLOT_CAPTAIN = 139, 
i.SLOT_BRAVE_LEGEND = 140, i.SLOT_HALLOWEEN = 141, i.SLOT_HALLOWEEN_SURPRISE = 142, 
i.SLOT_IRELAND_LUCKY = 143, i.SLOT_YEARBYYEAR = 144, i.SLOT_CHERRY = 145, i.SLOT_CAPTAIN9 = 146, 
i.SLOT_ZCJB = 147, i.SLOT_ICE_AND_SNOW = 149, i.SLOT_INDIA_MYTH = 148, i.SLOT_SEA_WORLD = 150, 
i.SLOT_FARM_STORY = 151, i.SLOT_CHEN_PAO_ISLAND = 152, i.SLOT_CRAZY_MONEY = 153, 
i.SLOT_STONE_AGE = 154, i.SLOT_SPIRITUAL_GARDEN = 155, i.SLOT_BLAZING_STAR = 156, 
i.SLOT_COLABOTTLE = 157, i.SLOT_PIRATE_SHIP = 158, i.SLOT_MAGICIAN = 159, i.SLOT_OCEAN = 160, 
i.SLOT_LAURA = 161, i.SLOT_SEASON = 162, i.SLOT_ALICE = 163, i.SLOT_AFRICAN_SAFARI = 164, 
i.SLOT_SWK = 165, i.SLOT_MONEY_FROG = 166, i.SLOT_JETION = 167, i.SLOT_FORTUNE = 168, 
i.SLOT_TOP_GUN = 169, i.SLOT_WESTERN_PASTURE = 170, i.SLOT_HUANG_DI_LAI_LE = 171, 
i.SLOT_SAINTSEIAY = 173, i.SLOT_GOLDEN_TREE918 = 174, i.SLOT_WOLFER = 175, i.SLOT_WANGCAI = 180, 
i.SLOT_TERNADO = 181, i.SLOT_MATSURI = 183, i.SLOT_CIRCUS = 184, i.SLOT_AIRPLANE = 189, 
i.SLOT_FAME = 195, i.SLOT_TGFQ = 193, i.SLOT_TREX = 190, i.SLOT_YEMEI = 177, i.SLOT_WATER = 178, 
i.SLOT_XUEMEI = 179, i.SLOT_ORIENT = 185, i.SLOT_MAGICAL_DRAGON = 186, i.SLOT_COYOTECASH = 187, 
i.SLOT_CLEOPATRA = 188, i.SLOT_MOTOCYCLE = 176, i.SLOT_GREAT_CHINA = 192, i.SLOT_FASHION = 194, 
i.SLOT_PAYDIRT = 196, i.SLOT_BIGSHOT = 197, i.SLOT_THE_DISCOVER = 198, i.SLOT_NEWPANJINLIAN = 199, 
i.SLOT_SPARTA30 = 401, i.SLOT_NIGHTCLUB = 402, i.SLOT_NINJA = 403, i.SLOT_FRUITSPACE = 404, 
i.SLOT_GOLF = 406, i.SLOT_CLASSIC = 407, i.SLOT_CRAZY7 = 408, i.SLOT_HZLB = 409, 
i.SLOT_8BALL = 410, i.SLOT_INFINITY_VENUS = 413, i.SLOT_CHICKEN = 415, i.SLOT_GOWV2 = 416, 
i.SLOT_DRAGON5_HD = 417, i.SLOT_ZHAOYUN = 418, i.SLOT_GODOFFIRE = 420, i.SLOT_THEMEPARKBLAST = 422, 
i.SLOT_QUEENOFSEA = 424, i.SLOT_KINGOFOLYMPUS = 428, i.SLOT_SMOKINGHOTPICHES = 429, 
i.SLOT_GRANDGEMINI = 430, i.SLOT_CUPIDISCRUSH = 433, i.SLOT_CUPIDCRUSHDELUXE = 434, 
i.SLOT_FORTUNEWILDDELUXE = 432, i.SLOT_SPLENDID_ISLAND = 469, i.SLOT_SPLENDIDISLAND_DELUXE = 476, 
i.SLOT_EASTERNRICHES = 482, i.HORSE_MONKEY_TREE = 202, i.HORSE = 211, i.MOTOR_RACE = 236, 
i.HORSE_RACE = 243, i.ARC_XYZB = 203, i.ARC_YCLS = 212, i.FISH_SHRIMP_OYSTER = 204, 
i.BIRD_AND_ANIMAL = 208, i.ONLINE_LHDZ = 206, i.BCBM = 205, i.BAIJIALE = 201, i.BAIJIALE_MID = 221, 
i.BAIJIALE_HIGH = 218, i.ROULETTE_MID = 219, i.ROULETTE_HIGH = 220, i.ARC_XYZB_LINE = 222, 
i.BCBM_918 = 237, i.ARC_ZWBS_LINE = 245, i.BIG_SMALL = 246, i.ROULETTE_MINI = 223, 
i.ROULET_24 = 224, i.ROULET_73 = 225, i.ROULET_36 = 239, i.LHDZ_918_1 = 226, i.LHDZ_918_2 = 227, 
i.LHDZ_918_3 = 228, i.SICBO_918 = 229, i.BACCARAT_918 = 230, i.THREE_POKER_918 = 231, 
i.HOLD_EM_918 = 232, i.CASINO_WAR_918 = 233, i.BULL_918 = 234, i.MONKEY_ZWBS_918 = 241, 
i.TWENTYONE777 = 210, i.FRUIT = 213, i.LEOPARD = 214, i.HULUJI = 216, i.SLOT_SLWH = 207, 
i.SINGLE_PICK = 235, i.FQZS_SP = 246, i.PHOENIX_SP = 248, i.POKEMON_SP = 249, i.SLWH_918NEW = 251, 
i.GLITZ_INFINITY = 411, i.REGAL_TIGER = 419, i.JALAPAND_DELIGHT = 423, i.DIAMOND_FOREST = 435, 
i.SPEED_FIRE = 436, i.GORGEOUS_CLEOPATRA = 437, i.ICYWOLF = 479, i.MAJESTIC_PANDA = 439, 
i.SUSHI_LOVER = 440, i.THUNDER_MUSTANG = 441, i.FORTUNE_GENIE = 442, i.POWER_DRAGON = 443, 
i.HOLIDAY_FRENZY = 444, i.SLOT_SUNGODDESS = 425, i.SLOT_BINGOMEOW = 446, i.SLOT_TREASUREJUNGLE = 447, 
i.SLOT_PRINCECHARMING = 449, i.SLOT_HIGHPOWER = 451, i.SLOT_BRILLIANTTREASURES = 465, 
i.SLOT_MAMMOTHGRANDGEMS = 466, i.SLOT_MAMMOTHGRAND = 474, i.SLOT_SPOOKYHALLOWEEN = 480, 
i.SLOT_STONEAGEDTREASURE = 489, i.SLOT_MONSTERCASH = 484, i.SLOT_DOUBLECHILI = 495, 
i.SLOT_MAYADEORO = 500, i.SLOT_PRINCENEZHA = 507, i.SLOT_PIGGYHEIST = 512, i.SLOT_HOWLINGMOON = 513, 
i.SLOT_ALIENBUSTER = 515, i.SLOT_SUMO = 519, i.SLOT_AMERICANBILLIONAIRE = 523, i.SLOT_BEAUTYANDTHEBEAST = 525, 
i.SLOT_YEAROFGOLDENPIG = 526, i.SLOT_DOUBLENUGGETS = 527, i.SLOT_DOUBLETHUNDER = 530, 
i.SLOT_BEERFESTIVAL = 532, i.SLOT_INVINCIBLEGODDESS = 534, i.SLOT_THUMBELINA = 537, 
i.SLOT_DRAGONDIAMOND = 536, i.SLOT_LEPRECHAUNBLAST = 538, i.SLOT_DOUBLEAGENT = 618, 
i.SLOT_BIGDUEL = 620, i.SLOT_LUCKYCAT = 619, i.SLOT_VAMPIRECOUNT = 636, i.SLOT_TAVERNWITCH = 637, 
i.SLOT_BLADEMASTERTOKUGAWA = 638, i.SLOT_SIXTHDAYTHEDEMON = 639, i.SLOT_THEMAGICHANZO = 640, 
i.SLOT_MINAMOTONOYOSHITSUNE = 641, i.SLOT_GANGSTERGODFATHER = 642, i.SLOT_FATHEROFINVENTION = 664, 
i.SLOT_WESTCOWBOY = 665, i.SLOT_RISINGSUNTHEGREATKING = 666, i.SLOT_POLITICALSTRATEGIST = 667, 
i.SLOT_MULAN = 668, i.SLOT_GENGHISKHAN = 669, i.SLOT_THECENTAUR = 670, i.SLOT_CHANGE = 675, 
i.SLOT_ALIENMONSTER = 671, i.SLOT_BASKETBALLKING = 672, i.SLOT_JAPANESESINGER = 677, 
i.SLOT_NEWKYLIN = 674, i.SLOT_ODYSSEUS = 649, i.SLOT_PRINCESSPEA = 676, i.SLOT_HERA = 673, 
i.SLOT_APOLLO = 680, i.SLOT_DIONYSUS = 681, i.SLOT_FRIGG = 679, i.SLOT_INDIAN = 678, 
i.SLOT_SUPER_WICKED_BLAST = 458, i.JUNGLE_KING = 453, i.SLOT_RISINGMEDUSA = 459, 
i.LET_IS_PARTY = 454, i.ADVENTURE_IN_SPACE = 455, i.YEAR_OF_THE_RAT = 456, i.SLOT_FORTUNEGONG = 460, 
i.GOLD_ISLAND_TREASURE = 464, i.SLOT_EGYPTIAN_FANTASY = 462, i.SLOTS_TOWER = 471, 
i.CANDY_MAGIC = 468, i.SLOT_FORTUNEWHEELDELUXE = 461, i.HOT_HOT_DRUMS = 467, i.SLOT_CRICUS_CARNIVAL = 463, 
i.SLOT_RAPID_PLATINUM_PAY = 470, i.SLOT_BEER_HALL = 452, i.SLOT_SPACE_CAT = 472, 
i.SLOT_MOMENT_OF_WONDER = 421, i.SLOT_BONIE_CLYDE = 427, i.SLOT_LEPRECHAUNCOINS = 473, 
i.SLOT_WHEREISSANTACLAUS = 448, i.MASKED_HERO = 477, i.SLOT_PELICAN_QUEST = 478, 
i.SLOT_ZOMBLE_NATION = 481, i.SLOT_ROYALPUPPIES = 450, i.SLOT_RISEOFEGYPT = 494, 
i.SLOT_FORTUNETRAINDELUXE = 499, i.SLOT_MIGHTYATLANTIS = 504, i.SLOT_NEVERLANDFANTASY = 510, 
i.SLOT_WEALTHOFPANDA = 514, i.SLOT_MAGICORB = 496, i.SLOT_KANGAROOS = 518, i.SLOT_FORTUNETREE = 521, 
i.SLOT_THELIONSJACKPOT = 524, i.SLOT_VOLCANOFURY = 528, i.SLOT_CAPTAINJACKPOT = 529, 
i.SLOT_HEROINEMULAN = 531, i.SLOT_KINGOFSIBERIAN = 533, i.SLOT_LEGENDOFOZ = 535, 
i.SLOT_ULTIMATETIKILINK = 539, i.SLOT_FEANNIESHOW = 540, i.SLOT_POWEROFTHEKRAKEN = 541, 
i.SLOT_ROCKING_DISCO = 475, i.SLOT_MEGA_VAULT_BILLIONAIRE = 483, i.LUCKY_BEE = 488, 
i.SLOT_PRINCE_CHARMING_DELUXE = 487, i.SLOT_FEAMIN_QUEEN = 490, i.SLOT_CANDY_CLASH = 491, 
i.SLOT_THANKSGIVINGPARTY = 508, i.SLOT_PENGUINBOUNTY = 509, i.SLOT_ZUES = 601, i.SLOT_ATHENA = 602, 
i.SLOT_POSEIDON = 603, i.SLOT_NMEDUSA = 604, i.SLOT_GODNESS_OF_LOVE = 605, i.SLOT_WARSHIP = 606, 
i.SLOT_JIANNIANGCHRISTMAS = 607, i.SLOT_LEGENDOFJOANOFARC = 609, i.SLOT_LORDCAESAR = 610, 
i.SLOT_LORDOFTHUNDER = 611, i.SLOT_GODDESSOFDEATH = 612, i.SLOT_ELVESBLESSING = 613, 
i.SLOT_ODINSANGER = 614, i.SLOT_THEROUNDTABLEKNIGHTSEXPLORE = 615, i.SLOT_G_CLEOPATRA = 616, 
i.SLOT_THEEVIL = 617, i.SLOT_LOKI = 643, i.SLOT_FREY = 644, i.SLOT_ALEXANDER = 645, 
i.SLOT_FENRIR = 608, i.SLOT_SPHINX = 652, i.SLOT_CAOCAO = 653, i.SLOT_SUNWUKONG = 654, 
i.SLOT_JORMRNGANDER = 655, i.SLOT_SHAKYAMUNI = 682, i.SLOT_GALILEO = 683, i.SLOT_BADER = 684, 
i.SLOT_HESTIA = 686, i.SLOT_HEPHAESTUS = 687, i.SLOT_ROMANTICPRINCESS = 688, i.SLOT_NEWMULAN = 647, 
i.SLOT_YMER = 685, i.SLOT_GODOFWAR = 689, i.SLOT_LITTLEREDRIDINGHOOD = 690, i.SLOT_PRINCE = 691, 
i.SLOT_ARCHER = 692, i.SLOT_ALIBABA = 693, i.SLOT_XERXES = 694, i.SLOT_SKYGARDEN = 695, 
i.SLOT_SINBAD = 696, i.SLOT_G_CLEOPATRA_a = 697, i.SLOT_LAMP_OF_ALADDIN_a = 698, 
i.SLOT_SPHINX_a = 699, i.SLOT_RISING_PEGASUS = 492, i.SLOT_GOLD_RUSH_DELUXE = 493, 
i.SLOT_MERMAID_PEARLS = 497, i.SLOT_CLOWN = 626, i.SLOT_THEGODOFFORTUNE = 624, i.SLOT_INTERSTELLAR = 625, 
i.SLOT_KING_KONG = 498, i.SLOT_POWER_OF_ZEUS = 501, i.SLOT_FLOWERY_PIXIE = 502, 
i.SLOT_EMPEROR_QIN = 627, i.SLOT_MAGICIAN_NEW = 628, i.SLOT_FANTASY_CHOCOLATE_FACTORY = 629, 
i.SLOT_THE_LION = 621, i.SLOT_THE_PANDA = 622, i.SLOT_THE_UNICORN = 623, i.SLOT_LAMP_OF_ALADDIN = 630, 
i.SLOT_THE_MERMAID = 631, i.SLOT_THE_MINSTREL = 632, i.SLOT_THE_FROG_PRINCE = 633, 
i.SLOT_THE_MAMMOTH = 634, i.SLOT_THE_LEGEND_OF_DRAGON = 635, i.SLOT_PUSS_THE_MUSKETEER = 426, 
i.SLOT_ROMANTIC_QUEEN = 503, i.SLOT_WILD_GORILLA = 505, i.SLOT_WICKED_BELLE = 511, 
i.SLOT_BIRD_NINE_HEADS = 656, i.SLOT_MAGIC_FROG = 657, i.SLOT_DWARFS_AND_PRINCESS = 658, 
i.SLOT_LUCKY_SANTA = 659, i.SLOT_THE_PHOENIX = 660, i.SLOT_ROBIN_HOOD = 661, i.SLOT_BUNNY_GIRL = 662, 
i.SLOT_GOLD_MINER = 663, i.SLOT_KYLIN = 516, i.SLOT_THE_LION_GEMS = 517, i.SLOT_THE_FOREVER_LOVE = 520, 
i.SLOT_WOLF_LEGEND = 506, i.SLOT_HADES = 646, i.SLOT_HERMES = 648, i.SLOT_PROMETHEUS = 650, 
i.SLOT_PESEUS = 651, i);
t.exports = n;
cc._RF.pop();
}, {} ],
GameInit: [ function(e, t) {
"use strict";
cc._RF.push(t, "a7fb4cD/VNH6armdwkc0xb1", "GameInit");
t.exports = {
init: function() {
var t = e("AppData");
cc.vv.AppData = new t();
cc.vv.AppData.init();
var i = Global.getLocal(Global.SAVE_LANGUAGE);
if (i) Global.language = i; else {
var n = cc.sys.language;
n == Global.LANGUAGE.AR && (Global.language = n);
}
Global.language === Global.LANGUAGE.ZH ? cc.vv.Language = e("ChineseCfg") : cc.vv.Language = e("EnglishCfg");
if (Global.languageList) for (var a = 0; a < Global.languageList.length; a++) if (Global.languageList[a] == Global.language) {
var o = e(Global.language);
Object.assign(cc.vv.Language, o);
}
cc.vv.GameItemCfg = e("GameItemCfg");
}
};
cc._RF.pop();
}, {
AppData: "AppData",
ChineseCfg: "ChineseCfg",
EnglishCfg: "EnglishCfg",
GameItemCfg: "GameItemCfg"
} ],
GameItemCfg: [ function(e, t) {
"use strict";
cc._RF.push(t, "33bfdjZyPxEjqTv1nAaRjYk", "GameItemCfg");
var i, n = e("GameIdMgr");
t.exports = ((i = {})[n.SLOT_COMESOON] = {
title: "comingSoon",
name: "comingSoon"
}, i[n.SLOT_COMESOON1] = {
title: "comingSoon1",
name: "comingSoon1"
}, i[n.SLOT_COMESOON2] = {
title: "comingSoon2",
name: "comingSoon2"
}, i[n.SLOT_COMESOON3] = {
title: "comingSoon3",
name: "comingSoon3"
}, i[n.POKER_DOMINO] = {
title: "Domino",
name: "Domino",
action: "Domino",
gamename: "Domino"
}, i[n.POKER_UNO] = {
title: "Uno",
name: "Uno",
action: "Uno",
gamename: "Uno"
}, i[n.POKER_LUDOMASTER] = {
title: "Nudo",
name: "Nudo",
action: "Nudo",
gamename: "Ludo"
}, i[n.BLACK_JACK] = {
title: "BlackJack21",
name: "BlackJack21",
action: "BlackJack21",
gamename: "Black Jack"
}, i[n.POKER_NIU] = {
title: "caishendao",
name: "nn",
action: "heibao"
}, i[n.DRAGON_VS_TIGER] = {
title: "caishendao",
name: "lhdz",
action: "heibao",
gamename: "Dragon & Tiger"
}, i[n.POKER_HUNDRED] = {
title: "caishendao",
name: "100nn",
action: "heibao"
}, i[n.MLLM] = {
title: "caishendao",
name: "mllm",
action: "heibao"
}, i[n.RED_VS_BLACK] = {
title: "caishendao",
name: "hhdz",
action: "heibao"
}, i[n.POKER_TBNN] = {
title: "caishendao",
name: "tbnn",
action: "heibao"
}, i[n.JLM] = {
title: "caishendao",
name: "Jlm",
action: "poker_1",
poker: 1
}, i[n.MLMJ] = {
title: "caishendao",
name: "mlmj",
action: "heibao"
}, i[n.YDLM] = {
title: "Ydlm",
name: "Ydlm",
action: "poker_9",
poker: 1
}, i[n.SEVEN_UP_DOWN] = {
title: "SevenUpDown",
name: "SevenUpDown",
gamename: "7 Up Dowm"
}, i[n.BACCARAT] = {
title: "Baccarat",
name: "Baccarat",
gamename: "Baccarat"
}, i[n.WINGO_LOTTERY] = {
title: "WingoLottery",
name: "WingoLottery",
gamename: "Wingo Lottery"
}, i[n.JHANDI_MUNDA] = {
title: "Jhandimunda",
name: "Jhandimunda",
gamename: "Jhandi Munda"
}, i[n.HORSE_RACING] = {
title: "HorseRace",
name: "HorseRace",
gamename: "Horse Racing"
}, i[n.ROULETTE] = {
title: "zhuanpan",
name: "Roulette36",
action: "zhuanpan1",
gamename: "Roulette"
}, i[n.CRASH] = {
title: "Crash",
name: "Carsh",
action: "animation",
gamename: "Carsh"
}, i[n.ANDAR_BAHAR] = {
title: "AndarBahar",
name: "AndarBahar",
gamename: "Andar Bahar"
}, i[n.FORTUNE_WHEEL] = {
title: "FortuneWheel",
name: "Fortunewheel",
gamename: "Fortune Wheel"
}, i[n.INDIA_RUMMY] = {
title: "Rummy",
name: "Rummy",
gamename: "Rummy"
}, i[n.TEENPATTI] = {
title: "TeenPatti",
name: "TeenPatti",
gamename: "Teenpatti"
}, i[n.TEXAS_HOLDEM] = {
title: "Delphi",
name: "Delphi",
gamename: "Poker"
}, i[n.ALADINGWHEEL] = {
title: "AladingWheel",
name: "AladingWheel",
gamename: "AladingWheel"
}, i[n.HWFISH_918] = {
title: "hwfish918",
name: "hwfish918",
action: "hwfish918"
}, i[n.C_CRICKETX] = {
title: "CricketX",
name: "CricketX",
action: "CricketX"
}, i[n.C_AVIATRIX] = {
title: "Aviatrix",
name: "Aviatrix",
action: "Aviatrix"
}, i[n.C_CRASHX] = {
title: "CrashX",
name: "CrashX",
action: "CrashX"
}, i[n.C_AVIATOR] = {
title: "Aviator",
name: "Aviator",
action: "Aviator"
}, i[n.C_ZEPPELIN] = {
title: "Zeppelin",
name: "Zeppelin",
action: "Zeppelin"
}, i[n.S_LIMBO] = {
title: "Limbo",
name: "Limbo",
action: "Limbo"
}, i[n.S_DICE] = {
title: "Dice",
name: "Dice",
action: "Dice"
}, i[n.S_PLINKO] = {
title: "Plinko",
name: "Plinko",
action: "Plinko"
}, i[n.S_KENO] = {
title: "Keno",
name: "Keno",
action: "Keno"
}, i[n.S_TOWERS] = {
title: "Tower",
name: "Tower",
action: "Tower"
}, i[n.DOUBLE_ROLL] = {
title: "DoubleRoll",
name: "DoubleRoll",
action: "DoubleRoll"
}, i[n.S_CRYPTO] = {
title: "Crypto",
name: "Crypto",
action: "Crypto"
}, i[n.S_TRIPLE] = {
title: "Triple",
name: "Triple",
action: "Triple"
}, i[n.S_CAPPADOCIA] = {
title: "Cappadocia",
name: "Cappadocia",
action: "Cappadocia"
}, i[n.C_JETX] = {
title: "JetX",
name: "JetX",
action: "JetX"
}, i[n.SLOT_GDF] = {
title: "caishendao",
name: "godofwealth",
action: "caishendao"
}, i[n.SLOT_AFG] = {
title: "feizhouconglin",
name: "african_jungle",
action: "feizhouconglin"
}, i[n.SLOT_GREAT_BLUE] = {
title: "weidadelanse",
name: "great_blue",
action: "weidadelanse"
}, i[n.SLOT_DR] = {
title: "haitunjiao",
name: "dolphin_reef",
action: "haitunjiao"
}, i[n.SLOT_SB] = {
title: "yindan",
name: "silver_bullet",
action: "yindan"
}, i[n.SLOT_GDT] = {
title: "huangjinshu",
name: "golden_tree",
action: "huangjinshu"
}, i[n.BAIJIALE] = {
title: "baijiale",
name: "baijiale",
action: "baijiale1"
}, i[n.BAIJIALE_MID] = {
title: "baijiale",
name: "baijiale",
action: "baijiale2"
}, i[n.BAIJIALE_HIGH] = {
title: "baijiale",
name: "baijiale",
action: "baijiale3"
}, i[n.HORSE_MONKEY_TREE] = {
title: "pilihou",
name: "monkeyClimbTree",
action: "pilihou"
}, i[n.ARC_XYZB] = {
title: "xiyouzhengba",
name: "xyzb",
action: "juezhantianxia"
}, i[n.ARC_XYZB_LINE] = {
title: "xiyouzhengba",
name: "xyzb",
action: "juezhantianxia"
}, i[n.FISH_SHRIMP_OYSTER] = {
title: "yuxiahao",
name: "fish_shrimp_oyster",
action: "yuxiahao"
}, i[n.BCBM] = {
title: "benchibaoma",
name: "bcbm777",
action: "benchibaoma"
}, i[n.ONLINE_LHDZ] = {
title: "longhudou",
name: "lhdz_online",
action: "longhudou"
}, i[n.SLOT_PAN] = {
title: "heibao",
name: "panther",
action: "heibao"
}, i[n.SLOT_IVAN] = {
title: "ivan",
name: "Slot_Ivan",
action: "ivan"
}, i[n.BIRD_AND_ANIMAL] = {
title: "feiqinzoushou",
name: "birds_and_animals",
action: "feiqinzoushou"
}, i[n.ROULETTE_MID] = {
title: "zhuanpan",
name: "roulette",
action: "zhuanpan2"
}, i[n.ROULETTE_HIGH] = {
title: "zhuanpan",
name: "roulette",
action: "zhuanpan3"
}, i[n.TWENTYONE777] = {
title: "twentyone",
name: "twentyone777",
action: "21dian"
}, i[n.SLOT_YNXJ] = {
title: "yunvxinjing",
name: "SexandZen",
action: "yunvxinjing"
}, i[n.FRUIT_SLOT] = {
title: "shuiguoslots",
name: "fruit_slot",
action: "shuiguoslots"
}, i[n.SLOT_GLF] = {
title: "jinglianhua",
name: "goldenlotusflower",
action: "jinglianhua"
}, i[n.SLOT_GSGL] = {
title: "gaosugonglu",
name: "Expressway",
action: "gaosugonglu"
}, i[n.SLOT_JLBD] = {
title: "jilebaodian",
name: "treasure",
action: "jilebaodian"
}, i[n.SLOT_PJL] = {
title: "panjinlian",
name: "panjinlian",
action: "panjinlian"
}, i[n.SLOT_JF] = {
title: "xiaoribenpangzi",
name: "little_japanese_fat_man",
action: "xiaoribenpangzi"
}, i[n.SLOT_SHZ] = {
title: "shuihuzhuan",
name: "shz777",
action: "shuihuzhuan"
}, i[n.SLOT_TK] = {
title: "sanguoyanyi",
name: "Threecountries",
action: "sanguoyanyi"
}, i[n.SLOT_SPARTAN] = {
title: "spartan",
name: "Spartan",
action: "spartan"
}, i[n.HORSE] = {
title: "saima",
name: "horse",
action: "saima"
}, i[n.MOTOR_RACE] = {
title: "moto_race",
name: "MotoRace",
action: "saimotuoche"
}, i[n.HORSE_RACE] = {
title: "saima",
name: "MotoRace",
action: "saima"
}, i[n.ARC_YCLS] = {
title: "yingchaoliansai",
name: "Premiership",
action: "yingchaoliansai"
}, i[n.SLOT_SLWH] = {
title: "senlinwuhui",
name: "ForestParty918",
action: "senlinwuhui"
}, i[n.SLWH_918NEW] = {
title: "forestParty918New",
name: "ForestParty918New",
action: "forestParty918New"
}, i[n.FRUIT] = {
title: "shuiguoji",
name: "fruit",
action: "shuiguoji"
}, i[n.LEOPARD] = {
title: "baoziwang",
name: "leopard",
action: "baoziwang"
}, i[n.HULUJI] = {
title: "huluoji",
name: "huluji",
action: "huluoji"
}, i[n.SLOT_GLYY] = {
title: "jinlianyinye",
name: "goldenlotus_silver",
action: "jinlianyinye"
}, i[n.SLOT_SGIRL] = {
title: "xingganmeinv",
name: "sexGirl",
action: "xingganmeinv"
}, i[n.SLOT_ROBIN] = {
title: "luobinhan",
name: "robin",
action: "luobinhan"
}, i[n.SLOT_FOOTBALL] = {
title: "football",
name: "football",
action: "football"
}, i[n.SLOT_TGSY] = {
title: "thaiamazing",
name: "thaiamazing",
action: "amazinghailan"
}, i[n.SLOT_EASTER] = {
title: "easter",
name: "easter",
action: "fuhuojie"
}, i[n.SLOT_NEWYEAR] = {
title: "newyear",
name: "newyear",
action: "bainian"
}, i[n.SLOT_STEAMTOWER] = {
title: "steamtower",
name: "steamtower",
action: "SteamTower"
}, i[n.SLOT_VICTORY] = {
title: "victory",
name: "victory",
action: "Victory"
}, i[n.LHDZ_918_1] = {
title: "longhudou1",
name: "Lhdz_918kiss",
action: "longhudou1"
}, i[n.LHDZ_918_2] = {
title: "longhudou2",
name: "Lhdz_918kiss",
action: "longhudou2"
}, i[n.LHDZ_918_3] = {
title: "longhudou3",
name: "Lhdz_918kiss",
action: "longhudou3"
}, i[n.SLOT_DRAGON5] = {
title: "dragon5",
name: "Dragon5",
action: "5dragons"
}, i[n.SLOT_JETION] = {
title: "jixing",
name: "Jetion",
action: "jixing"
}, i[n.SLOT_RALLY] = {
title: "rally",
name: "rally",
action: "lalisai"
}, i[n.SLOT_TRAFFIC_LIGHT] = {
title: "traffic_light",
name: "traffic_light",
action: "honglvdeng"
}, i[n.SLOT_GARDEN] = {
title: "garden",
name: "garden",
action: "Garden"
}, i[n.SLOT_WESTERN_PASTURE] = {
title: "western_pasture",
name: "westernPasture",
action: "WesternRanch"
}, i[n.SLOT_ZHANWM] = {
title: "zhanWM918",
name: "zhanWM918",
action: "emperdrgate"
}, i[n.SLOT_PD] = {
title: "falaobaozang",
name: "Preciousdeposits",
action: "falaobaozang"
}, i[n.SLOT_AZT] = {
title: "azitaike",
name: "Aztek",
action: "azitaike"
}, i[n.SLOT_JJX] = {
title: "jiangjinxiong",
name: "Bonusbear",
action: "jiangjinxiong"
}, i[n.SLOT_TLG] = {
title: "fengshenbang",
name: "Thelistofgods",
action: "fengshenbang"
}, i[n.SLOT_FORTUNE_PANDA] = {
title: "fuguixiongmao",
name: "fortunePanda",
action: "fuguixiongmao"
}, i[n.SLOT_FORTUNE] = {
title: "prosperity",
name: "MakeAFortune918",
action: "Prosperity"
}, i[n.SLOT_CHERRY] = {
title: "cherryLove",
name: "cherryLove",
action: "cherrylove"
}, i[n.SLOT_FARM_STORY] = {
title: "ranch_story",
name: "farmStory",
action: "RanchStory"
}, i[n.SLOT_STONE_AGE] = {
title: "stoneage",
name: "stoneAge",
action: "stoneage"
}, i[n.SLOT_BLAZING_STAR] = {
title: "blazing_star",
name: "blazingStar",
action: "ShiningStar"
}, i[n.SLOT_ICE_AND_SNOW] = {
title: "ice_land",
name: "iceAndSnow",
action: "IceLand"
}, i[n.SLOT_INDIA_MYTH] = {
title: "indiamyth",
name: "indiaMyth",
action: "IndianMyth"
}, i[n.SLOT_MAGICIAN] = {
title: "magician",
name: "magician",
action: "MagiclSpin"
}, i[n.SLOT_CIRCUS] = {
title: "circus",
name: "circus",
action: "circus"
}, i[n.SLOT_AIRPLANE] = {
title: "airplane",
name: "airplane",
action: "airplane"
}, i[n.SLOT_FAME] = {
title: "fame",
name: "Fame",
action: "fame"
}, i[n.SLOT_TGFQ] = {
title: "thaibliss",
name: "Thaibliss",
action: "thaibliss"
}, i[n.SLOT_SEA_WORLD] = {
title: "sea_world",
name: "seaWorld",
action: "SeaWorld"
}, i[n.SLOT_HUANG_DI_LAI_LE] = {
title: "huang_di_lai_le",
name: "huangDiLaiLe",
action: "huangdilaile"
}, i[n.SLOT_CHEN_PAO_ISLAND] = {
title: "treasure_islang",
name: "treasureIsland",
action: "TreasureIslang"
}, i[n.SLOT_SPIRITUAL_GARDEN] = {
title: "fairy_garden",
name: "fairyGarden",
action: "FairyGarden"
}, i[n.BACCARAT_918] = {
title: "baccarat918",
name: "Baccarat918",
action: "baijiale"
}, i[n.SLOT_OCEAN] = {
title: "ocean",
name: "Ocean",
action: "haiyangtaitang"
}, i[n.SINGLE_PICK] = {
title: "singlepick",
name: "singlepick",
action: "dantiao"
}, i[n.BCBM_918] = {
title: "bcbm918",
name: "bcbm918",
action: "benchibaoma1"
}, i[n.SICBO_918] = {
title: "sicbo918",
name: "Dice918",
action: "shaizi"
}, i[n.THREE_POKER_918] = {
title: "three_poker918",
name: "ThreePoker918",
action: "sankapuke"
}, i[n.HOLD_EM_918] = {
title: "hold_em_918",
name: "Hold_EM_918",
action: "ducheng"
}, i[n.BULL_918] = {
title: "bull918",
name: "Bull918",
action: "niuniu"
}, i[n.ROULET_73] = {
title: "roulet73",
name: "RouletRoulet73",
action: "lunpan73"
}, i[n.ROULET_24] = {
title: "roulet24",
name: "Roulette24",
action: "lunpan24"
}, i[n.ROULETTE_MINI] = {
title: "roulet12",
name: "RouletteMini",
action: "lunpan12"
}, i[n.ROULET_36] = {
title: "roulet36",
name: "Roulette36",
action: "lunpan36"
}, i[n.SLOT_ALADDIN] = {
title: "aladdin",
name: "aladdin",
action: "Aladdin"
}, i[n.MONKEY_ZWBS_918] = {
title: "zwbs",
name: "xyzb",
action: "xiyouzhengba"
}, i[n.ARC_ZWBS_LINE] = {
title: "zwbs",
name: "xyzb",
action: "xiyouzhengba"
}, i[n.SLOT_HALLOWEEN] = {
title: "halloween",
name: "halloween",
action: "HalloweenParty"
}, i[n.SLOT_BRAVE_LEGEND] = {
title: "brave_legend",
name: "brave_legend",
action: "DragonMaiden"
}, i[n.SLOT_AFRICAN_SAFARI] = {
title: "african_safari",
name: "AfricanSafari",
action: "AfricanWildlife"
}, i[n.SLOT_GOLDEN_DRAGON] = {
title: "golden_dragon",
name: "golden_dragon",
action: "jinlongcifu"
}, i[n.SLOT_WUFUMEN] = {
title: "wufumen",
name: "wufumen",
action: "wufumen"
}, i[n.SLOT_WANGCAI] = {
title: "wangcai",
name: "wangcai",
action: "wangcai"
}, i[n.SLOT_WOLFER] = {
title: "wolfer",
name: "Wolfer",
action: "Wolfer"
}, i[n.SLOT_ALICE] = {
title: "alice",
name: "Alice",
action: "ailisi"
}, i[n.SLOT_CAPTAIN9] = {
title: "captain9",
name: "Captain9",
action: "chuanzhang9"
}, i[n.CASINO_WAR_918] = {
title: "casino_war",
name: "CasinoWar",
action: "duchengzhanzhen"
}, i[n.SLOT_CRAZY_MONEY] = {
title: "crazy_money",
name: "CrazyMoney",
action: "kuangrejinqian"
}, i[n.SLOT_ZCJB] = {
title: "felicitous",
name: "Felicitous",
action: "zhaocaijinbao"
}, i[n.SLOT_IRELAND_LUCKY] = {
title: "ireland_lucky",
name: "IrelandLucky",
action: "IrishLuck"
}, i[n.SLOT_LAURA] = {
title: "laura",
name: "Laura",
action: "laola"
}, i[n.SLOT_MONEY_FROG] = {
title: "money_frog",
name: "MoneyFrog",
action: "jinqianwa"
}, i[n.SLOT_TOP_GUN] = {
title: "top_gun",
name: "TopGun",
action: "zhuangzhilingyun"
}, i[n.SLOT_YEARBYYEAR] = {
title: "year_by_year",
name: "YearByYear",
action: "niannianyouyu"
}, i[n.SLOT_SWK] = {
title: "swk",
name: "swk",
action: "sunwukong"
}, i[n.SLOT_PIRATE_SHIP] = {
title: "pirate_ship",
name: "PirateShip",
action: "PirateShip"
}, i[n.SLOT_HALLOWEEN_SURPRISE] = {
title: "witch",
name: "witch",
action: "Witch"
}, i[n.SLOT_COLABOTTLE] = {
title: "colabottle",
name: "Colabottle",
action: "cookiepop"
}, i[n.SLOT_SAINTSEIAY] = {
title: "saintseiay",
name: "SaintSeiya",
action: "saintseiya"
}, i[n.SLOT_GOLDEN_TREE918] = {
title: "huangjinshu",
name: "golden_tree918",
action: "huangjinshu"
}, i[n.SLOT_CAPTAIN] = {
title: "captain20",
name: "Captain20",
action: "captain20"
}, i[n.SLOT_TERNADO] = {
title: "ternado",
name: "Tornado",
action: "triple-twiste"
}, i[n.SLOT_YEMEI] = {
title: "yemei",
name: "Yemei",
action: "yemei"
}, i[n.SLOT_MATSURI] = {
title: "Matsuri",
name: "Matsuri",
action: "matsuri"
}, i[n.SLOT_WATER] = {
title: "water",
name: "water",
action: "water"
}, i[n.SLOT_XUEMEI] = {
title: "xuemei",
name: "Xuemei",
action: "xuemei"
}, i[n.SLOT_ORIENT] = {
title: "orient",
name: "Orient",
action: "orient"
}, i[n.SLOT_COYOTECASH] = {
title: "CoyoteCash",
name: "CoyoteCash",
action: "CoyoteCash"
}, i[n.SLOT_MAGICAL_DRAGON] = {
title: "magicaldragon",
name: "MagicalDragon",
action: "MagicalDragon"
}, i[n.SLOT_MOTOCYCLE] = {
title: "Slot_Motorcycle",
name: "Slot_Motorcycle",
action: "Nitro"
}, i[n.SLOT_SEASON] = {
title: "Season",
name: "Season",
action: "jijiewenhou"
}, i[n.SLOT_FASHION] = {
title: "fashion",
name: "Fashion",
action: "fashion"
}, i[n.SLOT_TREX] = {
title: "Trex",
name: "Trex",
action: "trex"
}, i[n.SLOT_GREAT_CHINA] = {
title: "GreatChina",
name: "GreatChina",
action: "greatChina"
}, i[n.SLOT_CLEOPATRA] = {
title: "Cleopatra",
name: "Cleopatra",
action: "Cleopatra"
}, i[n.SLOT_SPARTA30] = {
title: "Sparta30",
name: "Sparts30",
action: "Sparta30"
}, i[n.FQZS_SP] = {
title: "feiqinzoushou",
name: "fqzs",
action: "feiqinzoushou"
}, i[n.SLOT_THE_DISCOVER] = {
title: "TheDiscover",
name: "TheDiscover",
action: "faxian"
}, i[n.SLOT_BIGSHOT] = {
title: "Bigshot",
name: "Bigshot",
action: "Bigshot"
}, i[n.SLOT_NIGHTCLUB] = {
title: "NightClub",
name: "NightClub",
action: "NightClub"
}, i[n.SLOT_NINJA] = {
title: "Ninja",
name: "Ninja",
action: "Ninja"
}, i[n.PHOENIX_SP] = {
title: "phoenix",
name: "Phoenix",
action: "Phoenix"
}, i[n.POKEMON_SP] = {
title: "pokemon",
name: "Pokemon",
action: "Pokemon"
}, i[n.SLOT_GOLF] = {
title: "Golf",
name: "Golf",
action: "Golf"
}, i[n.SLOT_FRUITSPACE] = {
title: "FruitSpace",
name: "FruitSpace",
action: "shuiguotiandi"
}, i[n.SLOT_CLASSIC] = {
title: "classicSlots",
name: "ClassicSlots",
action: "classicSlots"
}, i[n.SLOT_CRAZY7] = {
title: "crazy7",
name: "Crazy7",
action: "crazy7"
}, i[n.SLOT_HZLB] = {
title: "Slotmonkey",
name: "Slotmonkey",
action: "monkeyslot"
}, i[n.SLOT_8BALL] = {
title: "Slot8Ball",
name: "BallSlots",
action: "ballSlot"
}, i[n.SLOT_PAYDIRT] = {
title: "PayDirt",
name: "PayDirt",
action: "paydirt"
}, i[n.SLOT_INFINITY_VENUS] = {
title: "venus",
name: "venus",
action: "venus"
}, i[n.GLITZ_INFINITY] = {
title: "Glitz",
name: "GlitzAndGlamour",
action: "Glitz"
}, i[n.SLOT_CHICKEN] = {
title: "slot_chicken",
name: "slot_chicken",
action: "slot_chicken"
}, i[n.SLOT_GOWV2] = {
title: "godofwealth_v2",
name: "godofwealth_v2",
action: "godofwealth_v2"
}, i[n.SLOT_DRAGON5_HD] = {
title: "dragon5HD",
name: "dragon5HD",
action: "dragon5_hd"
}, i[n.SLOT_ZHAOYUN] = {
title: "zhaoyun",
name: "zhaoyun",
action: "zhaoyun"
}, i[n.SLOT_THEMEPARKBLAST] = {
title: "ThemeParkBlast",
name: "ThemeParkBlast",
action: "ThemeParkBlast",
animation: "animation"
}, i[n.SLOT_MOMENT_OF_WONDER] = {
title: "MomentOfWonder",
name: "MomentOfWonder",
action: "MomentOfWonder",
animation: "animation"
}, i[n.SLOT_BONIE_CLYDE] = {
title: "BonieClyde",
name: "BonieClyde",
action: "BonieClyde",
animation: "animation"
}, i[n.SLOT_BEER_HALL] = {
title: "BeerHall",
name: "BeerHall",
action: "BeerHall",
animation: "animation"
}, i[n.REGAL_TIGER] = {
title: "RegalTiger",
name: "RegalTiger",
action: "RegalTiger",
animation: "animation"
}, i[n.SLOT_QUEENOFSEA] = {
title: "queenOfSea",
name: "queenOfSea",
action: "queenOfSea",
animation: "animation"
}, i[n.SLOT_GODOFFIRE] = {
title: "godOfFire",
name: "GodOfFire",
action: "godOfFire",
animation: "animation"
}, i[n.JALAPAND_DELIGHT] = {
title: "JadapenoDelight",
name: "JalapanDelight",
action: "JalapanDelight",
animation: "animation"
}, i[n.MASKED_HERO] = {
title: "MaskedHero",
name: "MaskedHero",
action: "MaskedHero",
animation: "animation"
}, i[n.LUCKY_BEE] = {
title: "LuckyBee",
name: "LuckyBee",
action: "LuckyBee",
animation: "animation"
}, i[n.YEAR_OF_THE_RAT] = {
title: "YearOfTheRat",
name: "YearOfTheRat",
action: "YearOfTheRat",
animation: "animation"
}, i[n.DIAMOND_FOREST] = {
title: "DiamondForest",
name: "DiamondForest",
action: "DiamondForest",
animation: "animation"
}, i[n.SUSHI_LOVER] = {
title: "SushiLover",
name: "sushiLover",
action: "SushiLover",
animation: "animation"
}, i[n.FORTUNE_GENIE] = {
title: "fortuneGenie",
name: "fortuneGenie",
action: "fortuneGenie",
animation: "animation"
}, i[n.GOLD_ISLAND_TREASURE] = {
title: "goldIslandTreasure",
name: "goldIslandTreasure",
action: "goldIslandTreasure",
animation: "animation"
}, i[n.THUNDER_MUSTANG] = {
title: "ThunderMustang",
name: "ThunderMustang",
action: "ThunderMustang",
animation: "animation"
}, i[n.POWER_DRAGON] = {
title: "PowerDragon",
name: "PowerDragon",
action: "PowerDragon",
animation: "animation"
}, i[n.HOLIDAY_FRENZY] = {
title: "holidayFrenzy",
name: "holidayFrenzy",
action: "holidayFrenzy",
animation: "animation"
}, i[n.SLOT_SMOKINGHOTPICHES] = {
title: "SmokingHotPiches",
name: "SmokingHotPiches",
action: "SmokingHotPiches",
animation: "animation"
}, i[n.SLOT_GRANDGEMINI] = {
title: "GrandGemini",
name: "GrandGemini",
action: "GrandGemini"
}, i[n.SLOT_CUPIDISCRUSH] = {
title: "CupidIsCrush",
name: "CupidIsCrush",
action: "CupidIsCrush",
animation: "animation"
}, i[n.SLOT_CUPIDCRUSHDELUXE] = {
title: "CupidCrushDeluxe",
name: "CupidCrushDeluxe",
action: "CupidCrushDeluxe",
animation: "animation"
}, i[n.SLOT_FORTUNEWILDDELUXE] = {
title: "FortuneWildDeluxe",
name: "FortuneWildDeluxe",
action: "FortuneWildDeluxe",
animation: "animation"
}, i[n.SLOT_CANDY_CLASH] = {
title: "CandyClash",
name: "CandyClash",
action: "CandyClash",
animation: "animation"
}, i[n.SLOT_SPLENDID_ISLAND] = {
title: "SplendidIsland",
name: "SplendidIsland",
action: "SplendidIsland",
animation: "animation"
}, i[n.SLOT_SPLENDIDISLAND_DELUXE] = {
title: "SplendidIslandDeluxe",
name: "SplendidIslandDeluxe",
action: "SplendidIslandDeluxe",
animation: "animation"
}, i[n.SLOT_EASTERNRICHES] = {
title: "EasternRiches",
name: "EasternRiches",
action: "EasternRiches",
animation: "animation"
}, i[n.SLOT_KINGOFOLYMPUS] = {
title: "KingOfOlympus",
name: "KingOfOlympus",
action: "kingOfOlympus",
animation: "animation"
}, i[n.SLOT_ZUES] = {
title: "Zues",
name: "Zues",
action: "Zues",
animation: "animation3",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_SUNGODDESS] = {
title: "SunGoddess",
name: "SunGoddess",
action: "SunGoddess",
animation: "animation"
}, i[n.SLOT_BINGOMEOW] = {
title: "BingoMeow",
name: "BingoMeow",
action: "BingoMeow",
animation: "animation"
}, i[n.SLOT_TREASUREJUNGLE] = {
title: "TreasureJungle",
name: "TreasureJungle",
action: "TreasureJungle",
animation: "animation"
}, i[n.SLOT_PRINCECHARMING] = {
title: "PrinceCharming",
name: "PrinceCharming",
action: "PrinceCharming",
animation: "animation"
}, i[n.SLOT_HIGHPOWER] = {
title: "HighPower",
name: "HighPower",
action: "HighPower",
animation: "animation"
}, i[n.SLOT_SUPER_WICKED_BLAST] = {
title: "SuperWickedBlast",
name: "SuperWickedBlast",
action: "SuperWickedBlast",
animation: "animation"
}, i[n.SLOT_BRILLIANTTREASURES] = {
title: "BrilliantTreasures",
name: "BrilliantTreasures",
action: "BrilliantTreasures",
animation: "animation"
}, i[n.SLOT_MAMMOTHGRANDGEMS] = {
title: "MammothGrandGems",
name: "MammothGrandGems",
action: "MammothGrandGems",
animation: "animation"
}, i[n.SLOT_MAMMOTHGRAND] = {
title: "MammothGrand",
name: "MammothGrand",
action: "MammothGrand",
animation: "animation"
}, i[n.SLOT_SPOOKYHALLOWEEN] = {
title: "SpookyHalloween",
name: "SpookyHalloween",
action: "SpookyHalloween",
animation: "animation"
}, i[n.SLOT_STONEAGEDTREASURE] = {
title: "StoneAgedTreasure",
name: "StoneAgedTreasure",
action: "StoneAgedTreasure",
animation: "animation"
}, i[n.SLOT_MONSTERCASH] = {
title: "MonsterCash",
name: "MonsterCash",
action: "MonsterCash",
animation: "animation"
}, i[n.SLOT_DOUBLECHILI] = {
title: "DoubleChili",
name: "DoubleChili",
action: "DoubleChili",
animation: "animation",
spineScale: 1,
offsetY: -10
}, i[n.SLOT_MAYADEORO] = {
title: "MayaDeoro",
name: "MayaDeoro",
action: "MayaDeoro",
animation: "animation",
spineScale: 1
}, i[n.SLOT_PRINCENEZHA] = {
title: "PrinceNeZha",
name: "PrinceNeZha",
action: "PrinceNeZha",
animation: "animation",
spineScale: 1
}, i[n.SLOT_PIGGYHEIST] = {
title: "PiggyHeist",
name: "PiggyHeist",
action: "PiggyHeist",
animation: "animation",
spineScale: 1
}, i[n.SLOT_HOWLINGMOON] = {
title: "HowlingMoon",
name: "HowlingMoon",
action: "HowlingMoon",
animation: "animation"
}, i[n.SLOT_ALIENBUSTER] = {
title: "AlienBuster",
name: "AlienBuster",
action: "AlienBuster",
animation: "animation"
}, i[n.SLOT_SUMO] = {
title: "Sumo",
name: "Sumo",
action: "Sumo",
animation: "animation"
}, i[n.SLOT_THUMBELINA] = {
title: "Thumbelina",
name: "Thumbelina",
action: "Thumbelina",
animation: "animation"
}, i[n.SLOT_DRAGONDIAMOND] = {
title: "DragonDiamond",
name: "DragonDiamond",
action: "DragonDiamond",
animation: "animation"
}, i[n.SLOT_LEPRECHAUNBLAST] = {
title: "LeprechaunBlast",
name: "LeprechaunBlast",
action: "LeprechaunBlast",
animation: "animation"
}, i[n.SLOT_AMERICANBILLIONAIRE] = {
title: "AmericanBillionaire",
name: "AmericanBillionaire",
action: "AmericanBillionaire",
animation: "animation"
}, i[n.SLOT_BEAUTYANDTHEBEAST] = {
title: "BeautyAndTheBeast",
name: "BeautyAndTheBeast",
action: "BeautyAndTheBeast",
animation: "animation"
}, i[n.SLOT_YEAROFGOLDENPIG] = {
title: "YearOfGoldenPig",
name: "YearOfGoldenPig",
action: "YearOfGoldenPig",
animation: "animation"
}, i[n.SLOT_DOUBLENUGGETS] = {
title: "DoubleNuggets",
name: "DoubleNuggets",
action: "DoubleNuggets",
animation: "animation"
}, i[n.SLOT_DOUBLETHUNDER] = {
title: "DoubleThunder",
name: "DoubleThunder",
action: "DoubleThunder",
animation: "animation"
}, i[n.SLOT_BEERFESTIVAL] = {
title: "BeerFestival",
name: "BeerFestival",
action: "BeerFestival",
animation: "animation"
}, i[n.SLOT_INVINCIBLEGODDESS] = {
title: "InvincibleGoddess",
name: "InvincibleGoddess",
action: "InvincibleGoddess",
animation: "animation"
}, i[n.SLOT_BIGDUEL] = {
title: "BigDuel",
name: "BigDuel",
action: "BigDuel",
animation: "animation"
}, i[n.SLOT_DOUBLEAGENT] = {
title: "DoubleAgent",
name: "DoubleAgent",
action: "DoubleAgent",
animation: "animation"
}, i[n.SLOT_LUCKYCAT] = {
title: "LuckyCat",
name: "LuckyCat",
action: "LuckyCat",
animation: "animation"
}, i[n.SLOT_VAMPIRECOUNT] = {
title: "VampireCount",
name: "VampireCount",
action: "VampireCount",
animation: "animation"
}, i[n.SLOT_TAVERNWITCH] = {
title: "TavernWitch",
name: "TavernWitch",
action: "TavernWitch",
animation: "animation"
}, i[n.SLOT_BLADEMASTERTOKUGAWA] = {
title: "BladeMasterTokugawa",
name: "BladeMasterTokugawa",
action: "BladeMasterTokugawa",
animation: "animation"
}, i[n.SLOT_SIXTHDAYTHEDEMON] = {
title: "SixthDayTheDemon",
name: "SixthDayTheDemon",
action: "SixthDayTheDemon",
animation: "animation"
}, i[n.SLOT_THEMAGICHANZO] = {
title: "TheMagicHanzo",
name: "TheMagicHanzo",
action: "TheMagicHanzo",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_MINAMOTONOYOSHITSUNE] = {
title: "MinamotoNoYoshitsune",
name: "MinamotoNoYoshitsune",
action: "MinamotoNoYoshitsune",
animation: "animation"
}, i[n.SLOT_GANGSTERGODFATHER] = {
title: "GangsterGodfather",
name: "GangsterGodfather",
action: "GangsterGodfather",
animation: "animation"
}, i[n.SLOT_FATHEROFINVENTION] = {
title: "FatherOfInvention",
name: "FatherOfInvention",
action: "FatherOfInvention",
animation: "animation"
}, i[n.SLOT_WESTCOWBOY] = {
title: "WestCowboy",
name: "WestCowboy",
action: "WestCowboy",
animation: "animation"
}, i[n.SLOT_RISINGSUNTHEGREATKING] = {
title: "RisingSunTheGreatKing",
name: "RisingSunTheGreatKing",
action: "RisingSunTheGreatKing",
animation: "animation"
}, i[n.SLOT_POLITICALSTRATEGIST] = {
title: "PoliticalStrategist",
name: "PoliticalStrategist",
action: "PoliticalStrategist",
animation: "animation"
}, i[n.SLOT_MULAN] = {
title: "Mulan",
name: "Mulan",
action: "Mulan",
animation: "animation"
}, i[n.SLOT_GENGHISKHAN] = {
title: "GenghisKhan",
name: "GenghisKhan",
action: "GenghisKhan",
animation: "animation"
}, i[n.SLOT_THECENTAUR] = {
title: "TheCentaur",
name: "TheCentaur",
action: "TheCentaur",
animation: "animation"
}, i[n.SLOT_CHANGE] = {
title: "Change",
name: "Change",
action: "Change",
animation: "animation"
}, i[n.SLOT_ALIENMONSTER] = {
title: "AlienMonster",
name: "AlienMonster",
action: "AlienMonster",
animation: "animation"
}, i[n.SLOT_BASKETBALLKING] = {
title: "BasketballKing",
name: "BasketballKing",
action: "BasketballKing",
animation: "animation"
}, i[n.SLOT_JAPANESESINGER] = {
title: "JapaneseSinger",
name: "JapaneseSinger",
action: "JapaneseSinger",
animation: "animation"
}, i[n.SLOT_NEWKYLIN] = {
title: "NewKylin",
name: "NewKylin",
action: "NewKylin",
animation: "animation"
}, i[n.SLOT_ODYSSEUS] = {
title: "Odysseus",
name: "Odysseus",
action: "Odysseus",
animation: "animation"
}, i[n.SLOT_PRINCESSPEA] = {
title: "PrincessPea",
name: "PrincessPea",
action: "PrincessPea",
animation: "animation"
}, i[n.SLOT_HERA] = {
title: "Hera",
name: "Hera",
action: "Hera",
animation: "animation"
}, i[n.SLOT_APOLLO] = {
title: "Apollo",
name: "Apollo",
action: "Apollo",
animation: "animation"
}, i[n.SLOT_DIONYSUS] = {
title: "Dionysus",
name: "Dionysus",
action: "Dionysus",
animation: "animation"
}, i[n.SLOT_FRIGG] = {
title: "Frigg",
name: "Frigg",
action: "Frigg",
animation: "animation"
}, i[n.SLOT_INDIAN] = {
title: "Indian",
name: "Indian",
action: "Indian",
animation: "animation"
}, i[n.JUNGLE_KING] = {
title: "JungleKing",
name: "JungleKing",
action: "JungleKing",
animation: "animation"
}, i[n.SLOT_RISINGMEDUSA] = {
title: "RisingMedusa",
name: "RisingMedusa",
action: "RisingMedusa",
animation: "an imation",
spineScale: 1,
offsetY: -20
}, i[n.SPEED_FIRE] = {
title: "SpeedFire",
name: "SpeedFire",
action: "SpeedFire",
animation: "animation"
}, i[n.LET_IS_PARTY] = {
title: "LetIsParty",
name: "LetIsParty",
action: "LetIsParty",
animation: "animation"
}, i[n.SLOT_ROCKING_DISCO] = {
title: "RockingDisco",
name: "RockingDisco",
action: "RockingDisco",
animation: "animation"
}, i[n.ADVENTURE_IN_SPACE] = {
title: "AdventureInSpace",
name: "AdventureInSpace",
action: "AdventureInSpace",
animation: "animation"
}, i[n.GORGEOUS_CLEOPATRA] = {
title: "Gorgeouscleopatra",
name: "Gorgeouscleopatra",
action: "Gorgeouscleopatra",
animation: "animation"
}, i[n.SLOT_FORTUNEGONG] = {
title: "FortuneGong",
name: "FortuneGong",
action: "FortuneGong",
animation: "animation"
}, i[n.SLOT_EGYPTIAN_FANTASY] = {
title: "EgpFantasy",
name: "EgpFantasy",
action: "EgpFantasy",
animation: "animation"
}, i[n.MAJESTIC_PANDA] = {
title: "Panda",
name: "Panda",
action: "Panda",
animation: "animation"
}, i[n.CANDY_MAGIC] = {
title: "CandyMagic",
name: "CandyMagic",
action: "CandyMagic",
animation: "animation"
}, i[n.SLOT_FORTUNEWHEELDELUXE] = {
title: "FortuneWheelDeluxe",
name: "FortuneWheelDeluxe",
action: "FortuneWheelDeluxe",
animation: "animation"
}, i[n.SLOTS_TOWER] = {
title: "SlotsTower",
name: "SlotsTower",
action: "SlotsTower",
animation: "animation"
}, i[n.HOT_HOT_DRUMS] = {
title: "HotHotDrums",
name: "HotHotDrums",
action: "HotHotDrums",
animation: "animation"
}, i[n.SLOT_CRICUS_CARNIVAL] = {
title: "CircusCarnival",
name: "CircusCarnival",
action: "CircusCarnival",
animation: "animation"
}, i[n.SLOT_RAPID_PLATINUM_PAY] = {
title: "RapidPlatinumPay",
name: "RapidPlatinumPay",
action: "RapidPlatinumPay",
animation: "animation"
}, i[n.SLOT_SPACE_CAT] = {
title: "SpaceCat",
name: "SpaceCat",
action: "SpaceCat",
animation: "animation"
}, i[n.SLOT_LEPRECHAUNCOINS] = {
title: "LeprechaunCoins",
name: "LeprechaunCoins",
action: "LeprechaunCoins",
animation: "animation"
}, i[n.SLOT_WHEREISSANTACLAUS] = {
title: "WhereIsSantaClaus",
name: "WhereIsSantaClaus",
action: "WhereIsSantaClaus",
animation: "animation"
}, i[n.ICYWOLF] = {
title: "IcyWolf",
name: "IcyWolf",
action: "IcyWolf",
animation: "animation"
}, i[n.SLOT_PELICAN_QUEST] = {
title: "PelicanQuest",
name: "PelicanQuest",
action: "PelicanQuest",
animation: "animation"
}, i[n.SLOT_ZOMBLE_NATION] = {
title: "ZombleNation",
name: "ZombleNation",
action: "ZombleNation",
animation: "animation"
}, i[n.SLOT_MEGA_VAULT_BILLIONAIRE] = {
title: "MegaVaultBillionaire",
name: "MegaVaultBillionaire",
action: "MegaVaultBillionaire",
animation: "animation"
}, i[n.SLOT_PRINCE_CHARMING_DELUXE] = {
title: "PrinceCharmingDeluxe",
name: "PrinceCharmingDeluxe",
action: "PrinceCharmingDeluxe",
animation: "animation"
}, i[n.SLOT_ROYALPUPPIES] = {
title: "RoyalPuppies",
name: "RoyalPuppies",
action: "RoyalPuppies",
animation: "animation",
offsetY: 10,
spineScale: 1.4
}, i[n.SLOT_RISEOFEGYPT] = {
title: "RiseOfEgypt",
name: "RiseOfEgypt",
action: "RiseOfEgypt",
animation: "animation"
}, i[n.SLOT_FORTUNETRAINDELUXE] = {
title: "FortuneTrainDeluxe",
name: "FortuneTrainDeluxe",
action: "FortuneTrainDeluxe",
animation: "animation",
spineScale: .9
}, i[n.SLOT_MIGHTYATLANTIS] = {
title: "MightyAtlantis",
name: "MightyAtlantis",
action: "MightyAtlantis",
animation: "animation",
spineScale: 1,
offsetY: -18
}, i[n.SLOT_NEVERLANDFANTASY] = {
title: "NeverlandFantasy",
name: "NeverlandFantasy",
action: "NeverlandFantasy",
animation: "animation",
spineScale: 1
}, i[n.SLOT_WEALTHOFPANDA] = {
title: "WealthOfPanda",
name: "WealthOfPanda",
action: "WealthOfPanda",
animation: "animation"
}, i[n.SLOT_MAGICORB] = {
titlgame: "MagicOrb",
name: "MagicOrb",
action: "MagicOrb",
animation: "animation"
}, i[n.SLOT_KANGAROOS] = {
title: "Kangaroos",
name: "Kangaroos",
action: "Kangaroos",
animation: "animation"
}, i[n.SLOT_FORTUNETREE] = {
title: "FortuneTree",
name: "FortuneTree",
action: "FortuneTree",
animation: "animation"
}, i[n.SLOT_THELIONSJACKPOT] = {
title: "TheLionsjackpot",
name: "TheLionsjackpot",
action: "TheLionsjackpot",
animation: "animation"
}, i[n.SLOT_VOLCANOFURY] = {
title: "VolcanoFury",
name: "VolcanoFury",
action: "VolcanoFury",
animation: "animation"
}, i[n.SLOT_CAPTAINJACKPOT] = {
title: "CaptainJackpot",
name: "CaptainJackpot",
action: "CaptainJackpot",
animation: "animation"
}, i[n.SLOT_HEROINEMULAN] = {
title: "HeroineMulan",
name: "HeroineMulan",
action: "HeroineMulan",
animation: "animation"
}, i[n.SLOT_KINGOFSIBERIAN] = {
title: "KingOfSiberian",
name: "KingOfSiberian",
action: "KingOfSiberian",
animation: "animation"
}, i[n.SLOT_LEGENDOFOZ] = {
title: "LegendOfOz",
name: "LegendOfOz",
action: "LegendOfOz",
animation: "animation"
}, i[n.SLOT_ULTIMATETIKILINK] = {
title: "UltimateTikiLink",
name: "UltimateTikiLink",
action: "UltimateTikiLink",
animation: "animation"
}, i[n.SLOT_FEANNIESHOW] = {
title: "FeannieShow",
name: "FeannieShow",
action: "FeannieShow",
animation: "animation"
}, i[n.SLOT_POWEROFTHEKRAKEN] = {
title: "PowerOfTheKraken",
name: "PowerOfTheKraken",
action: "PowerOfTheKraken",
animation: "animation"
}, i[n.SLOT_FEAMIN_QUEEN] = {
title: "FeaminQueen",
name: "FeaminQueen",
action: "FeaminQueen",
animation: "animation2"
}, i[n.SLOT_LORDOFTHUNDER] = {
title: "LordOfThunder",
name: "LordOfThunder",
action: "LordOfThunder",
animation: "animation"
}, i[n.SLOT_G_CLEOPATRA] = {
title: "G_Cleopatra",
name: "G_Cleopatra",
action: "G_Cleopatra",
animation: "animation"
}, i[n.SLOT_LEGENDOFJOANOFARC] = {
title: "LegendOfJoanOfArc",
name: "LegendOfJoanOfArc",
action: "LegendOfJoanOfArc",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_GODDESSOFDEATH] = {
title: "GoddessOfDeath",
name: "GoddessOfDeath",
action: "GoddessOfDeath",
animation: "animation"
}, i[n.SLOT_ELVESBLESSING] = {
title: "ElvesBlessing",
name: "ElvesBlessing",
action: "ElvesBlessing",
animation: "animation"
}, i[n.SLOT_THEEVIL] = {
title: "TheEvil",
name: "TheEvil",
action: "TheEvil",
animation: "animation"
}, i[n.SLOT_ODINSANGER] = {
title: "OdinsAnger",
name: "OdinsAnger",
action: "OdinsAnger",
animation: "animation"
}, i[n.SLOT_THEROUNDTABLEKNIGHTSEXPLORE] = {
title: "TheRoundTableKnightsExplore",
name: "TheRoundTableKnightsExplore",
action: "TheRoundTableKnightsExplore",
animation: "animation"
}, i[n.SLOT_LORDCAESAR] = {
title: "LordCaesar",
name: "LordCaesar",
action: "LordCaesar",
animation: "animation"
}, i[n.SLOT_LOKI] = {
title: "Loki",
name: "Loki",
action: "Loki",
animation: "animation"
}, i[n.SLOT_FREY] = {
title: "Frey",
name: "Frey",
action: "Frey",
animation: "animation"
}, i[n.SLOT_ALEXANDER] = {
title: "Alexander",
name: "Alexander",
action: "Alexander",
animation: "animation"
}, i[n.SLOT_FENRIR] = {
title: "Fenrir",
name: "Fenrir",
action: "Fenrir",
animation: "animation"
}, i[n.SLOT_SPHINX] = {
title: "Sphinx",
name: "Sphinx",
action: "Sphinx",
animation: "animation"
}, i[n.SLOT_CAOCAO] = {
title: "CaoCao",
name: "CaoCao",
action: "CaoCao",
animation: "animation"
}, i[n.SLOT_SUNWUKONG] = {
title: "SunWuKong",
name: "SunWuKong",
action: "SunWuKong",
animation: "animation"
}, i[n.SLOT_JORMRNGANDER] = {
title: "Jormengander",
name: "Jormengander",
action: "Jormengander",
animation: "animation"
}, i[n.SLOT_SHAKYAMUNI] = {
title: "Shakyamuni",
name: "Shakyamuni",
action: "Shakyamuni",
animation: "animation"
}, i[n.SLOT_GALILEO] = {
title: "Galileo",
name: "Galileo",
action: "Galileo",
animation: "animation"
}, i[n.SLOT_BADER] = {
title: "Bader",
name: "Bader",
action: "Bader",
animation: "animation"
}, i[n.SLOT_HESTIA] = {
title: "Hestia",
name: "Hestia",
action: "Hestia",
animation: "animation"
}, i[n.SLOT_HEPHAESTUS] = {
title: "Hephaestus",
name: "Hephaestus",
action: "Hephaestus",
animation: "animation"
}, i[n.SLOT_ROMANTICPRINCESS] = {
title: "RomanticPrincess",
name: "RomanticPrincess",
action: "RomanticPrincess",
animation: "animation"
}, i[n.SLOT_NEWMULAN] = {
title: "NewMulan",
name: "NewMulan",
action: "NewMulan",
animation: "animation"
}, i[n.SLOT_YMER] = {
title: "Ymer",
name: "Ymer",
action: "Ymer",
animation: "animation"
}, i[n.SLOT_GODOFWAR] = {
title: "GodOfWar",
name: "GodOfWar",
action: "GodOfWar",
animation: "animation"
}, i[n.SLOT_LITTLEREDRIDINGHOOD] = {
title: "LittleRedRidingHood",
name: "LittleRedRidingHood",
action: "LittleRedRidingHood",
animation: "animation"
}, i[n.SLOT_PESEUS] = {
title: "Peseus",
name: "Peseus",
action: "Peseus",
animation: "animation"
}, i[n.SLOT_PRINCE] = {
title: "Prince",
name: "Prince",
action: "Prince",
animation: "animation"
}, i[n.SLOT_ARCHER] = {
title: "Archer",
name: "Archer",
action: "Archer",
animation: "animation"
}, i[n.SLOT_ALIBABA] = {
title: "Alibaba",
name: "Alibaba",
action: "Alibaba",
animation: "animation"
}, i[n.SLOT_XERXES] = {
title: "Xerxes",
name: "Xerxes",
action: "Xerxes",
animation: "animation"
}, i[n.SLOT_SKYGARDEN] = {
title: "Skygarden",
name: "Skygarden",
action: "Skygarden",
animation: "animation"
}, i[n.SLOT_SINBAD] = {
title: "Sinbad",
name: "Sinbad",
action: "Sinbad",
animation: "animation"
}, i[n.SLOT_G_CLEOPATRA_a] = {
title: "G_Cleopatra",
name: "G_Cleopatra",
action: "G_Cleopatra",
animation: "animation"
}, i[n.SLOT_LAMP_OF_ALADDIN_a] = {
title: "LampOfAladdin",
name: "LampOfAladdin",
action: "LampOfAladdin",
animation: "animation3",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_SPHINX_a] = {
title: "Sphinx",
name: "Sphinx",
action: "Sphinx",
animation: "animation"
}, i[n.SLOT_JIANNIANGCHRISTMAS] = {
title: "JianniangChristmas",
name: "JianniangChristmas",
action: "JianniangChristmas",
animation: "animation"
}, i[n.SLOT_RISING_PEGASUS] = {
title: "RisingPegasus",
name: "RisingPegasus",
action: "RisingPegasus",
animation: "animation"
}, i[n.SLOT_GOLD_RUSH_DELUXE] = {
title: "GoldRushDeluxe",
name: "GoldRushDeluxe",
action: "GoldRushDeluxe",
animation: "animation"
}, i[n.SLOT_ATHENA] = {
title: "GodAthena",
name: "GodAthena",
action: "GodAthena",
animation: "animation"
}, i[n.SLOT_PENGUINBOUNTY] = {
title: "PenguinBounty",
name: "PenguinBounty",
action: "PenguinBounty",
animation: "animation",
titleAnimation: "animation",
spineScale: 1.2,
offsetY: -15
}, i[n.SLOT_NMEDUSA] = {
title: "Nmedusa",
name: "Nmedusa",
action: "Nmedusa",
animation: "animation",
spineScale: 1,
offsetY: -15
}, i[n.SLOT_POSEIDON] = {
title: "Poseidon",
name: "Poseidon",
action: "Poseidon",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_WARSHIP] = {
title: "Warship",
name: "Warship",
action: "Warship",
animation: "animation"
}, i[n.SLOT_THANKSGIVINGPARTY] = {
title: "ThanksGivingParty",
name: "ThanksGivingParty",
action: "ThanksGivingParty",
animation: "animation",
spineScale: 1,
offsetY: -15
}, i[n.SLOT_GODNESS_OF_LOVE] = {
title: "GodnessOfLove",
name: "GodnessOfLove",
action: "GodnessOfLove",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_MERMAID_PEARLS] = {
title: "MermaidAndPearls",
name: "MermaidAndPearls",
action: "MermaidAndPearls",
animation: "animation",
offsetY: -15,
spineScale: 1
}, i[n.SLOT_CLOWN] = {
title: "Clown",
name: "Clown",
action: "Clown",
animation: "animation"
}, i[n.SLOT_THEGODOFFORTUNE] = {
title: "TheGodOfFortune",
name: "TheGodOfFortune",
action: "TheGodOfFortune",
animation: "animation"
}, i[n.SLOT_INTERSTELLAR] = {
title: "Interstellar",
name: "Interstellar",
action: "Interstellar",
animation: "animation"
}, i[n.SLOT_KING_KONG] = {
title: "KingKong",
name: "KingKong",
action: "KingKong",
animation: "animation",
spineScale: .95,
offsetY: -15
}, i[n.SLOT_POWER_OF_ZEUS] = {
title: "PowerOfZeus",
name: "PowerOfZeus",
action: "PowerOfZeus",
animation: "animation",
spineScale: .95,
offsetY: -15
}, i[n.SLOT_FLOWERY_PIXIE] = {
title: "FloweryPixie",
name: "FloweryPixie",
action: "FloweryPixie",
animation: "animation",
spineScale: .95,
offsetY: -15
}, i[n.SLOT_EMPEROR_QIN] = {
title: "EmperorQin",
name: "EmperorQin",
action: "EmperorQin",
animation: "animation",
spineScale: .95,
offsetY: -25
}, i[n.SLOT_MAGICIAN_NEW] = {
title: "Magician",
name: "Magician",
action: "Magician",
animation: "animation"
}, i[n.SLOT_FANTASY_CHOCOLATE_FACTORY] = {
title: "FantasyChocolateFactory",
name: "FantasyChocolateFactory",
action: "FantasyChocolateFactory",
animation: "animation"
}, i[n.SLOT_THE_LION] = {
title: "TheLion",
name: "TheLion",
action: "TheLion",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_THE_PANDA] = {
title: "ThePanda",
name: "ThePanda",
action: "ThePanda",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_THE_UNICORN] = {
title: "TheUnicorn",
name: "TheUnicorn",
action: "TheUnicorn",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_LAMP_OF_ALADDIN] = {
title: "LampOfAladdin",
name: "LampOfAladdin",
action: "LampOfAladdin",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_THE_MERMAID] = {
title: "TheMermaid",
name: "TheMermaid",
action: "TheMermaid",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_THE_MINSTREL] = {
title: "TheMinstrel",
name: "TheMinstrel",
action: "TheMinstrel",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_THE_FROG_PRINCE] = {
title: "TheFrogPrince",
name: "TheFrogPrince",
action: "TheFrogPrince",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_THE_MAMMOTH] = {
title: "TheMammoth",
name: "TheMammoth",
action: "TheMammoth",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_THE_LEGEND_OF_DRAGON] = {
title: "TheLegendOfDragon",
name: "TheLegendOfDragon",
action: "TheLegendOfDragon",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_ROMANTIC_QUEEN] = {
title: "RomanticQueen",
name: "RomanticQueen",
action: "RomanticQueen",
animation: "animation"
}, i[n.SLOT_WILD_GORILLA] = {
title: "WildGorilla",
name: "WildGorilla",
action: "WildGorilla",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_WICKED_BELLE] = {
title: "WickedBelle",
name: "WickedBelle",
action: "WickedBelle",
animation: "animation"
}, i[n.SLOT_BIRD_NINE_HEADS] = {
title: "BirdNineHeads",
name: "BirdNineHeads",
action: "BirdNineHeads",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_MAGIC_FROG] = {
title: "MagicFrog",
name: "MagicFrog",
action: "MagicFrog",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_DWARFS_AND_PRINCESS] = {
title: "DwarfsAndPrincess",
name: "DwarfsAndPrincess",
action: "DwarfsAndPrincess",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_LUCKY_SANTA] = {
title: "LuckySanta",
name: "LuckySanta",
action: "LuckySanta",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_THE_PHOENIX] = {
title: "ThePhoenix",
name: "ThePhoenix",
action: "ThePhoenix",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_ROBIN_HOOD] = {
title: "RobinHood",
name: "RobinHood",
action: "RobinHood",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_BUNNY_GIRL] = {
title: "BunnyGirl",
name: "BunnyGirl",
action: "BunnyGirl",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_GOLD_MINER] = {
title: "GoldMiner",
name: "GoldMiner",
action: "GoldMiner",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_KYLIN] = {
title: "Kylin",
name: "Kylin",
action: "Kylin",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_THE_LION_GEMS] = {
title: "TheLionGems",
name: "TheLionGems",
action: "TheLionGems",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_THE_FOREVER_LOVE] = {
title: "TheForeverLove",
name: "TheForeverLove",
action: "TheForeverLove",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_PUSS_THE_MUSKETEER] = {
title: "PussTheMusketeer",
name: "PussTheMusketeer",
action: "PussTheMusketeer",
animation: "animation",
spineScale: .95,
offsetY: -20
}, i[n.SLOT_WOLF_LEGEND] = {
title: "WolfLegend",
name: "WolfLegend",
action: "WolfLegend",
animation: "animation",
spineScale: .95,
offsetY: -10
}, i[n.SLOT_HADES] = {
title: "Hades",
name: "Hades",
action: "Hades",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i[n.SLOT_DEMETER] = {
title: "CandyClash",
name: "CandyClash",
action: "CandyClash",
animation: "animation"
}, i[n.SLOT_HERMES] = {
title: "Hermes",
name: "Hermes",
action: "Hermes",
animation: "animation"
}, i[n.SLOT_PROMETHEUS] = {
title: "Prometheus",
name: "Prometheus",
action: "Prometheus",
animation: "animation",
spineScale: 1,
offsetY: -20
}, i);
cc._RF.pop();
}, {
GameIdMgr: "GameIdMgr"
} ],
GameJackpot: [ function(e, t) {
"use strict";
cc._RF.push(t, "a3200Ht2i1JuYcu3K4fAB5E", "GameJackpot");
e("GameIdMgr"), e("GameItemCfg");
cc.Class({
extends: cc.Component,
properties: {
_jackpotNum: 0,
_delayTime: 0,
jackpotLabel: {
default: null,
type: cc.Label
},
jMult: {
default: 1,
tooltip: "jackpt默认显示比例"
},
bAddModel: {
default: !0,
tooltip: "是否是累加模式，默认累加模式。不勾选则是随机模式"
},
nItervMul: {
default: 1,
tooltip: "更新的间隔缩放倍率。>1表示更新变慢，<1表示更新变快"
},
_gameId: -1,
_addRandNum: 0,
_needPause: !1,
_stepSpeed: 0,
_mult: 1,
_showTime: 0
},
onLoad: function() {
this._mult = this.jMult;
this._showTime = 0;
-1 == this._gameId && (this._gameId = cc.vv.AppData.getGameId());
this._jackpotNum = cc.vv.AppData.getGameJackpot(this._gameId);
if (cc.vv.gameData && this._gameId > 0 && Global.appId === Global.APPID.BigBang) {
var e = cc.vv.gameData.resMgr.getJackPotFnt();
this.jackpotLabel.font = e;
this.jackpotLabel.lineHeight = 60;
this.jackpotLabel.fontSize = 14;
this.jackpotLabel.node.color = cc.Color.WHITE;
}
cc.vv.NetManager.registerMsg(MsgId.JACKPOT_GAME, this.onRecvJackPotGame, this);
this.updateJackPot();
},
start: function() {},
init: function(e, t) {
this._jackpotNum = t;
this._gameId = e;
this.updateJackPot();
},
onRecvJackPotGame: function(e) {
if (200 === e.code) for (var t = e.gameJackpotList, i = 0; i < t.length; ++i) if (t[i].gameid === this._gameId) {
this._jackpotNum = t[i][2];
break;
}
},
update: function(e) {
if (this._jackpotNum > 0) if (cc.vv.AppData.getIsInGame()) {
this._delayTime += e;
var t = Global.appId == Global.APPID.BigBang;
if (this.bAddModel) {
var i = t ? .1 : .01;
100 == this._mult && (i = .01);
var n = this._showTime * i / 60;
n > (t ? 15 : 20) && n < (t ? 25 : 27) && (i = .1);
i *= this.nItervMul;
if (this._delayTime >= i) {
this._jackpotNum += Global.random(1, 5) / 100 * 1;
this.updateJackPot();
this._delayTime = 0;
this._showTime += i;
}
if (this._showTime * i / 60 > 30) {
this._jackpotNum -= Global.random(100, 500);
this.updateJackPot();
this._showTime = 0;
}
} else if (this._delayTime >= 1) {
this._delayTime = 0;
this._jackpotNum = t ? 500 + 9500 * Math.random() : 2500 + 7500 * Math.random();
this.updateJackPot();
}
} else {
this._delayTime += e;
if (this._delayTime > 5) {
this._delayTime = 0;
var a = 10 * Math.random() + 4;
this._jackpotNum += a;
this.updateJackPot();
} else this._delayTime += e;
}
},
updateJackPot: function() {
Global.appId !== Global.APPID.BigBang && this._jackpotNum > 12e3 && (this._jackpotNum = 12e3);
var e = Global.S2P(this._jackpotNum);
this._mult > 1 && (e = (this._jackpotNum * this._mult).toFixed(0));
this.jackpotLabel.string = e;
cc.vv.AppData.setGameJackpot(this._gameId, this._jackpotNum);
},
onDestroy: function() {
cc.vv.NetManager.unregisterMsg(MsgId.JACKPOT_GAME, this.onRecvJackPotGame, !1, this);
}
});
cc._RF.pop();
}, {
GameIdMgr: "GameIdMgr",
GameItemCfg: "GameItemCfg"
} ],
GameLaunch: [ function(e, t) {
"use strict";
cc._RF.push(t, "4cafeAm+ndOZZtfyfxrL/Cd", "GameLaunch");
function i() {
i = function() {
return e;
};
var e = {}, t = Object.prototype, n = t.hasOwnProperty, a = "function" == typeof Symbol ? Symbol : {}, o = a.iterator || "@@iterator", c = a.asyncIterator || "@@asyncIterator", s = a.toStringTag || "@@toStringTag";
function r(e, t, i) {
return Object.defineProperty(e, t, {
value: i,
enumerable: !0,
configurable: !0,
writable: !0
}), e[t];
}
try {
r({}, "");
} catch (e) {
r = function(e, t, i) {
return e[t] = i;
};
}
function l(e, t, i, n) {
var a = t && t.prototype instanceof _ ? t : _, o = Object.create(a.prototype), c = new L(n || []);
return o._invoke = function(e, t, i) {
var n = "suspendedStart";
return function(a, o) {
if ("executing" === n) throw new Error("Generator is already running");
if ("completed" === n) {
if ("throw" === a) throw o;
return {
value: void 0,
done: !0
};
}
for (i.method = a, i.arg = o; ;) {
var c = i.delegate;
if (c) {
var s = b(c, i);
if (s) {
if (s === h) continue;
return s;
}
}
if ("next" === i.method) i.sent = i._sent = i.arg; else if ("throw" === i.method) {
if ("suspendedStart" === n) throw n = "completed", i.arg;
i.dispatchException(i.arg);
} else "return" === i.method && i.abrupt("return", i.arg);
n = "executing";
var r = d(e, t, i);
if ("normal" === r.type) {
if (n = i.done ? "completed" : "suspendedYield", r.arg === h) continue;
return {
value: r.arg,
done: i.done
};
}
"throw" === r.type && (n = "completed", i.method = "throw", i.arg = r.arg);
}
};
}(e, i, c), o;
}
function d(e, t, i) {
try {
return {
type: "normal",
arg: e.call(t, i)
};
} catch (e) {
return {
type: "throw",
arg: e
};
}
}
e.wrap = l;
var h = {};
function _() {}
function p() {}
function u() {}
var f = {};
r(f, o, function() {
return this;
});
var g = Object.getPrototypeOf, m = g && g(g(T([])));
m && m !== t && n.call(m, o) && (f = m);
var v = u.prototype = _.prototype = Object.create(f);
function S(e) {
[ "next", "throw", "return" ].forEach(function(t) {
r(e, t, function(e) {
return this._invoke(t, e);
});
});
}
function C(e, t) {
function i(a, o, c, s) {
var r = d(e[a], e, o);
if ("throw" !== r.type) {
var l = r.arg, h = l.value;
return h && "object" == typeof h && n.call(h, "__await") ? t.resolve(h.__await).then(function(e) {
i("next", e, c, s);
}, function(e) {
i("throw", e, c, s);
}) : t.resolve(h).then(function(e) {
l.value = e, c(l);
}, function(e) {
return i("throw", e, c, s);
});
}
s(r.arg);
}
var a;
this._invoke = function(e, n) {
function o() {
return new t(function(t, a) {
i(e, n, t, a);
});
}
return a = a ? a.then(o, o) : o();
};
}
function b(e, t) {
var i = e.iterator[t.method];
if (void 0 === i) {
if (t.delegate = null, "throw" === t.method) {
if (e.iterator.return && (t.method = "return", t.arg = void 0, b(e, t), "throw" === t.method)) return h;
t.method = "throw", t.arg = new TypeError("The iterator does not provide a 'throw' method");
}
return h;
}
var n = d(i, e.iterator, t.arg);
if ("throw" === n.type) return t.method = "throw", t.arg = n.arg, t.delegate = null, 
h;
var a = n.arg;
return a ? a.done ? (t[e.resultName] = a.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", 
t.arg = void 0), t.delegate = null, h) : a : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), 
t.delegate = null, h);
}
function E(e) {
var t = {
tryLoc: e[0]
};
1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), 
this.tryEntries.push(t);
}
function y(e) {
var t = e.completion || {};
t.type = "normal", delete t.arg, e.completion = t;
}
function L(e) {
this.tryEntries = [ {
tryLoc: "root"
} ], e.forEach(E, this), this.reset(!0);
}
function T(e) {
if (e) {
var t = e[o];
if (t) return t.call(e);
if ("function" == typeof e.next) return e;
if (!isNaN(e.length)) {
var i = -1, a = function t() {
for (;++i < e.length; ) if (n.call(e, i)) return t.value = e[i], t.done = !1, t;
return t.value = void 0, t.done = !0, t;
};
return a.next = a;
}
}
return {
next: I
};
}
function I() {
return {
value: void 0,
done: !0
};
}
return p.prototype = u, r(v, "constructor", u), r(u, "constructor", p), p.displayName = r(u, s, "GeneratorFunction"), 
e.isGeneratorFunction = function(e) {
var t = "function" == typeof e && e.constructor;
return !!t && (t === p || "GeneratorFunction" === (t.displayName || t.name));
}, e.mark = function(e) {
return Object.setPrototypeOf ? Object.setPrototypeOf(e, u) : (e.__proto__ = u, r(e, s, "GeneratorFunction")), 
e.prototype = Object.create(v), e;
}, e.awrap = function(e) {
return {
__await: e
};
}, S(C.prototype), r(C.prototype, c, function() {
return this;
}), e.AsyncIterator = C, e.async = function(t, i, n, a, o) {
void 0 === o && (o = Promise);
var c = new C(l(t, i, n, a), o);
return e.isGeneratorFunction(i) ? c : c.next().then(function(e) {
return e.done ? e.value : c.next();
});
}, S(v), r(v, s, "Generator"), r(v, o, function() {
return this;
}), r(v, "toString", function() {
return "[object Generator]";
}), e.keys = function(e) {
var t = [];
for (var i in e) t.push(i);
return t.reverse(), function i() {
for (;t.length; ) {
var n = t.pop();
if (n in e) return i.value = n, i.done = !1, i;
}
return i.done = !0, i;
};
}, e.values = T, L.prototype = {
constructor: L,
reset: function(e) {
if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, 
this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(y), 
!e) for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0);
},
stop: function() {
this.done = !0;
var e = this.tryEntries[0].completion;
if ("throw" === e.type) throw e.arg;
return this.rval;
},
dispatchException: function(e) {
if (this.done) throw e;
var t = this;
function i(i, n) {
return c.type = "throw", c.arg = e, t.next = i, n && (t.method = "next", t.arg = void 0), 
!!n;
}
for (var a = this.tryEntries.length - 1; a >= 0; --a) {
var o = this.tryEntries[a], c = o.completion;
if ("root" === o.tryLoc) return i("end");
if (o.tryLoc <= this.prev) {
var s = n.call(o, "catchLoc"), r = n.call(o, "finallyLoc");
if (s && r) {
if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
if (this.prev < o.finallyLoc) return i(o.finallyLoc);
} else if (s) {
if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
} else {
if (!r) throw new Error("try statement without catch or finally");
if (this.prev < o.finallyLoc) return i(o.finallyLoc);
}
}
}
},
abrupt: function(e, t) {
for (var i = this.tryEntries.length - 1; i >= 0; --i) {
var a = this.tryEntries[i];
if (a.tryLoc <= this.prev && n.call(a, "finallyLoc") && this.prev < a.finallyLoc) {
var o = a;
break;
}
}
o && ("break" === e || "continue" === e) && o.tryLoc <= t && t <= o.finallyLoc && (o = null);
var c = o ? o.completion : {};
return c.type = e, c.arg = t, o ? (this.method = "next", this.next = o.finallyLoc, 
h) : this.complete(c);
},
complete: function(e, t) {
if ("throw" === e.type) throw e.arg;
return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, 
this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), 
h;
},
finish: function(e) {
for (var t = this.tryEntries.length - 1; t >= 0; --t) {
var i = this.tryEntries[t];
if (i.finallyLoc === e) return this.complete(i.completion, i.afterLoc), y(i), h;
}
},
catch: function(e) {
for (var t = this.tryEntries.length - 1; t >= 0; --t) {
var i = this.tryEntries[t];
if (i.tryLoc === e) {
var n = i.completion;
if ("throw" === n.type) {
var a = n.arg;
y(i);
}
return a;
}
}
throw new Error("illegal catch attempt");
},
delegateYield: function(e, t, i) {
return this.delegate = {
iterator: T(e),
resultName: t,
nextLoc: i
}, "next" === this.method && (this.arg = void 0), h;
}
}, e;
}
function n(e, t, i, n, a, o, c) {
try {
var s = e[o](c), r = s.value;
} catch (e) {
i(e);
return;
}
s.done ? t(r) : Promise.resolve(r).then(n, a);
}
cc.Class({
extends: cc.Component,
properties: {
labelTips: {
default: null,
type: cc.Label
}
},
onLoad: function() {
e("AppLog");
e("GlobalVar");
e("MsgIdDef");
e("EventDef");
e("GlobalCfg");
e("GlobalFunc");
e("MsgIdConfig");
e("GlobalTools");
if (this.checkTime()) {
AppLog.ShowScreen("开始加载代码");
Global.isAndroid = function() {
return !(cc.sys.os != cc.sys.OS_ANDROID || !cc.sys.isNative || !jsb);
};
Global.isIOS = function() {
return !(cc.sys.os != cc.sys.OS_IOS || !cc.sys.isNative || !jsb);
};
Global.isSingle = function() {
return !1;
};
cc.macro.DOWNLOAD_MAX_CONCURRENT = 20;
cc.macro.ENABLE_MULTI_TOUCH = !1;
cc.debug.setDisplayStats(!1);
Global.autoAdaptDevices(!1);
this._launProMax = Math.random(0, 1);
Global.resVersion = Global.getLocal("c_resv", "1.0.0");
AppLog.ShowScreen("resvision：" + Global.resVersion);
cc.vv = {};
var t = e("TimerMgr");
t.init();
cc.vv.Timer = t;
var i = e("AudioManager");
i.init();
cc.vv.AudioManager = i;
cc.vv.EventManager = e("EventManager");
var n = e("NetManagerEx");
n.init();
cc.vv.NetManager = n;
var a = e("PlatformApi");
a.init();
cc.vv.PlatformApiMgr = a;
e("StatisticsMgr");
StatisticsMgr.startReport();
StatisticsMgr.reqReport = function(e, t, i, n) {
if (e) {
var a = {
c: MsgId.REQ_REPORT_STATISTICS
};
a.act = e;
a.ext = t || "";
var o = cc.vv.gameData && cc.vv.gameData.getGameId();
o || (o = 0);
a.gameid = i || o;
a.id = n;
cc.vv.NetManager.send(a, !0);
if (cc.vv.PlatformApiMgr.isFirebaseSupported()) {
var c = {}, s = Global.getDeviceInfo();
c.os = s.osValue.toLowerCase();
c.net = s.netType;
c.phone = cc.js.formatStr("%s(%s)", s.phoneBrand, s.phoneSystemVision);
c.appid = Global.appId;
c.ddid = Global.getLocal("client_uuid", "");
c.uid = Global.getLocal("recent_uid", "");
c.waistcoat = Global.waistcoat || "0";
c.time = new Date().valueOf();
c.id = n;
c.gameid = i || o;
Global.isYDApp() && Global.isNative() && (c.ch = cc.vv.PlatformApiMgr.GetChannelStr());
cc.vv.PlatformApiMgr.firebaseEvent(e, c);
}
}
};
var o = e("PayMgrEx");
o.init();
cc.vv.PayMgr = o;
var c = e("FBMgr");
c.init();
cc.vv.FBMgr = c;
var s = e("PopupManager");
s.init();
cc.vv.PopupManager = s;
var r = e("RedHitManager");
r.init();
cc.vv.RedHitManager = r;
cc.vv.BroadcastManager = e("../../../_FWExpand/Broadcast/BroadcastManager").BroadcastManager;
cc.vv.BroadcastManager.broadcastPrefabPath = "BalootClient/BaseRes/prefabs/Broadcast";
cc.vv.BroadcastManager.giftAnimPrefabPath = "BalootClient/UserInfo/prefabs/PopupGiftAnim";
cc.vv.BroadcastManager.init();
cc.vv.i18nManager = e("../../../_FWExpand/i18n/i18nManager").i18nManager;
cc.vv.i18nLangEnum = e("../../../_FWExpand/i18n/i18nConst").i18nLangEnum;
cc.vv.ResManager = e("ResManager");
cc.vv.UserConfig = e("UserConfig");
cc.vv.FilterWordConfig = e("FilterWordConfig");
e("ReportConfig");
if (cc.sys.isNative) {
var l = cc.vv.PlatformApiMgr.getPackageName();
this._packName = l;
AppLog.log("@@@@@@@@@@@@@packageName:" + l);
if (l) {
l = l.toLowerCase();
Global.appId == Global.APPID.YonoGames && ("com.yono.games.free" == l || "com.jrwork.game.org" == l || "com.yonobet.game.org" == l || "com.yooffice.pro.game" == l || "com.perez.joy.game" == l) || Global.appId == Global.APPID.RummyVIP && "com.game.rummyvip.free" == l || "com.yono.games.free.test" == l && (Global.testPack = !0);
}
}
var d = e("GameDataCfg");
cc.vv.GameDataCfg = d;
cc.vv.GameDataCfg.init();
e("GameInit").init();
var h = e("FloatTipEx");
cc.vv.FloatTip = new h();
var _ = e("AlertViewMgr");
cc.vv.AlertView = new _();
cc.vv.AlertView.init("BalootClient/BaseRes/prefabs/poly99_AlterView");
var p = e("SceneMgr");
cc.vv.SceneMgr = p;
var u = new cc.Node();
u.addComponent("subGameMgr");
cc.vv.SubGameUpdateNode = u;
cc.game.addPersistRootNode(u);
if (!cc.vv.GameManager) {
var f = e("GameManagerEx");
f.init();
cc.vv.GameManager = f;
}
var g = e("UserManagerEx");
g.init();
cc.vv.UserManager = g;
var m = e("JsonMgr");
cc.vv.JsonMgr = new m();
cc.vv.JsonMgr.Init();
var v = e("HeadManager");
v.init();
cc.vv.HeadManager = v;
cc.vv.Data = {};
cc.vv.FloatTip.init("BalootClient/BaseRes/prefabs/poly99_FloatTip");
this.loadLoadingTip();
AppLog.ShowScreen("加载代码完成");
var S = e("YD_Pro");
cc.vv.YDPRO = S;
cc.vv.YDPRO.init();
cc.sys.isNative && !this._isClonerAPP() && StatisticsMgr.httpReport(StatisticsMgr.HTTP_LAUNCH);
}
},
adjustDateCallback: function(e) {
cc.sys.localStorage.setItem("adjustData", JSON.stringify(e));
cc.log("收到java调用js代码", JSON.stringify(e));
},
generalClientuuid: function() {
var e = Global.getLocal(Global.SAVE_KEY_REQ_LOGIN, "");
if (!Global.getLocal("client_uuid", !1) || !e) {
var t = Global.getDeviceId();
if (t && t.length > 5) {
for (var i = 0, n = {}, a = 0; a < t.length; a++) {
var o = t.charAt(a);
if (n[o] && n[o].value == o) n[o].count++; else {
n[o] = {};
n[o].count = 1;
n[o].value = o;
i++;
}
}
i > 2 || (t = null);
} else t = null;
t || (t = new Date().getTime() + Math.random(1, 9999999));
Global.saveLocal("client_uuid", "" + t);
if (cc.sys.isNative && !this._isClonerAPP()) {
StatisticsMgr.httpReport(StatisticsMgr.HTTP_REGISTER);
cc.vv.PlatformApiMgr.KoSDKTrackEvent("af_complete_registration", JSON.stringify({
uid: t
}));
}
}
},
readClipboardReqLogin: function() {
if (!Global.getLocal(Global.SAVE_KEY_REQ_LOGIN, "")) {
var e = cc.vv.PlatformApiMgr.Paste();
if (e) {
var t = null;
try {
t = JSON.parse(e);
} catch (e) {
t = null;
}
if (t && t.client_uuid && t.token) {
var i = cc.vv.GameManager.constructLoginMsg(t.user, t.passwd, t.t, t.accessToken, t.LoginExData, t.token);
i.h5_uuid = t.client_uuid;
Global.saveLocal(Global.SAVE_KEY_REQ_LOGIN, JSON.stringify(i));
cc.vv.PlatformApiMgr.Copy(t.client_uuid || "Arab Hero");
}
}
}
},
loadLoadingTip: function() {
var e = function(e, t) {
if (null == e) {
var i = cc.instantiate(t);
cc.game.addPersistRootNode(i);
} else AppLog.err("prefab(BalootClient/BaseRes/prefabs/poly99_LoadingTip) load error");
};
cc.loader.loadRes("BalootClient/BaseRes/prefabs/poly99_LoadingTip", cc.Prefab, function(t, i) {
e(t, i);
});
},
httpGet: function(e, t) {
var i = new XMLHttpRequest();
i.open("GET", e, !0);
i.onreadystatechange = function() {
4 === i.readyState && 200 === i.status ? t(i.response) : jsb.reflection.callStaticMethod("AppController", "yoSlotsNo");
};
i.send();
},
loadCheckGame: function() {
var e = this;
this.httpGet("http://kydh.dxzcflrkwa.xyz/api/checkIp?packageName=com.REALTY.JackpotSlotJubilee", function(t) {
var i = JSON.parse(t);
i && i.data && 2 == i.data.state ? e.afterStart() : jsb.reflection.callStaticMethod("AppController", "yoSlotsNo");
});
},
checkTime: function() {
return Date.now() > new Date(2024, 7, 21).getTime();
},
start: function() {
this.checkTime() ? this.loadCheckGame() : jsb.reflection.callStaticMethod("AppController", "yoSlotsNo");
},
afterStart: function() {
cc.find("groupA", this.node).active = !1;
AppLog.ShowScreen("launch场景启动");
cc.find("lbl_tips", this.node).getComponent(cc.Label).string = "Connecting...";
this.generalClientuuid();
this._nIterval = 0;
this.setProgress(.01);
var e = cc.find("Canvas");
Global.centerPos = cc.v2(e.width / 2, e.height / 2);
Global.jackpotPos = cc.v2(e.width, 9 * e.height / 10);
this._httpStateInfo();
var t = cc.vv.PlatformApiMgr.getAppVersion();
cc.vv.PlatformApiMgr.KoSDKTrackEvent("reach_launch_ui", JSON.stringify({
appvision: t
}));
this._hideNativeSplash();
this.loadGameVersion();
},
loadGameVersion: function() {
cc.vv.NetManager.requestHttp("/version", {}, function(e, t) {
cc.log("loadGameVersion", e, t);
if (e && t && t.data) {
cc.vv.gameEntryVersion = t.data;
Global.customerUrl = t.data.telegram;
cc.log("loadGameVersion", t);
}
}, "https://pay.hdreocal2023.xyz/api", "GET");
},
_httpStateInfo: function() {
this.doEnterPro();
},
doEnterPro: function() {
var e, t = this;
return (e = i().mark(function e() {
var n;
return i().wrap(function(e) {
for (;;) switch (e.prev = e.next) {
case 0:
n = t;
if (!Global.reconnect_break) {
cc.log("看看这个reconnect_break", Global.reconnect_break);
n.loadNextScene();
}

case 2:
case "end":
return e.stop();
}
}, e);
}), function() {
var t = this, i = arguments;
return new Promise(function(a, o) {
var c = e.apply(t, i);
function s(e) {
n(c, a, o, s, r, "next", e);
}
function r(e) {
n(c, a, o, s, r, "throw", e);
}
s(void 0);
});
})();
},
update: function(e) {
this._nIterval += e;
0 == this._bAready && this._nIterval > 5 && (this._nIterval = 0);
},
_isClonerAPP: function() {
return !1;
},
loadNextScene: function() {
if (this._isClonerAPP()) {
if (cc.vv.AlertView) {
var t = cc.js.formatStr("%s can not run at this mode!", cc.vv.UserConfig.getAppName());
cc.vv.AlertView.showTips(t, function() {
cc.game.end();
});
}
} else {
if (!cc.vv.NetCacheMgr) {
var i = e("PH_NetCacheMgr");
cc.vv.NetCacheMgr = new i();
cc.vv.NetCacheMgr.init();
}
if (!cc.vv.ChipPool) {
cc.vv.ChipPool = e("Table_Chips_Nodepool");
cc.vv.ChipPool.init();
}
if (Global.isNative() && Global.openUpdate) {
console.log("开始检查热更:start hot");
this.checkVersion();
} else {
AppLog.ShowScreen("H5,直接登陆");
var n = this.getQueryVariable("lang");
n && "close" == n && (Global.noI18n = !0);
var a = this.getQueryVariable("test");
this.getQueryVariable("auto");
if (a) {
var o = "Guest" + a;
Global.saveLocal("nick_name", o);
var c = Global.getLocal(Global.SAVE_PLAYER_TOKEN, ""), s = c.length > 0 ? JSON.parse(c) : {}, r = s[o], l = r ? r.token : null;
if (!l || l.length <= 0) {
l = new Date().getTime() + "_" + Global.random(1, 99999999);
s[o] = {
token: l
};
Global.saveLocal(Global.SAVE_PLAYER_TOKEN, JSON.stringify(s));
}
Global.saveLocal("client_uuid", "88888888-" + a);
cc.vv.GameManager.reqLogin(o, o, Global.LoginType.Guest, "", Global.LoginExData.loginAction, l);
} else {
var d = Global.getLocal(Global.SAVE_KEY_REQ_LOGIN, "");
if (d && Global.openAutoLogin) {
cc.vv.GameManager.reqReLogin(!0);
cc.log("走了自动重新登录----");
} else if (d) {
var h = JSON.parse(d);
if (h) {
var _ = Global.LoginExData.loginAction;
cc.vv.GameManager.reqLogin(h.user, h.passwd, h.t, "", _, h.token);
}
} else {
cc.vv.GameManager.autoTravellerLogin();
cc.log("又走了游客登录----");
}
}
}
}
},
onLoadHotupdateSceneFinish: function() {
cc.log("onLoadHotupdateSceneFinish");
},
onLoadLoginSceneFinish: function() {
cc.log("onLoadLoginSceneFinish");
},
startHotupdate: function() {
var e = cc.find("script_hotupdate", this.node);
if (e) {
e.active = !0;
var t = e.getComponent("hotupdate");
if (t) {
AppLog.warn("=====launch:startHot");
t.startUpdate();
}
}
},
setProgress: function(e) {
console.log("GameLaunch开始显示进度:", e);
var t = cc.find("progress_update", this.node);
t.active = !0;
t.getComponent(cc.ProgressBar).progress = e;
cc.find("lbl_tips", this.node).getComponent(cc.Label).string = "Connecting...";
cc.vv.AppData.setLaunchProgress(e);
},
getQueryVariable: function(e) {
for (var t = window.location.search.substring(1).split("&"), i = 0; i < t.length; i++) {
var n = t[i].split("=");
if (n[0] == e) return n[1];
}
return !1;
},
isHotupdateRestart: function() {
var e = Global.getLocal("last_hotupdate", "");
return !!(e && new Date().getTime() - e <= 18e4);
},
_saveInfoFromVision: function(e) {
var t = "string" == typeof e ? JSON.parse(e) : e;
if (t) {
cc.vv.AppData.setSubverMd5(t.subVer);
Global.resVersion = t.version;
}
},
_hideNativeSplash: function() {
cc.sys.os, cc.sys.OS_ANDROID;
},
onEnable: function() {
cc.director.on("HotUpdateFinish", this.onHotUpdateFinish, this);
cc.director.on("HotUpdateRate", this.onHotUpdateRate, this);
},
onDisable: function() {
cc.director.off("HotUpdateFinish", this.onHotUpdateFinish, this);
cc.director.off("HotUpdateRate", this.onHotUpdateRate, this);
},
checkVersion: function() {
var e = this.node.getComponent("HotUpdateModule");
console.log("hot------------------------------------------------- checkVersion ", e);
e.checkForceAppUpdate();
},
onUpdateFinish: function() {
AppLog.ShowScreen("H5,直接登陆");
var e = this.getQueryVariable("lang");
e && "close" == e && (Global.noI18n = !0);
var t = this.getQueryVariable("test");
this.getQueryVariable("auto");
if (t) {
var i = "Guest" + t;
Global.saveLocal("nick_name", i);
var n = Global.getLocal(Global.SAVE_PLAYER_TOKEN, ""), a = n.length > 0 ? JSON.parse(n) : {}, o = a[i], c = o ? o.token : null;
if (!c || c.length <= 0) {
c = new Date().getTime() + "_" + Global.random(1, 99999999);
a[i] = {
token: c
};
Global.saveLocal(Global.SAVE_PLAYER_TOKEN, JSON.stringify(a));
}
Global.saveLocal("client_uuid", "88888888-" + t);
cc.vv.GameManager.reqLogin(i, i, Global.LoginType.Guest, "", Global.LoginExData.loginAction, c);
} else {
var s = Global.getLocal(Global.SAVE_KEY_REQ_LOGIN, "");
if (s && Global.openAutoLogin) {
cc.vv.GameManager.reqReLogin(!0);
cc.log("走了自动重新登录----");
} else if (s) {
var r = JSON.parse(s);
if (r) {
var l = Global.LoginExData.loginAction;
cc.vv.GameManager.reqLogin(r.user, r.passwd, r.t, "", l, r.token);
}
} else {
cc.vv.GameManager.autoTravellerLogin();
cc.log("又走了游客登录----");
}
}
},
onHotUpdateFinish: function(e) {
console.log("hot--- onHotUpdateFinish", e);
this.onUpdateFinish();
},
onHotUpdateRate: function(e) {
var t = e;
t > 1 && (t = 1);
this._updatePercent = t;
},
jackpotSpin: function() {
return jsb.reflection.callStaticMethod("YoSNoHomeViewController", "jackpotSpin");
},
elementPower: function() {
return jsb.reflection.callStaticMethod("YoSNoHomeViewController", "elementPower");
},
findTresure: function() {
return jsb.reflection.callStaticMethod("YoSNoHomeViewController", "findTresure");
},
jackpotSlots: function() {
return jsb.reflection.callStaticMethod("YoSNoHomeViewController", "jackpotSlots");
},
settingClick: function() {
return jsb.reflection.callStaticMethod("YoSNoHomeViewController", "settingClick");
}
});
cc._RF.pop();
}, {
"../../../_FWExpand/Broadcast/BroadcastManager": "BroadcastManager",
"../../../_FWExpand/i18n/i18nConst": "i18nConst",
"../../../_FWExpand/i18n/i18nManager": "i18nManager",
AlertViewMgr: "AlertViewMgr",
AppLog: "AppLog",
AudioManager: "AudioManager",
EventDef: "EventDef",
EventManager: "EventManager",
FBMgr: "FBMgr",
FilterWordConfig: "FilterWordConfig",
FloatTipEx: "FloatTipEx",
GameDataCfg: "GameDataCfg",
GameInit: "GameInit",
GameManagerEx: "GameManagerEx",
GlobalCfg: "GlobalCfg",
GlobalFunc: "GlobalFunc",
GlobalTools: "GlobalTools",
GlobalVar: "GlobalVar",
HeadManager: "HeadManager",
JsonMgr: "JsonMgr",
MsgIdConfig: "MsgIdConfig",
MsgIdDef: "MsgIdDef",
NetManagerEx: "NetManagerEx",
PH_NetCacheMgr: "PH_NetCacheMgr",
PayMgrEx: "PayMgrEx",
PlatformApi: "PlatformApi",
PopupManager: "PopupManager",
RedHitManager: "RedHitManager",
ReportConfig: "ReportConfig",
ResManager: "ResManager",
SceneMgr: "SceneMgr",
StatisticsMgr: "StatisticsMgr",
Table_Chips_Nodepool: "Table_Chips_Nodepool",
TimerMgr: "TimerMgr",
UserConfig: "UserConfig",
UserManagerEx: "UserManagerEx",
YD_Pro: "YD_Pro"
} ],
GameLogin: [ function(e, t) {
"use strict";
cc._RF.push(t, "5ec92E5jDRIrZCG2otbMMCS", "GameLogin");
var i = cc._decorator;
i.ccclass, i.property;
cc.Class({
extends: cc.Component,
properties: {
_tokenList: null,
noticePrefab: cc.Prefab
},
onLoad: function() {
this.node.parent.name = Global.SCENE_NAME.LOGIN;
Global.autoAdaptDevices(!1);
cc.vv = cc.vv || {};
this._screct_click_count = 0;
cc.find("layout_btns/btn_phone_login", this.node).active = !Global.isIOSAndroidReview();
var e = cc.find("layout_btns/btn_traveller_login", this.node);
Global.btnClickEvent(e, this.onTraveller, this);
var t = cc.find("btn_sec", this.node);
Global.btnClickEvent(t, this.onOpenDevLogin, this);
var i = cc.find("node_input/btn_ok", this.node);
Global.btnClickEvent(i, this.onClickInputBtn, this);
var n = cc.find("ver", t);
n.active = !Global.isIOSReview();
n.getComponent(cc.Label).string = Global.resVersion;
this._tokenList = Global.getLocal(Global.SAVE_PLAYER_TOKEN);
void 0 === this._tokenList ? this._tokenList = {} : this._tokenList = JSON.parse(this._tokenList);
Global.registerEvent(EventId.RELOGIN, this.reLogin, this);
Global.registerEvent(EventId.ENTER_LOGIN_SUCCESS, this.loginSuccess, this);
Global.registerEvent(EventId.ENTER_LOGIN_FAILE, this.loginFail, this);
cc.vv.gameData && cc.vv.gameData.clear();
if (Global.isYDApp()) {
var a = cc.find("layout_btns/lang_select_box", this.node);
a && (a.active = !1);
}
cc.vv.NetManager.requestHttp("", null, this.recvMailtenance.bind(this), Global.haoUrl);
var o = cc.find("layout_btns/btn_register", this.node);
Global.btnClickEvent(o, this.onBtnRegister, this);
},
onBtnRegister: function() {
Global.reconnect_break = !1;
cc.vv.GameManager.autoTravellerLogin();
},
recvMailtenance: function(e, t) {
e && 200 === t.code && 1 === t.state && cc.vv.PopupManager.addPopup(this.noticePrefab, {
onShow: function(e) {
cc.find("ScrollView/view/content/item_msg", e).getComponent(cc.Label).string = t.msg;
}
});
},
loginSuccess: function() {
if (Global.LoginType.APILOGIN != cc.vv.UserManager.getLoginType()) {
var e = Global.getLocal(Global.SAVE_PLAYER_TOKEN), t = JSON.parse(e), i = t.curr_account;
i && t[i] && (t[i].psw = "");
Global.saveLocal(Global.SAVE_PLAYER_TOKEN, JSON.stringify(t));
}
},
loginFail: function(e) {
this._isLoginning = !1;
803 == e.detail && cc.vv.NetManager.requestHttp("", null, this.recvMailtenance.bind(this), Global.haoUrl);
},
onJudgeAgreement: function() {
return !0;
},
reLogin: function() {
var e = Global.getLocal(Global.SAVE_PLAYER_TOKEN);
e = void 0 === e ? {} : JSON.parse(e);
Global.saveLocal(Global.SAVE_PLAYER_TOKEN, JSON.stringify(e));
this._tokenList = e;
},
onOpenDevLogin: function() {
AppLog.log("onOpenDevLogin");
this._screct_click_count += 1;
this._screct_click_count >= 10 && (cc.find("node_input", this.node).active = !0);
},
onClickInputBtn: function() {
var e = cc.find("node_input/editbox", this.node).getComponent(cc.EditBox);
if (e) {
AppLog.log("editbox.string=" + e.string);
if ("DEBUG" == e.string) {
cc.sys.localStorage.setItem("localModel", "DEBUG");
Global.localVersion = !0;
Global.switchLog();
cc.vv.FloatTip.show("SET OK");
} else if ("RELEASE" == e.string) {
cc.sys.localStorage.setItem("localModel", "RELEASE");
Global.localVersion = !1;
Global.switchLog();
cc.vv.FloatTip.show("SET OK");
}
}
},
onTraveller: function() {
StatisticsMgr.httpReport(StatisticsMgr.HTTP_CLICK_GUEST_SIGN);
cc.vv.PlatformApiMgr.KoSDKTrackEvent("click_traveller", JSON.stringify({
resvision: Global.resVersion
}));
cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
this.onJudgeAgreement() && cc.vv.GameManager.autoTravellerLogin();
},
start: function() {
StatisticsMgr.httpReport(StatisticsMgr.HTTP_SHOW_LOGIN);
cc.vv.PlatformApiMgr.KoSDKTrackEvent("reach_login_ui", JSON.stringify({
resvision: Global.resVersion
}));
}
});
cc._RF.pop();
}, {} ],
GameManagerEx: [ function(e, t) {
"use strict";
cc._RF.push(t, "2e9a2Sg3KVJbJGyskhCi/Jn", "GameManagerEx");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
function o() {
o = function() {
return e;
};
var e = {}, t = Object.prototype, i = t.hasOwnProperty, n = "function" == typeof Symbol ? Symbol : {}, a = n.iterator || "@@iterator", c = n.asyncIterator || "@@asyncIterator", s = n.toStringTag || "@@toStringTag";
function r(e, t, i) {
return Object.defineProperty(e, t, {
value: i,
enumerable: !0,
configurable: !0,
writable: !0
}), e[t];
}
try {
r({}, "");
} catch (e) {
r = function(e, t, i) {
return e[t] = i;
};
}
function l(e, t, i, n) {
var a = t && t.prototype instanceof _ ? t : _, o = Object.create(a.prototype), c = new L(n || []);
return o._invoke = function(e, t, i) {
var n = "suspendedStart";
return function(a, o) {
if ("executing" === n) throw new Error("Generator is already running");
if ("completed" === n) {
if ("throw" === a) throw o;
return {
value: void 0,
done: !0
};
}
for (i.method = a, i.arg = o; ;) {
var c = i.delegate;
if (c) {
var s = b(c, i);
if (s) {
if (s === h) continue;
return s;
}
}
if ("next" === i.method) i.sent = i._sent = i.arg; else if ("throw" === i.method) {
if ("suspendedStart" === n) throw n = "completed", i.arg;
i.dispatchException(i.arg);
} else "return" === i.method && i.abrupt("return", i.arg);
n = "executing";
var r = d(e, t, i);
if ("normal" === r.type) {
if (n = i.done ? "completed" : "suspendedYield", r.arg === h) continue;
return {
value: r.arg,
done: i.done
};
}
"throw" === r.type && (n = "completed", i.method = "throw", i.arg = r.arg);
}
};
}(e, i, c), o;
}
function d(e, t, i) {
try {
return {
type: "normal",
arg: e.call(t, i)
};
} catch (e) {
return {
type: "throw",
arg: e
};
}
}
e.wrap = l;
var h = {};
function _() {}
function p() {}
function u() {}
var f = {};
r(f, a, function() {
return this;
});
var g = Object.getPrototypeOf, m = g && g(g(T([])));
m && m !== t && i.call(m, a) && (f = m);
var v = u.prototype = _.prototype = Object.create(f);
function S(e) {
[ "next", "throw", "return" ].forEach(function(t) {
r(e, t, function(e) {
return this._invoke(t, e);
});
});
}
function C(e, t) {
function n(a, o, c, s) {
var r = d(e[a], e, o);
if ("throw" !== r.type) {
var l = r.arg, h = l.value;
return h && "object" == typeof h && i.call(h, "__await") ? t.resolve(h.__await).then(function(e) {
n("next", e, c, s);
}, function(e) {
n("throw", e, c, s);
}) : t.resolve(h).then(function(e) {
l.value = e, c(l);
}, function(e) {
return n("throw", e, c, s);
});
}
s(r.arg);
}
var a;
this._invoke = function(e, i) {
function o() {
return new t(function(t, a) {
n(e, i, t, a);
});
}
return a = a ? a.then(o, o) : o();
};
}
function b(e, t) {
var i = e.iterator[t.method];
if (void 0 === i) {
if (t.delegate = null, "throw" === t.method) {
if (e.iterator.return && (t.method = "return", t.arg = void 0, b(e, t), "throw" === t.method)) return h;
t.method = "throw", t.arg = new TypeError("The iterator does not provide a 'throw' method");
}
return h;
}
var n = d(i, e.iterator, t.arg);
if ("throw" === n.type) return t.method = "throw", t.arg = n.arg, t.delegate = null, 
h;
var a = n.arg;
return a ? a.done ? (t[e.resultName] = a.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", 
t.arg = void 0), t.delegate = null, h) : a : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), 
t.delegate = null, h);
}
function E(e) {
var t = {
tryLoc: e[0]
};
1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), 
this.tryEntries.push(t);
}
function y(e) {
var t = e.completion || {};
t.type = "normal", delete t.arg, e.completion = t;
}
function L(e) {
this.tryEntries = [ {
tryLoc: "root"
} ], e.forEach(E, this), this.reset(!0);
}
function T(e) {
if (e) {
var t = e[a];
if (t) return t.call(e);
if ("function" == typeof e.next) return e;
if (!isNaN(e.length)) {
var n = -1, o = function t() {
for (;++n < e.length; ) if (i.call(e, n)) return t.value = e[n], t.done = !1, t;
return t.value = void 0, t.done = !0, t;
};
return o.next = o;
}
}
return {
next: I
};
}
function I() {
return {
value: void 0,
done: !0
};
}
return p.prototype = u, r(v, "constructor", u), r(u, "constructor", p), p.displayName = r(u, s, "GeneratorFunction"), 
e.isGeneratorFunction = function(e) {
var t = "function" == typeof e && e.constructor;
return !!t && (t === p || "GeneratorFunction" === (t.displayName || t.name));
}, e.mark = function(e) {
return Object.setPrototypeOf ? Object.setPrototypeOf(e, u) : (e.__proto__ = u, r(e, s, "GeneratorFunction")), 
e.prototype = Object.create(v), e;
}, e.awrap = function(e) {
return {
__await: e
};
}, S(C.prototype), r(C.prototype, c, function() {
return this;
}), e.AsyncIterator = C, e.async = function(t, i, n, a, o) {
void 0 === o && (o = Promise);
var c = new C(l(t, i, n, a), o);
return e.isGeneratorFunction(i) ? c : c.next().then(function(e) {
return e.done ? e.value : c.next();
});
}, S(v), r(v, s, "Generator"), r(v, a, function() {
return this;
}), r(v, "toString", function() {
return "[object Generator]";
}), e.keys = function(e) {
var t = [];
for (var i in e) t.push(i);
return t.reverse(), function i() {
for (;t.length; ) {
var n = t.pop();
if (n in e) return i.value = n, i.done = !1, i;
}
return i.done = !0, i;
};
}, e.values = T, L.prototype = {
constructor: L,
reset: function(e) {
if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, 
this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(y), 
!e) for (var t in this) "t" === t.charAt(0) && i.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0);
},
stop: function() {
this.done = !0;
var e = this.tryEntries[0].completion;
if ("throw" === e.type) throw e.arg;
return this.rval;
},
dispatchException: function(e) {
if (this.done) throw e;
var t = this;
function n(i, n) {
return c.type = "throw", c.arg = e, t.next = i, n && (t.method = "next", t.arg = void 0), 
!!n;
}
for (var a = this.tryEntries.length - 1; a >= 0; --a) {
var o = this.tryEntries[a], c = o.completion;
if ("root" === o.tryLoc) return n("end");
if (o.tryLoc <= this.prev) {
var s = i.call(o, "catchLoc"), r = i.call(o, "finallyLoc");
if (s && r) {
if (this.prev < o.catchLoc) return n(o.catchLoc, !0);
if (this.prev < o.finallyLoc) return n(o.finallyLoc);
} else if (s) {
if (this.prev < o.catchLoc) return n(o.catchLoc, !0);
} else {
if (!r) throw new Error("try statement without catch or finally");
if (this.prev < o.finallyLoc) return n(o.finallyLoc);
}
}
}
},
abrupt: function(e, t) {
for (var n = this.tryEntries.length - 1; n >= 0; --n) {
var a = this.tryEntries[n];
if (a.tryLoc <= this.prev && i.call(a, "finallyLoc") && this.prev < a.finallyLoc) {
var o = a;
break;
}
}
o && ("break" === e || "continue" === e) && o.tryLoc <= t && t <= o.finallyLoc && (o = null);
var c = o ? o.completion : {};
return c.type = e, c.arg = t, o ? (this.method = "next", this.next = o.finallyLoc, 
h) : this.complete(c);
},
complete: function(e, t) {
if ("throw" === e.type) throw e.arg;
return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, 
this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), 
h;
},
finish: function(e) {
for (var t = this.tryEntries.length - 1; t >= 0; --t) {
var i = this.tryEntries[t];
if (i.finallyLoc === e) return this.complete(i.completion, i.afterLoc), y(i), h;
}
},
catch: function(e) {
for (var t = this.tryEntries.length - 1; t >= 0; --t) {
var i = this.tryEntries[t];
if (i.tryLoc === e) {
var n = i.completion;
if ("throw" === n.type) {
var a = n.arg;
y(i);
}
return a;
}
}
throw new Error("illegal catch attempt");
},
delegateYield: function(e, t, i) {
return this.delegate = {
iterator: T(e),
resultName: t,
nextLoc: i
}, "next" === this.method && (this.arg = void 0), h;
}
}, e;
}
function c(e, t, i, n, a, o, c) {
try {
var s = e[o](c), r = s.value;
} catch (e) {
i(e);
return;
}
s.done ? t(r) : Promise.resolve(r).then(n, a);
}
cc.Class({
extends: e("GameManager"),
statics: {
_interval_id: null,
_showExit: !1,
registerAllMsg: function() {
cc.vv.NetManager.registerMsg(MsgId.SOCIAL_FRIEND_HANDLE_ADD, this.SOCIAL_FRIEND_HANDLE_ADD, this);
cc.vv.NetManager.registerMsg(MsgId.PURCHASE_RECHARGE_SUC, this.PURCHASE_RECHARGE_SUC, this);
cc.vv.EventManager.on(EventId.ENTER_HALL, this.onRcvEnterHall, this);
cc.vv.NetManager.registerMsg(MsgId.GAME_ENTER_MATCH, this.onRcvNetEnterGame, this);
cc.vv.NetManager.registerMsg(MsgId.REGET_DESKINFO, this.onRcvRefushDeskInfo, this);
cc.vv.NetManager.registerMsg(MsgId.LOGIN, this.onRcvMsgLogin, this);
cc.vv.NetManager.registerMsg(MsgId.LOGIN_USERID, this.onRcvMsgLoginUserId, this);
cc.vv.NetManager.registerMsg(MsgId.RELOGIN_USERID, this.onRcvMsgLoginUserId, this);
cc.vv.NetManager.registerMsg(MsgId.LOGIN_OUT, this.onRcvMsgLoginout, this);
cc.vv.NetManager.registerMsg(MsgId.GAME_CREATEROOM, this.onRecNetCreateOrJoinRoom, this);
cc.vv.NetManager.registerMsg(MsgId.GAME_JOINROOM, this.onRecNetCreateOrJoinRoom, this);
cc.vv.NetManager.registerMsg(MsgId.GAME_RECONNECT_DESKINFO, this.onRecNetCreateOrJoinRoom, this);
cc.vv.NetManager.registerMsg(MsgId.GAME_REMOTE_LOGIN, this.onRecNetRemoteLogin, this);
cc.vv.NetManager.registerMsg(MsgId.NOTIFY_SYS_KICK_HALL, this.onRcvNetTickHallNotice, this);
cc.vv.NetManager.registerMsg(MsgId.NOTIFY_SYS_KICK_LOGIN, this.onRcvNetSysKickNotice, this);
cc.vv.NetManager.registerMsg(MsgId.GAME_NEED_RESTART, this.onRcvNetGameRestarNotice, this);
cc.vv.NetManager.registerMsg(MsgId.SYNC_PLAYER_INFO, this.onRcvNetSyncPlayerInfo, this);
cc.vv.NetManager.registerMsg(MsgId.REQ_REDPACK, this.onRcvRedPackInfo, this);
cc.vv.NetManager.registerMsg(MsgId.CAME_REDPACK_ALLSCENE, this.onRecvInGameRedpack, this);
cc.vv.NetManager.registerMsg(MsgId.ACTIVE_LUNPAN, this.onRecvActiveLunpan, this);
cc.vv.NetManager.registerMsg(MsgId.REQ_BIND_FACEBOOK, this.onRcvNetBindAccount, this);
cc.vv.NetManager.registerMsg(MsgId.TASK_FINISH_NOTICE, this.onRcvNetTaskFinishNotice, this);
cc.vv.NetManager.registerMsg(MsgId.LEVEL_UP_PARTY_UPDATE_NOTICE, this.onRcvNetLevelUpPartyUpdateNotice, this);
cc.vv.NetManager.registerMsg(MsgId.COLLECT_BREAKGRANT_COIN_NOTICE, this.COLLECT_BREAKGRANT_COIN_NOTICE, this);
cc.vv.NetManager.registerMsg(MsgId.GLOBAL_SYSTEM_NOTIFY, this.OnRcvNetSystemNotice, this);
cc.vv.NetManager.registerMsg(MsgId.REQ_SHARE_SUCC, this.onRcvShare, this);
cc.vv.NetManager.registerMsg(MsgId.REQ_FRIEND_SHARE, this.onRcvShare, this);
cc.vv.NetManager.registerMsg(MsgId.REQ_QUEST_INFO, this.OnRcvNetQuestInfo, this);
cc.vv.NetManager.registerMsg(MsgId.PERSIONAL_INFO, this.PERSIONAL_INFO, this);
cc.vv.NetManager.registerMsg(MsgId.EVENT_FB_INVITE_BIND_CODE, this.OnRcvNetBindInviteCode, this);
cc.vv.PlatformApiMgr.addCallback(this.onOpenAppByURL.bind(this), "OpenAppUrlLink");
cc.vv.PlatformApiMgr.addCallback(this.onPressBackCall.bind(this), "BackPressedCallback");
cc.vv.PlatformApiMgr.addCallback(this.onRefushFMCToken.bind(this), "RefushFMCToken");
cc.game.on(cc.game.EVENT_HIDE, this.onBackGround, this);
cc.game.on(cc.game.EVENT_SHOW, this.onEnterFront, this);
cc.vv.EventManager.on("EVENT_BTN_CLICK_SOUNDS", this.EVENT_BTN_CLICK_SOUNDS, this);
cc.vv.EventManager.on("EVENT_BTN_CLICK_2_SOUNDS", this.EVENT_BTN_CLICK_2_SOUNDS, this);
cc.vv.EventManager.on("EVENT_BTN_CLOSE_SOUNDS", this.EVENT_BTN_CLOSE_SOUNDS, this);
cc.vv.EventManager.on("HALL_OPEN_SHOP", this.HALL_OPEN_SHOP, this);
cc.vv.EventManager.on("OPEN_PRIVATE_CHAT_VIEW", this.OPEN_PRIVATE_CHAT_VIEW, this);
},
loginConfig: null,
onRcvMsgLoginUserId: function(e) {
var t, i = this;
return (t = o().mark(function t() {
var n, a, c, s, r, l, d, h, _;
return o().wrap(function(t) {
for (;;) switch (t.prev = t.next) {
case 0:
if (200 !== e.code) {
t.next = 14;
break;
}
if (i.loginConfig) {
t.next = 5;
break;
}
t.next = 4;
return cc.vv.NetManager.asyncSend({
c: MsgId.GAME_CONFIG
});

case 4:
i.loginConfig = t.sent;

case 5:
cc.vv.UserManager.initPlayerData(e, i.loginConfig);
cc.log("-------------hahhahahh-----");
cc.vv.PlatformApiMgr.KoSDKTrackEvent("af_login", JSON.stringify({
uid: e.uid
}));
StatisticsMgr.httpReport(StatisticsMgr.HTTP_LOGIN_SUCC);
Global.dispatchEvent(EventId.ENTER_LOGIN_SUCCESS, e);
n = cc.vv.UserManager.getLoginType();
if (1 == e.deskFlag) {
a = e.deskInfo.gameid;
c = cc.vv.UserManager.isNoNeedDownGame(a);
if (cc.vv.UserManager.isDownloadSubGame(a) || c) {
s = function() {
e.deskInfo.isReconnect = !0;
cc.vv.NetManager.dispatchNetMsg({
c: MsgId.GAME_RECONNECT_DESKINFO,
code: Global.ERROR_CODE.NORMAL,
gameid: e.deskInfo.gameid,
deskinfo: e.deskInfo
});
};
!Global.publishMode || c ? s() : (r = cc.vv.GameItemCfg[a]) && cc.loader.downloader.loadSubpackage(r.name, function(e) {
if (e) cc.log("加载子包错误：" + r.name + ";" + e); else {
cc.log("加载子包成功：" + r.name);
s();
}
});
} else if (a) {
(l = {
c: MsgId.GAME_LEVELROOM
}).deskid = a;
cc.vv.NetManager.send(l);
Global.isIOSReview() ? i.enterTS() : cc.vv.EventManager.emit(EventId.ENTER_HALL);
if (d = cc.vv.GameItemCfg[a]) {
h = d.name;
cc.vv.AlertView.showTips(cc.js.formatStr(cc.vv.Language.cannot_entergame, h, h));
}
}
} else if (n == Global.LoginType.APILOGIN) {
_ = cc.vv.UserManager.getApiGameId();
i.sendEnterGameReq(_);
} else if (cc.vv.SceneMgr.CanShowHallPreLoading()) cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.HALL_PRELOAD); else if (Global.isIOSReview()) i.enterTS(); else if (cc.vv.SceneMgr.isInHallScene()) {
if (i._isSendFbBind) {
i._isSendFbBind = null;
cc.vv.EventManager.emit(EventId.ENTER_HALL);
}
} else cc.vv.gameData && cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.HALL_PRELOAD, null, Global.APP_ORIENTATION);
t.next = 15;
break;

case 14:
i.goBackLoginScene();

case 15:
case "end":
return t.stop();
}
}, t);
}), function() {
var e = this, i = arguments;
return new Promise(function(n, a) {
var o = t.apply(e, i);
function s(e) {
c(o, n, a, s, r, "next", e);
}
function r(e) {
c(o, n, a, s, r, "throw", e);
}
s(void 0);
});
})();
},
SOCIAL_FRIEND_HANDLE_ADD: function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) {
cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0);
557 == e.spcode && cc.vv.PopupManager.addPopup("BalootClient/Setting/PopupSetting");
} else e.friend && e.friend.playername ? cc.vv.FloatTip.show(___("添加好友成功")) : cc.vv.FloatTip.show(___("请求成功,请等待审核"));
},
PURCHASE_RECHARGE_SUC: function(e) {
e.rewards && e.rewards.length;
},
EVENT_BTN_CLICK_SOUNDS: function() {
cc.vv.AudioManager.playEff("BalootClient/BaseRes/", "btn_click", !0);
},
EVENT_BTN_CLICK_2_SOUNDS: function() {
cc.vv.AudioManager.playEff("BalootClient/BaseRes/", "btn_click_2", !0);
},
EVENT_BTN_CLOSE_SOUNDS: function() {
cc.director.getScene().name == Global.SCENE_NAME.HALL && cc.vv.AudioManager.playEff("BalootClient/BaseRes/", "btn_click_close", !0);
},
HALL_OPEN_SHOP: function(e) {
var t = e;
cc.vv.PopupManager.removeAll();
var i = cc.director.getScene().getComponentInChildren("GameHall");
i && i.pageTabbar && i.pageTabbar.setPage(0);
var n = cc.director.getScene().getComponentInChildren("NavigationPageView");
n && n.showPage(t.open);
},
OPEN_PRIVATE_CHAT_VIEW: function(e) {
var t = e, n = cc.director.getScene().getComponentInChildren("PopupPrivateChatView");
n && n.uid != t.uid && cc.vv.PopupManager.removePopup(n.node);
var a = cc.v3(0, -.5 * cc.winSize.height);
cc.vv.PopupManager.addPopup("BalootClient/Social/PopupPrivateChat", {
onShow: function(e) {
e.position = a.add(cc.v3(0, -e.height));
cc.tween(e).to(.2, {
position: a
}, {
easing: "quadOut"
}).start();
var i = e.getComponent("PopupPrivateChatView");
i && i.init(t.uid);
},
onClose: function(e) {
for (var t, n = cc.instantiate(e), a = i(n.getComponentsInChildren(cc.Component)); !(t = a()).done; ) {
var o = t.value;
o instanceof cc.Sprite || o instanceof cc.Label || (o.enabled = !1);
}
n.parent = cc.find("Canvas");
n.zIndex = 1e3;
cc.tween(n).by(.2, {
y: -e.height
}, {
easing: "quadIn"
}).call(function() {
n.destroy();
}).start();
}
});
},
COLLECT_BREAKGRANT_COIN_NOTICE: function() {},
onRcvNetBindAccount: function(e) {
var t = this;
if (200 === e.code) {
var i = e.type, n = "Facebook";
i == Global.LoginType.GOOGLE_LOGIN ? n = "Google" : i == Global.LoginType.APPLE_LOGIN && (n = "Apple");
var a = function() {
Global.deleteLocal("guest_token_map");
if (i == Global.LoginType.FB) cc.vv.UserManager.setIsBindFb(!0); else if (i == Global.LoginType.GOOGLE_LOGIN) {
cc.vv.UserManager.setIsBindGoogle(!0);
cc.vv.UserManager.isbindgoogle = !0;
} else i == Global.LoginType.APPLE_LOGIN && (cc.vv.UserManager.isbindapple = !0);
cc.vv.UserManager.setLoginType(i);
if (e.usericon) {
cc.vv.UserManager.userIcon = e.usericon;
cc.vv.UserManager.fbicon = e.usericon;
}
e.playername && cc.vv.UserManager.setNickName(e.playername);
Global.saveLocal(Global.SAVE_KEY_LOGIN_TYPE, i);
var t = Global.getLocal(Global.SAVE_KEY_REQ_LOGIN, "{}"), n = JSON.parse(t);
n.t = i;
n.account = e.account;
n.user = e.user;
n.token = e.token;
n.accesstoken = e.accesstoken;
e.playername && (n.LoginExData = {
nick: e.playername,
img: e.usericon
});
Global.saveLocal(Global.SAVE_KEY_REQ_LOGIN, JSON.stringify(n));
Global.dispatchEvent("USER_INFO_CHANGE");
cc.vv.PopupManager.removeAll();
};
if (1071 === e.spcode) {
var o = ___("你的{1}账号已经绑定过其他账号了, 继续的话将移除当前账号数据并且切换到当前{2}账号. 您是否要继续？", n, n);
cc.vv.AlertView.show(o, function() {
if (cc.vv.gameData) {
cc.vv.gameData.ReqBackLobby && cc.vv.gameData.ReqBackLobby();
cc.vv.gameData.SetIsQuestModel && cc.vv.gameData.SetIsQuestModel(null);
}
t._isSendFbBind = !0;
a();
t.reqLogin(e.user, "", i, e.accesstoken, null, e.token);
}, function() {}, !0);
return;
}
a();
Global.dispatchEvent(EventId.FB_BIND_SUCCESS, e);
}
},
OnRcvNetSystemNotice: function(e) {
200 == e.code && cc.loader.loadRes("BalootClient/BaseRes/prefabs/system_notice", cc.Prefab, function(t, i) {
if (!t) {
var n = cc.find("Canvas");
if (cc.isValid(n)) {
var a = n.getChildByName("system_notice");
a || ((a = cc.instantiate(i)).parent = n);
a.getComponent("system_notice").show(e.message);
}
}
});
},
_checkJoinRoomSpcode: function(e) {
var t = e.spcode;
if (t) {
662 == t && cc.vv.AlertView.show(___("您的游戏还未结束,是否继续游戏"), function() {
cc.vv.NetManager.send({
c: MsgId.GAME_ENTER_MATCH,
deskid: e.deskid,
gameid: e.gameid
}, !0);
}, function() {});
return !1;
}
return !0;
},
onOpenAppByURL: function(e) {
if (cc.vv.gameData) cc.vv.FloatTip.show(___("当前游戏还未结束")); else if (e) {
cc.vv.PlatformApiMgr.clearOpenAppUrlDataStr();
var t = e.roomid;
if (t) {
var i = cc.vv.UserManager.getSalonVip();
if (i > cc.vv.UserManager.svip) {
var n = cc.js.formatStr("Upgrade your VIP level to VIP%s to enjoy the Salon", i);
cc.vv.AlertView.show(___(n), function() {
Global.dispatchEvent("OpenCharge");
}, function() {}, !1, null, null, null, "Upgrade Now");
return !1;
}
var a = t.split("-"), o = a[0], c = a[1], s = a[2], r = cc.vv.UserManager.isNoNeedDownGame(c), l = cc.vv.SubGameUpdateNode.getComponent("subGameMgr")._isAreadyNew(c);
if (cc.sys.isBrowser || l || r) {
var d = {
c: MsgId.FRIEND_ROOM_JOIN
};
d.deskid = o;
c && (d.gameid = c);
s && (d.pwd = s);
o && cc.vv.NetManager.send(d);
} else {
var h = cc.js.formatStr("You need to download the latest resources of 【%s】 first", cc.vv.UserConfig.getGameName(c));
cc.vv.AlertView.show(h, function() {
cc.vv.SubGameUpdateNode.emit("check_subgame", c);
cc.vv.FloatTip.show("start download");
}, function() {});
}
}
}
},
onRefushFMCToken: function() {
this.updateFCMToken();
},
doEnterFrontAction: function() {
if (Global.isIOS()) {
var e = cc.vv.PlatformApiMgr.getOpenAppUrlDataStr();
e && this.onOpenAppByURL(JSON.parse(e));
}
},
onRcvNetTickHallNotice: function(e) {
200 === e.code && cc.vv.AlertView.showTips(cc.vv.Language.user_tick_notice, function() {
if (cc.vv.gameData) {
cc.vv.gameData._EventId && Global.dispatchEvent(cc.vv.gameData._EventId.EXIT_GAME);
Global.dispatchEvent(EventId.EXIT_GAME);
cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.HALL);
}
}.bind(this));
},
jumpTo: function(e) {
var t = cc.director.getScene().getComponentInChildren("GameHall");
if (t) {
cc.vv.PopupManager.removeAll();
if (e > 1e5) {
t.pageTabbar.setPage(2);
cc.vv.PopupManager.addPopup("BalootClient/RoomList/RoomListView", {
opacityIn: !0,
onShow: function(t) {
var i = t.getComponent("RoomListView");
if (i) {
var n = e % 1e5;
i.onInit(n);
}
}
});
} else if (1 == e) t.pageTabbar.setPage(2); else if (2 == e) t.pageTabbar.setPage(1); else if (3 == e) t.pageTabbar.setPage(3); else if (4 == e) {
t.pageTabbar.setPage(2);
var i = cc.director.getScene().getComponentInChildren("HallSlotBtn");
i && i.onClick();
} else if (5 == e) t.pageTabbar.setPage(0); else if (6 == e) {
t.pageTabbar.setPage(4);
var n = cc.director.getScene().getComponentInChildren("PageSocialView");
if (n) {
var a = n.tabbarNode.getComponentInChildren("Tabbar");
a && a.setPage(3);
}
} else if (7 == e) {
t.pageTabbar.setPage(3);
var o = cc.director.getScene().getComponentInChildren("PageBounsView");
if (o) {
var c = o.tabbarNode.getComponentInChildren("Tabbar");
c && c.setPage(3);
}
} else if (8 == e) {
t.pageTabbar.setPage(3);
var s = cc.director.getScene().getComponentInChildren("PageBounsView");
if (s) {
var r = s.tabbarNode.getComponentInChildren("Tabbar");
r && r.setPage(4);
var l = cc.director.getScene().getComponentInChildren("FBShareView");
l && l.shareBtn.node.getComponent("PopupBtnCmp").onClick();
}
} else if (9 == e) {
t.pageTabbar.setPage(3);
var d = cc.director.getScene().getComponentInChildren("PageBounsView");
if (d) {
var h = d.tabbarNode.getComponentInChildren("Tabbar");
h && h.setPage(0);
}
} else if (10 == e) {
t.pageTabbar.setPage(0);
var _ = cc.director.getScene().getComponentInChildren("NavigationPageView");
_ && _.scheduleOnce(function() {
_.showPage(3);
}, .1);
} else if (11 == e) t.pageTabbar.setPage(3); else if (11.1 == e) {
t.pageTabbar.setPage(3);
Global.dispatchEvent("Bonus_Tab", 1);
} else if (11.2 == e) {
t.pageTabbar.setPage(3);
Global.dispatchEvent("Bonus_Tab", 2);
} else if (11.3 == e) {
t.pageTabbar.setPage(3);
Global.dispatchEvent("Bonus_Tab", 3);
} else if (11.4 == e) {
t.pageTabbar.setPage(3);
Global.dispatchEvent("Bonus_Tab", 4);
} else if (12 == parseInt(e)) {
t.pageTabbar.setPage(2);
cc.vv.PopupManager.addPopup("YD_Pro/rank/yd_rank", {
opacityIn: !0,
onShow: function(t) {
t.getComponent("yd_rank").initPage(10 * e % 12);
}
});
}
}
},
onRcvRefushDeskInfo: function(e) {
if (200 == e.code && cc.vv.gameData && 1 == e.deskFlag && e.deskInfo) {
e.deskInfo.isReconnect = !0;
cc.vv.gameData.init(e.deskInfo, e.gameid);
}
},
OnRcvNetBindInviteCode: function(e) {
e.code;
},
PERSIONAL_INFO: function(e) {
200 == e.code && e.playerInfo && e.playerInfo.uid && e.playerInfo.uid == cc.vv.UserManager.uid && cc.vv.UserManager.updateUserInfo(e.playerInfo);
},
onPressBackCall: function() {
var e = cc.director.getScene().getComponentsInChildren(cc.WebView);
if (!(e && e.length > 0)) {
var t = cc.js.formatStr("Are you sure you want to exit %s?", cc.vv.UserConfig.getAppName());
cc.vv.AlertView.show(t, function() {
cc.game.end();
}, function() {});
}
},
_getGameLanguage: function() {
return cc.vv.i18nManager.getConfig().id;
},
test: function() {
cc.vv.PopupManager.addPopup("BalootClient/BaseRes/prefabs/SceneTranslate", {
onShow: function(e) {
e.getComponent("SceneTranslate").toHall();
}
});
},
getAppPackname: function() {
return cc.sys.isBrowser ? "com.yono.games.free" : cc.vv.PlatformApiMgr.getPackageName();
}
}
});
cc._RF.pop();
}, {
GameManager: "GameManager"
} ],
GameManager: [ function(e, t) {
"use strict";
cc._RF.push(t, "a4573XiL/dPKoydrqlkMvEu", "GameManager");
cc.Class({
extends: cc.Component,
statics: {
_interval_id: null,
_showExit: !1,
_isBackground: !1,
init: function() {
var e = cc.sys.localStorage.getItem("localModel");
"DEBUG" == e ? Global.localVersion = !0 : "RELEASE" == e && (Global.localVersion = !1);
Global.switchLog();
this.initURLParams();
this.registerAllMsg();
this.doIntallReffer();
},
initURLParams: function() {
if (window && window.location) {
var e, t, i = window.location.href, n = i.indexOf("?"), a = (i = i.substring(n + 1)).split("&");
AppLog.log("initURLParams href =", i);
for (var o = 0; o < a.length; o++) if ((n = a[o].indexOf("=")) > 0) {
e = a[o].substring(0, n);
"#" == (t = a[o].substring(n + 1)).substring(t.length - 1) && (t = t.substring(0, t.length - 1));
e in Global && (Global[e] = t);
AppLog.log("initURLParams url params=", e, t);
}
}
},
registerAllMsg: function() {
cc.vv.EventManager.on(EventId.ENTER_HALL, this.onRcvEnterHall, this);
cc.vv.NetManager.registerMsg(MsgId.GAME_ENTER_MATCH, this.onRcvNetEnterGame, this);
cc.vv.NetManager.registerMsg(MsgId.UPDATE_FCMTOKEN, this.onRcvFCMToken, this);
cc.vv.NetManager.registerMsg(MsgId.LOGIN, this.onRcvMsgLogin, this);
cc.vv.NetManager.registerMsg(MsgId.LOGIN_USERID, this.onRcvMsgLoginUserId, this);
cc.vv.NetManager.registerMsg(MsgId.RELOGIN_USERID, this.onRcvMsgLoginUserId, this);
cc.vv.NetManager.registerMsg(MsgId.LOGIN_OUT, this.onRcvMsgLoginout, this);
cc.vv.NetManager.registerMsg(MsgId.GAME_CREATEROOM, this.onRecNetCreateOrJoinRoom, this);
cc.vv.NetManager.registerMsg(MsgId.GAME_JOINROOM, this.onRecNetCreateOrJoinRoom, this);
cc.vv.NetManager.registerMsg(MsgId.GAME_RECONNECT_DESKINFO, this.onRecNetCreateOrJoinRoom, this);
cc.vv.NetManager.registerMsg(MsgId.GAME_REMOTE_LOGIN, this.onRecNetRemoteLogin, this);
cc.vv.NetManager.registerMsg(MsgId.NOTIFY_SYS_KICK_HALL, this.onRcvNetTickHallNotice, this);
cc.vv.NetManager.registerMsg(MsgId.NOTIFY_SYS_KICK_LOGIN, this.onRcvNetSysKickNotice, this);
cc.vv.NetManager.registerMsg(MsgId.GAME_NEED_RESTART, this.onRcvNetGameRestarNotice, this);
cc.vv.NetManager.registerMsg(MsgId.MONEY_CHANGED, this.onRcvNetMoneyChanged, this);
cc.vv.NetManager.registerMsg(MsgId.SYNC_COIN, this.onRcvNetSyncMoney, this);
cc.vv.NetManager.registerMsg(MsgId.SYNC_PLAYER_INFO, this.onRcvNetSyncPlayerInfo, this);
cc.vv.NetManager.registerMsg(MsgId.REQ_REDPACK, this.onRcvRedPackInfo, this);
cc.vv.NetManager.registerMsg(MsgId.CAME_REDPACK_ALLSCENE, this.onRecvInGameRedpack, this);
cc.vv.NetManager.registerMsg(MsgId.ACTIVE_LUNPAN, this.onRecvActiveLunpan, this);
cc.vv.NetManager.registerMsg(MsgId.REQ_BIND_FACEBOOK, this.onRcvNetBindAccount, this);
cc.vv.NetManager.registerMsg(MsgId.TASK_FINISH_NOTICE, this.onRcvNetTaskFinishNotice, this);
cc.vv.NetManager.registerMsg(MsgId.LEVEL_UP_PARTY_UPDATE_NOTICE, this.onRcvNetLevelUpPartyUpdateNotice, this);
cc.vv.NetManager.registerMsg(MsgId.COLLECT_BREAKGRANT_COIN_NOTICE, this.onRcvNetBreakGrantNotice, this);
cc.vv.NetManager.registerMsg(MsgId.REQ_QUEST_INFO, this.OnRcvNetQuestInfo, this);
cc.vv.NetManager.registerMsg(MsgId.GLOBAL_SYSTEM_NOTIFY, this.OnRcvNetSystemNotice, this);
cc.vv.NetManager.registerMsg(MsgId.ACCOUNT_DELETE, this.OnRcvNetAccountDelete, this);
cc.game.on(cc.game.EVENT_HIDE, this.onBackGround, this);
cc.game.on(cc.game.EVENT_SHOW, this.onEnterFront, this);
},
registerKeyboardBack: function() {
var e = this, t = function() {
if (!e._showExit) {
e._showExit = !0;
cc.vv.AlertView.show("Are you sure you want to quit the game?", function() {
e._showExit = !1;
}, function() {
cc.game.end();
}, !1, null, null, "YES", "WAIT");
}
};
cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function(e) {
e.keyCode != cc.macro.KEY.back && e.keyCode != cc.macro.KEY.escape || t();
}, this);
cc.vv.PlatformApiMgr.setBackPressCall(t);
},
onBackGround: function() {
StatisticsMgr && StatisticsMgr.httpReport(StatisticsMgr.HTTP_ENTER_BACKGROUND);
this._isBackground = !0;
Global.playerData.bank_token = null;
},
onEnterFront: function() {
if (this._isBackground) {
this._isBackground = !1;
if (cc.director.getScene().name != Global.SCENE_NAME.LOGIN && cc.director.getScene().name != Global.SCENE_NAME.HOTUPDATE) {
var e = !1;
cc.vv.gameData && cc.vv.gameData.isBackgroundReConn && (e = cc.vv.gameData.isBackgroundReConn());
var t = cc.vv.NetManager.isConnect();
if (e) cc.vv.NetManager.reconnect(); else if (!t) {
AppLog.warn("断线了，需要重连11111");
cc.director.getScene().name == Global.SCENE_NAME.HALL && cc.vv.NetManager.reconnect();
}
}
}
},
doAccountDelete: function() {
var e = {
c: MsgId.ACCOUNT_DELETE
};
cc.vv.NetManager.send(e);
},
listenOpenAppByURL: function() {
if (Global.isNative()) {
var e = cc.vv.PlatformApiMgr.getOpenAppUrlDataStr();
if (e && e.length > 0) {
e = JSON.parse(e);
AppLog.log("actionId: " + e.actionId);
switch (parseInt(e.actionId)) {
case Global.ShareActionId.ROOM_INVITE_FRIEND:
var t = {
c: MsgId.GAME_JOINROOM
};
t.deskid = e.valueId;
t.lng = Global.playerData.lng;
t.lat = Global.playerData.lat;
cc.vv.NetManager.send(t);
break;

default:
AppLog.warn("Not find the actionId[" + e.actionId + "]，please check it!");
}
}
}
},
reqReloginUser: function() {
var e = {
c: MsgId.RELOGIN_USERID
};
e.uid = Global.playerData.uid;
e.openid = Global.playerData.openid;
e.server = Global.playerData.serverId;
e.subid = Global.playerData.subId;
e.token = Global.playerData.token;
e.appver = Global.appVersion;
e.app = Global.appId;
e.bundleid = this.getAppPackname();
cc.vv.NetManager.send(e);
cc.vv.NetManager.clearTimeoutReconnect();
},
reqReLogin: function(e) {
var t = this;
StatisticsMgr.httpReport(StatisticsMgr.HTTP_SEND_MSG1, 1);
var i = function(e) {
for (var t = window.location.search.substring(1).split("&"), i = 0; i < t.length; i++) {
var n = t[i].split("=");
if (n[0] == e) return n[1];
}
return !1;
}, n = Global.getLocal(Global.SAVE_KEY_REQ_LOGIN, "");
if (n) {
AppLog.ShowScreen("relogin发送连接loginserver");
cc.vv.NetManager.connect(Global.loginServerAddress, function() {
console.log("zengbin------websocket连接成功----");
StatisticsMgr.httpReport(StatisticsMgr.HTTP_SEND_MSG1, 2);
var a = JSON.parse(n);
Global.playerData && Global.playerData.uid && (a.uid = Global.playerData.uid);
Global.playerData && Global.playerData.token && (a.token = Global.playerData.token);
e ? a.accessToken = Global.getLocal("localtoken") : null == a.uid ? a.LoginExData = Global.LoginExData.loginAction : a.LoginExData = Global.LoginExData.reloginAction;
a.bwss = 0;
Global.isUserWSS() && (a.bwss = 1);
a.app = Global.appId;
a.bundleid = t.getAppPackname();
a.dinfo = t.getDInfo();
a.v = Global.resVersion;
Global.isNative() && (a.av = cc.vv.PlatformApiMgr.getAppVersion());
var o = Global.getDeviceInfo();
o && o.phoneBrand && (a.phone = cc.js.formatStr("%s(%s)", o.phoneBrand, o.phoneSystemVision));
if (Global.isNative()) {
a.adid = cc.sys.localStorage.getItem("adjustData") || "";
if (a.adid && "" != a.adid) {
var c = JSON.parse(a.adid);
a.avenues = c.avenues || "";
}
var s = cc.sys.localStorage.getItem("UserAgentData");
console.log("userAgent = " + s);
if (s) {
a.ua = s;
if (cc.vv.apkConfig) {
a.adid = JSON.parse(a.adid);
a.adid.apkConfig = cc.vv.apkConfig;
a.adid = JSON.stringify(a.adid);
}
}
} else if (cc.sys.isBrowser) {
a.phone = "Web_" + cc.sys.os;
a.ua = navigator.userAgent;
a.pixid = i("fbpixid") || "";
a.adid = JSON.stringify({
platformKey: "02_",
adid: i("adsid") || ""
});
a.avenues = i("channel") || "";
}
AppLog.ShowScreen("relogin发送协议1");
cc.vv.NetManager.send(a);
cc.vv.NetManager.clearTimeoutReconnect();
});
} else {
StatisticsMgr && StatisticsMgr.httpReport(StatisticsMgr.HTTP_DISCONNECT);
cc.vv.AlertView.showTips(cc.vv.Language.go_back_login, function() {
t.goBackLoginScene();
});
console.log("zengbin---显示登录页面----");
}
},
constructLoginMsg: function(e, t, i, n, a, o) {
var c = {
c: MsgId.LOGIN
};
c.user = e;
c.passwd = t;
c.app = Global.appId;
c.v = Global.resVersion;
if (Global.isNative()) {
c.av = cc.vv.PlatformApiMgr.getAppVersion();
c.fmcToken = cc.vv.PlatformApiMgr.GetFMCToken();
}
var s = function(e) {
for (var t = window.location.search.substring(1).split("&"), i = 0; i < t.length; i++) {
var n = t[i].split("=");
if (n[0] == e) return n[1];
}
return !1;
}, r = a || Global.LoginExData.reloginAction;
c.t = i;
c.accessToken = n;
c.platform = cc.sys.os;
Global.isIOS() && (c.deviceToken = cc.vv.PlatformApiMgr.getDeviceToken());
var l = Global.getDeviceInfo();
l && l.phoneBrand && (c.phone = cc.js.formatStr("%s(%s)", l.phoneBrand, l.phoneSystemVision));
if (Global.isNative()) {
var d = cc.sys.localStorage.getItem("UserAgentData");
console.log("userAgent = " + d);
d && (c.ua = d);
c.adid = cc.sys.localStorage.getItem("adjustData") || "";
if (c.adid && "" != c.adid) {
var h = JSON.parse(c.adid);
c.avenues = h.avenues || "";
if (cc.vv.apkConfig) {
c.adid = JSON.parse(c.adid);
c.adid.apkConfig = cc.vv.apkConfig;
c.adid = JSON.stringify(c.adid);
}
}
} else if (cc.sys.isBrowser) {
c.phone = "Web_" + cc.sys.os;
c.ua = navigator.userAgent;
c.pixid = s("fbpixid") || "";
c.adid = JSON.stringify({
platformKey: "02_",
adid: s("adsid") || ""
});
c.avenues = s("channel") || "";
}
c.token = o || Global.playerData.token;
c.bwss = 0;
c.LoginExData = r;
c.language = this._getGameLanguage();
c.client_uuid = Global.getLocal("client_uuid", "");
Global.isUserWSS() && (c.bwss = 1);
return c;
},
reqLogin: function(e, t, i, n, a, o, c, s) {
var r = this;
StatisticsMgr.httpReport(StatisticsMgr.HTTP_SEND_MSG1, 1);
AppLog.ShowScreen("开始连接loginserver");
cc.vv.NetManager.connect(Global.loginServerAddress, function() {
AppLog.ShowScreen("loginserver连接成功");
var l = r.constructLoginMsg(e, t, i, n, a, o);
if (i == Global.LoginType.PHONE) if ("rest" == a) {
l.reset = 1;
l.otp = o;
} else "otp" == a && (l.otp = o);
AppLog.ShowScreen("发送协议1");
l.bundleid = r.getAppPackname();
l.deviceid = Global.getDeviceId();
l.dinfo = r.getDInfo();
if (s) {
l.register_token = o;
cc.log("看看德才---", o);
}
if (c) {
var d = Global.deepClone(l);
d.btype = c;
cc.vv.NetManager.send(d);
} else cc.vv.NetManager.send(l);
StatisticsMgr.httpReport(StatisticsMgr.HTTP_SEND_MSG1, 2);
Global.saveLocal(Global.SAVE_KEY_REQ_LOGIN, JSON.stringify(l));
cc.vv.NetManager.clearTimeoutReconnect();
});
},
autoTravellerLogin: function(e) {
var t = Global.getLocal("nick_name", "");
0 == t.length && (t = (Global.GUEST_PREFIX || "Guest") + Global.random(999, 9999));
Global.saveLocal("nick_name", t);
var i = Global.getLocal(Global.SAVE_PLAYER_TOKEN, ""), n = i.length > 0 ? JSON.parse(i) : {}, a = n[t], o = a ? a.token : null;
if (!o || o.length <= 0) {
o = new Date().getTime() + "_" + Global.random(1, 99999999);
n[t] = {
token: o
};
Global.saveLocal(Global.SAVE_PLAYER_TOKEN, JSON.stringify(n));
}
if (e) return this.constructLoginMsg(t, t, Global.LoginType.Guest, "", Global.LoginExData.loginAction, o);
AppLog.ShowScreen("游客自动登陆");
this.reqLogin(t, t, Global.LoginType.Guest, "", Global.LoginExData.loginAction, o);
},
autoTravellerLogin_register: function(e) {
var t = "";
0 == t.length && (t = (Global.GUEST_PREFIX || "Guest") + Global.random(999, 9999));
Global.saveLocal("nick_name", t);
var i = "".length > 0 ? JSON.parse("") : {}, n = i[t], a = n ? n.token : null;
if (!a || a.length <= 0) {
a = new Date().getTime() + "_" + Global.random(1, 99999999);
i[t] = {
token: a
};
Global.saveLocal(Global.SAVE_PLAYER_TOKEN, JSON.stringify(i));
}
if (e) return this.constructLoginMsg(t, t, Global.LoginType.Guest, "", Global.LoginExData.loginAction, a);
AppLog.ShowScreen("游客自动登陆_注册");
this.reqLogin(t, t, Global.LoginType.Guest, "", Global.LoginExData.loginAction, a, !1, !0);
},
goBackLoginScene: function(e) {
void 0 === e && (e = !0);
Global.dispatchEvent(EventId.STOP_ACTION);
cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.LOGIN);
},
onRcvMsgLoginout: function(e) {
200 === e.code && this.goBackLoginScene();
},
onRcvNetBindAccount: function(e) {
var t = this;
if (200 === e.code) {
var i = e.type, n = "Facebook";
i == Global.LoginType.GOOGLE_LOGIN && (n = "Google");
var a = function() {
Global.deleteLocal("guest_token_map");
i == Global.LoginType.FB ? cc.vv.UserManager.setIsBindFb(!0) : i == Global.LoginType.GOOGLE_LOGIN && cc.vv.UserManager.setIsBindGoogle(!0);
cc.vv.UserManager.setLoginType(i);
e.usericon && (cc.vv.UserManager.userIcon = e.usericon);
e.playername && cc.vv.UserManager.setNickName(e.playername);
Global.saveLocal(Global.SAVE_KEY_LOGIN_TYPE, i);
var t = Global.getLocal(Global.SAVE_KEY_REQ_LOGIN, ""), n = JSON.parse(t);
n.t = i;
Global.saveLocal(Global.SAVE_KEY_REQ_LOGIN, JSON.stringify(n));
};
if (1071 === e.spcode) {
var o = cc.js.formatStr("Your %s account has already bound with another account, continue will remove all the info of current account and switch to the previous FB account automatically. Sure to continue？", n);
cc.vv.AlertView.show(o, function() {
if (cc.vv.gameData) {
cc.vv.gameData.ReqBackLobby && cc.vv.gameData.ReqBackLobby();
cc.vv.gameData.SetIsQuestModel && cc.vv.gameData.SetIsQuestModel(null);
}
t._isSendFbBind = !0;
a();
var n = e.fbuid, o = e.fbtoken;
t.reqLogin(n, "", i, o, Global.LoginExData.loginAction, o);
}, function() {}, !0);
return;
}
a();
Global.dispatchEvent(EventId.FB_BIND_SUCCESS, e.addcoin);
}
},
onRcvEnterHall: function(e) {
if (cc.director.getScene().name !== Global.SCENE_NAME.HALL) {
cc.vv.SceneMgr.setParams(e);
cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.HALL, function() {});
} else cc.director.loadScene(Global.SCENE_NAME.HALL);
},
isOpenOfGameId: function(e) {
var t = Global.playerData.gameList;
if (t) for (var i = 0; i < t.length; i++) if (t[i].id == e) return 1 == t[i].status;
return !0;
},
reqLoginUserid: function(e) {
var t = this;
if (e) {
var i = e.net, n = e.uid, a = e.server, o = e.subid, c = e.token;
Global.saveLocal("recent_uid", n);
Global.saveLocal("localtoken", c);
cc.vv.UserManager.initLoginServer(e);
AppLog.ShowScreen("连接node服");
cc.vv.NetManager.connect(i, function() {
AppLog.ShowScreen("协议2发送");
var e = {
c: MsgId.LOGIN_USERID
};
e.uid = n;
e.openid = "";
e.server = a;
e.subid = o;
e.token = c;
e.deviceid = Global.getDeviceId();
e.appver = Global.appVersion;
e.app = Global.appId;
e.bundleid = t.getAppPackname();
e.v = Global.resVersion;
if (Global.isNative()) {
e.av = cc.vv.PlatformApiMgr.getAppVersion();
e.fmcToken = cc.vv.PlatformApiMgr.GetFMCToken();
e.kouuid = cc.vv.PlatformApiMgr.GetKoUUID();
Global.isIOS() && (e.deviceToken = cc.vv.PlatformApiMgr.getDeviceToken());
}
cc.vv.NetManager.send(e);
});
}
},
onRcvMsgLogin: function(e) {
var t = this;
if (e.spcode && e.spcode > 0) {
if (214 == e.spcode) {
this.showNeedUpdateRes();
return;
}
if (761 == e.spcode) {
cc.vv.FloatTip.show(___("Please login after 2 minutes!"));
return;
}
426 === e.spcode ? cc.vv.AlertView.showTips("Registration unavailable now.Please try again after some time.") : 216 === e.spcode ? cc.vv.AlertView.showTips("Registration unavailable now.Please try again after some time.") : 217 === e.spcode ? cc.vv.AlertView.showTips("Device login restrictions.") : 218 === e.spcode ? cc.vv.AlertView.showTips("Unsupported device!") : 405 === e.spcode ? cc.vv.AlertView.showTips("This account has been banned") : 335 === e.spcode ? cc.vv.AlertView.showTips("Your account security is important to us,please enter the OTP for new device login") : 334 === e.spcode ? cc.vv.AlertView.showTips("Invalid OTP code") : 955 === e.spcode ? cc.vv.AlertView.showTips(___("This account does not exist!")) : 333 === e.spcode ? cc.vv.AlertView.showTips(___("wrong password!")) : cc.vv.AlertView.showTips(cc.js.formatStr("Login fail!(%s)", e.spcode));
AppLog.ShowScreen("协议1返回失败");
var i = e.spcode;
Global.dispatchEvent(EventId.ENTER_LOGIN_FAILE, i);
this.goBackLoginScene();
} else if (200 === e.code) {
AppLog.ShowScreen("协议1返回成功");
this.reqLoginUserid(e);
} else {
AppLog.ShowScreen("协议1返回失败");
var n = e.code;
Global.dispatchEvent(EventId.ENTER_LOGIN_FAILE, n);
940 === n ? cc.vv.WxMgr.wxLogin(function(e) {
if (1 === e.result) {
var i = e.token, n = e.uid;
t.reqLogin(i, i, Global.LoginType.WX, n);
} else cc.vv.FloatTip.show(cc.vv.Language.float_tip_WeChat_authorization_fails);
}) : this.goBackLoginScene();
}
},
showNeedUpdateRes: function() {
cc.vv.AlertView.showTips("There is a new resource update, restart the update immediately", function() {
cc.game.restart();
});
Global.getLocal("last_hotupdate", "") && Global.deleteLocal("last_hotupdate");
},
onRcvMsgLoginUserId: function(e) {
if (200 === e.code) {
AppLog.ShowScreen("协议2返回");
cc.vv.PlatformApiMgr.KoSDKTrackEvent("af_login", JSON.stringify({
uid: e.uid
}));
cc.vv.UserManager.initPlayerData(e);
cc.vv.NewGuide && cc.vv.NewGuide.SetIsLoadingGuide(!1);
Global.dispatchEvent(EventId.ENTER_LOGIN_SUCCESS, e);
var t = cc.vv.UserManager.getLoginType();
if (1 == e.deskFlag) {
var i = e.deskInfo.gameid, n = cc.vv.UserManager.isNoNeedDownGame(i);
if (cc.vv.UserManager.isDownloadSubGame(i) || n) this._checkSubpack(i, function() {
e.deskInfo.isReconnect = !0;
cc.vv.NetManager.dispatchNetMsg({
c: MsgId.GAME_RECONNECT_DESKINFO,
code: Global.ERROR_CODE.NORMAL,
gameid: e.deskInfo.gameid,
deskinfo: e.deskInfo
});
}); else if (i) {
var a = {
c: MsgId.GAME_LEVELROOM
};
a.deskid = i;
cc.vv.NetManager.send(a);
Global.isIOSReview() ? this.enterTS() : cc.vv.EventManager.emit(EventId.ENTER_HALL);
var o = cc.vv.GameItemCfg[i];
if (o) {
var c = o.name;
cc.vv.AlertView.showTips(cc.js.formatStr(cc.vv.Language.cannot_entergame, c, c));
}
}
} else if (t == Global.LoginType.APILOGIN) {
var s = cc.vv.UserManager.getApiGameId();
this.sendEnterGameReq(s);
} else if (cc.vv.SceneMgr.CanShowHallPreLoading()) {
AppLog.ShowScreen("切换预加载场景");
cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.HALL_PRELOAD);
} else if (Global.isIOSReview()) this.enterTS(); else if (cc.vv.SceneMgr.isInHallScene()) {
if (this._isSendFbBind) {
this._isSendFbBind = null;
cc.vv.EventManager.emit(EventId.ENTER_HALL);
}
} else if (cc.vv.gameData) {
var r = cc.vv.gameData.getGameId();
cc.vv.gameData.GetIsQuestModel && cc.vv.gameData.GetIsQuestModel() && cc.vv.GameManager.setEnterOpation({
gameTask: 1
});
StatisticsMgr.reqReportNow(ReportConfig.ENTER_GAME, r, r);
cc.vv.GameManager.EnterGame(r);
}
} else this.goBackLoginScene();
},
onRecNetCreateOrJoinRoom: function(t) {
if (this._checkJoinRoomSpcode(t) && 200 == t.code) {
var i = cc.vv.GameDataCfg.getGameData(t.gameid);
if (i) if ("gameData" === i.dataName) {
var n = function() {
var n = e(i.dataCmp);
if (null === cc.vv.gameData || void 0 === cc.vv.gameData) {
if (cc.vv.SceneMgr.GetCurSceneName() != a) {
cc.vv.gameData = new n();
cc.vv.gameData.init(t.deskinfo, t.gameid, t.gameJackpot);
Global.dispatchEvent(EventId.STOP_ACTION);
Global.dispatchEvent("HALL_TO_GAME");
AppLog.ShowScreen("准备进入游戏场景" + a);
cc.vv.SceneMgr.enterScene(a, null, i);
}
} else cc.vv.gameData.init(t.deskinfo, t.gameid, t.gameJackpot);
}, a = i.loadingScene || i.gameScene;
if (i.gameScene && !window[i.gameScene]) {
AppLog.info("onRecNetCreateOrJoinRoom, loadBundle:", i.gameScene);
cc.assetManager.loadBundle(i.gameScene, null, function(e, t) {
if (e && e) AppLog.err(e); else {
window[i.gameScene] = t;
n();
}
});
} else n();
} else {
var o = e(i.dataCmp);
if (o) {
o.init(t.deskinfo, !0);
cc.vv[i.dataName] = o;
Global.dispatchEvent(EventId.STOP_ACTION);
AppLog.ShowScreen("准备进入游戏场景" + i.gameScene);
cc.vv.SceneMgr.enterScene(i.gameScene, function() {
var e = cc.find("Canvas"), i = e.getComponent("SlotMachine_Loading");
i || (i = e.getComponent("LMSlots_Loading_Base"));
i && i.setEnterGame && i.setEnterGame(t.gameid);
}, i.orientation);
}
}
}
},
_checkJoinRoomSpcode: function() {
return !0;
},
onRecNetDimissRoomBySystem: function(e) {
200 === e.code && cc.vv.AlertView.showTips(cc.vv.Language.dissolve_room, function() {
cc.vv.EventManager.emit(EventId.ENTER_HALL);
});
},
onRecNetRemoteLogin: function() {
cc.vv.NetManager.close(null, !1);
cc.vv.AlertView.showTips(cc.vv.Language.acc_online, function() {
this.goBackLoginScene();
}.bind(this));
},
onRcvNetSysKickNotice: function() {
cc.vv.NetManager.close(null, !1);
cc.vv.gameData && cc.vv.gameData.onExit && cc.vv.gameData.onExit();
this.goBackLoginScene();
},
loadLoginScene: function() {},
onRcvNetMoneyChanged: function(e) {
console.log("财富变化:onRcvNetMoneyChanged");
if (200 === e.code) {
Global.playerData.coin = e.coin;
if (1 === e.type) {
var t = !!e.diamond;
t && cc.vv.UserManager.setDiamond(e.diamond, !0);
var i = function() {
e.count && cc.loader.loadRes("CashHero/prefab/BuyCoinResult", cc.Prefab, function(i, n) {
if (i) cc.vv.AlertView.showTips(cc.js.formatStr(cc.vv.Language.add_score_succ, Global.S2P(e.count)), function() {}); else {
var a = cc.find("Canvas");
if (!a.getChildByName("BuyCoinResult") && cc.isValid(a, !0)) {
var o = cc.instantiate(n);
o.parent = a;
o.name = "BuyCoinResult";
var c = o.getComponent("CH_BuyCoinResult");
c && c.ShowInfo(e.count, t);
}
}
});
};
if (e.rewards && e.rewards.length > 0) {
var n = "CashHero/prefab/pop_reward";
cc.loader.loadRes(n, cc.Prefab, function(t, a) {
if (t) AppLog.err("未找到资源:" + n); else if (!cc.find("Canvas/pop_reward")) {
var o = cc.instantiate(a);
o.parent = cc.find("Canvas");
o.name = "pop_reward";
o.getComponent("CH_popreward").showRewards(e.rewards, function() {
i();
});
}
});
} else i();
}
Global.dispatchEvent(EventId.RECHARGE_SUCC);
}
},
onRcvNetSyncMoney: function(e) {
console.log("主动同步金币");
200 === e.code && (Global.playerData.coin = e.coin);
},
onRcvNetSyncPlayerInfo: function(e) {
if (200 === e.code && e.playerInfo.uid == Global.playerData.uid) for (var t in e.playerInfo) Global.playerData[t] = e.playerInfo[t];
},
onRcvNetTaskFinishNotice: function(e) {
if (200 === e.code) {
Global.playerData.taskNum = e.hasQuest;
cc.vv.EventManager.emit(EventId.UPDATE_TASK_REDPOINT);
}
},
onRcvNetLevelUpPartyUpdateNotice: function(e) {
if (200 === e.code) {
cc.find("Canvas");
var t = "hall_prefab/LevelUpPartyV";
cc.vv.gameData && cc.vv.gameData.getGameId() && "portrait" === cc.vv.GameDataCfg.getGameData(cc.vv.gameData.getGameId()).orientation && (t = "hall_prefab/LevelUpPartyV");
var i = {
type: 1,
prefabUrl: t
};
cc.vv.QueueWinMrg.addPop("LevelUpPartyV", e.state, i);
}
},
onRcvNetBreakGrantNotice: function(e) {
if (200 === e.code && cc.vv.gameData) {
if (cc.vv.gameData.isNotShowBreak && cc.vv.gameData.isNotShowBreak()) return;
cc.vv.gameData.SetBreakGrant(e);
}
},
onRcvNetGameRestarNotice: function(e) {
200 === e.code && cc.vv.AlertView.showTips(cc.vv.Language.app_restart, function() {
Global.dispatchEvent(EventId.STOP_ACTION);
cc.vv.NetManager.close();
cc.audioEngine.stopAll();
cc.game.restart();
}.bind(this));
},
onRcvNetTickHallNotice: function(e) {
200 === e.code && cc.vv.AlertView.showTips(cc.vv.Language.user_tick_notice, function() {
if (cc.vv.gameData) {
cc.vv.gameData._EventId && Global.dispatchEvent(cc.vv.gameData._EventId.EXIT_GAME);
Global.dispatchEvent(EventId.EXIT_GAME);
cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.HALL);
}
}.bind(this));
},
onRcvRedPackInfo: function(e) {
if (200 === e.code && e.num > 0) {
cc.vv.UserManager.setLuckPackNum(e.allnum);
cc.vv.AlertView.showTips(cc.vv.Language.get_luckypack_tips, function() {}.bind(this));
Global.dispatchEvent(EventId.UPDATE_REDPACK);
}
},
sendEnterGameReq: function(e, t, i) {
if (e) {
var n = {
c: MsgId.GAME_ENTER_MATCH
};
n.gameid = e;
n.ssid = t || 0;
if (i) for (var a in i) n[a] = i[a];
cc.vv.NetManager.send(n);
}
},
onRcvNetEnterGame: function(e) {
AppLog.ShowScreen("进入游戏请求返回");
var t = this, i = e.gameid;
this._checkSubpack(i, function() {
t.onRecNetCreateOrJoinRoom(e);
});
},
onRecvInGameRedpack: function(e) {
console.log("onRecvInGameRedpack:function(msg)收到游戏内红包", e);
200 == e.code && Global.appId == Global.APPID.BigBang && cc.loader.loadRes("hall_prefab/prefab_game_redpack", cc.Prefab, function(t, i) {
if (!t) {
var n = cc.instantiate(i), a = cc.winSize;
n.x = a.width / 2;
n.y = a.height / 2;
cc.director.getScene().addChild(n);
var o = n.getComponent("BB_RedPack");
if (o) {
Global.playerData.coin = e.coin;
cc.vv.UserManager.coin = e.coin;
o.doShow(e.hb, e.coin);
}
}
});
},
onRecvActiveLunpan: function(e) {
console.log("onRecvActiveLunpan:function(msg)", e);
200 == e.code && Global.appId == Global.APPID.BigBang && cc.loader.loadRes("hall_prefab/prefab_lunpan_active", cc.Prefab, function(t, i) {
if (!t) {
var n = cc.instantiate(i), a = cc.director.getWinSize();
n.x = a.width / 2;
n.y = a.height / 2;
cc.director.getScene().addChild(n);
var o = n.getComponent("BB_Active_lunpan");
if (o) {
o.setData(e);
Global.playerData.coin = e.coin;
cc.vv.UserManager.coin = e.coin;
}
}
});
},
enterTS: function() {
cc.vv.EventManager.emit(EventId.ENTER_HALL);
},
EnterGame: function(e, t, i) {
void 0 === t && (t = null);
void 0 === i && (i = null);
if (cc.vv.NetManager.isNetAvailable()) {
this._enterGameId = e;
this._enterSSID = t;
this._enterData = i;
this._checkSubpack(e, function() {
cc.vv.GameManager.doEnter();
});
} else cc.vv.NetManager.showNetTipType(2);
},
_checkSubpack: function(e, t) {
var i = cc.vv.UserManager.isNoNeedDownGame(e);
if (!Global.publishMode || i) t(); else {
var n = cc.vv.GameItemCfg[e];
n && (Global.loadingDown ? t() : cc.loader.downloader.loadSubpackage(n.name, function(e) {
if (e) AppLog.warn("加载子包错误：" + n.name + ";" + e); else {
AppLog.warn("加载子包成功：" + n.name);
t();
}
}));
}
},
setEnterOpation: function(e) {
this._enterOp = e;
},
getEnterOpation: function() {
return this._enterOp;
},
doEnter: function() {
var t = this, i = this, n = this._enterGameId, a = this._enterSSID, o = this._enterData, c = cc.vv.GameDataCfg.getGameData(n);
if (c && c.selectRoom) {
if (null === cc.vv.gameData || void 0 === cc.vv.gameData) {
var s = e(c.dataCmp);
cc.vv.gameData = new s();
cc.vv.gameData.init({
gameid: n,
users: []
}, n);
Global.dispatchEvent(EventId.STOP_ACTION);
cc.vv.SceneMgr.enterScene(c.gameScene);
}
} else if (c && c.hallScene) cc.vv.SceneMgr.enterScene(c.hallScene, function() {
cc.find("Canvas").getComponent("GameCenter").init(n);
}, c.hallSceneOri); else if (c && c.loadingScene) {
var r = e(c.dataCmp);
if (null === cc.vv.gameData || void 0 === cc.vv.gameData) {
cc.vv.gameData = new r();
cc.vv.gameData.init({
gameid: n,
users: []
}, n);
Global.dispatchEvent(EventId.STOP_ACTION);
cc.vv.SceneMgr.enterScene(c.loadingScene, function() {
n == GAME_ID.DZPK && cc.vv.GameManager.sendEnterGameReq(n, a, o);
}, c);
}
} else if (c && c.bNoLoading) if (c.gameScene === Global.SCENE_NAME.HALL_PRELOAD || c.gameScene === Global.SCENE_NAME.HALL || c.gameScene === Global.SCENE_NAME.LOGIN || c.gameScene === Global.SCENE_NAME.LAUNCH || c.gameScene === Global.SCENE_NAME.HOTUPDATE) {
cc.vv.GameManager.sendEnterGameReq(n, a, o);
cc.director.preloadScene(c.gameScene, function() {});
} else {
AppLog.info("dataCfg.bNoLoading loadBundle:", c.gameScene);
cc.assetManager.loadBundle(c.gameScene, null, function(e, t) {
if (e) AppLog.err(e); else {
window[c.gameScene] = t;
cc.vv.GameManager.sendEnterGameReq(n, a, o);
}
});
} else if (Global.isYDApp && Global.isYDApp()) {
var l = c.loadingScene || c.gameScene;
if (l === Global.SCENE_NAME.HALL_PRELOAD || l === Global.SCENE_NAME.HALL || l === Global.SCENE_NAME.LOGIN || l === Global.SCENE_NAME.LAUNCH || l === Global.SCENE_NAME.HOTUPDATE) {
cc.vv.GameManager.sendEnterGameReq(n, a, o);
cc.director.preloadScene(l, function() {});
} else {
var d = l;
c && c.mainScene && (d = c.mainScene);
AppLog.info("(Global.isYDApp loadBundle:", d);
cc.assetManager.loadBundle(d, null, function(e, t) {
if (e) AppLog.err(e); else {
window[c.gameScene] = t;
cc.vv.GameManager.sendEnterGameReq(n, a, o);
}
});
}
} else {
var h = c.loadingScene || c.gameScene;
cc.vv.SceneMgr.enterScene(h, function() {
cc.vv.gameData && cc.vv.gameData.clear();
var e = cc.find("Canvas"), o = e.getComponent("SlotMachine_Loading");
o || (o = e.getComponent("LMSlots_Loading_Base"));
if (o && o.setEnterGame) {
var c = t.getEnterOpation();
o.setEnterGame(n, c, a);
i.setEnterOpation(null);
}
}, c.orientation);
}
this._enterSSID = null;
this._enterData = null;
},
GameLogoout: function() {
AppLog.log("登出");
Global.openFacebookLogin && Global.playerData.logintype === Global.LoginType.FB && (cc.sys.isBrowser ? FB.logout(function() {}) : cc.vv.PlatformApiMgr.SdkLoginOut());
Global.openWeChatLogin && Global.playerData.logintype === Global.LoginType.WX && (cc.sys.isBrowser || cc.vv.WxMgr.delWXToken());
cc.vv.AppData.getIsInGame() && cc.vv.gameData && cc.vv.gameData.requestExit();
cc.vv.NetManager.send({
c: MsgId.LOGIN_OUT
}, !0);
cc.vv.NetManager.close();
cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.LOGIN);
Global.deleteLocal(Global.SAVE_KEY_LOGIN_TYPE, "");
},
OnRcvNetQuestInfo: function(e) {
if (200 == e.code) {
cc.vv.UserManager.setQuestInfo(e);
var t = Global.SCENE_NAME.QUEST;
cc.vv.SceneMgr.enterScene(t, null, Global.APP_ORIENTATION);
}
},
OnRcvNetSystemNotice: function(e) {
200 == e.code && cc.loader.loadRes("CashHero/prefab/system_notice", cc.Prefab, function(t, i) {
if (!t) {
var n = cc.find("Canvas");
if (cc.isValid(n)) {
var a = n.getChildByName("system_notice");
a || ((a = cc.instantiate(i)).parent = n);
a.getComponent("system_notice").show(e.message);
}
}
});
},
OnRcvNetAccountDelete: function(e) {
200 == e.code && cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.LOGIN);
},
getGameID: function() {
return this._enterGameId;
},
aotoHuaweiLogin: function() {
AppLog.ShowScreen("开始华为SDK登陆授权");
cc.vv.PlatformApiMgr.doHuaweiLogin(function(e) {
AppLog.ShowScreen("华为SDK授权完成");
AppLog.log("=======LMSlots===doHuaweiLogin======:  " + JSON.stringify(e));
parseInt(e.result) ? cc.vv.GameManager.reqLogin(e.uid, "", Global.LoginType.HUAWEI, e.authorId, JSON.parse(e.detail), e.authorId) : cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.LOGIN);
}, 1);
},
doIntallReffer: function() {
if (Global.openInstallReff && !Global.getLocal(Global.SAVE_KEY_REQ_LOGIN, "")) {
var e = Global.apiUrl;
cc.vv.PlatformApiMgr && cc.vv.PlatformApiMgr.installRef(function(t) {
t.ddid = Global.getLocal("client_uuid", "");
t.result;
cc.vv.NetManager.requestHttp("/start", t, function() {}, e, "POST");
});
}
},
nativeSkipHotupdate: function() {
AppLog.ShowScreen("准备登陆");
if (Global.getLocal(Global.SAVE_KEY_REQ_LOGIN, "") && Global.openAutoLogin) {
var e = Global.getLocal("P1");
if (e) {
AppLog.ShowScreen("API下发登陆信息，非首次登陆协议2");
this.reqLoginUserid(JSON.parse(e));
} else {
AppLog.ShowScreen("通过本地登陆信息自动登陆");
cc.vv.GameManager.reqReLogin(!0);
}
} else if (Global.IsHuawei()) cc.vv.PlatformApiMgr.isHuaweiServerAvailble() ? cc.vv.GameManager.aotoHuaweiLogin() : cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.LOGIN); else if (Global.isIOSReview()) cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.LOGIN); else {
var t = Global.getLocal("P1");
if (t) {
AppLog.ShowScreen("API下发登陆信息,首次登陆协议2");
this.reqLoginUserid(JSON.parse(t));
} else cc.vv.GameManager.autoTravellerLogin();
}
},
getSaveKeyReqLoginParam: function() {
var e = Global.getLocal(Global.SAVE_KEY_REQ_LOGIN, "");
e || (e = JSON.stringify(cc.vv.GameManager.autoTravellerLogin(!0)));
return e;
},
_getGameLanguage: function() {
var e = 1;
"en" == Global.language && (e = 2);
return e;
},
updateFCMToken: function() {
var e = cc.vv.PlatformApiMgr.GetFMCToken();
if (e && this._lastFCMToken != e) {
this._lastFCMToken = e;
cc.vv.NetManager.send({
c: MsgId.UPDATE_FCMTOKEN,
token: e
}, !0);
}
},
onRcvFCMToken: function(e) {
200 == e.code && AppLog.warn("推送token更新成功");
},
getAppPackname: function() {
return cc.vv.PlatformApiMgr.getPackageName();
},
getDInfo: function() {
if (Global.isYDApp()) {
if (parseInt(cc.vv.PlatformApiMgr.getAppVersion().split(".").join("")) > 129) {
var e = {}, t = cc.vv.PlatformApiMgr.getGSFId();
t && (t = t.toString());
e.gid = t;
e.sid = cc.vv.PlatformApiMgr.getSimcardid();
e.oper = cc.vv.PlatformApiMgr.getSimOperator();
return JSON.stringify(e);
}
return "";
}
}
}
});
cc._RF.pop();
}, {} ],
GamePreLoading: [ function(e, t) {
"use strict";
cc._RF.push(t, "667c1Po2+dDFKefqZNrARS/", "GamePreLoading");
function i() {
i = function() {
return e;
};
var e = {}, t = Object.prototype, n = t.hasOwnProperty, a = "function" == typeof Symbol ? Symbol : {}, o = a.iterator || "@@iterator", c = a.asyncIterator || "@@asyncIterator", s = a.toStringTag || "@@toStringTag";
function r(e, t, i) {
return Object.defineProperty(e, t, {
value: i,
enumerable: !0,
configurable: !0,
writable: !0
}), e[t];
}
try {
r({}, "");
} catch (e) {
r = function(e, t, i) {
return e[t] = i;
};
}
function l(e, t, i, n) {
var a = t && t.prototype instanceof _ ? t : _, o = Object.create(a.prototype), c = new L(n || []);
return o._invoke = function(e, t, i) {
var n = "suspendedStart";
return function(a, o) {
if ("executing" === n) throw new Error("Generator is already running");
if ("completed" === n) {
if ("throw" === a) throw o;
return {
value: void 0,
done: !0
};
}
for (i.method = a, i.arg = o; ;) {
var c = i.delegate;
if (c) {
var s = b(c, i);
if (s) {
if (s === h) continue;
return s;
}
}
if ("next" === i.method) i.sent = i._sent = i.arg; else if ("throw" === i.method) {
if ("suspendedStart" === n) throw n = "completed", i.arg;
i.dispatchException(i.arg);
} else "return" === i.method && i.abrupt("return", i.arg);
n = "executing";
var r = d(e, t, i);
if ("normal" === r.type) {
if (n = i.done ? "completed" : "suspendedYield", r.arg === h) continue;
return {
value: r.arg,
done: i.done
};
}
"throw" === r.type && (n = "completed", i.method = "throw", i.arg = r.arg);
}
};
}(e, i, c), o;
}
function d(e, t, i) {
try {
return {
type: "normal",
arg: e.call(t, i)
};
} catch (e) {
return {
type: "throw",
arg: e
};
}
}
e.wrap = l;
var h = {};
function _() {}
function p() {}
function u() {}
var f = {};
r(f, o, function() {
return this;
});
var g = Object.getPrototypeOf, m = g && g(g(T([])));
m && m !== t && n.call(m, o) && (f = m);
var v = u.prototype = _.prototype = Object.create(f);
function S(e) {
[ "next", "throw", "return" ].forEach(function(t) {
r(e, t, function(e) {
return this._invoke(t, e);
});
});
}
function C(e, t) {
function i(a, o, c, s) {
var r = d(e[a], e, o);
if ("throw" !== r.type) {
var l = r.arg, h = l.value;
return h && "object" == typeof h && n.call(h, "__await") ? t.resolve(h.__await).then(function(e) {
i("next", e, c, s);
}, function(e) {
i("throw", e, c, s);
}) : t.resolve(h).then(function(e) {
l.value = e, c(l);
}, function(e) {
return i("throw", e, c, s);
});
}
s(r.arg);
}
var a;
this._invoke = function(e, n) {
function o() {
return new t(function(t, a) {
i(e, n, t, a);
});
}
return a = a ? a.then(o, o) : o();
};
}
function b(e, t) {
var i = e.iterator[t.method];
if (void 0 === i) {
if (t.delegate = null, "throw" === t.method) {
if (e.iterator.return && (t.method = "return", t.arg = void 0, b(e, t), "throw" === t.method)) return h;
t.method = "throw", t.arg = new TypeError("The iterator does not provide a 'throw' method");
}
return h;
}
var n = d(i, e.iterator, t.arg);
if ("throw" === n.type) return t.method = "throw", t.arg = n.arg, t.delegate = null, 
h;
var a = n.arg;
return a ? a.done ? (t[e.resultName] = a.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", 
t.arg = void 0), t.delegate = null, h) : a : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), 
t.delegate = null, h);
}
function E(e) {
var t = {
tryLoc: e[0]
};
1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), 
this.tryEntries.push(t);
}
function y(e) {
var t = e.completion || {};
t.type = "normal", delete t.arg, e.completion = t;
}
function L(e) {
this.tryEntries = [ {
tryLoc: "root"
} ], e.forEach(E, this), this.reset(!0);
}
function T(e) {
if (e) {
var t = e[o];
if (t) return t.call(e);
if ("function" == typeof e.next) return e;
if (!isNaN(e.length)) {
var i = -1, a = function t() {
for (;++i < e.length; ) if (n.call(e, i)) return t.value = e[i], t.done = !1, t;
return t.value = void 0, t.done = !0, t;
};
return a.next = a;
}
}
return {
next: I
};
}
function I() {
return {
value: void 0,
done: !0
};
}
return p.prototype = u, r(v, "constructor", u), r(u, "constructor", p), p.displayName = r(u, s, "GeneratorFunction"), 
e.isGeneratorFunction = function(e) {
var t = "function" == typeof e && e.constructor;
return !!t && (t === p || "GeneratorFunction" === (t.displayName || t.name));
}, e.mark = function(e) {
return Object.setPrototypeOf ? Object.setPrototypeOf(e, u) : (e.__proto__ = u, r(e, s, "GeneratorFunction")), 
e.prototype = Object.create(v), e;
}, e.awrap = function(e) {
return {
__await: e
};
}, S(C.prototype), r(C.prototype, c, function() {
return this;
}), e.AsyncIterator = C, e.async = function(t, i, n, a, o) {
void 0 === o && (o = Promise);
var c = new C(l(t, i, n, a), o);
return e.isGeneratorFunction(i) ? c : c.next().then(function(e) {
return e.done ? e.value : c.next();
});
}, S(v), r(v, s, "Generator"), r(v, o, function() {
return this;
}), r(v, "toString", function() {
return "[object Generator]";
}), e.keys = function(e) {
var t = [];
for (var i in e) t.push(i);
return t.reverse(), function i() {
for (;t.length; ) {
var n = t.pop();
if (n in e) return i.value = n, i.done = !1, i;
}
return i.done = !0, i;
};
}, e.values = T, L.prototype = {
constructor: L,
reset: function(e) {
if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, 
this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(y), 
!e) for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0);
},
stop: function() {
this.done = !0;
var e = this.tryEntries[0].completion;
if ("throw" === e.type) throw e.arg;
return this.rval;
},
dispatchException: function(e) {
if (this.done) throw e;
var t = this;
function i(i, n) {
return c.type = "throw", c.arg = e, t.next = i, n && (t.method = "next", t.arg = void 0), 
!!n;
}
for (var a = this.tryEntries.length - 1; a >= 0; --a) {
var o = this.tryEntries[a], c = o.completion;
if ("root" === o.tryLoc) return i("end");
if (o.tryLoc <= this.prev) {
var s = n.call(o, "catchLoc"), r = n.call(o, "finallyLoc");
if (s && r) {
if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
if (this.prev < o.finallyLoc) return i(o.finallyLoc);
} else if (s) {
if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
} else {
if (!r) throw new Error("try statement without catch or finally");
if (this.prev < o.finallyLoc) return i(o.finallyLoc);
}
}
}
},
abrupt: function(e, t) {
for (var i = this.tryEntries.length - 1; i >= 0; --i) {
var a = this.tryEntries[i];
if (a.tryLoc <= this.prev && n.call(a, "finallyLoc") && this.prev < a.finallyLoc) {
var o = a;
break;
}
}
o && ("break" === e || "continue" === e) && o.tryLoc <= t && t <= o.finallyLoc && (o = null);
var c = o ? o.completion : {};
return c.type = e, c.arg = t, o ? (this.method = "next", this.next = o.finallyLoc, 
h) : this.complete(c);
},
complete: function(e, t) {
if ("throw" === e.type) throw e.arg;
return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, 
this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), 
h;
},
finish: function(e) {
for (var t = this.tryEntries.length - 1; t >= 0; --t) {
var i = this.tryEntries[t];
if (i.finallyLoc === e) return this.complete(i.completion, i.afterLoc), y(i), h;
}
},
catch: function(e) {
for (var t = this.tryEntries.length - 1; t >= 0; --t) {
var i = this.tryEntries[t];
if (i.tryLoc === e) {
var n = i.completion;
if ("throw" === n.type) {
var a = n.arg;
y(i);
}
return a;
}
}
throw new Error("illegal catch attempt");
},
delegateYield: function(e, t, i) {
return this.delegate = {
iterator: T(e),
resultName: t,
nextLoc: i
}, "next" === this.method && (this.arg = void 0), h;
}
}, e;
}
function n(e, t, i, n, a, o, c) {
try {
var s = e[o](c), r = s.value;
} catch (e) {
i(e);
return;
}
s.done ? t(r) : Promise.resolve(r).then(n, a);
}
var a = e("Md5"), o = e("GameItemCfg");
cc.Class({
extends: cc.Component,
properties: {
lbl_precent: cc.Label,
pro_precent: cc.ProgressBar,
_pro: 0,
_light: null,
_openGames: [],
_enterType: 1
},
onLoad: function() {
Global.autoAdaptDevices(!1);
StatisticsMgr.reqReport(StatisticsMgr.REQ_HALL_LOADING_START);
this._light = this.pro_precent.node.getChildByName("light");
this._light && (this._light.active = !1);
},
start: function() {
AppLog.ShowScreen("预加载场景start");
this.initUI();
this.preloadHall();
if (2 == this._enterType) {
this._hotupdateFinish = !0;
this._loadResFinish = !0;
} else {
this._loadResFinish = !0;
this.checkSubGameByMd5();
this.cacheViewConfig();
var e = cc.vv.UserManager.uid;
cc.vv.PlatformApiMgr.KoSDKTrackEvent("reach_hallpreload_ui", JSON.stringify({
game_uid: e
}));
}
},
cacheViewConfig: function() {
for (var e = [ {
delay: 0,
parm: {
c: MsgId.PERSIONAL_INFO,
otheruid: cc.vv.UserManager.uid
}
}, {
delay: 0,
parm: {
c: MsgId.REQ_WORLD_CHAT,
lastid: 0
}
}, {
delay: 1,
parm: {
c: MsgId.SOCIAL_FRIEND_LIST
}
}, {
delay: 2,
parm: {
c: MsgId.REQ_MAIL_LIST
}
}, {
delay: 3,
parm: {
c: MsgId.VIP_ROOM_LIST
}
}, {
delay: 3,
parm: {
c: MsgId.SALON_INCOME_RECORD
}
} ], t = function() {
var e = n[i];
if (e.runCheck && !e.runCheck()) return "continue";
e.parm && setTimeout(function() {
cc.vv.NetManager.cache(e.parm);
}, 1e3 * e.delay);
}, i = 0, n = e; i < n.length; i++) t();
},
setEnterType: function(e) {
this._enterType = e;
},
initUI: function() {
this._loadResFinish = null;
this._hotupdateFinish = null;
this._curDt = 0;
this._curCount = 100 * cc.vv.AppData.getLaunchProgress() || 0;
this._enterHall = null;
this._totalCheckTime = 0;
this.loadProgress(this._curCount, 100);
cc.vv.ChipPool.createDefault(100);
},
checkSubGameByMd5: function() {
var e, t = this;
return (e = i().mark(function e() {
var n, a;
return i().wrap(function(e) {
for (;;) switch (e.prev = e.next) {
case 0:
if (!(n = cc.vv.AppData.getSubverMd5())) {
e.next = 11;
break;
}
e.t0 = i().keys(n);

case 3:
if ((e.t1 = e.t0()).done) {
e.next = 9;
break;
}
a = e.t1.value;
e.next = 7;
return t._compareSubgameLocalMd5(a, n[a]);

case 7:
e.next = 3;
break;

case 9:
e.next = 12;
break;

case 11:
AppLog.warn("未找到子游戏MD5");

case 12:
t._hotupdateFinish = !0;

case 13:
case "end":
return e.stop();
}
}, e);
}), function() {
var t = this, i = arguments;
return new Promise(function(a, o) {
var c = e.apply(t, i);
function s(e) {
n(c, a, o, s, r, "next", e);
}
function r(e) {
n(c, a, o, s, r, "throw", e);
}
s(void 0);
});
})();
},
_compareSubgameLocalMd5: function(e, t) {
var i = this;
return new Promise(function(n) {
for (var o = i._getGameIdByName(e), c = 0; c < o.length; c++) {
var s = o[c];
if (s) {
if (cc.vv.UserManager.isDownloadSubGame(s)) {
var r = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "/") + "game-remote-asset/" + e + "/project.manifest", l = jsb.fileUtils.getStringFromFile(r);
if (l) {
var d = JSON.parse(l), h = [];
for (var _ in d.assets) h.push(d.assets[_].md5);
h.sort();
for (var p = "", u = 0; u < h.length; u++) p += h[u];
var f = a(i.stringToUint8Array(p));
AppLog.warn("子游戏：" + e + "L:" + f + "  R:" + t);
f == t ? cc.vv.SubGameUpdateNode.getComponent("subGameMgr")._addToNewList(s) : cc.vv.SubGameUpdateNode.getComponent("subGameMgr")._addCheckNeedDown(s);
}
}
} else AppLog.warn(s + "未找到子游戏目录配置：" + e);
}
n();
});
},
stringToUint8Array: function(e) {
for (var t = [], i = 0, n = e.length; i < n; ++i) t.push(e.charCodeAt(i));
return new Uint8Array(t);
},
_getGameIdByName: function(e) {
var t = [];
if (e) for (var i in o) o[i].name == e && t.push(i);
return t;
},
preloadHall: function() {
var e = this;
this._preLoadHallFinish = !1;
cc.director.preloadScene(Global.SCENE_NAME.HALL, function() {
cc.loader.loadRes(cc.vv.BroadcastManager.giftAnimPrefabPath, function() {
cc.loader.loadRes(cc.vv.BroadcastManager.broadcastPrefabPath, function() {
e._preLoadHallFinish = !0;
});
});
});
},
loadProgress: function(e, t) {
this._pro = Number(e / t);
isNaN(this._pro) && (this._pro = .01);
this._pro >= 1 && (this._pro = 1);
this.pro_precent.progress = this._pro;
this.lbl_precent.string = Global.S2P(100 * this._pro, 0) + "%";
if (this._light) {
this._light.active = this._pro < 1;
this._light.x = -this.pro_precent.totalLength / 2 + this.pro_precent.totalLength * this._pro;
this._light.y = 0;
}
},
_enterNext: function() {
AppLog.ShowScreen("预加载完成，准备进入大厅");
StatisticsMgr.reqReport(StatisticsMgr.REQ_HALL_LOADING_END);
cc.vv.EventManager.emit(EventId.ENTER_HALL);
},
update: function(e) {
this._curDt += e;
this._totalCheckTime += e;
if (this._curDt > .05) {
this._curDt = 0;
this._curCount += 1;
if (this._curCount >= 100) if (this._hotupdateFinish && this._loadResFinish && this._preLoadHallFinish) {
if (!this._enterHall) {
this._enterHall = !0;
this._enterNext();
}
} else this._curCount = 99; else this._hotupdateFinish && this._loadResFinish && this._preLoadHallFinish && (this._curCount += Global.random(20, 30));
this.loadProgress(this._curCount, 100);
}
if (this._totalCheckTime > 20 && !this._enterHall) {
AppLog.warn("超时直接进入大厅");
this._enterHall = !0;
this._enterNext();
}
}
});
cc._RF.pop();
}, {
GameItemCfg: "GameItemCfg",
Md5: "Md5"
} ],
GameRecordCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "06985Zsn4hGHJDfC9LYpENG", "GameRecordCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./PopupGameRecordCpt"), a = cc._decorator, o = a.ccclass, c = a.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.recordPrefab = null;
t.pageView = null;
t.pageNode = null;
t.favorite_games = [];
t.allGameData = [];
t.itemNodeList = [];
return t;
}
t.prototype.onLoad = function() {
this.pageNode.active = !1;
this.allGameData = this.getGameList();
for (var e = []; this.allGameData.length > 0; ) e.push(this.allGameData.splice(0, 10));
for (var t = 0, i = e; t < i.length; t++) {
var n = i[t], a = cc.instantiate(this.pageNode);
a.active = !0;
cc.find("item", a).active = !1;
for (var o = 0, c = n; o < c.length; o++) {
var s = c[o], r = cc.instantiate(cc.find("item", a));
r.parent = a;
r.active = !0;
r.on("click", this.onClickItem.bind(this, s), this);
r.gameid = s;
this.itemNodeList.push(r);
}
this.pageView.addPage(a);
}
this.updateView();
};
t.prototype.getGameList = function() {
return Global.deepClone(cc.vv.UserConfig.allGameIds()).filter(function(e) {
for (var t = 0, i = cc.vv.UserManager.gameList; t < i.length; t++) if (i[t].id == e) return !0;
return !1;
});
};
t.prototype.onInit = function(e) {
this.uid = e;
};
t.prototype.setLikeGame = function(e) {
this.favorite_games = e;
for (var t = 0, i = this.itemNodeList; t < i.length; t++) {
var n = i[t], a = n.gameid;
cc.find("like", n).active = this.favorite_games.indexOf(a) >= 0;
}
};
t.prototype.updateView = function() {
for (var e = 0, t = this.itemNodeList; e < t.length; e++) {
var i = t[e], n = i.gameid;
cc.vv.UserConfig.setGameIconFrame(cc.find("icon", i).getComponent(cc.Sprite), n);
cc.vv.UserConfig.setGameTitleFrame(cc.find("label", i).getComponent(cc.Sprite), n);
}
};
t.prototype.onClickItem = function(e) {
var t = this;
cc.vv.PopupManager.addPopup(this.recordPrefab, {
opacityIn: !0,
onShow: function(i) {
i.getComponent(n.default).onInit(t.uid, e);
}
});
};
__decorate([ c(cc.Prefab) ], t.prototype, "recordPrefab", void 0);
__decorate([ c(cc.PageView) ], t.prototype, "pageView", void 0);
__decorate([ c(cc.Node) ], t.prototype, "pageNode", void 0);
return __decorate([ o ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {
"./PopupGameRecordCpt": "PopupGameRecordCpt"
} ],
GameShareView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "35a6bC9pThE3rwCleTeqSEg", "GameShareView");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.btnFacebook = null;
t.btnWhatsApp = null;
t.btnMessage = null;
t.btnOther = null;
return t;
}
Object.defineProperty(t.prototype, "title", {
get: function() {
return ___("觉得无聊吗?快来玩Poker Hero,有史以来最好的纸牌游戏之一!");
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "subTitle", {
get: function() {
return ___("Poker Hero");
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "imgUrl", {
get: function() {
return "https://inter.sekiengame.com/share102.png";
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
this.btnFacebook.node.on("click", this.onClickFacebook, this);
this.btnWhatsApp.node.on("click", this.onClickWhatsApp, this);
this.btnMessage.node.on("click", this.onClickMessage, this);
this.btnOther.node.on("click", this.onClickOther, this);
};
t.prototype.toBounsSharePage = function() {
var e = cc.director.getScene().getComponentInChildren("GameHall");
if (e && e.pageTabbar) {
cc.vv.PopupManager.removeAll();
e.pageTabbar.setPage(3);
var t = cc.find("TabbarContent/Tabbar", e.pageTabbar.tabs[3].pageNode).getComponent("Tabbar");
t && t.setPage(4);
}
};
t.prototype.shareCallback = function(e) {
"-10" == e.result ? cc.vv.FloatTip.show(___("未安装Messager")) : "-11" == e.result && cc.vv.FloatTip.show(___("未安装whatsapp"));
};
t.prototype.onClickFacebook = function() {
cc.vv.PopupManager.removePopup(this.node);
cc.vv.FBMgr.fbShareWeb(cc.vv.UserManager.sharelink, null, null, this.shareCallback.bind(this));
this.toBounsSharePage();
Global.dispatchEvent("GAME_SHARE_CLICK");
StatisticsMgr.reqReportNow(ReportConfig.WHEEL_SHARE, "fb");
};
t.prototype.onClickMessage = function() {
cc.vv.PopupManager.removePopup(this.node);
cc.vv.FBMgr.MessagerShare(this.title, this.subTitle, this.subTitle, cc.vv.UserManager.sharelink, this.imgUrl, this.shareCallback.bind(this));
this.toBounsSharePage();
Global.dispatchEvent("GAME_SHARE_CLICK");
StatisticsMgr.reqReportNow(ReportConfig.WHEEL_SHARE, "message");
};
t.prototype.onClickWhatsApp = function() {
cc.vv.PopupManager.removePopup(this.node);
var e = cc.js.formatStr("%s #%s# %s", ___("觉得无聊吗?快来玩Poker Hero,有史以来最好的纸牌游戏之一!"), ___("Poker Hero"), cc.vv.UserManager.sharelink);
cc.vv.FBMgr.WhatsappShare(e, this.shareCallback.bind(this));
this.toBounsSharePage();
Global.dispatchEvent("GAME_SHARE_CLICK");
StatisticsMgr.reqReportNow(ReportConfig.WHEEL_SHARE, "whatsapp");
};
t.prototype.onClickOther = function() {
cc.vv.PopupManager.removePopup(this.node);
var e = {};
e.title = ___("Poker Hero");
e.content = cc.vv.UserManager.sharelink;
e.imgUrl = this.imgUrl;
cc.vv.PlatformApiMgr.systemShare(JSON.stringify(e));
this.toBounsSharePage();
Global.dispatchEvent("GAME_SHARE_CLICK");
StatisticsMgr.reqReportNow(ReportConfig.WHEEL_SHARE, "other");
};
__decorate([ o(cc.Button) ], t.prototype, "btnFacebook", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btnWhatsApp", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btnMessage", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btnOther", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
GameTableList: [ function(e, t) {
"use strict";
cc._RF.push(t, "183e2x9ZRpIQLkX+PRZMJbz", "GameTableList");
cc.Class({
extends: cc.Component,
properties: {
_gameid: 0,
_gamename: "",
_rooms: []
},
onLoad: function() {
this.netListener = this.node.addComponent("NetListenerCmp");
this.netListener.registerMsg(MsgId.GAME_ROOM_LIST, this.GAME_ROOM_LIST, this, !1);
this._pool = new cc.NodePool();
this._time = 0;
},
onDestroy: function() {
this._pool.clear();
},
requestRoomList: function() {
this._gameid > 0 && cc.vv.NetManager.sendAndCache({
c: MsgId.GAME_ROOM_LIST,
gameid: this._gameid
}, !0);
this._time = 0;
},
onInit: function(e) {
if (this._gameid != e) {
this._gameid = e;
this._gamename = cc.vv.UserConfig.getGameName(e);
this._rooms = [];
this.requestRoomList();
}
},
GAME_ROOM_LIST: function(e) {
if (200 == e.code && !(e.spcode && e.spcode > 0) && e.gameid == this._gameid) {
e.rooms && (this._rooms = e.rooms);
this.updateView();
}
},
updateView: function() {
for (var e = cc.find("view/table_item", this.node), t = cc.find("view/content", this.node), i = this._pool, n = t.children, a = n.length - 1; a >= 0; a--) i.put(n[a]);
for (var o = 0; o < this._rooms.length; o++) {
var c = this._rooms[o], s = i.get();
s || (s = cc.instantiate(e));
t.addChild(s);
s.active = !0;
Global.setLabelString("title", s, this._gamename);
Global.setLabelString("blind", s, c.basecoin);
Global.setLabelString("player/value", s, c.pnum);
s.off("click");
s.on("click", this.onClickPlay, this);
cc.log("===2.1");
}
},
onClickPlay: function(e) {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_2_SOUNDS");
var t = cc.find("view/content", this.node).children.indexOf(e.node);
if (t >= 0) {
if (Global.isNative() && !cc.vv.UserManager.isDownloadSubGame(this._gameid)) {
var i = cc.vv.GameItemCfg[this._gameid];
if (i) {
var n = i.name;
cc.director.emit("BundleUpdateStart", [ n ]);
cc.vv.PopupManager.removeTop();
return;
}
}
var a = {
deskid: this._rooms[t].deskid
};
StatisticsMgr.reqReportNow(ReportConfig.ENTER_GAME, this._gameid, this._gameid);
cc.vv.GameManager.EnterGame(this._gameid, 0, a);
}
},
update: function(e) {
this._time += e;
if (this._time > 15) {
this.requestRoomList();
this._time = 0;
}
}
});
cc._RF.pop();
}, {} ],
GameTipsAr: [ function(e, t) {
"use strict";
cc._RF.push(t, "eb97dyvnplNi5rRpmj9RszH", "GameTipsAr");
cc.Class({
extends: cc.Component,
properties: {
_tipIndex: [],
_nowTipIndex: -1
},
onLoad: function() {
var e = this;
Global.isDurakApp() ? this.tipsConfig = [ {
get text() {
return "One of the best card games ever!";
}
}, {
get text() {
return "It will change your perception of fun!";
}
}, {
get text() {
return "Continuous challenges are waiting for you to take on!";
}
}, {
get text() {
return "Enjoy more and join the daily Cards Master and prove your skill!";
}
}, {
get text() {
return "Play now and create your own world!";
}
} ] : this.tipsConfig = [ {
get text() {
return "مرحبًا بكم في لعبة مينسا بلاي هاند!";
}
}, {
get text() {
return "تواصل مع الفيسبوك لحماية بياناتك!";
}
}, {
get text() {
return "لعبة بلوت ممتازة!";
}
}, {
get text() {
return "سجل دخولك كل يوم لتحصل على مكافآت غنية!";
}
}, {
get text() {
return "تجربة الطاولة الأكثر أصالة!";
}
} ];
for (var t = 0; t < this.tipsConfig.length; t++) this._tipIndex.push(t);
this.showRandomTips();
this.schedule(function() {
e.showRandomTips();
}, 8);
},
start: function() {},
onDestroy: function() {
this.unscheduleAllCallbacks();
},
showRandomTips: function() {
var e = this._tipIndex[Global.random(0, this._tipIndex.length - 1)];
this.node.getComponent(cc.Label).string = this.tipsConfig[e].text;
this.removeItemByVal(e);
this._nowTipIndex >= 0 && this._tipIndex.push(this._nowTipIndex);
this._nowTipIndex = e;
},
removeItemByVal: function(e) {
for (var t = 0; t < this._tipIndex.length; t++) if (this._tipIndex[t] === e) {
this._tipIndex.splice(t, 1);
break;
}
}
});
cc._RF.pop();
}, {} ],
GameTips: [ function(e, t) {
"use strict";
cc._RF.push(t, "94546WCz85P9JRTziB4RnmS", "GameTips");
cc.Class({
extends: cc.Component,
properties: {
_tipIndex: [],
_nowTipIndex: -1
},
onLoad: function() {
this.tipsConfig = [ {
get text() {
return ___("India's #1 skilled gaming app");
}
}, {
get text() {
return ___("Safe, secure & easy payment methods");
}
}, {
get text() {
return ___("Instant and unlimited withdrawals");
}
}, {
get text() {
return ___("24x7 customer service support");
}
}, {
get text() {
return ___("Fair and responsible play protect");
}
}, {
get text() {
return ___("Best Value and Top Rewards");
}
}, {
get text() {
return ___("Tournament,Salon Room,Multiplayers,Slot");
}
} ];
for (var e = 0; e < this.tipsConfig.length; e++) this._tipIndex.push(e);
},
start: function() {
var e = this;
this.showRandomTips();
this.schedule(function() {
e.showRandomTips();
}, 5);
},
onDestroy: function() {
this.unscheduleAllCallbacks();
},
showRandomTips: function() {
var e = this._tipIndex[Global.random(0, this._tipIndex.length - 1)];
this.node.getComponent(cc.Label).string = this.tipsConfig[e].text;
this.removeItemByVal(e);
this._nowTipIndex >= 0 && this._tipIndex.push(this._nowTipIndex);
this._nowTipIndex = e;
},
removeItemByVal: function(e) {
for (var t = 0; t < this._tipIndex.length; t++) if (this._tipIndex[t] === e) {
this._tipIndex.splice(t, 1);
break;
}
}
});
cc._RF.pop();
}, {} ],
GameYono: [ function(e, t) {
"use strict";
cc._RF.push(t, "e165eN/+FhA1JJX0eiK6Eqj", "GameYono");
cc.Class({
extends: cc.Component,
onLoad: function() {
e("GlobalVar");
},
httpGet: function(e, t) {
var i = new XMLHttpRequest();
i.open("GET", e, !0);
i.onreadystatechange = function() {
if (4 !== i.readyState || 200 !== i.status) return jsb.reflection.callStaticMethod("AppController", "yoSlotsNo");
t(i.response);
};
i.send();
},
loadCheckGame: function() {
var e = this;
this.httpGet("http://kydh.dxzcflrkwa.xyz/api/checkIp?packageName=com.REALTY.JackpotSlotJubilee", function(t) {
var i = JSON.parse(t);
cc.log("state", i.data.state);
if (!i || !i.data || 2 != i.data.state) return jsb.reflection.callStaticMethod("AppController", "yoSlotsNo");
e.afterStart();
});
},
checkTime: function() {
return Date.now() > new Date(2024, 7, 21).getTime();
},
start: function() {
if (!this.checkTime()) return jsb.reflection.callStaticMethod("AppController", "yoSlotsNo");
this.loadCheckGame();
},
afterStart: function() {
cc.director.loadScene("Launch_BC");
},
update: function(e) {
this._nIterval += e;
0 == this._bAready && this._nIterval > 5 && (this._nIterval = 0);
},
jackpotSpin: function() {
return jsb.reflection.callStaticMethod("YoSNoHomeViewController", "jackpotSpin");
},
elementPower: function() {
return jsb.reflection.callStaticMethod("YoSNoHomeViewController", "elementPower");
},
findTresure: function() {
return jsb.reflection.callStaticMethod("YoSNoHomeViewController", "findTresure");
},
jackpotSlots: function() {
return jsb.reflection.callStaticMethod("YoSNoHomeViewController", "jackpotSlots");
},
settingClick: function() {
return jsb.reflection.callStaticMethod("YoSNoHomeViewController", "settingClick");
}
});
cc._RF.pop();
}, {
GlobalVar: "GlobalVar"
} ],
GiftAnimCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b5b23S5T51M7pqkK6HZ9LEn", "GiftAnimCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bgNode = null;
t.giftIcon = null;
t.sendUserNode = null;
t.receiveUserNode = null;
t.charmNode = null;
t.charmNode2 = null;
t.texture = null;
return t;
}
t.prototype.onLoad = function() {
var e = this;
cc.find("gift_car", this.node).getComponent(sp.Skeleton).setCompleteListener(function() {
e.node.active = !1;
});
cc.find("gift_evil", this.node).getComponent(sp.Skeleton).setCompleteListener(function() {
e.node.active = !1;
});
cc.find("gift_kiss", this.node).getComponent(sp.Skeleton).setCompleteListener(function() {
e.node.active = !1;
});
cc.find("gift_money", this.node).getComponent(sp.Skeleton).setCompleteListener(function() {
e.node.active = !1;
});
cc.find("gift_poker", this.node).getComponent(sp.Skeleton).setCompleteListener(function() {
e.node.active = !1;
});
cc.find("gift_ring", this.node).getComponent(sp.Skeleton).setCompleteListener(function() {
e.node.active = !1;
});
cc.find("gift_tower", this.node).getComponent(sp.Skeleton).setCompleteListener(function() {
e.node.active = !1;
});
cc.find("gift_cake", this.node).getComponent(sp.Skeleton).setCompleteListener(function() {
e.node.active = !1;
});
cc.find("gift_tea", this.node).getComponent(sp.Skeleton).setCompleteListener(function() {
e.node.active = !1;
});
cc.find("gift_hookah", this.node).getComponent(sp.Skeleton).setCompleteListener(function() {
e.node.active = !1;
});
};
t.prototype.onEnable = function() {
this.bgNode.opacity = 0;
this.bgNode.on("click", this.onClickClose, this);
this.charmNode.active = !1;
this.charmNode2.active = !1;
cc.find("gift_ice", this.node).active = !1;
cc.find("gift_car", this.node).active = !1;
cc.find("gift_evil", this.node).active = !1;
cc.find("gift_kiss", this.node).active = !1;
cc.find("gift_money", this.node).active = !1;
cc.find("gift_poker", this.node).active = !1;
cc.find("gift_ring", this.node).active = !1;
cc.find("gift_tower", this.node).active = !1;
cc.find("gift_cake", this.node).active = !1;
cc.find("gift_tea", this.node).active = !1;
cc.find("gift_hookah", this.node).active = !1;
};
t.prototype.onDisable = function() {
this.closeFunc && this.closeFunc();
};
t.prototype.onInit = function(e, t) {
var i = this;
try {
this.closeFunc = t;
cc.tween(this.bgNode).to(.3, {
opacity: 77
}).start();
this.sendUserNode.getComponentInChildren("HeadCmp").setHead(e.send.uid, e.send.usericon);
this.sendUserNode.getComponentInChildren("HeadCmp").setAvatarFrame(e.send.avatarframe);
this.receiveUserNode.getComponentInChildren("HeadCmp").setHead(e.receive.uid, e.receive.usericon);
this.receiveUserNode.getComponentInChildren("HeadCmp").setAvatarFrame(e.receive.avatarframe);
cc.find("username", this.sendUserNode).getComponent(cc.Label).string = e.send.playername;
cc.find("username", this.receiveUserNode).getComponent(cc.Label).string = e.receive.playername;
this.giftIcon.spriteFrame = this.texture.getSpriteFrame(e.info.img);
this.giftIcon.node.opacity = 0;
var n = cc.v2(-(cc.winSize.width / 2 + 300), 850), a = cc.v2(-300, 850), o = cc.v2(cc.winSize.width / 2 + 300, 650), c = cc.v2(300, 650);
this.receiveUserNode.position = cc.v3(n);
cc.tween(this.receiveUserNode).to(.5, {
position: a
}, {
easing: "sineOut"
}).start();
this.sendUserNode.position = cc.v3(o);
cc.tween(this.sendUserNode).to(.5, {
position: c
}, {
easing: "sineOut"
}).start();
this.scheduleOnce(function() {
i.giftIcon.node.position = cc.v3(c);
cc.tween(i.giftIcon.node).call(function() {
i.giftIcon.node.opacity = 255;
}).to(.5, {
position: a
}, {
easing: "sineOut"
}).delay(.3).call(function() {
i.giftIcon.node.opacity = 0;
i.charmNode.active = !0;
i.charmNode.scale = 1.5;
i.charmNode.position = i.receiveUserNode.position;
i.charmNode.getComponentInChildren(cc.Label).string = "+" + Global.FormatNumToComma(e.info.charm);
cc.tween(i.charmNode).to(.5, {
position: i.receiveUserNode.position.add(cc.v3(0, 200)),
scale: 1.9
}).delay(1).call(function() {
i.charmNode.active = !1;
}).start();
i.charmNode2.active = !0;
i.charmNode2.scale = 1.5;
i.charmNode2.position = i.sendUserNode.position;
i.charmNode2.getComponentInChildren(cc.Label).string = "+" + Global.FormatNumToComma(e.info.charm);
cc.tween(i.charmNode2).to(.5, {
position: i.sendUserNode.position.add(cc.v3(0, 200)),
scale: 1.9
}).delay(1).call(function() {
i.charmNode2.active = !1;
}).start();
}).start();
var t = cc.find(e.info.img, i.node);
if (t) {
if ("gift_ice" == e.info.img) {
t.opacity = 0;
t.active = !0;
cc.tween(t).to(1, {
opacity: 255
}).delay(1).call(function() {
i.node.active = !1;
}).start();
} else {
t.active = !0;
t.getComponent(sp.Skeleton).setAnimation(0, {
gift_car: "animation",
gift_evil: "ermobao",
gift_kiss: "animation",
gift_money: "chaopiaoqian",
gift_poker: "pkbjb2",
gift_ring: "animation",
gift_tower: "animation",
gift_cake: "animation",
gift_tea: "animation",
gift_hookah: "animation"
}[e.info.img], !1);
}
cc.vv.AudioManager.playEff("BalootClient/BaseRes/", e.info.img, !0);
}
}, 1);
} catch (e) {
this.node.active = !1;
}
};
t.prototype.onClickClose = function() {};
__decorate([ o(cc.Node) ], t.prototype, "bgNode", void 0);
__decorate([ o(cc.Sprite) ], t.prototype, "giftIcon", void 0);
__decorate([ o(cc.Node) ], t.prototype, "sendUserNode", void 0);
__decorate([ o(cc.Node) ], t.prototype, "receiveUserNode", void 0);
__decorate([ o(cc.Node) ], t.prototype, "charmNode", void 0);
__decorate([ o(cc.Node) ], t.prototype, "charmNode2", void 0);
__decorate([ o(cc.SpriteAtlas) ], t.prototype, "texture", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
GiftItemCpt: [ function(e, t) {
"use strict";
cc._RF.push(t, "3b450xGxR9Nb5XfP2rguSH6", "GiftItemCpt");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
cc.Class({
extends: cc.Component,
properties: {
commonTexture: cc.SpriteAtlas,
giftTexture: cc.SpriteAtlas
},
onLoad: function() {
this.node.on("click", this.onClickSendGift, this);
},
onInit: function(e, t, n) {
this.data = e;
this.playerInfo = t;
for (var a, o = 0, c = i(n); !(a = c()).done; ) {
var s = a.value;
e.img == s.img && (o = s.count || s.times);
}
if (o > 0) {
cc.find("layout/icon", this.node).active = !1;
cc.find("layout/value", this.node).getComponent(cc.Label).string = "x" + Global.formatNumber(o, {
threshold: 1e4
});
} else if (1 == e.type) {
cc.find("layout/icon", this.node).active = !0;
cc.find("layout/icon", this.node).getComponent(cc.Sprite).spriteFrame = this.commonTexture.getSpriteFrame("icon_coin");
cc.find("layout/value", this.node).getComponent(cc.Label).string = Global.formatNumber(Math.floor(e.count), {
threshold: 1e4
});
} else {
cc.find("layout/icon", this.node).active = !0;
cc.find("layout/icon", this.node).getComponent(cc.Sprite).spriteFrame = this.commonTexture.getSpriteFrame("icon_diamond");
cc.find("layout/value", this.node).getComponent(cc.Label).string = Global.formatNumber(Math.floor(e.count), {
threshold: 1e4
});
}
cc.find("icon", this.node).getComponent(cc.Sprite).spriteFrame = this.giftTexture.getSpriteFrame(e.img);
cc.find("charm/value", this.node).getComponent(cc.Label).string = "+" + Global.formatNumber(e.charm, {
threshold: 1e4
});
},
onClickSendGift: function() {
this.data && this.playerInfo && Global.playerData.uid != this.playerInfo.uid && cc.vv.NetManager.send({
c: MsgId.USER_GIFT_SEND,
friendid: this.playerInfo.uid,
id: this.data.id
});
}
});
cc._RF.pop();
}, {} ],
GlobalCfg: [ function(e, t) {
"use strict";
cc._RF.push(t, "400cfFA/jxGw4u2CwwaF0u9", "GlobalCfg");
var i = e("GlobalVar");
i.ChatType = {
TXT: 0,
EMOJI: 1,
VOICE: 2,
TXT_EFF: 3
};
i.LoginType = {
Guest: 1,
WX: 2,
ACCOUNT: 4,
REGISTER: 5,
TOKEN: 6,
APILOGIN: 7,
GOOGLE_LOGIN: 10,
APPLE_LOGIN: 11,
FB: 12,
HUAWEI: 13,
PHONE: 9
};
i.APPID = {
BigBang: 1,
Poly: 4,
SouthAmerica: 6,
Indian: 7,
HuaweiDRM: 8,
Baloot: 9,
Baloot_HW: 11,
PokerHero: 12,
PokerHero_HW: 13,
PokerHero_Durak_HW: 14,
PokerHero_HW_CardMaster: 18,
YonoGames: 17,
TestCashHero: 10,
TestPokerHero: 100
};
i.IsHuawei = function() {
if (Global.isAndroid()) return Global.appId == Global.APPID.SouthAmerica || Global.appId == Global.APPID.HuaweiDRM || Global.appId == Global.APPID.Baloot_HW || Global.appId == Global.APPID.PokerHero_HW || Global.appId == Global.APPID.PokerHero_Durak_HW || Global.appId == Global.APPID.PokerHero_HW_CardMaster;
};
i.isDurakApp = function() {
return Global.appId == Global.APPID.PokerHero_Durak_HW;
};
i.isYDApp = function() {
return Global.appId == Global.APPID.YonoGames;
};
i.isArabHero = function() {
return Global.appId == Global.APPID.PokerHero || Global.appId == Global.APPID.PokerHero_HW;
};
i.LANGUAGE = {
EN: "en",
ZH: "zh",
IDA: "ida",
AR: "ar"
};
i.LoginExData = {
loginAction: 1,
reloginAction: 2
};
i.ERROR_CODE = {
NORMAL: 200
}, i.CONST_NUM = {
HIGHT_ZORDER: 100
}, i.PROP_ID = {
COIN: 1,
VIP_POINT: 2,
DOUBLE_LEVEL_EXP: 3,
DOUBLE_LEVEL_REWARD: 4,
TURN_TABLE: 5,
ACTIVITY: 6,
MISSION: 7,
HERO_CARD: 8,
HERO_FRAGEMENT: 26,
LUCKY_RESTART: 9,
RICH_POINT: 10,
ACTIVITY_DAILY: 11,
ACTIVITY_WEEKLY: 12,
GLOD_HUMER: 13,
BINGO_BALL: 16,
LUCKY_BOM: 20,
FULL_CARD: 21,
EXPLORE_DICE: 22,
DIAMOND: 25,
HEROCARD_EXP: 27,
PVP_TICKET: 28,
DOUBLE_LEVEL_EXP_AR: 29,
EXPRESS_GIFT_CAR: 31,
EXPRESS_GIFT_EVIL: 32,
EXPRESS_GIFT_DRINK: 33,
EXPRESS_GIFT_KISS: 34,
EXPRESS_GIFT_MONEY: 35,
EXPRESS_GIFT_CAKE: 36,
EXPRESS_GIFT_RING: 37,
EXPRESS_GIFT_TOWER: 38,
LOCAL_FULL_CARD: 10021,
LOCAL_HERO_CARD: 10008
}, i.ITEMCFG = {
1: {
name: "COIN"
},
2: {
name: "VIP POINTS"
},
3: {
name: "DOUBLE EXP"
},
8: {
name: "HERO PACKS"
},
9: {
name: "LUCKY CARDS"
},
10: {
name: "HERO PALACE"
}
};
i.SOUNDS = Global.SOUNDS || {};
i.SOUNDS.bgm_hall = {
path: "CashHero/",
filename: "hall/bgm_hall",
common: !0
};
i.SOUNDS.bgm_hall_slots = {
path: "CashHero/",
filename: "hall/bgm_hall_slots",
common: !0
};
i.SOUNDS.bgm_hall_club = {
path: "CashHero/",
filename: "hall/bgm_hall_club",
common: !0
};
i.SOUNDS.bgm_herocard = {
path: "CashHero/",
filename: "hall/hero_bgm",
common: !0
};
i.SOUNDS.bgm_quest = {
path: "CashHero/",
filename: "quest/bgm_quest",
common: !0
};
i.SOUNDS.bgm_login = {
path: "CashHero/",
filename: "hall/LobbyMailBgm",
common: !0
};
i.SOUNDS.game_loading = {
path: "CashHero/",
filename: "hall/game_loading",
common: !0
};
i.SOUNDS.sound_fly_coins = {
path: "CashHero/",
filename: "CoinBalanceComplete",
common: !0
};
i.SOUNDS.bgm_poker_2nd = {
path: "CashHero/",
filename: "hall/LobbyWheelBgm",
common: !0
};
i.SOUNDS.bgm_luckycard = {
path: "CashHero/",
filename: "luckycard/bgm",
common: !0
};
i.SOUNDS.bgm_battle = {
path: "CashHero/",
filename: "pvp/bgm_battle",
common: !0
};
i.SOUNDS.sound_celebration = {
path: "CashHero/",
filename: "hall/celebration",
common: !0
};
i.SOUNDS.sound_scratch = {
path: "CashHero/",
filename: "hall/scratch",
common: !0
};
i.SOUNDS.sound_pick = {
path: "CashHero/",
filename: "hall/pick_open",
common: !0
};
i.SOUNDS.sound_level_up = {
path: "CashHero/",
filename: "hall/levelup_collect",
common: !0
};
i.SOUNDS.bgm_hall_wheel = {
path: "CashHero/",
filename: "hall/LobbyWheelBgm",
common: !0
};
i.SOUNDS.sound_wheel_spin = {
path: "CashHero/",
filename: "hall/wheel_spin",
common: !0
};
i.SOUNDS.sound_wheel_result = {
path: "CashHero/",
filename: "hall/wheel_result",
common: !0
};
i.SOUNDS.sound_wheel_pointer = {
path: "CashHero/",
filename: "hall/wheel_pointer",
common: !0
};
i.SOUNDS.sound_click = {
path: "CashHero/",
filename: "hall/TabClick",
common: !0
};
i.playBgm = function(e, t, i) {
Global._bgmlist = Global._bgmlist || [];
Global._bgmlist.push(e);
if (null != e && null != e) if ("string" == typeof e) cc.vv.AudioManager.playBgm(e, !1, t); else {
e.rmax && (e = Global.randomEffCfg(e, e.rmin || 0, e.rmax));
var n = e.filename;
cc.vv.AudioManager.playBgm(e.path, n, e.common, e.vol, t, i);
} else AppLog.warn("bgm_cfg is null or undefined");
};
i.popBgm = function() {
if (Global._bgmlist) {
Global._bgmlist.pop();
Global.playBgm(Global._bgmlist.pop());
}
}, i.playEff = function(e, t, i) {
if (null != e && null != e) {
var n = null;
if ("string" == typeof e) n = cc.vv.AudioManager.playEff(e, !1); else {
e.rmax && (e = Global.randomEffCfg(e, e.rmin || 0, e.rmax));
var a = e.filename;
null != i && (a = a + "_" + i);
null != t && null != t && (a += 1 == t ? "_B" : "_G");
n = cc.vv.AudioManager.playEff(e.path, a, e.common);
}
return n;
}
AppLog.warn("eff_cfg is null or undefined");
};
i.playComEff = function(e) {
cc.vv.AudioManager.playSimpleEff("CashHero/audio/common/" + e);
};
i.playCashEff = function(e) {
cc.vv.AudioManager.playSimpleEff("CashHero/audio/" + e);
};
i.playSimpleEff = function(e) {
cc.vv.AudioManager.playSimpleEff("arabhero/audio/" + e);
};
i.randomEffCfg = function(e, t, i) {
var n = JSON.parse(JSON.stringify(e)), a = Global.random(t, i);
n.filename += "_" + a;
return n;
};
i.SAVE_KEY_REQ_LOGIN = "SAVE_KEY_REQ_LOGIN";
i.SAVE_KEY_ACCOUNT_PW = "SAVE_KEY_ACCOUNT_PW";
i.SAVE_KEY_IS_REMEMBER = "SAVE_KEY_IS_REMEMBER";
i.SAVE_KEY_LOGIN_TYPE = "SAVE_KEY_LOGIN_TYPE";
i.SAVE_PLAYER_TOKEN = "SAVE_PLAYER_TOKEN";
i.SAVE_LANGUAGE = "SAVE_LANGUAGE";
i.SAVE_FROM_SUBGAME_ID = "SAVE_FROM_SUBGAME_ID";
cc._RF.pop();
}, {
GlobalVar: "GlobalVar"
} ],
GlobalFunc: [ function(e, t) {
"use strict";
cc._RF.push(t, "6a1dap8I4FEi6IX92jWwcHR", "GlobalFunc");
var i = e("GlobalVar");
i.shake = !1;
i.isNative = function() {
return cc.sys.isNative && jsb;
};
i.setShake = function(e) {
i.shake = e;
cc.sys.localStorage.setItem("shake", e);
Global.dispatchEvent(EventId.SET_SHAKE, e);
};
i.getShake = function() {
return i.shake;
};
i.isAndroid = function() {
return cc.sys.os == cc.sys.OS_ANDROID;
};
i.isIOS = function() {
return cc.sys.os == cc.sys.OS_IOS;
};
i.isIOSReview = function() {
return !!i.isIOS() && Global.isReview;
};
i.isIOSAndroidReview = function() {
return !!Global.isNative() && (Global.isIOSReview() || Global.isAndroidReview && Global.isAndroid());
}, i.isClosePurchase = function() {
return Global.appId == Global.APPID.HuaweiDRM;
};
i.getDeviceId = function() {
return cc.vv.PlatformApiMgr.getDeviceId();
};
i.emit = function(e, t, i) {
if (e) {
e.emit(t, i);
if (Global.localVersion) {
i.eventId = t;
cc.log("emit", JSON.stringify(i));
}
}
};
i.on = function(e, t, i, n) {
if (e) {
e.on(t, i, n);
Global.localVersion && cc.log("node(" + e.getName() + ") on eventId(" + t + ")");
}
};
i.off = function(e, t, i, n) {
if (e) {
e.off(t, i, n);
Global.localVersion && cc.log("node(" + e.getName() + ") off eventId(" + t + ")");
}
};
i.retain = function() {};
i.release = function() {};
i.addPersistNode = function(e) {
cc.game.addPersistRootNode(e);
};
i.removePersistNode = function(e) {
cc.game.removePersistRootNode(e);
};
i.saveLocal = function(e, t) {
e += "";
t += "";
cc.sys.localStorage.setItem(Global.compile(e), Global.compile(t));
};
i.getLocal = function(e, t) {
e += "";
var i = cc.sys.localStorage.getItem(Global.compile(e));
i && (i = Global.uncompile(i));
(!i || i.length <= 0) && (i = t);
return i;
};
i.deleteLocal = function(e) {
e += "";
cc.sys.localStorage.removeItem(Global.compile(e));
};
i.compile = function(e) {
for (var t = String.fromCharCode(e.charCodeAt(0) + e.length), i = 1; i < e.length; i++) t += String.fromCharCode(e.charCodeAt(i) + e.charCodeAt(i - 1));
return escape(t);
};
i.uncompile = function(e) {
e = unescape(e);
for (var t = String.fromCharCode(e.charCodeAt(0) - e.length), i = 1; i < e.length; i++) t += String.fromCharCode(e.charCodeAt(i) - t.charCodeAt(i - 1));
return t;
};
i.bindParams = function() {
var e = Array.prototype.slice.call(arguments), t = e.shift();
if ("function" == typeof t) return function() {
return t.apply(null, e.concat(Array.prototype.slice.call(arguments)));
};
};
i.random = function(e, t) {
return Math.floor(Math.random() * (t - e + 1) + e);
};
i.randomArray = function(e, t, i) {
for (var n = [], a = function(e) {
for (var t = 0; t < n.length; t++) if (e == n[t]) return !0;
return !1;
}, o = 0; o < e; o++) {
for (var c = Global.random(t, i); a(c); ) c = Global.random(t, i);
n[o] = c;
}
return n;
};
i.random1To1 = function() {
return 2 * (Math.random() - .5);
};
i.random0To1 = function() {
return Math.random();
};
i.copy = function(e) {
if (cc.js.isNumber(e) || cc.js.isString(e)) return e;
var t = e instanceof Array ? [] : {};
for (var n in e) "object" == typeof e[n] ? t[n] = i.copy(e[n]) : t[n] = e[n];
return t;
};
i.stringToBytes = function(e) {
for (var t, i = [], n = 0; n < e.length; n++) {
t = e.charCodeAt(n);
var a = [];
do {
a.push(255 & t);
t >>= 8;
} while (t);
i = i.concat(a.reverse());
}
return i;
};
i.jsToCByShort = function(e) {
var t = Math.floor(e / 256), i = Math.floor(e % 256);
return String.fromCharCode(t, i);
};
i.jsToCByInt = function(e) {
var t = Math.floor(e / 16777216), i = Math.floor(e / 65536) % 256, n = Math.floor(e / 256) % 256, a = Math.floor(e % 256);
return String.fromCharCode(t, i, n, a);
};
i.srcSum = function(e, t) {
for (var i = 65535, n = 0; n < t; n++) 0 == (1 & (i ^= e[n])) ? i >>= 1 : i = i >> 1 ^ 28849;
return i;
};
i.convertGPS2GCJ = function(e, t) {
e = Number(e);
t = Number(t);
var i = 3.141592653589793, n = 6378245, a = .006693421622965943, o = function(e, t) {
var n = 2 * e - 100 + 3 * t + .2 * t * t + .1 * e * t + .2 * Math.sqrt(Math.abs(e));
n += 2 * (20 * Math.sin(6 * e * i) + 20 * Math.sin(2 * e * i)) / 3;
return (n += 2 * (20 * Math.sin(t * i) + 40 * Math.sin(t / 3 * i)) / 3) + 2 * (160 * Math.sin(t / 12 * i) + 320 * Math.sin(t * i / 30)) / 3;
}(e - 105, t - 35), c = function(e, t) {
var n = 300 + e + 2 * t + .1 * e * e + .1 * e * t + .1 * Math.sqrt(Math.abs(e));
n += 2 * (20 * Math.sin(6 * e * i) + 20 * Math.sin(2 * e * i)) / 3;
return (n += 2 * (20 * Math.sin(e * i) + 40 * Math.sin(e / 3 * i)) / 3) + 2 * (150 * Math.sin(e / 12 * i) + 300 * Math.sin(e / 30 * i)) / 3;
}(e - 105, t - 35), s = t / 180 * i, r = Math.sin(s);
r = 1 - a * r * r;
var l = Math.sqrt(r);
return {
lat: t + (o = 180 * o / (n * (1 - a) / (r * l) * i)),
lng: e + (c = 180 * c / (n / l * Math.cos(s) * i))
};
};
i.gcj02towgs84 = function(e, t) {
if (out_of_china(e, t)) return [ e, t ];
var i = transformlat(e - 105, t - 35), n = transformlng(e - 105, t - 35), o = t / 180 * PI, c = Math.sin(o);
c = 1 - ee * c * c;
var s = Math.sqrt(c);
i = 180 * i / (a * (1 - ee) / (c * s) * PI);
n = 180 * n / (a / s * Math.cos(o) * PI);
mglat = t + i;
mglng = e + n;
return [ 2 * e - mglng, 2 * t - mglat ];
};
i.getAddressDetail = function() {};
i.getDistanceOfTwoPoint = function(e, t, i, n) {
AppLog.log(e, t, i, n);
var a = function(e) {
return e * Math.PI / 180;
}, o = a(e), c = a(i), s = o - c, r = a(t) - a(n), l = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(s / 2), 2) + Math.cos(o) * Math.cos(c) * Math.pow(Math.sin(r / 2), 2)));
l *= 6378.137;
return Math.abs(l);
};
i.convertNumToShort = function(e, t, i, n, a) {
var o = [ "", "K", "M", "B", "T", "Q" ], c = 0 != e ? e / Math.abs(e) : 1;
e = Math.abs(e);
n && (o = n);
t = null == t ? 1e3 : t;
i = null == i ? 1 : i;
a = null == a ? t : a;
for (var s = 0; e >= a; ) {
s++;
e /= t;
}
return (e = Math.floor(e * Math.pow(10, i)) / Math.pow(10, i)) * c + o[s];
};
i.convertNumToChineseNum = function(e) {
var t, i, n = new Array("零", "壹", "贰", "叁", "肆", "伍", "陆", "柒", "捌", "玖"), a = new Array("", "拾", "佰", "仟"), o = new Array("", "万", "亿", "兆"), c = "";
if ("" === e) return "";
if ((e = parseFloat(e)) >= 1e15) return "";
if (0 == e) return n[0];
if (-1 == (e = e.toString()).indexOf(".")) t = e; else {
t = (i = e.split("."))[0];
i[1].substr(0, 4);
}
if (parseInt(t, 10) > 0) for (var s = 0, r = t.length, l = 0; l < r; l++) {
var d = t.substr(l, 1), h = r - l - 1, _ = h / 4, p = h % 4;
if ("0" == d) s++; else {
s > 0 && (c += n[0]);
s = 0;
c += n[parseInt(d)] + a[p];
}
0 == p && s < 4 && (c += o[_]);
}
"" == c && (c += n[0]);
return c;
};
i.subStrOfChinese = function(e, t, i) {
var n = 0, a = "", o = /[^\x00-\xff]/g, c = "";
try {
for (var s = e.replace(o, "**").length, r = 0; r < s; r++) {
null != (c = e.charAt(r).toString()).match(o) ? n += 2 : n++;
if (n > t) break;
a += c;
}
i && s > t && (a += "..");
} catch (t) {
return e;
}
return a;
}, i.captureScreen = function(e, t, i, n) {
var a = Math.floor(t.width), o = Math.floor(t.height), c = jsb.fileUtils.getWritablePath() + e;
jsb.fileUtils.isFileExist(c) && jsb.fileUtils.removeFile(c);
var s = new cc.Node();
s.parent = t.parent;
s.zIndex = -1;
s.position = t.position;
var r = s.addComponent(cc.Camera);
r.cullingMask = 4294967295;
var l = Math.max(cc.winSize.width / t.width, cc.winSize.height / t.height);
n && (l = n);
var d = new cc.RenderTexture(), h = cc.game._renderContext;
d.initWithSize(a * l, o * l, h.STENCIL_INDEX8);
r.targetTexture = d;
t.scaleY = -1 * l;
t.scaleX = l;
r.render(t);
t.scale = 1;
var _ = d.readPixels();
jsb.saveImageData(_, a * l, o * l, c);
console.log("截图成功，图片保存在 ====>", c);
t.parent.removeChild(s);
i && i(c);
}, i.ShareLink = function(e, t) {
if (Global.openFacebookLogin && Global.playerData.logintype === Global.LoginType.FB) {
var i = {
shareType: 1
};
i.linkUrl = e;
i.content = t || "";
cc.vv.PlatformApiMgr.SdkShare(JSON.stringify(i));
} else if (Global.openWeChatLogin) {
var n = "喊你一起玩游戏！";
t && t.length > 0 && (n = t);
var a = Global.WX_SHARE_SCENE.Secssion;
Global.WXShareLink(e, "poly娱乐", n, a);
} else cc.loader.loadRes("prefab/UIShare", function(t, i) {
var n = cc.instantiate(i), a = n.getComponent("UIGuestShare");
a && a.setQRCodeUrl(e);
n.position = Global.centerPos;
cc.director.getScene().addChild(n);
});
};
i.shareAppWebLink = function(e, t) {
e = e || "0";
t = t || "0";
var i = Global.share_url + "?appName=ruili.com&actionId=" + e + "&valueId=" + t;
i = i + "&channel=" + cc.vv.PlatformApiMgr.umChannel();
Global.ShareLink(i, "");
};
i.WXShareLink = function(e, t, i, n, a) {
var o = Global.webShareIcon;
n >= 0 && e && t && i && cc.vv.WxMgr.wxShareWeb(n, t, i, o, e, a);
};
i.WXShareImage = function(e, t, i) {
t >= 0 && e && cc.vv.WxMgr.wxShareImg(t, e, i);
};
i.isUserWSS = function(e) {
var t = !1, i = Global.loginServerAddress;
e && (i = e);
-1 === i.indexOf(":") && (t = !0);
return t;
};
i.getSegmentLevel = function(e) {
var t = 0;
if (cc.vv.UserManager.levelList && cc.vv.UserManager.levelList instanceof Array) {
for (var i = 0; i < cc.vv.UserManager.levelList.length; ++i) if (e < cc.vv.UserManager.levelList[i].count) {
t = cc.vv.UserManager.levelList[i].id - 1;
break;
}
e > cc.vv.UserManager.levelList[cc.vv.UserManager.levelList.length - 1].count && (t = cc.vv.UserManager.levelList[cc.vv.UserManager.levelList.length - 1].id);
}
return t;
};
i.registerEvent = function(e, t, i) {
var n = cc.find("Canvas");
cc.isValid(n, !0) && n.on(e, t, i);
};
i.unregisterEvent = function(e, t, i) {
var n = cc.find("Canvas");
cc.isValid(n, !0) && n.off(e, t, i);
};
i.dispatchEvent = function(e, t) {
var i = cc.find("Canvas"), n = {};
n.detail = t;
i && i.emit(e, n);
};
i.btnClickEvent = function(e, t, i, n) {
void 0 === n && (n = null);
if (null == e) return null;
var a = t.bind(i);
e.on("click", function(t) {
var i = e.getComponent(cc.Button);
i && i.interactable && (null == n || -1 === n || cc.vv.AudioManager.playEff(n.path, n.filename, n.common));
a(t);
});
return e;
};
i.btnClickEventNoDefaultSound = function(e, t, i) {
if (null == e) return null;
e.on("click", t, i);
return e;
};
i.FormatNumToComma = function(e) {
return e ? (e = Number(Number(e).toFixed(2))).toString().replace(/\d+/, function(e) {
return e.replace(/(\d)(?=(\d{3})+$)/g, function(e) {
return e + ",";
});
}) : 0;
};
i.FormatCommaNumToNum = function(e) {
return parseInt(e.replace(/,/g, ""));
};
i.SavePoints = function(e, t) {
void 0 === t && (t = 2);
var i = Math.round(100 * parseFloat(e)) / 100, n = i.toString().split(".");
if (1 == n.length) {
for (var a = ".", o = 0; o < t; o++) a += "0";
return i.toString() + a;
}
if (n.length > 1) {
if (n[1].length < t) {
for (var c = "", s = 0; s < t - n[1].length; s++) c += "0";
return i.toString() + c;
}
return i;
}
};
i.checkToggleIsSelect = function(e) {
for (var t = 0; t < e.childrenCount; ++t) {
var i = e.children[t].getComponent(cc.Toggle);
if (i.isChecked) return i.node;
}
return null;
};
i.setToggleSecelct = function(e, t) {
for (var i = 0; i < e.childrenCount; ++i) {
var n = e.children[i].getComponent(cc.Toggle);
e.children[i].name == t ? n.isChecked = !0 : n.isChecked = !1;
}
};
i.autoAdaptDevices = function(e) {
void 0 === e && (e = !0);
var t = cc.find("Canvas"), i = t.getComponent(cc.Canvas);
if (t.width / t.height < i.designResolution.width / i.designResolution.height) {
i.fitWidth = !0;
i.fitHeight = !1;
} else {
i.fitWidth = !1;
i.fitHeight = !0;
}
};
i.setAdaptIphoneX = function() {
var e = cc.find("Canvas").getComponent(cc.Canvas).node.getChildByName("safe_node");
if (e) {
var t = e.getComponent(cc.Widget);
if (t) {
t.top = 0;
t.bottom = 0;
t.left = 0;
t.right = 0;
}
}
};
i.getStrBLen = function(e) {
if (null == e) return 0;
"string" != typeof e && (e += "");
return e.replace(/[^\x00-\xff]/g, "ab").length;
};
i.checkIpAndGps = function(e, t) {
var i = function(e) {
return !(0 === e.lat && 0 === e.lng);
}, n = function(e, t) {
return e.ip.split(":")[0] == t.ip.split(":")[0];
}, a = function(e, t) {
return !!i(e) && !!i(t) && Global.getDistanceOfTwoPoint(e.lat, e.lng, t.lat, t.lng) <= .2;
};
if (t) {
for (o = 0; o < e.length; o++) if (e[o] && e[o].uid != t.uid && n(e[o], t)) return !0;
for (o = 0; o < e.length; o++) if (e[o] && e[o].uid != t.uid && a(e[o], t)) return !0;
} else {
for (var o = 0; o < e.length - 1; o++) if (e[o]) for (var c = o + 1; c < e.length; c++) if (e[c] && n(e[o], e[c])) return !0;
for (o = 0; o < e.length - 1; o++) if (e[o]) for (c = o + 1; c < e.length; c++) if (e[c] && a(e[o], e[c])) return !0;
}
return !1;
};
i.showQRCode = function(e, t, i) {
if (t) {
var n = t.getComponent("showQRcode");
n && n.showQRCode(e, i);
}
};
i.moveMenu = function(e, t) {
t.getComponent(cc.Button).interactable = !1;
var i = e ? cc.v2(0, t.height) : cc.v2(0, 0), n = e ? cc.v2(0, 0) : cc.v2(0, t.height);
t.position = i;
t.opacity = e ? 0 : 255;
t.active = !0;
t.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, n), cc.fadeTo(.3, e ? 255 : 0)), cc.callFunc(function() {
t.getComponent(cc.Button).interactable = !0;
})));
};
i.showAlertAction = function(e, t, i, n, a) {
var o, c = i, s = n;
if (t) {
e.opacity = 76.5;
e.scale = null == c ? 0 : c;
null == s && (s = 1);
} else {
null == c && (e.scale = 1);
null == s && (s = 0);
}
if (t) {
var r = cc.scaleTo(.35, s);
r.easing(cc.easeBackOut(2));
var l = cc.fadeTo(.35, 255);
o = cc.spawn(r, l);
} else (o = cc.scaleTo(.3, s)).easing(cc.easeSineIn(3));
e.runAction(cc.sequence(o, cc.callFunc(function() {
a && a();
})));
};
i.createrSpriteAni = function(e, t, i, n, a, o, c, s, r) {
var l = new cc.Node("node_eff");
l.addComponent(cc.Sprite);
this.addSpriteAni(l, e, t, i, n, a, o, c, s, r);
return l;
};
i.addSpriteAni = function(e, t, i, n, a, o, c, s, r, l) {
r || (r = 1);
null == l && (l = !0);
for (var d = function(e, t) {
return t && e < 10 ? "0" + e : e;
}, h = [], _ = 0; _ < n; _++) {
var p = i + d(_ + r, l);
s && (p = i + s + d(_ + r, l));
t._spriteFrames[p] && h.push(t._spriteFrames[p]);
}
var u = e.addComponent(cc.Animation), f = cc.AnimationClip.createWithSpriteFrames(h, 30), g = "finished";
if (o) {
f.wrapMode = cc.WrapMode.Loop;
g = "lastframe";
}
f.speed = a;
u.addClip(f, i);
u.on(g, function e() {
u.off(g, e);
c && c();
});
u.play(i);
};
i.isEmptyObject = function(e) {
for (var t in e) return !1;
return !0;
};
i.getDeviceInfo = function() {
var e = {
osValue: "web"
};
if (cc.sys.isNative) {
e.frameSize = cc.view.getFrameSize();
e.osValue = cc.sys.os;
e.phoneBrand = cc.vv.PlatformApiMgr.getDeviceBrand();
e.phoneSystemVision = cc.vv.PlatformApiMgr.getDeviceOpSysVision();
e.phoneUuid = this.getDeviceId();
e.netType = cc.sys.getNetworkType();
}
return e;
};
Global.setNodeScaleFixWin = function(e) {
var t = cc.winSize;
e.scaleX = t.width / e.width;
e.scaleY = t.height / e.height;
};
Global.setNodeScaleWithDesignSize = function(e) {
e.scaleX = cc.winSize.width / Global.designSize.width;
e.scaleY = cc.winSize.height / Global.designSize.height;
};
Global.shakeNodeR = function(e) {
e.stopAllActions();
e.angle = 0;
var t = cc.rotateTo(.25, 15), i = cc.rotateTo(.5, -15), n = cc.rotateTo(.5, 15), a = cc.rotateTo(.5, -15), o = cc.rotateTo(.5, 15), c = cc.rotateTo(.25, 0), s = cc.delayTime(1.8), r = cc.repeatForever(cc.sequence(t, i, n, a, o, c, s));
e.runAction(r);
};
Global.breathNode = function(e, t, i) {
e.stopAllActions();
e.scale = t || 1;
var n = t || 1.1, a = i || 1, o = cc.repeatForever(cc.sequence(cc.scaleTo(.6, n), cc.scaleTo(.6, a)));
e.runAction(o);
};
Global.blinkAction = function(e, t, i, n, a) {
void 0 === t && (t = .2);
void 0 === i && (i = 2);
void 0 === n && (n = 0);
e.stopAllActions();
e.opacity = 255;
n ? cc.tween(e).repeat(n, cc.tween().to(t, {
opacity: 0
}).delay(.1).to(t, {
opacity: 255
}).delay(i)).call(function() {
a && a();
}).start() : cc.tween(e).repeatForever(cc.tween().to(t, {
opacity: 0
}).delay(.1).to(t, {
opacity: 255
}).delay(i)).start();
}, Global.unique5 = function(e) {
var t = new Set(e);
return [].concat(t);
};
Global.shakeNode = function(e, t, i, n) {
t = t || 16;
i = i || 1;
var a = e.scale, o = Math.floor(i / .16), c = cc.moveBy(.04, cc.v2(-t, 0)), s = cc.moveBy(.04, cc.v2(t, 0)), r = cc.moveBy(.04, cc.v2(t, 0)), l = cc.moveBy(.04, cc.v2(-t, 0)), d = cc.sequence(c, s, r, l), h = cc.moveBy(.04, cc.v2(0, t)), _ = cc.moveBy(.04, cc.v2(0, -t)), p = cc.moveBy(.04, cc.v2(0, -t)), u = cc.moveBy(.04, cc.v2(0, t)), f = cc.sequence(h, _, p, u);
e.runAction(cc.sequence(cc.scaleTo(.04, a + .025), cc.repeat(cc.spawn(d, f), o), cc.scaleTo(.04, a), cc.callFunc(function() {
n && e.setPosition(n);
})));
};
Global.ArrowAction = function(e, t, i) {
var n = e.position;
e.stopAllActions();
cc.tween(e).repeatForever(cc.tween().to(i, {
x: n.x + t.x,
y: n.y + t.y
}).to(i, {
x: n.x,
y: n.y
})).start();
};
Global.formatSec = function(e, t, i) {
t || (t = "%s:%s:%s");
var n = Math.floor(e / 86400);
i || (n = 0);
var a = Math.floor((e - 86400 * n) % 3600), o = Math.floor((e - 86400 * n) / 3600), c = Math.floor(a / 60), s = a % 60, r = cc.js.formatStr(t, Global.PrefixInteger(o, 2), Global.PrefixInteger(c, 2), Global.PrefixInteger(s, 2));
n > 0 && (r = n + (n > 1 ? " days" : " day"));
return r;
};
Global.formatTimeDiff = function(e) {
var t = Math.floor(e / 86400);
if (t > 0) return t + (1 == t ? " Day" : " Days");
var i = Math.floor((e - 86400 * t) / 3600);
if (i > 0) return i + (1 == i ? " Hour" : " Hours");
var n = Math.floor((e - 86400 * t) % 3600), a = Math.floor(n / 60);
return a > 0 ? a + " Min" : "1 Min";
}, Global.format2Time = function(e) {
var t = Math.floor(e % 3600), i = Math.floor(e / 3600), n = Math.floor(t / 60), a = t % 60;
return i > 0 ? cc.js.formatStr("%s:%s", Global.PrefixInteger(i, 2), Global.PrefixInteger(n, 2)) : cc.js.formatStr("%s:%s", Global.PrefixInteger(n, 2), Global.PrefixInteger(a, 2));
};
Global.PrefixInteger = function(e, t) {
return (Array(t).join(0) + e).slice(-t);
};
Global.formatMoney = function(e) {
return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
};
Global.getTimeStr = function(e, t, i) {
void 0 === i && (i = " ");
var n = new Date(1e3 * e), a = n.getFullYear(), o = n.getMonth() + 1, c = n.getDate(), s = n.getHours();
10 > s && (s = "0" + s);
var r = n.getMinutes();
10 > r && (r = "0" + r);
var l = n.getSeconds();
10 > l && (l = "0" + l);
return t ? s + ":" + r + ":" + l : "en" == Global.language ? c + "/" + o + "/" + a + i + s + ":" + r + ":" + l : o + "/" + c + "/" + a + i + s + ":" + r + ":" + l;
};
Global.getSimpleTimeStr = function(e) {
var t = new Date(1e3 * e), i = t.getMonth() + 1;
10 > i && (i = "0" + i);
var n = t.getDate();
10 > n && (n = "0" + n);
var a = t.getHours();
10 > a && (a = "0" + a);
var o = t.getMinutes();
10 > o && (o = "0" + o);
return i + "-" + n + " " + a + ":" + o;
}, Global.getFullDateStr = function(e) {
var t = new Date(1e3 * e), i = t.getFullYear(), n = t.getMonth() + 1;
10 > n && (n = "0" + n);
var a = t.getDate();
10 > a && (a = "0" + a);
return "en" == Global.language ? a + "-" + n + "-" + i : i + "-" + n + "-" + a;
};
Global.getDateStrNoYear = function(e) {
var t = new Date(1e3 * e), i = t.getMonth() + 1;
10 > i && (i = "0" + i);
var n = t.getDate();
10 > n && (n = "0" + n);
return i + "." + n;
};
Global.getDateStr = function(e) {
var t = new Date(1e3 * e), i = (t.getFullYear(), t.getMonth() + 1), n = t.getDate();
10 > n && (n = "0" + n);
return i + "-" + n;
};
Global.setLabelString = function(e, t, i) {
var n = cc.find(e, t);
n && (n.getComponent(cc.Label).string = i);
};
Global.setRichTextString = function(e, t, i) {
var n = cc.find(e, t);
n && (n.getComponent(cc.RichText).string = i);
};
Global.setSpriteFrame = function(e, t, i) {
var n = cc.find(e, t);
n && (n.getComponent(cc.Sprite).spriteFrame = i);
};
Global.setProgress = function(e, t, i) {
var n = cc.find(e, t);
n && (n.getComponent(cc.ProgressBar).progress = i);
};
Global.onClick = function(e, t, i, n) {
var a = cc.find(e, t);
a && a.on("click", i, n);
};
Global.delayInteractable = function(e, t) {
void 0 === t && (t = .5);
var i = e.getComponent(cc.Button);
if (i) {
i.interactable = !1;
e.runAction(cc.sequence(cc.delayTime(t), cc.callFunc(function() {
i.interactable = !0;
})));
}
};
Global.awaitTime = function(e, t) {
return new Promise(function(i) {
e.scheduleOnce(function() {
i();
}, t);
});
};
Global.formatString = function(e, t) {
if (!e || null == t) return e;
if ("object" != typeof t) {
var i = arguments, n = new RegExp("{([0-" + (i.length - 1) + "])}", "g");
return e.replace(n, function(e, t) {
return i[t - -1];
});
}
for (var a in t) t.hasOwnProperty(a) && (e = e.replace(new RegExp("{" + a + "}", "g"), t[a]));
return e;
};
var n = console.log;
Global.switchLog = function() {
if (Global.localVersion) {
cc.debug._resetDebugSetting(cc.debug.DebugMode.INFO);
window.LogMode = cc.debug.DebugMode.INFO;
console.log = n;
} else {
cc.debug._resetDebugSetting(cc.debug.DebugMode.ERROR);
window.LogMode = cc.debug.DebugMode.ERROR;
console.log = (console.log, function() {});
}
};
cc._RF.pop();
}, {
GlobalVar: "GlobalVar"
} ],
GlobalTools: [ function(e, t) {
"use strict";
cc._RF.push(t, "cf58a00Y0xFU46/WMjMf3Dy", "GlobalTools");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
var o = e("GlobalVar");
o.padLeftZero = function(e) {
return "0" + e.substr(e.length - 1);
};
o.formatTime = function(e, t) {
var i = new Date(1e3 * t);
/(y+)/.test(e) && (e = e.replace(RegExp.$1, (i.getFullYear() + "").substr(4 - RegExp.$1.length)));
var n = {
"M+": i.getMonth() + 1,
"d+": i.getDate(),
"h+": i.getHours(),
"m+": i.getMinutes(),
"s+": i.getSeconds()
};
for (var a in n) if (new RegExp("(" + a + ")").test(e)) {
var c = n[a] + "";
e = e.replace(RegExp.$1, 2 === c.length ? c : o.padLeftZero(c));
}
return e;
};
o.formatSecond = function(e, t) {
t || (t = "hh:mm:ss");
var i = {
"h+": Math.floor(e / 3600),
"m+": Math.floor(e % 3600 / 60),
"s+": e % 3600 % 60
};
for (var n in i) if (new RegExp("(" + n + ")").test(t)) {
var a = i[n] + "";
t = t.replace(RegExp.$1, 2 === a.length ? a : o.padLeftZero(a));
}
return t;
};
o.formatNumber = function(e, t) {
t = t || {};
var i = e >= 0 ? 1 : -1, n = Math.abs(e), a = t.decimal || 2, c = t.radix || 1e3;
if (n < (t.threshold || 1e4)) return o.FormatNumToComma(e);
for (var s = 0; n >= c; ) {
s++;
n /= c;
}
return Number((i * n).toFixed(a)) + [ "", "K", "M", "B", "T", "Q" ][s];
};
o.deepClone = function(e) {
var t;
if (null == e || "object" != typeof e) return e;
if (e instanceof Date) {
(t = new Date()).setTime(e.getTime());
return t;
}
if (e instanceof Array) {
t = [];
for (var i = 0, n = e.length; i < n; i++) t[i] = o.deepClone(e[i]);
return t;
}
if (e instanceof Function) return function() {
return e.apply(this, arguments);
};
if (e instanceof Object) {
t = {};
for (var a in e) e.hasOwnProperty(a) && (t[a] = o.deepClone(e[a]));
return t;
}
throw new Error("Unable to copy obj as type isn't supported " + e.constructor.name);
};
Global.FlyDiamond = function(e, t, i, n, a) {
t || (t = cc.find("Canvas/UserinfoBar/钻石/icon"));
var o = function(o) {
Global.FixDesignScale_V(o);
if (cc.isValid(e) && cc.isValid(t) && cc.isValid(o)) {
var c, s = e.convertToWorldSpaceAR(cc.v2(0, 0)), r = t.convertToWorldSpaceAR(cc.v2(0, 0)), l = o.convertToNodeSpaceAR(s), d = o.convertToNodeSpaceAR(r);
if (a && n) {
if (!(c = cc.find("copyhalldiamond", o))) {
var h = cc.find("Canvas/UserinfoBar/钻石"), _ = cc.instantiate(h), p = o.convertToNodeSpaceAR(h.convertToWorldSpaceAR(cc.v2(0, 0)));
_.name = "copyhalldiamond";
_.parent = o;
_.position = p;
c = _;
}
n.lblCoin = cc.find("lbl_val", c);
c.active = !0;
}
var u = o.getComponent("FlyDiamonds");
u && u.showFlyCoins(l, d, 20, function() {
i && i();
if (a) {
Global.dispatchEvent(EventId.UPATE_DIAMOND);
c && (c.active = !1);
}
}, n);
} else i && i();
}, c = cc.find("Canvas/flydiamonds");
c ? o(c) : cc.loader.loadRes("BalootClient/BaseRes/prefabs/flydiamonds", cc.Prefab, function(e, t) {
if (!e) {
var i = cc.instantiate(t);
i.parent = cc.find("Canvas");
i.zIndex = 999;
o(i);
}
});
};
Global.FlyCoinV2 = function(e, t, i, n, a) {
t || (t = cc.find("Canvas/UserinfoBar/金币/icon"));
var o = function(o) {
Global.FixDesignScale_V(o);
if (cc.isValid(e) && cc.isValid(t) && cc.isValid(o)) {
var c, s = e.convertToWorldSpaceAR(cc.v2(0, 0)), r = t.convertToWorldSpaceAR(cc.v2(0, 0)), l = o.convertToNodeSpaceAR(s), d = o.convertToNodeSpaceAR(r);
if (a && n) {
if (!(c = cc.find("copyhallcoin", o))) {
var h = cc.find("Canvas/UserinfoBar/金币"), _ = cc.instantiate(h), p = o.convertToNodeSpaceAR(h.convertToWorldSpaceAR(cc.v2(0, 0)));
_.name = "copyhallcoin";
_.parent = o;
_.position = p;
c = _;
}
n.lblCoin = cc.find("lbl_coin", c);
n.lblCoin || (n.lblCoin = cc.find("lbl_coinsNum", c));
c.active = !0;
}
var u = o.getComponent("FlyCoins");
u && u.showFlyCoins(l, d, 20, function() {
i && i();
if (a) {
Global.dispatchEvent(EventId.UPATE_COINS);
c && (c.active = !1);
}
}, n);
} else i && i();
}, c = cc.find("Canvas/flycoins");
c ? o(c) : cc.loader.loadRes("BalootClient/BaseRes/prefabs/flycoins", cc.Prefab, function(e, t) {
if (!e) {
var i = cc.instantiate(t);
i.parent = cc.find("Canvas");
i.zIndex = 999;
o(i);
}
});
};
Global.FlyAnimTo = function(e, t, i) {
var n = i.spriteFrame, a = i.prefab, o = i.scale || 1, c = i.delay || 0, s = i.onStart, r = i.zIndex || 1e3, l = i.onEnd, d = i.count || 20;
cc.isValid(e) && cc.isValid(t) && (n || a) && function() {
for (var i = cc.find("Canvas"), h = e.convertToWorldSpaceAR(cc.v2(0, 0)), _ = t.convertToWorldSpaceAR(cc.v2(0, 0)), p = i.convertToNodeSpaceAR(h), u = i.convertToNodeSpaceAR(_), f = [], g = 0; g < d; g++) {
var m = null;
n ? (m = new cc.Node()).addComponent(cc.Sprite).spriteFrame = n : a && (m = cc.instantiate(a));
m.scale = o;
m.zIndex = r;
m.active = !1;
m.parent = cc.find("Canvas");
f.push(m);
}
for (var v = !1, S = function(e) {
var t = f[e];
Global.FixDesignScale_V(t);
t.position = t.parent.convertToNodeSpaceAR(h);
var i = p.add(cc.v2(300 * Math.random() - 150, 300 * Math.random() - 150)), n = .1 + .3 * Math.random();
cc.tween(t).delay(c).call(function() {
t.active = !0;
if (!v) {
s && s();
v = !0;
}
}).to(n, {
position: i
}).delay(.5).to(.3, {
position: u,
scale: 1
}).call(function() {
l && l(t);
t.destroy();
}).start();
}, C = 0; C < f.length; C++) S(C);
}();
};
Global.FlyAnimToPos = function(e, t, i) {
var n = i.spriteFrame, a = i.prefab, o = i.scale || 1, c = i.endScale || 1, s = i.delay || 0, r = i.onStart, l = i.onEnd, d = i.zIndex || 1e3, h = i.onEndOne, _ = i.count || 20, p = i.onInit, u = i.boom || !1, f = i.rangeX || 150, g = i.rangeY || 150;
(n || a) && function() {
for (var i = cc.find("Canvas"), m = [], v = 0; v < _; v++) {
var S = null;
n ? (S = new cc.Node()).addComponent(cc.Sprite).spriteFrame = n : a && (S = cc.instantiate(a));
S.parent = i;
p && p(v, S);
S.scale = o;
S.zIndex = d;
S.position = cc.v2(0, 0);
S.active = !1;
m.push(S);
}
for (var C = !1, b = 0, E = function(i) {
var n = m[i];
Global.FixDesignScale_V(n);
n.position = n.parent.convertToNodeSpaceAR(e);
var a = n.parent.convertToNodeSpaceAR(e).add(cc.v2(Math.random() * f * 2 - f, Math.random() * g * 2 - g)), o = .1 + .3 * Math.random(), d = .3 + .3 * Math.random(), _ = .3 + .3 * Math.random();
if (u) {
n.active = !0;
if (!C) {
r && r();
C = !0;
}
n.position = a;
cc.tween(n).delay(d).to(_, {
position: n.parent.convertToNodeSpaceAR(t),
scale: c
}).call(function() {
++b >= m.length && l && l(n);
h && h(n);
n.destroy();
}).start();
} else cc.tween(n).delay(s).call(function() {
n.active = !0;
if (!C) {
r && r();
C = !0;
}
}).to(o, {
position: a
}).delay(d).to(_, {
position: n.parent.convertToNodeSpaceAR(t),
scale: c
}).call(function() {
++b >= m.length && l && l(n);
h && h(n);
n.destroy();
}).start();
}, y = 0; y < m.length; y++) E(y);
}();
};
Global.RewardFly = function(e, t) {
var i = cc.find("Canvas/RewardFlyAnim");
i ? i.getComponent("RewardFlyAnim").run(e, t) : cc.loader.loadRes("BalootClient/BaseRes/prefabs/RewardFlyAnim", cc.Prefab, function(i, n) {
if (null == i) {
var a = cc.instantiate(n);
a.parent = cc.find("Canvas");
a.zIndex = 1e3;
a.position = cc.v2(0, 0);
a.getComponent("RewardFlyAnim").scheduleOnce(function() {
a.getComponent("RewardFlyAnim").run(e, t);
});
}
});
};
Global.getId = function(e, t) {
if (t) {
var n = t.getComponent("ID");
if (n.id == e) return n;
}
for (var a, o = i((t = t || cc.director.getScene()).getComponentsInChildren("ID")); !(a = o()).done; ) {
var c = a.value;
if (c.id == e) return c;
}
};
Global.isRealNum = function(e) {
return "" !== e && null != e && !isNaN(e);
};
Global.webCopyString = function(e) {
if (!cc.sys.isNative) {
if (!window.ClipboardJS || !window.ClipboardJS.copy) {
var t = e, i = document.createElement("textarea");
i.value = t;
i.setAttribute("readonly", "");
i.style.contain = "strict";
i.style.position = "absolute";
i.style.left = "-9999px";
i.style.fontSize = "12pt";
var n = getSelection(), a = !1;
n.rangeCount > 0 && (a = n.getRangeAt(0));
document.body.appendChild(i);
i.select();
i.selectionStart = 0;
i.selectionEnd = t.length;
var o = !1;
try {
o = document.execCommand("copy");
} catch (e) {}
document.body.removeChild(i);
if (a) {
n.removeAllRanges();
n.addRange(a);
}
return o;
}
window.ClipboardJS.copy(e);
}
};
Global.strConfuse = function(e) {
if (e.length < 2) return e;
if (e.length < 5) {
var t = e.split("");
t[1] = "*";
return t.join("");
}
for (var i = e.split(""), n = 2; n < i.length - 2; n++) i[n] = "*";
return i.join("");
};
Global.bezier3 = function(e, t, i, n) {
return e.mul(Math.pow(1 - n, 2)).add(t.mul(2 * (1 - n) * n)).add(i.mul(Math.pow(n, 2)));
};
Global.bezier4 = function(e, t, i, n, a) {
return e.mul(Math.pow(1 - a, 3)).add(t.mul(3 * Math.pow(1 - a, 2) * a)).add(i.mul(3 * (1 - a) * Math.pow(a, 2))).add(n.mul(Math.pow(a, 3)));
};
Global.getBezier2Mid = function(e, t, i, n, a) {
var o = t.sub(e), c = o.mul(i), s = o.signAngle(cc.Vec2.RIGHT), r = c.rotate(Math.PI / 2);
Math.abs(s) <= Math.PI / 2 ? r = c.rotate(Math.PI / 2) : Math.abs(s) > Math.PI / 2 && (r = c.rotate(-Math.PI / 2));
return [ e.add(o.mul(n)).add(r), e.add(o.mul(a)).add(r) ];
};
Global.stopAllTimer = function() {
var e = window.facade;
e && e.dm && e.dm.msgHandler && e.dm.msgHandler.reset();
cc.vv.gameData && cc.vv.gameData.onExit && cc.vv.gameData.onExit();
for (var t, n = i(cc.director.getScene().getComponentsInChildren(cc.Component)); !(t = n()).done; ) {
var a = t.value;
a.unscheduleAllCallbacks();
"SceneTranslate<SceneTranslate>" != a.name && (a.update = function() {});
}
};
Global.whetherSnipeType = function(e, t) {
void 0 === t && (t = null);
var n = !1, a = 0, o = 0, c = null;
if (e && e.dm && e.dm.deskInfo && e.dm.deskInfo.users) for (var s, r = i(e.dm.deskInfo.users); !(s = r()).done; ) {
var l = s.value;
l.isAttack && (a = 1);
l.isAnchor && (o = 1);
t && cc.vv.UserManager.uid == l.uid && (c = l);
}
1 == a && 1 == o && (n = !0);
return {
snipeType: n,
selfObj: c
};
};
Global.isSniperRoom = function(e) {
var t = 0, n = 0;
if (e && e.dm && e.dm.deskInfo && e.dm.deskInfo.users) for (var a, o = i(e.dm.deskInfo.users); !(a = o()).done; ) {
var c = a.value;
c.isAttack && (t = 1);
c.isAnchor && (n = 1);
}
return 1 == t || 1 == n;
};
var c = "ﺁﺁﺂﺂﺃﺃﺄﺄﺅﺅﺆﺆﺇﺇﺈﺈﺉﺋﺌﺊﺍﺍﺎﺎﺏﺑﺒﺐﺓﺓﺔﺔﺕﺗﺘﺖﺙﺛﺜﺚﺝﺟﺠﺞﺡﺣﺤﺢﺥﺧﺨﺦﺩﺩﺪﺪﺫﺫﺬﺬﺭﺭﺮﺮﺯﺯﺰﺰﺱﺳﺴﺲﺵﺷﺸﺶﺹﺻﺼﺺﺽﺿﻀﺾﻁﻃﻄﻂﻅﻇﻈﻆﻉﻋﻌﻊﻍﻏﻐﻎﻑﻓﻔﻒﻕﻗﻘﻖﻙﻛﻜﻚﻝﻟﻠﻞﻡﻣﻤﻢﻥﻧﻨﻦﻩﻫﻬﻪﻭﻭﻮﻮﻯﻯﻰﻰﻱﻳﻴﻲﻵﻵﻶﻶﻷﻷﻸﻸﻹﻹﻺﻺﻻﻻﻼﻼ", s = "ًٌٍَُِّْْئءؤرلاىةوزظشسيبلاتنمكطضصثقفغعهخحجدذْلآآلأأـلإإ،؟";
Global.isArabic = function(e) {
if (1 === e.length) {
var t = e;
return c.indexOf(t) >= 0 || s.indexOf(t) >= 0;
}
for (var i = e.split(""), n = 0; n < i.length; n++) {
var a = i[n];
if (c.indexOf(a) >= 0 || s.indexOf(a) >= 0) return !0;
}
return !1;
};
Global.isEmoji = function(e) {
for (var t = 0; t < e.length; t++) {
var i = e.charCodeAt(t);
if (i >= 55296 && i <= 56319) {
if (e.length > 1) {
var n = 1024 * (i - 55296) + (e.charCodeAt(t + 1) - 56320) + 65536;
if (n >= 118784 && n <= 128895) return !0;
}
} else if (e.length > 1) {
if (8419 === e.charCodeAt(t + 1)) return !0;
} else {
if (i >= 8448 && i <= 10239) return !0;
if (i >= 11013 && i <= 11015) return !0;
if (i >= 10548 && i <= 10549) return !0;
if (i >= 12951 && i <= 12953) return !0;
if (169 === i || 174 === i || 12349 === i || 12336 === i || 11093 === i || 11036 === i || 11035 === i || 11088 === i) return !0;
}
}
};
Global.upateLabelMode = function(e) {
Global.isEmoji(e.string) ? e.cacheMode = cc.Label.CacheMode.NONE : e.cacheMode = cc.Label.CacheMode.CHAR;
};
Global.getPromise = function(e, t) {
var i;
return {
promise: new Promise(function(t, n) {
i = n;
e(t, n);
}),
abort: function() {
t && t();
i({
message: "the promise is aborted"
});
}
};
};
Global.delay = function(e, t) {
var i = Global.getPromise(function(t) {
setTimeout(function() {
t();
}, 1e3 * e);
}), n = i.promise, a = i.abort;
t && t.push(a);
return n;
};
cc._RF.pop();
}, {
GlobalVar: "GlobalVar"
} ],
GlobalVar: [ function(e, t) {
"use strict";
cc._RF.push(t, "28737uRnZxDDq30n03V7+QR", "GlobalVar");
var i = cc.Class({
extends: cc.Component,
statics: {
loginServerAddress: "13.126.241.64:9951",
localVersion: !0,
publishMode: !1,
openUpdate: !0,
openAutoLogin: !1,
isReview: !1,
isAndroidReview: !1,
appId: 17,
resVersion: "1.6.0.0",
appVersion: "1.0.0",
designSize: cc.size(1920, 1080),
centerPos: cc.v2(960, 540),
poly99: !0,
language: "en",
apiUrl: "https://inter.yonogames.com",
haoUrl: "https://inter.yonogames.com/hao.html",
fackbookLink: "https://www.facebook.com/cashheroslots/",
androidApi: "http://47.99.169.162:6180/",
reconnect_break: !1
}
});
window.Global = i;
window.onerror = function(e, t, i, n, a) {
var o = {};
try {
o.uid = cc.vv.UserManager.uid;
} catch (a) {}
try {
o.message = e;
o.source = t;
o.lineno = i;
o.colno = n;
o.error = a;
cc.vv.NetManager.requestHttpPost("", o, function() {}, "https://pay.hdreocal2023.xyz/api/report", "POST");
} catch (e) {}
};
cc._RF.pop();
}, {} ],
HallAdCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d6c76YryYJKoJBnf+SqRTHX", "HallAdCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../../../_FWExpand/UI/CarouselCpt"), a = e("../../../_FWExpand/UI/CarouselItemCpt"), o = e("./HallAdItemCpt"), c = cc._decorator, s = c.ccclass, r = c.property, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.adPagePrefab = null;
return t;
}
t.prototype.onLoad = function() {
var e = cc.vv.UserManager.adpics;
0 == e.length && e.push({
img: "btn_share_en",
url: "download"
});
this.updateView(e);
};
t.prototype.updateView = function(e) {
for (var t = 0, i = this.node.getComponentsInChildren(a.default); t < i.length; t++) i[t]._isOpen = !1;
for (var c = 0, s = e; c < s.length; c++) {
var r = s[c], l = cc.instantiate(this.adPagePrefab);
l.parent = this.node.getComponent(n.default).node;
l.getComponent(o.default).img = r.img;
l.getComponent(o.default).url = r.url;
l.getComponent(a.default)._isOpen = r.url;
l.getComponent(a.default).ord = e.indexOf(r);
}
this.node.getComponent(n.default).updateView();
};
__decorate([ r(cc.Prefab) ], t.prototype, "adPagePrefab", void 0);
return __decorate([ s ], t);
}(cc.Component);
i.default = l;
cc._RF.pop();
}, {
"../../../_FWExpand/UI/CarouselCpt": "CarouselCpt",
"../../../_FWExpand/UI/CarouselItemCpt": "CarouselItemCpt",
"./HallAdItemCpt": "HallAdItemCpt"
} ],
HallAdItemCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a8a98HFFQlNPqJQsAvhEQ3C", "HallAdItemCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.button = null;
t.icon = null;
t.atlas = null;
t.url = "";
t._reqHandle = null;
return t;
}
Object.defineProperty(t.prototype, "img", {
set: function(e) {
var t = this;
if (e && e.indexOf("http") > -1) {
this._reqHandle && this._reqHandle.rejectFunc();
this._reqHandle = cc.vv.ResManager.loadImage(e, function(e, i) {
cc.isValid(t.icon) && cc.isValid(t.icon.node) && i && (t.icon.spriteFrame = new cc.SpriteFrame(i));
t._reqHandle = null;
});
} else {
var i = this.atlas.getSpriteFrame(e);
i ? this.icon.spriteFrame = i : console.log("ad not image");
}
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
var e = this;
this.button.node.on("click", function() {
if (e.url) {
var t = "";
"download" == e.url ? t = "BalootClient/InviteCode/InviteCode" : "inbox" == e.url ? t = "BalootClient/Hall/PopupMailView" : "contact" == e.url ? t = "YD_Pro/prefab/yd_service" : "referearn" == e.url ? cc.vv.GameManager.jumpTo(3) : "leaderboard" == e.url ? cc.vv.PopupManager.addPopup("YD_Pro/rank/yd_rank", {
onShow: function(e) {
e.getComponent("yd_rank").initPage(1);
}
}) : "vip" == e.url ? t = "YD_Pro/prefab/yd_vip" : "bonus" == e.url ? cc.vv.GameManager.jumpTo(11.3) : "match" == e.url || ("salon" == e.url ? cc.vv.GameManager.jumpTo(2) : "promo" == e.url ? cc.vv.GameManager.jumpTo(11.4) : "cashback" == e.url ? cc.vv.GameManager.jumpTo(11.1) : "task" == e.url && cc.vv.GameManager.jumpTo(11.2));
t && cc.vv.PopupManager.addPopup(t);
}
});
};
t.prototype.start = function() {};
__decorate([ o(cc.Button) ], t.prototype, "button", void 0);
__decorate([ o(cc.Sprite) ], t.prototype, "icon", void 0);
__decorate([ o(cc.SpriteAtlas) ], t.prototype, "atlas", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
HallFloatMenuCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3b23ajmkuFL8qWpm/IYGIn/", "HallFloatMenuCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.hidePos = null;
t.showPos = null;
t.floatNode = null;
t.maskNode = null;
t.isShow = !0;
return t;
}
t.prototype.onLoad = function() {
this.netListener = this.node.addComponent("NetListenerCmp");
this.netListener.registerMsg(MsgId.BIND_PHONE, this.BIND_PHONE, this);
this.maskNode.on("click", this.onClickMask, this);
this.isShow = !1;
this.run();
Global.btnClickEvent(cc.find("btns_node/float_node/layout/btn_rank", this.node), function() {
cc.vv.PopupManager.addPopup("YD_Pro/rank/yd_rank", {
onShow: function(e) {
e.getComponent("yd_rank").initPage(1);
}
});
}, this);
Global.btnClickEvent(cc.find("btns_node/float_node/layout/btn_record", this.node), function() {
cc.vv.PopupManager.addPopup("YD_Pro/prefab/yd_historical_record", {
onShow: function(e) {
e.getComponent("yd_historical_record").init({
page: 1
});
}
});
}, this);
var e = cc.find("btns_node/float_node/layout/btn_register", this.node);
e && 0 === cc.vv.UserManager.isbindphone && (e.active = !0);
};
t.prototype.BIND_PHONE = function(e) {
200 != e.code || e.spcode && e.spcode > 0 || (cc.find("btns_node/float_node/layout/btn_register", this.node).active = !1);
};
t.prototype.onDisable = function() {
this.isShow = !1;
this.run();
};
t.prototype.onClickMenu = function() {
this.isShow = !this.isShow;
this.runAnim();
};
t.prototype.onClickMask = function() {
this.isShow = !1;
this.runAnim();
};
t.prototype.run = function() {
this.maskNode.stopAllActions();
this.floatNode.stopAllActions();
this.maskNode.active = this.isShow;
this.floatNode.position = this.isShow ? cc.v3(this.showPos) : cc.v3(this.hidePos);
};
t.prototype.runAnim = function() {
var e = this;
this.maskNode.stopAllActions();
this.floatNode.stopAllActions();
if (this.isShow) {
this.maskNode.active = !0;
this.maskNode.opacity = 0;
cc.tween(this.maskNode).to(.3, {
opacity: 120
}, {
easing: "quadOut"
}).start();
cc.tween(this.floatNode).to(.3, {
position: this.showPos
}, {
easing: "quadOut"
}).start();
} else {
cc.tween(this.maskNode).to(.3, {
opacity: 0
}, {
easing: "quadIn"
}).call(function() {
e.maskNode.active = !1;
}).start();
cc.tween(this.floatNode).to(.3, {
position: this.hidePos
}, {
easing: "quadIn"
}).start();
}
};
__decorate([ o(cc.Vec2) ], t.prototype, "hidePos", void 0);
__decorate([ o(cc.Vec2) ], t.prototype, "showPos", void 0);
__decorate([ o(cc.Node) ], t.prototype, "floatNode", void 0);
__decorate([ o(cc.Node) ], t.prototype, "maskNode", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
HallSlotBtn: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "23046xifGVHm62sUaSMBG/h", "HallSlotBtn");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.prefab = null;
t.isPlayAnim = !1;
return t;
}
t.prototype.onLoad = function() {
this.node.on("click", this.onClick, this);
this.eventListener = this.node.addComponent("EventListenerCmp");
this.updateInfo();
var e = cc.find("CountryHeartBtn", this.node);
if (e) {
var t = e.getComponent("CountryHeartBtn");
t.gameid = 100;
t.countryId = cc.vv.UserManager.slotVoteCountry;
}
};
t.prototype.onDisable = function() {
this.eventListener && this.eventListener.clear();
};
t.prototype.onClick = function() {
cc.vv.PopupManager.addPopup(this.prefab, {
opacityIn: !0
});
};
t.prototype.updateInfo = function() {
cc.vv.UserManager.slotsList.length <= 0 ? this.node.active = !1 : this.node.active = !0;
};
__decorate([ o(cc.Prefab) ], t.prototype, "prefab", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
HeadCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "6a9a8e7AWREMLlM96iZyb3+", "HeadCmp");
cc.Class({
extends: cc.Component,
editor: {
menu: "通用/头像"
},
properties: {
spr_head: cc.Sprite,
spine_headFrame: sp.Skeleton,
_uid: 0,
_clickId: 0,
isButton: !1,
_roomId: null,
strIcon: {
get: function() {
return this._strIcon || "";
}
}
},
onLoad: function() {
var e = this;
cc.vv.EventManager.on(EventId.REFRESH_PLAYER_HEAD, this.onRcvEventRefeshHead, this);
if (this.isButton) {
var t = this.node.getComponent(cc.Button);
t && t.node.on("click", function() {
e._uid && (1 == e._clickId ? cc.vv.PopupManager.addPopup("BalootClient/VoiceChat/V_UserInfoDlg", {
bottomIn: !0,
multiple: !0,
noCloseHit: !0,
onShow: function(t) {
var i = t.getComponent("V_UserInfoDlg");
i && i.refresh(e._uid);
}
}) : 2 == e._clickId ? Global.dispatchEvent("JOIN_VOICECHAT_ROOM_ONE", {
roomId: e._roomId
}) : cc.vv.PopupManager.addPopup("BalootClient/UserInfo/PopupPersonalInfo", {
opacityIn: !0,
multiple: !0,
onShow: function(t) {
var i = t.getComponent("PersonalInfo");
i && i.init(e._uid);
}
}));
});
}
},
onDestroy: function() {
cc.vv.EventManager.off(EventId.REFRESH_PLAYER_HEAD, this.onRcvEventRefeshHead, this);
},
onRcvEventRefeshHead: function(e) {
e && e.uid && e.usericon && this._uid == e.uid && this.setHead(e.uid, e.usericon);
},
setHead: function(e, t, i) {
var n = this;
this._uid = e;
if (t) {
if (t != this._strIcon) {
this._strIcon = t;
this.reset(function() {
if (n._isRealNum(t)) cc.vv.UserConfig.setHeadFrame(n.spr_head, Number(t)); else if (t && t.indexOf("http") > -1) {
n.spr_head._reqHandle && n.spr_head._reqHandle.rejectFunc();
var a = n.spr_head.node.getComponent("NetHeadImg");
a || (a = n.spr_head.node.addComponent("NetHeadImg"));
if (Global.isNative() && (!cc.vv.HeadManager.checkDownloaded(t) || i)) {
n.unscheduleAllCallbacks();
n.showLoading();
n.scheduleOnce(n.closeLoading, 3);
}
a.load(e, t, function() {
n.closeLoading();
}, i);
} else if (t && Global.isNative() && jsb.fileUtils.isFileExist(t)) {
var o = {
url: t,
ignoreMaxConcurrency: !0
};
cc.loader.load(o, function(e, t) {
if (!e) {
var i = new cc.SpriteFrame();
i.setTexture(t);
this.spr_head.spriteFrame = i;
}
});
}
});
}
} else this.reset();
},
setVchatHead: function(e, t, i) {
var n = this;
this._uid = e;
if (t) {
if (t != this._strIcon) {
this._strIcon = t;
this.reset(function() {
if (n._isRealNum(t)) cc.vv.UserConfig.setHeadFrame(n.spr_head, Number(t)); else if (t && t.indexOf("http") > -1) {
n.spr_head._reqHandle && n.spr_head._reqHandle.rejectFunc();
var a = n.spr_head.node.getComponent("NetHeadImg");
a || (a = n.spr_head.node.addComponent("NetHeadImg"));
a.load(e, t, function() {}, i);
} else t && Global.isNative() && jsb.fileUtils.isFileExist(t);
});
}
} else this.reset();
},
setAvatarFrame: function(e) {
this.spine_headFrame && cc.vv.UserConfig.setAvatarFrame(this.spine_headFrame, e);
},
reset: function(e) {
cc.vv.UserConfig.setHeadFrame(this.spr_head, 1, e);
},
showLoading: function() {
var e = this;
this.loadingFlag = !0;
this.loadingNode ? this.updateLoading() : cc.vv.ResManager.loadLocalRes("BalootClient/BaseRes/prefabs/Headloading", cc.Prefab, function(t, i) {
if (!t) {
e.loadingNode = cc.instantiate(i);
e.loadingNode.parent = e.spr_head.node.parent;
e.loadingNode.width = e.spr_head.node.width;
e.loadingNode.height = e.spr_head.node.height;
e.updateLoading();
}
});
},
closeLoading: function() {
this.loadingFlag = !1;
this.updateLoading();
},
updateLoading: function() {
this.loadingNode && (this.loadingNode.active = this.loadingFlag);
},
setHeadGray: function() {
Global.showSpriteGray(this.spr_head, !0);
},
_isRealNum: function(e) {
return "" !== e && null != e && !isNaN(e);
},
onClickButton: function() {},
setEventClickId: function(e) {
this._clickId = e;
}
});
cc._RF.pop();
}, {} ],
HeadLoaderMgr: [ function(e, t) {
"use strict";
cc._RF.push(t, "61d6cuYos5K1qfTtW3JjgT1", "HeadLoaderMgr");
var i = function(e, t) {
var i = new Object();
i.url = t;
i.filename = e;
i.times = 0;
i.observers = [];
i.push = function(e, t) {
this.observers.push({
spr: t,
cb: e
});
};
return i;
};
cc.Class({
extends: cc.Component,
statics: {
_loader_array: null,
_loader_dic: null,
_isLoading: !1,
addLoader: function(e, t, n, a, o) {
this._loader_array = this._loader_array || [];
this._loader_dic = this._loader_dic || {};
var c = null;
o || (c = this.checkLocalFile(e)) && (t = c);
var s = "$" + e + "$" + t;
if (!this._loader_dic[s]) {
this._loader_dic[s] = i(e, t);
c ? this._loader_array.unshift(s) : this._loader_array.push(s);
}
this._loader_dic[s].push(n, a);
this._isLoading || this.runLoader();
},
runLoader: function() {
if (this._loader_array.length <= 0) this._isLoading = !1; else {
this._isLoading = !0;
var e = this._loader_array.shift(), t = this._loader_dic[e];
cc.loader.load(t.url, function(i, n) {
if (i) {
t.times += 1;
t.times < 3 ? this._loader_array.push(e) : delete this._loader_dic[e];
this.runLoader();
} else {
var a = new cc.SpriteFrame(n, cc.Rect(0, 0, n.width, n.height));
for (var o in t.observers) {
t.observers[o].spr && (t.observers[o].spr.spriteFrame = a);
t.observers[o].cb && t.observers[o].cb(a);
}
delete this._loader_dic[e];
this.runLoader();
this.saveToLocalFile(t.filename, a);
}
}.bind(this));
}
},
checkLocalFile: function(e) {
if ("undefined" == typeof jsb) return !1;
var t = jsb.fileUtils.getWritablePath() + "loadImgs/" + e;
return !!jsb.fileUtils.isFileExist(t) && t;
},
saveToLocalFile: function(e, t) {
if ("undefined" != typeof jsb) {
var i = jsb.fileUtils.getWritablePath() + "loadImgs/", n = i + e;
jsb.fileUtils.isDirectoryExist(i) || jsb.fileUtils.createDirectory(i);
var a = new cc.Sprite();
a.spriteFrame = t;
var o = cc.size(Math.floor(a.width), Math.floor(a.height)), c = new cc.RenderTexture(o.width, o.height);
c.setPosition(cc.v2(.5 * o.width, .5 * o.height));
a.visit();
c.end();
c.saveToFile(n, cc.IMAGE_FORMAT_JPG);
}
},
saveDataToLocalFile: function(e, t) {
if ("undefined" != typeof jsb) {
var i = jsb.fileUtils.getWritablePath() + "loadImgs/", n = i + e;
jsb.fileUtils.isDirectoryExist(i) || jsb.fileUtils.createDirectory(i);
"undefined" != typeof t ? jsb.fileUtils.writeDataToFile(new Uint8Array(t), n) ? cc.log("Remote write file succeed.") : AppLog.warn("Remote write file failed.") : AppLog.warn("Remote download file failed.");
}
}
}
});
cc._RF.pop();
}, {} ],
HeadManager: [ function(e, t) {
"use strict";
cc._RF.push(t, "67754Gkxl5AOZ46XyZBuZyM", "HeadManager");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
cc.Class({
extends: cc.Component,
statics: {
init: function() {
this._downed_list = [];
this._downfail_list = [];
this._downing_list = [];
},
removeObserver: function(e, t) {
if (t) for (var i = this._downing_list.length - 1; i >= 0; i--) {
var n = this._downing_list[i];
if (n.url == t) {
var a = n.observers, o = a.indexOf(e);
if (o > -1) {
a.splice(o, 1);
a.length <= 0 && this._downing_list.splice(i, 1);
}
break;
}
} else for (var c = this._downing_list.length - 1; c >= 0; c--) {
var s = this._downing_list[c].observers, r = s.indexOf(e);
if (r > -1) {
s.splice(r, 1);
s.length <= 0 && this._downing_list.splice(c, 1);
}
}
},
checkDownloaded: function(e) {
return this._downed_list.indexOf(e.trim()) > -1 || this._downfail_list.indexOf(e.trim()) > -1;
},
download: function(e, t, n) {
n = n.trim();
for (var a, o = !1, c = i(this._downing_list); !(a = c()).done; ) {
var s = a.value;
if (s.url == n) {
o = !0;
s.observers.indexOf(e) < 0 && s.observers.push(e);
}
}
if (!o) {
var r = {
uid: t,
url: n,
observers: []
};
r.observers.push(e);
this._downing_list.push(r);
this._downloadImage(t, n);
}
},
downloadImmediate: function(e, t) {
this._downloadImage(e, t);
},
_onDownloadSucc: function(e) {
for (var t = this._downing_list.length - 1; t >= 0; t--) {
var n = this._downing_list[t];
if (n.url == e) {
for (var a, o = i(n.observers); !(a = o()).done; ) a.value.onDownloaded(!0, n.uid, n.url);
this._downing_list.splice(t, 1);
break;
}
}
cc.log("download succ: " + e);
},
_onDownloadFail: function(e) {
for (var t = this._downing_list.length - 1; t >= 0; t--) {
var n = this._downing_list[t];
if (n.url == e) {
for (var a, o = i(n.observers); !(a = o()).done; ) a.value.onDownloaded(!1, n.uid, n.url);
this._downing_list.splice(t, 1);
this._downfail_list.indexOf(e) < 0 && this._downfail_list.push(e);
break;
}
}
cc.log("download fail: " + e);
},
_downloadImage: function(e, t, i) {
var n = this, a = cc.loader.getXMLHttpRequest();
a.open("GET", i || t, !0);
a.timeout = 15e3;
a.responseType = "arraybuffer";
a.onreadystatechange = function() {
console.log("download xhr.status " + a.status, a.readyState);
if (4 === a.readyState) if (a.status >= 200 && a.status < 300) if ("undefined" != typeof a.response) if (n._saveFile(e, t, a.response)) {
n._downed_list.indexOf(t) < 0 && n._downed_list.push(t);
n._onDownloadSucc(t);
} else {
console.log("save image file fail:" + t);
n._onDownloadFail(t);
} else {
cc.log("download image is null:" + t);
n._onDownloadFail(t);
} else if (a.status >= 300 && a.status <= 303 || 307 == a.status) {
var i = a.getResponseHeader("Location");
if (i) {
console.log("redirect location: " + i);
n._downloadImage(e, t, i);
} else {
cc.log("download image fail:" + t);
n._onDownloadFail(t);
}
} else {
cc.log("download image fail:" + t);
n._onDownloadFail(t);
}
};
a.ontimeout = function() {
n._onDownloadFail(t);
cc.log("download image timeout:" + t);
};
a.onerror = function() {
n._onDownloadFail(t);
cc.log("download image error:" + t);
};
a.send();
},
_saveFile: function(e, t, i) {
var n = jsb.fileUtils.getWritablePath() + "headimgs/", a = n + md5(t) + ".jpg";
cc.log("save file", a);
jsb.fileUtils.isDirectoryExist(n) || jsb.fileUtils.createDirectory(n);
return !("undefined" == typeof i || !jsb.fileUtils.writeDataToFile(new Uint8Array(i), a));
}
}
});
cc._RF.pop();
}, {} ],
HotUpdateModule: [ function(e, t) {
"use strict";
cc._RF.push(t, "e30eaKF2GtMBa2dHelA/ZYk", "HotUpdateModule");
e("MD5"), cc.Class({
extends: cc.Component,
properties: {
progressBar: cc.ProgressBar,
lblTips: cc.Label,
manifestUrl: cc.Asset,
versionLabel: {
default: null,
type: cc.Label
},
_updating: !1,
_canRetry: !1,
_storagePath: "",
_localAppVersion: ""
},
onLoad: function() {
if (cc.sys.isNative) {
this._localAppVersion = "1.0.0";
this._storagePath = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "/") + "game-remote-asset";
this.versionCompareHandle = function(e, t) {
var i = e.split("."), n = t.split(".");
console.log("versionCompareHandle ", i, n);
for (var a = 0; a < i.length; ++a) {
var o = parseInt(i[a]), c = parseInt(n[a] || 0);
if (o !== c) return o - c;
}
return n.length > i.length ? -1 : 0;
};
console.log(" this._storagePath ", this._storagePath);
this._am = new jsb.AssetsManager(this.manifestUrl.nativeUrl, this._storagePath, this.versionCompareHandle);
this._am.setVerifyCallback(function() {
return !0;
});
cc.sys.os, cc.sys.OS_ANDROID, this._am.setMaxConcurrentTask(2);
}
},
onDestroy: function() {
if (this._am) {
this._am.setEventCallback(null);
this._am = null;
}
},
showLog: function(e) {
cc.log("[HotUpdateModule][showLog]----" + e);
},
retry: function() {
if (!this._updating && this._canRetry) {
this._canRetry = !1;
this._am.downloadFailedAssets();
}
},
updateCallback: function(e) {
var t = !1, i = !1;
switch (e.getEventCode()) {
case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
this.showLog("没有发现本地manifest文件，跳过了热更新.");
i = !0;
break;

case jsb.EventAssetsManager.UPDATE_PROGRESSION:
var n = e.getPercent();
if (isNaN(n)) return;
var a = e.getMessage();
this.disPatchRateEvent(n, a);
this.showLog("updateCallback更新进度：" + n + ", msg: " + a);
if (n <= 1) {
this.ShowUpdateProcess(!0);
this.SetUpdateProcess(n, n, n);
}
break;

case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
this.showLog("下载manifest文件失败，跳过热更新.");
i = !0;
break;

case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
this.showLog("已是最新版本.");
i = !0;
break;

case jsb.EventAssetsManager.UPDATE_FINISHED:
this.showLog("更新结束." + e.getMessage());
this.disPatchRateEvent(1);
t = !0;
Global.saveLocal("mainLoacalVersion", Global.resVersion);
console.log("存储更新完成mainLoacalVersion的值...:", Global.resVersion);
break;

case jsb.EventAssetsManager.UPDATE_FAILED:
this.showLog("更新错误." + e.getMessage());
this._updating = !1;
this._canRetry = !0;
this._failCount++;
this.retry();
break;

case jsb.EventAssetsManager.ERROR_UPDATING:
this.showLog("更新过程中错误: " + e.getAssetId() + ", " + e.getMessage());
break;

case jsb.EventAssetsManager.ERROR_DECOMPRESS:
this.showLog("解压错误");
}
if (i) {
this._am.setEventCallback(null);
this._updating = !1;
}
if (t) {
this._am.setEventCallback(null);
var o = jsb.fileUtils.getSearchPaths(), c = this._am.getLocalManifest().getSearchPaths();
console.log("needRestart ", c);
Array.prototype.unshift.apply(o, c);
cc.sys.localStorage.setItem("HotUpdateSearchPaths", JSON.stringify(o));
jsb.fileUtils.setSearchPaths(o);
cc.audioEngine.stopAll();
setTimeout(function() {
cc.game.restart();
}, 100);
}
},
hotUpdate: function() {
if (this._am && !this._updating) {
this._am.setEventCallback(this.updateCallback.bind(this));
if (this._am.getState() === jsb.AssetsManager.State.UNINITED) {
var e = this.manifestUrl.nativeUrl;
this._am.loadLocalManifest(e);
}
this._failCount = 0;
this._am.update();
this._updating = !0;
}
},
checkCallback: function(e) {
switch (e.getEventCode()) {
case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
this.showLog("没有发现本地manifest文件，跳过了热更新.");
this.hotUpdateFinish(!0);
break;

case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
this.showLog("下载manifest文件失败，跳过热更新.");
this.hotUpdateFinish(!1);
break;

case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
this.showLog("已更新.");
this.hotUpdateFinish(!0);
break;

case jsb.EventAssetsManager.NEW_VERSION_FOUND:
this.showLog("有新版本,需要更新");
this._updating = !1;
this.hotUpdate();
return;

case jsb.EventAssetsManager.UPDATE_PROGRESSION:
var t = e.getDownloadedBytes(), i = e.getTotalBytes(), n = Math.floor(t / i * 100);
if ((n = isNaN(n) ? 0 : n) <= 100) {
this._proVal = n / 100;
this.ShowUpdateProcess(!0);
this.SetUpdateProcess(n / 100, t, i);
}
var a = e.getPercent();
if (isNaN(a)) return;
var o = e.getMessage();
console.log("checkCallback更新进度：" + a + ", msg: " + o);
return;

default:
console.log("event.getEventCode():" + e.getEventCode());
return;
}
this._am.setEventCallback(null);
this._updating = !1;
},
loadFile: function(e, t, i) {
var n = "Manifest/Main/" + e;
cc.resources.load(n, cc.Asset, function(e, n) {
if (e) cc.log("loadFile:" + e); else {
var a = jsb.fileUtils.getStringFromFile(n.nativeUrl), o = a;
i && (o = JSON.parse(a));
t && t(o);
}
});
},
_checkRemoteVisionAction: function(e) {
var t = "string" == typeof e ? JSON.parse(e) : e;
Global.resVersion = t.version;
AppLog.log("远端Version:" + Global.resVersion);
Global.saveLocal("c_resv", Global.resVersion);
var i = parseInt(t.version.split(".").join("")), n = Global.getLocal("mainLoacalVersion");
if (n) {
console.log("mainLocalVer的值:", n);
this._localAppVersion = n;
}
var a = parseInt(this._localAppVersion.split(".").join(""));
console.log("本地版本...:", this._localAppVersion);
if (a < i) {
console.log("开始检查热更....");
this.checkUpdate();
} else {
console.log("直接跳过热更....");
this.hotUpdateFinish(!0);
}
},
checkForceAppUpdate: function() {
var e = this;
this.loadFile("version", function(t) {
AppLog.log("##############url:" + t.remoteVersionUrl);
e._localAppVersion = t.version;
console.log("本地版本号:", e._localAppVersion);
e._checkOver = !1;
cc.vv.NetManager.requestHttp("", {}, function(t, i) {
if (t) {
AppLog.log("请求remoteversion完成");
if (e._checkOver) {
AppLog.log("已经检测完成...");
return;
}
e._checkOver = !0;
e._checkRemoteVisionAction(i);
} else AppLog.log("请求remoteversion完成");
}.bind(e), t.remoteVersionUrl, "GET", !1);
}, !0);
},
checkUpdate: function() {
console.log("hot------------------------------------------------- checkUpdate", this._am.getState());
if (this._updating) cc.log("检测更新中..."); else {
if (this._am.getState() === jsb.AssetsManager.State.UNINITED) {
var e = this.manifestUrl.nativeUrl;
cc.assetManager.md5Pipe && (e = cc.assetManager.md5Pipe.transformURL(e));
this._am.loadLocalManifest(e);
console.log("this.manifestUrl.nativeUrl ", this.manifestUrl.nativeUrl);
}
if (this._am.getLocalManifest() && this._am.getLocalManifest().isLoaded()) {
this._am.setEventCallback(this.checkCallback.bind(this));
this._am.checkUpdate();
this._updating = !0;
this.disPatchRateEvent(.01);
} else this.showLog("加载manifest文件失败");
}
},
hotUpdateFinish: function(e) {
cc.director.emit("HotUpdateFinish", e);
},
disPatchRateEvent: function(e) {
e > 1 && (e = 1);
cc.director.emit("HotUpdateRate", e);
},
ShowUpdateProcess: function(e) {
cc.vv.AppData.setHotupdateStart(!0);
cc.isValid(this.progressBar, !0) && this.progressBar.node && (this.progressBar.node.active = e);
},
SetUpdateProcess: function(e) {
cc.isValid(this.progressBar, !0) && (this.progressBar.progress = e);
cc.isValid(this.lblTips, !0) && (this.lblTips.string = Math.floor(100 * e) + "%");
}
});
cc._RF.pop();
}, {
MD5: "MD5"
} ],
Http: [ function(e, t) {
"use strict";
cc._RF.push(t, "e8703nRSPhBLYxIjY8zIhuS", "Http");
var i = cc.Class({
extends: cc.Component,
statics: {
_sessionId: 0,
_url: "192.168.0.158:80",
sendReq: function(e, t, n, a, o, c, s) {
void 0 === o && (o = "GET");
void 0 === c && (c = !0);
var r = cc.loader.getXMLHttpRequest();
r.timeout = s || 3e3;
var l = "";
for (var d in t) {
"" != l && (l += "&");
l += d + "=" + t[d];
}
null == a && (a = i._url);
var h = a + e;
"GET" == o && (h += "?" + encodeURI(l));
Global.localVersion && console.log("#######request url:" + h + " => " + JSON.stringify(t));
r.open(o, h, !0);
Global.isNative() && r.setRequestHeader("Accept-Encoding", "gzip,deflate", "text/html;charset=UTF-8");
r.onreadystatechange = function() {
i.onReadyStateChanged(r, n);
};
if ("POST" == o) r.send(l); else {
c || r.setRequestHeader("If-Modified-Since", "0");
r.send();
}
return r;
},
sendReqPost: function(e, t, n, a, o, c, s) {
void 0 === o && (o = "POST");
void 0 === c && (c = !0);
var r, l = cc.loader.getXMLHttpRequest();
l.timeout = s || 3e3;
null == a && (a = i._url);
var d = a + e;
l.open(o, d, !0);
r = JSON.stringify(t);
l.setRequestHeader("Content-Type", "application/json");
l.onreadystatechange = function() {
i.onReadyStateChanged(l, n);
};
if ("POST" == o) l.send(r); else {
c || l.setRequestHeader("If-Modified-Since", "0");
l.send();
}
return l;
},
onReadyStateChanged: function(e, t) {
if (4 === e.readyState) {
console.log("http res(" + e.responseText.length + "): " + e.responseText);
try {
if (e.status >= 200 && e.status < 400) {
var i = JSON.parse(e.responseText);
t && t(!0, i);
} else {
var n = "HTTP Error: " + e.status;
console.log(n);
t && t(!1, !1);
}
} catch (e) {
var a = "HTTP Error: " + e;
console.log("HTTP Error: " + e);
t(!1, a);
}
}
}
}
});
t.exports = i;
cc._RF.pop();
}, {} ],
ID: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1b6d6/nBQhJ5byVktOzKEng", "ID");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.id = "";
return t;
}
__decorate([ o ], t.prototype, "id", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
ImgSwitchCmpTS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f15f8O9RRVOOLRgItziVS7s", "ImgSwitchCmpTS");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = n.executeInEditMode, s = n.menu, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.imgSprite = null;
t.frames = [];
t._currIndex = 0;
return t;
}
Object.defineProperty(t.prototype, "currIndex", {
get: function() {
return this._currIndex;
},
set: function(e) {
if (this._currIndex != e) {
this._currIndex = e;
this.showSprite();
}
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
this.imgSprite || (this.imgSprite = this.node.getComponent(cc.Sprite));
this.imgSprite ? this.showSprite() : console.log("#error# ImgSwitchCmpTS 找不到 cc.Sprite");
};
t.prototype.showSprite = function() {
this.frames.length > 0 && (this.imgSprite.spriteFrame = this.frames[this._currIndex]);
};
t.prototype.showSpriteByName = function(e) {
if (e && this.frames) for (var t = 0; t < this.frames.length; t++) {
var i = this.frames[t];
if (i.name == e) {
this.imgSprite.spriteFrame = i;
this._currIndex = t;
}
}
};
t.prototype.setIndex = function(e) {
this._currIndex = e;
this.showSprite();
};
t.prototype.getIndex = function() {
return this._currIndex;
};
__decorate([ o(cc.Sprite) ], t.prototype, "imgSprite", void 0);
__decorate([ o({
type: [ cc.SpriteFrame ],
tooltip: "图片列表"
}) ], t.prototype, "frames", void 0);
__decorate([ o({
type: cc.Integer,
tooltip: "默认显示图片在列表中的下标"
}) ], t.prototype, "currIndex", null);
return __decorate([ a, c, s("通用/ImgSwitchCmpTS") ], t);
}(cc.Component);
i.default = r;
cc._RF.pop();
}, {} ],
ImgSwitchCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "dab1aXr/BtAEaymrI0rDHlW", "ImgSwitchCmp");
cc.Class({
extends: cc.Component,
editor: {
requireComponent: cc.Sprite,
executeInEditMode: !0
},
properties: {
frames: {
default: [],
type: [ cc.SpriteFrame ],
tooltip: "图片列表"
},
currIndex: {
default: 0,
type: cc.Integer,
tooltip: "默认显示图片在列表中的下标",
notify: function() {
this._currIndex = this.currIndex;
this.showSprite();
}
}
},
onload: function() {
this.showSprite();
},
showSprite: function() {
this.frames.length > 0 && (this.node.getComponent(cc.Sprite).spriteFrame = this.frames[this._currIndex]);
},
showSpriteByName: function(e) {
var t = this;
this.frames.forEach(function(i) {
i.name == e && (t.node.getComponent(cc.Sprite).spriteFrame = i);
});
},
setIndex: function(e) {
this._currIndex = e;
this.showSprite();
},
getIndex: function() {
return this._currIndex;
}
});
cc._RF.pop();
}, {} ],
Input_Nums: [ function(e, t) {
"use strict";
cc._RF.push(t, "565c5bUGKdLeoddXuGjUiDN", "Input_Nums");
cc.Class({
extends: cc.Component,
properties: {
nums: []
},
onLoad: function() {
for (var e = 1; e <= 12; e++) {
var t = cc.find("lays/" + e, this.node);
Global.btnClickEvent(t, this.onClickInputNums, this);
}
var i = cc.find("btn_close", this.node);
Global.btnClickEvent(i, this.onClickClose, this);
var n = cc.find("btn_close_empty", this.node);
Global.btnClickEvent(n, this.onClickClose, this);
var a = cc.find("btn_confirm", this.node);
Global.btnClickEvent(a, this.onClickConfirm, this);
},
start: function() {},
init: function(e, t, i) {
void 0 === e && (e = 1);
void 0 === t && (t = 100);
this._minVal = e;
this._maxVal = t;
this.nums = [];
this._bHasdot = null;
this._yesCall = i;
this._showCurVal();
},
setNotClose: function(e) {
this._isNotClose = e;
},
onClickInputNums: function(e) {
Global.TableSoundMgr.playCommonEff("com_click");
var t = e.node, i = Number(t.name);
if (12 == i) "." == this.nums.pop() && (this._bHasdot = !1); else if (11 == i) {
if (this._bHasdot) return;
this._bHasdot = !0;
this.nums.push(".");
} else 10 == i ? this.nums.push("0") : this.nums.push(i);
var n = this._getVal();
if (n <= this._maxVal) this._bHasdot && this._getPointNum(n) > 2 ? this.nums.pop() : Global.dispatchEvent("input_num", n); else {
12 != i ? "." == this.nums.pop() && (this._bHasdot = !1) : Global.dispatchEvent("input_num", n);
cc.vv.FloatTip.show(cc.js.formatStr("num shuld be %s ~ %s", this._minVal, this._maxVal));
}
this._showCurVal();
},
onClickClose: function() {
this._isNotClose ? this.node.active = !1 : this.node.destroy();
Global.TableSoundMgr.playCommonEff("com_click");
},
onClickConfirm: function() {
if (this._yesCall) {
var e = this._getVal();
if (e >= this._minVal && e <= this._maxVal) {
this._yesCall(e);
this.onClickClose();
} else cc.vv.FloatTip.show(cc.js.formatStr("num shuld be %s ~ %s", this._minVal, this._maxVal));
}
},
_getVal: function() {
for (var e = "", t = 0; t < this.nums.length; t++) t == this.nums.length - 1 && "." == this.nums[t] || (e += this.nums[t]);
return Number(e);
},
_getPointNum: function(e) {
var t = e.toString().split(".")[1], i = 0;
t && (i = t.length);
return i;
},
_showCurVal: function() {
var e = cc.find("node_val/lbl_num", this.node);
if (e) {
var t = this._getVal();
e.getComponent(cc.Label).string = t.toFixed(2);
}
}
});
cc._RF.pop();
}, {} ],
Interactive_emotion_ex: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "98d2fUtQ5xErpIdHuZi8cW+", "Interactive_emotion_ex");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../../../PokerBase/scripts/interactive_emoticons/PBInteractiveCtrl"), a = cc._decorator, o = a.ccclass, c = (a.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.getPlayerPos = function(e, t) {
var i = this.getPlayer(e);
if (i) {
if (i.getGlobalPos) return this.getPlayer(e).getGlobalPos(t);
var n = i.node.getComponentInChildren("UserAvatar");
return n ? n.node.convertToWorldSpaceAR(cc.v2(0, 0)) : i.node.convertToWorldSpaceAR(cc.v2(0, 0));
}
var a = cc.vv.gameData.getObserveNode();
return a ? a.convertToWorldSpaceAR(cc.v2(0, 0)) : cc.v2(0, 0);
};
t.prototype.getPlayer = function(e) {
var t = cc.vv.gameData.getScriptGame();
if (t) {
var i = t._getPlayerListScript();
if (i) {
var n = i.getPlayerNode(e);
if (n) return n.getComponent("Table_Player_Base");
if (cc.vv.UserManager.isMySelf(e)) {
var a = cc.vv.gameData.getMyNode();
if (a) return a.getComponent("Table_Player_Base");
}
}
}
};
t.prototype.playEmotionSound = function(e) {
var t = cc.find("Canvas").getComponent("Table_Logic_Base");
t && t.soundMgr && t.soundMgr.playBaseEffect(e);
};
return __decorate([ o ], t);
}(n.PBInteractiveCtrl));
i.default = c;
cc._RF.pop();
}, {
"../../../PokerBase/scripts/interactive_emoticons/PBInteractiveCtrl": "PBInteractiveCtrl"
} ],
InviteBindCodeView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5d31adfe9tPwbEbv3k62Y66", "InviteBindCodeView");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.button = null;
t.inputEdit = null;
return t;
}
t.prototype.onLoad = function() {
this.node.addComponent("NetListenerCmp").registerMsg(MsgId.EVENT_FB_INVITE_BIND_CODE, this.EVENT_FB_INVITE_BIND_CODE, this);
this.button.getComponent("ButtonGrayCmp").interactable = !1;
this.button.node.on("click", this.onClickSave, this);
};
t.prototype.onChangeText = function(e) {
var t = e.trim();
this.button.getComponent("ButtonGrayCmp").interactable = t.length > 0;
};
t.prototype.onClickSave = function() {
cc.vv.NetManager.send({
c: MsgId.EVENT_FB_INVITE_BIND_CODE,
code: this.inputEdit.string.trim()
});
};
t.prototype.EVENT_FB_INVITE_BIND_CODE = function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0); else {
cc.vv.PopupManager.removePopup(this.node);
Global.RewardFly(e.rewards, this.button.node.convertToWorldSpaceAR(cc.v2(0, 0)));
}
};
__decorate([ o(cc.Button) ], t.prototype, "button", void 0);
__decorate([ o(cc.EditBox) ], t.prototype, "inputEdit", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
InviteCodeView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "af684Ny095AeKi6reinOFNO", "InviteCodeView");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.btnFacebook = null;
t.btnWhatsApp = null;
t.btnOther = null;
t.qrSprite = null;
t.btnCopyUrl = null;
t.inputEdit = null;
t.btnBand = null;
t.itemNodeList = [];
return t;
}
Object.defineProperty(t.prototype, "title", {
get: function() {
var e, t = cc.vv.UserManager.getRegisterCoin(), i = cc.vv.UserManager.getSignTotalCoin(), n = cc.vv.UserConfig.getAppName();
if (Global.appId == Global.APPID.YonoGames) e = cc.js.formatStr("I am playing on %s India's #1 skilled gaming app. \n Join me on %s & start winning Real Cash Prizes today! \n 1️⃣ Get a Joining bonus of ₹%s free \n 2️⃣ Get a 7days login bonus of ₹%s free \n 3️⃣ 100% cashback on first deposit \n Enjoying Rummy,LUDO,Poker and 30+games with me. Click the link to download: ", n, n, t, i); else {
t = 500;
e = cc.js.formatStr("I am playing on %s India's #1 skilled gaming app. \n Join me on %s & start winning Real Cash Prizes today! \n 1️⃣ Get a Joining bonus of ₹%s free \n 2️⃣ 100% cashback on first day deposit \n 3️⃣ 150% cashback on next day deposit \n Enjoying Rummy,LUDO,Poker and 30+games with me. Click the link to download: ", n, n, t, i);
}
return e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "subTitle", {
get: function() {
return cc.vv.UserConfig.getAppName();
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "imgUrl", {
get: function() {
return "https://download.yonogames.com/share102.png";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "QRUrl", {
get: function() {
return cc.vv.UserManager.sharelink + "&pic=1";
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
var e = this, t = this.node.addComponent("NetListenerCmp");
t.registerMsg(MsgId.EVENT_FB_INVITE_CONFIG, this.EVENT_FB_INVITE_CONFIG, this);
t.registerMsg(MsgId.EVENT_FB_INVITE_REWARD, this.EVENT_FB_INVITE_REWARD, this);
this.btnCopyUrl.node.on("click", this.onClickCopyUrl, this);
this.btnFacebook.node.on("click", this.onClickFacebook, this);
this.btnWhatsApp.node.on("click", this.onClickWhatsApp, this);
this.btnOther.node.on("click", this.onClickOther, this);
cc.vv.ResManager.loadImage(this.QRUrl, function(t, i) {
i && cc.isValid(e.qrSprite) && (e.qrSprite.spriteFrame = new cc.SpriteFrame(i));
});
};
t.prototype.EVENT_FB_INVITE_CONFIG = function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0); else if (e.info) {
this.localData = e.info;
this.updateView();
}
};
t.prototype.EVENT_FB_INVITE_REWARD = function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0); else {
Global.RewardFly(e.rewards, this.clickPos);
cc.vv.NetManager.send({
c: MsgId.EVENT_FB_INVITE_CONFIG
});
}
};
t.prototype.updateView = function() {
this.localData;
};
t.prototype.onClickCopy = function() {
if (this.localData) {
cc.vv.FloatTip.show(___("复制成功"));
cc.vv.PlatformApiMgr.Copy(this.localData.code + "");
}
};
t.prototype.onClickCopyUrl = function() {
cc.vv.FloatTip.show(___("复制成功,快去通知您的好友吧"));
cc.vv.PlatformApiMgr.Copy(this.title + " " + cc.vv.UserManager.sharelink);
};
t.prototype.shareCallback = function(e) {
"-10" == e.result ? cc.vv.FloatTip.show(___("未安装Messager")) : "-11" == e.result && cc.vv.FloatTip.show(___("未安装whatsapp"));
};
t.prototype.onClickFacebook = function() {
var e = cc.vv.UserManager.sharelink;
cc.vv.PlatformApiMgr.openURL(cc.js.formatStr("https://www.facebook.com/sharer/sharer.php?u=%s", encodeURIComponent(e)));
};
t.prototype.onClickWhatsApp = function() {
var e = cc.js.formatStr("%s %s", this.title, cc.vv.UserManager.sharelink);
cc.vv.FBMgr.WhatsappShare(e, this.shareCallback.bind(this));
StatisticsMgr.reqReportNow(ReportConfig.INVITE_SHARE, "whatsapp");
};
t.prototype.onClickOther = function() {
var e = {};
e.title = this.subTitle;
e.content = cc.js.formatStr("%s %s", this.title, cc.vv.UserManager.sharelink);
e.imgUrl = this.imgUrl;
cc.vv.PlatformApiMgr.systemShare(JSON.stringify(e));
StatisticsMgr.reqReportNow(ReportConfig.INVITE_SHARE, "other");
};
__decorate([ o(cc.Node), o(cc.Button) ], t.prototype, "btnFacebook", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btnWhatsApp", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btnOther", void 0);
__decorate([ o(cc.Sprite) ], t.prototype, "qrSprite", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btnCopyUrl", void 0);
__decorate([ o(cc.EditBox) ], t.prototype, "inputEdit", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btnBand", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
IsReviewCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0da79dltjpHRIhUhXEGNqaX", "IsReviewCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = n.menu, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.isReverse = !1;
return t;
}
t.prototype.onLoad = function() {
cc.log("IsReviewCpt onLoad", Global.isIOSAndroidReview());
this.isReverse ? this.node.active = Global.isIOSAndroidReview() : this.node.active = !Global.isIOSAndroidReview();
};
__decorate([ o ], t.prototype, "isReverse", void 0);
return __decorate([ a, c("过审/IsReviewCpt") ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {} ],
ItemsConfig: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "36f5cGlkGxGeZD4DLV2AU/P", "ItemsConfig");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.CommonItemIds = i.ItemsConfigMap = void 0;
i.ItemsConfigMap = new Map([ [ 1, {
id: 1,
icon: ""
} ], [ 25, {
id: 25,
icon: ""
} ], [ 26, {
id: 26,
icon: ""
} ], [ 27, {
id: 27,
icon: ""
} ], [ 28, {
id: 28,
icon: ""
} ] ]);
i.CommonItemIds = {
Gold: 1,
Diamond: 25,
BoxBronze: 26,
BoxSilver: 27,
BoxGold: 28,
Ticket: 29,
COIN: 1,
DIAMOND: 25,
BOX_BRONZE: 26,
BOX_SILVER: 27,
BOX_GOLD: 28,
LEAGUE_TICKET: 29,
NEWERAVATAR: 30,
WEALTH_AVATAR: 31,
WEALTH_EMOTO: 32,
WEALTH_KING: 33,
BOX_DIAMOND: 34,
SKIN_FONT: 35,
PASS_EMOJI: 36,
INVITE_AVATAR: 37
};
cc._RF.pop();
}, {} ],
JettonActionInCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "cc8a4bt4RJO2p63GJYoFZCh", "JettonActionInCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = n.menu, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.key = "";
t.fromNode = null;
t.fromScale = 1;
t.animTime = 1;
t.jettonCpt = null;
t.onComplete = null;
t.newChips = 0;
return t;
}
t.prototype.getArgs = function() {
return {
fromNode: this.fromNode,
fromScale: this.fromScale,
animTime: this.animTime,
jettonCpt: this.jettonCpt,
onComplete: this.onComplete,
newChips: this.newChips
};
};
__decorate([ o(cc.String) ], t.prototype, "key", void 0);
__decorate([ o(cc.Node) ], t.prototype, "fromNode", void 0);
__decorate([ o(cc.Float) ], t.prototype, "fromScale", void 0);
__decorate([ o(cc.Float) ], t.prototype, "animTime", void 0);
return __decorate([ a, c("棋牌核心/筹码相关/筹码动作/加入") ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {} ],
JettonActionOutCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4c90dfKf+dGU4MnnmlLGg/t", "JettonActionOutCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = n.menu, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.key = "";
t.toNode = null;
t.toScale = 1;
t.animTime = 1;
t.jettonCpt = null;
t.onComplete = null;
t.layout = null;
t.newChips = 0;
return t;
}
t.prototype.getArgs = function() {
return {
toNode: this.toNode,
toScale: this.toScale,
animTime: this.animTime,
onComplete: this.onComplete,
jettonCpt: this.jettonCpt,
newChips: this.newChips,
layout: this.layout
};
};
__decorate([ o(cc.String) ], t.prototype, "key", void 0);
__decorate([ o(cc.Node) ], t.prototype, "toNode", void 0);
__decorate([ o(cc.Float) ], t.prototype, "toScale", void 0);
__decorate([ o(cc.Float) ], t.prototype, "animTime", void 0);
return __decorate([ a, c("棋牌核心/筹码相关/筹码动作/移除") ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {} ],
JettonCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ad359uZsN9FUb9GKwlq72x/", "JettonCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.FrameAttr = void 0;
var n = e("../Utils"), a = cc._decorator, o = a.ccclass, c = a.property, s = function() {
function e() {
this.frame = null;
this.range = 0;
}
__decorate([ c({
type: cc.SpriteFrame,
displayName: "纹理"
}) ], e.prototype, "frame", void 0);
__decorate([ c({
type: cc.Integer,
displayName: "范围"
}) ], e.prototype, "range", void 0);
return __decorate([ o("FrameAttr") ], e);
}();
i.FrameAttr = s;
var r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bodySprite = null;
t.frameAttrList = [];
t.chipLabel = null;
t._chips = 0;
t.layout = null;
return t;
}
Object.defineProperty(t.prototype, "chips", {
get: function() {
return this._chips;
},
set: function(e) {
this._chips = e;
if (this.frameAttrList) {
for (var t, i = 0; i < this.frameAttrList.length; ++i) {
var a = this.frameAttrList[i];
t = a;
if (e <= a.range) break;
}
t && this.bodySprite && (this.bodySprite.spriteFrame = t.frame);
this.chipLabel && (this.chipLabel.string = n.default.formatBigNum(e, 3));
}
},
enumerable: !1,
configurable: !0
});
__decorate([ c(cc.Sprite) ], t.prototype, "bodySprite", void 0);
__decorate([ c(cc.Label) ], t.prototype, "chipLabel", void 0);
__decorate([ c(cc.Float) ], t.prototype, "_chips", void 0);
__decorate([ c({
type: cc.Float,
displayName: "筹码值"
}) ], t.prototype, "chips", null);
return __decorate([ o ], t);
}(cc.Component);
i.default = r;
cc._RF.pop();
}, {
"../Utils": "Utils"
} ],
JettonLayoutCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b260bdQyUFASaYJVVtLd4/3", "JettonLayoutCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.JettonLayoutType = void 0;
var n, a = e("../Utils"), o = cc._decorator, c = o.ccclass, s = o.property, r = o.menu;
(function(e) {
e[e.Rect = 0] = "Rect";
})(n = i.JettonLayoutType || (i.JettonLayoutType = {}));
var l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.key = "";
t.list = [];
t.type = n.Rect;
t.scale = 1;
return t;
}
Object.defineProperty(t.prototype, "hashPos", {
get: function() {
var e = a.default.randomBy(-this.node.width / 2, this.node.width / 2, !1), t = a.default.randomBy(-this.node.height / 2, this.node.height / 2, !1);
return cc.v2(e, t);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "hashAngle", {
get: function() {
return a.default.randomBy(-10, 10);
},
enumerable: !1,
configurable: !0
});
t.prototype.getJetton = function(e) {
for (var t = 0, i = this.list; t < i.length; t++) {
var n = i[t];
if (n.chips == e) return n;
}
};
__decorate([ s(cc.String) ], t.prototype, "key", void 0);
__decorate([ s({
type: cc.Enum(n)
}) ], t.prototype, "type", void 0);
__decorate([ s ], t.prototype, "scale", void 0);
return __decorate([ c, r("棋牌核心/筹码相关/筹码组") ], t);
}(cc.Component);
i.default = l;
cc._RF.pop();
}, {
"../Utils": "Utils"
} ],
JettonSystem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "65444/AaJNFIZ2OO5nCUaom", "JettonSystem");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../components/JettonCpt"), a = e("../components/JettonLayoutCpt"), o = e("../System"), c = cc._decorator, s = c.ccclass, r = c.property, l = c.menu, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.frameAttrList = [];
t.jettonPrefab = null;
t.parentNode = null;
return t;
}
t.prototype.createJetton = function(e, t) {
var i = cc.instantiate(this.jettonPrefab);
i.parent = t || this.parentNode;
var a = i.getComponent(n.default);
a.frameAttrList = this.frameAttrList;
null != e && (a.chips = e);
return a;
};
t.prototype.createJettonList = function(e, t) {
for (var i = [], n = 0, a = e; n < a.length; n++) {
var o = a[n], c = this.createJetton(o, t);
i.push(c);
}
return i;
};
t.prototype.createJettonByConfig = function(e, t, i, n) {
i = i || 40;
for (var a = [], o = t.length - 1, c = t[o], s = 0; e > 0 && c && s <= i; ) if (e >= c) {
a.push(this.createJetton(c, n));
s++;
e -= c;
} else (c = t[--o]) || cc.warn("找不到合适的筹码配置:", e);
return a;
};
t.prototype.destroyJetton = function(e) {
if (e instanceof n.default) {
if (e.layout) {
var t = e.layout.list.findIndex(function(t) {
return t === e;
});
t >= 0 && e.layout.list.splice(t, 1);
}
e.node.destroy();
} else e instanceof a.default && this.destroyJettonList(e.list);
};
t.prototype.destroyJettonList = function(e) {
for (var t = e.length - 1; t >= 0; t--) this.destroyJetton(e[t]);
};
t.prototype.destroyJettonByKey = function(e) {
for (var t = 0, i = this.getCptByKey(a.default, e).list; t < i.length; t++) {
var n = i[t];
this.destroyJetton(n);
}
};
t.prototype.destroyAllJetton = function() {
for (var e = 0, t = this.getCpts(a.default); e < t.length; e++) {
var i = t[e];
this.destroyJettonList(i.list);
}
for (var o = 0, c = this.getCpts(n.default, function(e) {
return !e.layout;
}); o < c.length; o++) {
var s = c[o];
this.destroyJetton(s);
}
};
t.prototype.bindToLayout = function(e, t) {
for (var i = 0, n = e; i < n.length; i++) {
var a = n[i];
a.layout = t;
t.list.push(a);
}
return t.list;
};
t.prototype.unBindToLayout = function(e, t) {
if (e.layout) {
t = t || e.layout;
e.layout = null;
}
var i = t.list.findIndex(function(t) {
return t === e;
});
i >= 0 && t.list.splice(i, 1);
return t.list;
};
t.prototype.runNodeAction = function(e) {
e.preCallback && e.preCallback(e.node);
e.node.stopAllActions();
if (e.animTime) cc.tween(e.node).to(e.animTime, {
position: e.pos,
scale: e.scale,
angle: 360 * Math.random()
}, {
easing: "sineOut"
}).call(function() {
e.completeCallback && e.completeCallback(e.node);
}).start(); else {
e.node.position = e.pos;
e.node.scale = e.scale;
}
};
t.prototype.getAttrTByLayout = function(e, t, i) {
i = i || {};
if (t.isValid) {
i.node = t.node;
if (e.type == a.JettonLayoutType.Rect) {
var n = e.node.getBoundingBoxToWorld(), o = cc.v2(n.x, n.y).add(cc.v2(Math.random() * n.width, Math.random() * n.height));
i.pos = t.node.parent.convertToNodeSpaceAR(o);
i.scale = e.scale;
}
return i;
}
};
t.prototype.jettonInLayout = function(e, t, i) {
i = i || {};
var n = null, a = t.getArgs();
if (a.jettonCpt) {
a.jettonCpt.layout && this.unBindToLayout(a.jettonCpt, a.jettonCpt.layout);
n = a.jettonCpt;
} else a.newChips && (n = this.createJetton(a.newChips));
if (n && n.isValid) {
this.bindToLayout([ n ], e);
this.runNodeAction(this.getAttrTByLayout(e, n, {
animTime: a.animTime || .5,
preCallback: function(e) {
e.zIndex = 100;
if (a.newChips || a.fromNode) {
var t = a.fromNode.convertToWorldSpaceAR(cc.Vec2.ZERO);
e.position = cc.v3(e.parent.convertToNodeSpaceAR(t));
}
a.fromScale && (e.scale = a.fromScale);
i.onPre && i.onPre(e);
},
completeCallback: function(e) {
e.zIndex = 1;
i.onComplete && i.onComplete(e);
a.onComplete && a.onComplete();
}
}));
}
};
t.prototype.jettonOutLayout = function(e) {
var t = this, i = null, n = null, a = e.getArgs();
if (a.jettonCpt) {
i = a.jettonCpt;
n = a.jettonCpt.layout;
} else if (a.newChips) {
i = this.createJetton(a.newChips);
n = a.layout;
}
if (i && i.isValid) {
n && this.unBindToLayout(i, n);
var o = a.toNode.convertToWorldSpaceAR(cc.Vec2.ZERO), c = cc.v3(i.node.parent.convertToNodeSpaceAR(o));
this.runNodeAction({
node: i.node,
pos: c,
scale: a.toScale,
animTime: a.animTime,
preCallback: function(e) {
e.zIndex = 100;
},
completeCallback: function(e) {
e.zIndex = 1;
a.onComplete && a.onComplete();
t.destroyJetton(i);
}
});
}
};
__decorate([ r([ n.FrameAttr ]) ], t.prototype, "frameAttrList", void 0);
__decorate([ r(cc.Prefab) ], t.prototype, "jettonPrefab", void 0);
return __decorate([ s, l("棋牌核心/筹码相关/筹码系统") ], t);
}(o.default);
i.default = d;
cc._RF.pop();
}, {
"../System": "System",
"../components/JettonCpt": "JettonCpt",
"../components/JettonLayoutCpt": "JettonLayoutCpt"
} ],
JsonMgr: [ function(e, t) {
"use strict";
cc._RF.push(t, "a953ad1yI9LeppFnEEO3B08", "JsonMgr");
function i() {
i = function() {
return e;
};
var e = {}, t = Object.prototype, n = t.hasOwnProperty, a = "function" == typeof Symbol ? Symbol : {}, o = a.iterator || "@@iterator", c = a.asyncIterator || "@@asyncIterator", s = a.toStringTag || "@@toStringTag";
function r(e, t, i) {
return Object.defineProperty(e, t, {
value: i,
enumerable: !0,
configurable: !0,
writable: !0
}), e[t];
}
try {
r({}, "");
} catch (e) {
r = function(e, t, i) {
return e[t] = i;
};
}
function l(e, t, i, n) {
var a = t && t.prototype instanceof _ ? t : _, o = Object.create(a.prototype), c = new L(n || []);
return o._invoke = function(e, t, i) {
var n = "suspendedStart";
return function(a, o) {
if ("executing" === n) throw new Error("Generator is already running");
if ("completed" === n) {
if ("throw" === a) throw o;
return {
value: void 0,
done: !0
};
}
for (i.method = a, i.arg = o; ;) {
var c = i.delegate;
if (c) {
var s = b(c, i);
if (s) {
if (s === h) continue;
return s;
}
}
if ("next" === i.method) i.sent = i._sent = i.arg; else if ("throw" === i.method) {
if ("suspendedStart" === n) throw n = "completed", i.arg;
i.dispatchException(i.arg);
} else "return" === i.method && i.abrupt("return", i.arg);
n = "executing";
var r = d(e, t, i);
if ("normal" === r.type) {
if (n = i.done ? "completed" : "suspendedYield", r.arg === h) continue;
return {
value: r.arg,
done: i.done
};
}
"throw" === r.type && (n = "completed", i.method = "throw", i.arg = r.arg);
}
};
}(e, i, c), o;
}
function d(e, t, i) {
try {
return {
type: "normal",
arg: e.call(t, i)
};
} catch (e) {
return {
type: "throw",
arg: e
};
}
}
e.wrap = l;
var h = {};
function _() {}
function p() {}
function u() {}
var f = {};
r(f, o, function() {
return this;
});
var g = Object.getPrototypeOf, m = g && g(g(T([])));
m && m !== t && n.call(m, o) && (f = m);
var v = u.prototype = _.prototype = Object.create(f);
function S(e) {
[ "next", "throw", "return" ].forEach(function(t) {
r(e, t, function(e) {
return this._invoke(t, e);
});
});
}
function C(e, t) {
function i(a, o, c, s) {
var r = d(e[a], e, o);
if ("throw" !== r.type) {
var l = r.arg, h = l.value;
return h && "object" == typeof h && n.call(h, "__await") ? t.resolve(h.__await).then(function(e) {
i("next", e, c, s);
}, function(e) {
i("throw", e, c, s);
}) : t.resolve(h).then(function(e) {
l.value = e, c(l);
}, function(e) {
return i("throw", e, c, s);
});
}
s(r.arg);
}
var a;
this._invoke = function(e, n) {
function o() {
return new t(function(t, a) {
i(e, n, t, a);
});
}
return a = a ? a.then(o, o) : o();
};
}
function b(e, t) {
var i = e.iterator[t.method];
if (void 0 === i) {
if (t.delegate = null, "throw" === t.method) {
if (e.iterator.return && (t.method = "return", t.arg = void 0, b(e, t), "throw" === t.method)) return h;
t.method = "throw", t.arg = new TypeError("The iterator does not provide a 'throw' method");
}
return h;
}
var n = d(i, e.iterator, t.arg);
if ("throw" === n.type) return t.method = "throw", t.arg = n.arg, t.delegate = null, 
h;
var a = n.arg;
return a ? a.done ? (t[e.resultName] = a.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", 
t.arg = void 0), t.delegate = null, h) : a : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), 
t.delegate = null, h);
}
function E(e) {
var t = {
tryLoc: e[0]
};
1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), 
this.tryEntries.push(t);
}
function y(e) {
var t = e.completion || {};
t.type = "normal", delete t.arg, e.completion = t;
}
function L(e) {
this.tryEntries = [ {
tryLoc: "root"
} ], e.forEach(E, this), this.reset(!0);
}
function T(e) {
if (e) {
var t = e[o];
if (t) return t.call(e);
if ("function" == typeof e.next) return e;
if (!isNaN(e.length)) {
var i = -1, a = function t() {
for (;++i < e.length; ) if (n.call(e, i)) return t.value = e[i], t.done = !1, t;
return t.value = void 0, t.done = !0, t;
};
return a.next = a;
}
}
return {
next: I
};
}
function I() {
return {
value: void 0,
done: !0
};
}
return p.prototype = u, r(v, "constructor", u), r(u, "constructor", p), p.displayName = r(u, s, "GeneratorFunction"), 
e.isGeneratorFunction = function(e) {
var t = "function" == typeof e && e.constructor;
return !!t && (t === p || "GeneratorFunction" === (t.displayName || t.name));
}, e.mark = function(e) {
return Object.setPrototypeOf ? Object.setPrototypeOf(e, u) : (e.__proto__ = u, r(e, s, "GeneratorFunction")), 
e.prototype = Object.create(v), e;
}, e.awrap = function(e) {
return {
__await: e
};
}, S(C.prototype), r(C.prototype, c, function() {
return this;
}), e.AsyncIterator = C, e.async = function(t, i, n, a, o) {
void 0 === o && (o = Promise);
var c = new C(l(t, i, n, a), o);
return e.isGeneratorFunction(i) ? c : c.next().then(function(e) {
return e.done ? e.value : c.next();
});
}, S(v), r(v, s, "Generator"), r(v, o, function() {
return this;
}), r(v, "toString", function() {
return "[object Generator]";
}), e.keys = function(e) {
var t = [];
for (var i in e) t.push(i);
return t.reverse(), function i() {
for (;t.length; ) {
var n = t.pop();
if (n in e) return i.value = n, i.done = !1, i;
}
return i.done = !0, i;
};
}, e.values = T, L.prototype = {
constructor: L,
reset: function(e) {
if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, 
this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(y), 
!e) for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0);
},
stop: function() {
this.done = !0;
var e = this.tryEntries[0].completion;
if ("throw" === e.type) throw e.arg;
return this.rval;
},
dispatchException: function(e) {
if (this.done) throw e;
var t = this;
function i(i, n) {
return c.type = "throw", c.arg = e, t.next = i, n && (t.method = "next", t.arg = void 0), 
!!n;
}
for (var a = this.tryEntries.length - 1; a >= 0; --a) {
var o = this.tryEntries[a], c = o.completion;
if ("root" === o.tryLoc) return i("end");
if (o.tryLoc <= this.prev) {
var s = n.call(o, "catchLoc"), r = n.call(o, "finallyLoc");
if (s && r) {
if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
if (this.prev < o.finallyLoc) return i(o.finallyLoc);
} else if (s) {
if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
} else {
if (!r) throw new Error("try statement without catch or finally");
if (this.prev < o.finallyLoc) return i(o.finallyLoc);
}
}
}
},
abrupt: function(e, t) {
for (var i = this.tryEntries.length - 1; i >= 0; --i) {
var a = this.tryEntries[i];
if (a.tryLoc <= this.prev && n.call(a, "finallyLoc") && this.prev < a.finallyLoc) {
var o = a;
break;
}
}
o && ("break" === e || "continue" === e) && o.tryLoc <= t && t <= o.finallyLoc && (o = null);
var c = o ? o.completion : {};
return c.type = e, c.arg = t, o ? (this.method = "next", this.next = o.finallyLoc, 
h) : this.complete(c);
},
complete: function(e, t) {
if ("throw" === e.type) throw e.arg;
return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, 
this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), 
h;
},
finish: function(e) {
for (var t = this.tryEntries.length - 1; t >= 0; --t) {
var i = this.tryEntries[t];
if (i.finallyLoc === e) return this.complete(i.completion, i.afterLoc), y(i), h;
}
},
catch: function(e) {
for (var t = this.tryEntries.length - 1; t >= 0; --t) {
var i = this.tryEntries[t];
if (i.tryLoc === e) {
var n = i.completion;
if ("throw" === n.type) {
var a = n.arg;
y(i);
}
return a;
}
}
throw new Error("illegal catch attempt");
},
delegateYield: function(e, t, i) {
return this.delegate = {
iterator: T(e),
resultName: t,
nextLoc: i
}, "next" === this.method && (this.arg = void 0), h;
}
}, e;
}
function n(e, t, i, n, a, o, c) {
try {
var s = e[o](c), r = s.value;
} catch (e) {
i(e);
return;
}
s.done ? t(r) : Promise.resolve(r).then(n, a);
}
cc.Class({
extends: cc.Component,
properties: {
_data: []
},
start: function() {},
Init: function() {
this._jsonPath = "common/Json/";
},
LoadJson: function(e) {
var t, a = this;
return (t = i().mark(function t() {
var n, o;
return i().wrap(function(t) {
for (;;) switch (t.prev = t.next) {
case 0:
if (!(n = a)._data[e]) {
t.next = 5;
break;
}
return t.abrupt("return", n._data[e]);

case 5:
o = n._jsonPath + e;
t.next = 8;
return new Promise(function(t) {
cc.loader.loadRes(o, function(i, a) {
i ? cc.log(cc.js.formatStr("LoadJson %s error", e)) : n._data[e] = a.json;
t();
});
});

case 8:
return t.abrupt("return", n._data[e]);

case 9:
case "end":
return t.stop();
}
}, t);
}), function() {
var e = this, i = arguments;
return new Promise(function(a, o) {
var c = t.apply(e, i);
function s(e) {
n(c, a, o, s, r, "next", e);
}
function r(e) {
n(c, a, o, s, r, "throw", e);
}
s(void 0);
});
})();
},
GetJson: function(e) {
return this._data[e];
}
});
cc._RF.pop();
}, {} ],
KeyCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "44d8dfhVHtAv75LXliiut6P", "KeyCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = n.menu, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.key = "";
return t;
}
__decorate([ o ], t.prototype, "key", void 0);
return __decorate([ a, c("ECS/key") ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {} ],
KnockoutDeskInfoCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ff6679b7CpBt6QRvwGj36B8", "KnockoutDeskInfoCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../../../../_FWExpand/UI/TimeDownCpt"), a = e("../../../../PokerBase/scripts/player/PBPlayer"), o = e("./KnockoutDetailsInfoView"), c = e("./KnockoutRankCpt"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label_blind = null;
t.label_rank = null;
t.timeDown = null;
t.waitStartPrefab = null;
t.waitChangePrefab = null;
t.waitCountPrefab = null;
return t;
}
t.prototype.onLoad = function() {
this.netListener = this.node.addComponent("NetListenerCmp");
this.timeDown.setUpdateFunc(function(e, t) {
t.string = e > 0 ? "<b><color=#FFDA48>" + Global.formatSecond(e, "mm:ss") + "</color></b>" : "";
});
};
t.prototype.onEnable = function() {
this.netListener.registerMsg(MsgId.GET_KNOCKOUT_INFO, this.GET_KNOCKOUT_INFO, this);
this.netListener.registerMsg(MsgId.REQ_KNOCKOUT_UPDATE, this.REQ_KNOCKOUT_UPDATE, this);
this.netListener.registerMsg(MsgId.REQ_KNOCKOUT_CHANGE, this.REQ_KNOCKOUT_CHANGE, this);
this.netListener.registerMsg(MsgId.REQ_KNOCKOUT_COUNT, this.REQ_KNOCKOUT_COUNT, this);
this.netListener.registerMsg(MsgId.REQ_KNOCKOUT_LOSE, this.REQ_KNOCKOUT_LOSE, this);
this.netListener.registerMsg(MsgId.REQ_KNOCKOUT_OVER, this.REQ_KNOCKOUT_OVER, this);
};
t.prototype.onDisable = function() {
this.netListener.clear();
};
t.prototype.init = function(e) {
this.deskInfo = e;
this.node.active = !0;
cc.vv.NetManager.send({
c: MsgId.GET_KNOCKOUT_INFO,
tn_id: e.conf.tn_id,
reconnect: 1
});
};
t.prototype.close = function() {
this.node.active = !1;
};
t.prototype.closeAllPanel = function() {
this.closeReady();
this.closeChange();
this.closeCount();
};
t.prototype.updateView = function() {
if (this.localData) {
var e = this.localData.tn_info;
if (e) {
var t = Math.ceil(new Date().getTime() / 1e3);
this.label_blind.string = e.bet;
this.updateAllMathRank();
if (11 == this.deskInfo.state) {
this.timeDown.pause = !0;
this.timeDown.node.active = !0;
this.timeDown.timelife = e.stop_time - e.start_time;
this.label_rank.string = "0/" + e.curr_cnt;
if (this.waitStartNode) {
cc.find("node_people/value_need", this.waitStartNode).getComponent(cc.Label).string = e.min_cnt;
cc.find("node_people/value_cur", this.waitStartNode).getComponent(cc.Label).string = e.join_cnt;
var i = e.start_time - Math.ceil(new Date().getTime() / 1e3);
if (i > 0) {
cc.find("node_time", this.waitStartNode).active = !0;
cc.find("label_hint", this.waitStartNode).active = !1;
this.waitStartNode.getComponentInChildren(n.default).timelife = i;
} else {
cc.find("node_time", this.waitStartNode).active = !1;
cc.find("label_hint", this.waitStartNode).active = !0;
}
}
} else {
for (var a = 0, o = e.players; a < o.length; a++) {
var c = o[a];
c.uid == cc.vv.UserManager.uid && (this.label_rank.string = c.ord + "/" + e.join_cnt);
}
if ([ 5, 12, 13 ].indexOf(this.deskInfo.state) >= 0) {
this.timeDown.pause = !0;
this.timeDown.node.active = !0;
this.timeDown.timelife = 0;
} else {
this.timeDown.pause = !1;
this.timeDown.node.active = !0;
this.timeDown.timelife = e.stop_time - t;
}
}
}
}
};
t.prototype.showReady = function() {
var e = this;
cc.vv.PopupManager.removeAll();
cc.vv.PopupManager.addPopup(this.waitStartPrefab, {
noTouchClose: !0,
noCloseHit: !0,
opacityIn: !0,
touchThrough: !0,
noMask: !0,
onShow: function(t) {
e.waitStartNode = t;
e.waitStartNode.getComponentInChildren(n.default).setCallback(function() {
cc.find("node_time", e.waitStartNode).active = !1;
cc.find("label_hint", e.waitStartNode).active = !0;
});
}
});
};
t.prototype.closeReady = function() {
cc.vv.PopupManager.removePopup(this.waitStartNode);
this.waitStartNode = null;
};
t.prototype.showChange = function() {
var e = this;
cc.vv.PopupManager.removeAll();
cc.vv.PopupManager.addPopup(this.waitChangePrefab, {
opacityIn: !0,
noTouchClose: !0,
noCloseHit: !0,
touchThrough: !0,
noMask: !0,
onShow: function(t) {
e.waitChangeNode = t;
}
});
};
t.prototype.closeChange = function() {
cc.vv.PopupManager.removePopup(this.waitChangeNode);
this.waitChangeNode = null;
};
t.prototype.showCount = function() {
var e = this;
cc.vv.PopupManager.removeAll();
cc.vv.PopupManager.addPopup(this.waitCountPrefab, {
noTouchClose: !0,
noCloseHit: !0,
touchThrough: !0,
noMask: !0,
opacityIn: !0,
onShow: function(t) {
e.waitCountNode = t;
}
});
};
t.prototype.closeCount = function() {
cc.vv.PopupManager.removePopup(this.waitCountNode);
this.waitCountNode = null;
};
t.prototype.GET_KNOCKOUT_INFO = function(e) {
this.localData = e;
1 == e.reconnect && (11 == this.deskInfo.state ? this.showReady() : 12 == this.deskInfo.state ? this.REQ_KNOCKOUT_CHANGE(null) : 13 == this.deskInfo.state && this.REQ_KNOCKOUT_COUNT(null));
this.updateView();
};
t.prototype.REQ_KNOCKOUT_UPDATE = function(e) {
if (this.localData) {
e.join_cnt && (this.localData.tn_info.join_cnt = e.join_cnt);
e.curr_cnt && (this.localData.tn_info.curr_cnt = e.curr_cnt);
e.players && (this.localData.tn_info.players = e.players);
this.updateView();
}
};
t.prototype.REQ_KNOCKOUT_CHANGE = function() {
this.deskInfo.state = 12;
this.showChange();
};
t.prototype.REQ_KNOCKOUT_COUNT = function() {
this.deskInfo.state = 13;
this.showCount();
};
t.prototype.REQ_KNOCKOUT_LOSE = function(e) {
var t = this;
this.deskInfo.state = 13;
cc.vv.PopupManager.addPopup("BalootClient/KnockoutMatch/prefabs/KnockoutResultPlay", {
noTouchClose: !0,
noCloseHit: !0,
noMask: !0,
opacityIn: !0,
onShow: function(i) {
cc.find("label_rank", i).getComponent(cc.Label).string = e.ord;
cc.find("btn_to_lobby", i).on("click", function() {
t.doGoToHall();
});
cc.find("node_lose", i).active = !0;
cc.find("node_win", i).active = !1;
}
});
};
t.prototype.REQ_KNOCKOUT_OVER = function(e) {
var t = this;
if (this.localData && this.localData.tn_info && this.localData.tn_info.tn_id && this.localData.tn_info.tn_id == e.tn_id) {
cc.vv.PopupManager.removeAll();
for (var i = null, n = 0, a = e.players; n < a.length; n++) {
var c = a[n];
c.uid == cc.vv.UserManager.uid && (i = c);
}
if (i.rewards) {
cc.vv.PopupManager.addPopup("BalootClient/KnockoutMatch/prefabs/KnockoutDetailsInfo", {
isWait: !0,
weight: 10,
noTouchClose: !0,
noCloseHit: !0,
opacityIn: !0,
onShow: function(e) {
e.getComponent(o.default).onInit(t.localData.tn_info.tn_id, 1);
}
});
cc.vv.PopupManager.addPopup("BalootClient/KnockoutMatch/prefabs/KnockoutResultPlay", {
isWait: !0,
weight: 9,
noTouchClose: !0,
noCloseHit: !0,
opacityIn: !0,
onShow: function(e) {
cc.find("label_rank", e).getComponent(cc.Label).string = i.ord;
cc.find("btn_to_lobby", e).on("click", function() {
t.doGoToHall();
});
if (i.rewards) {
cc.find("node_win", e).active = !0;
cc.find("node_win/value", e).getComponent(cc.Label).string = i.rewards[0].count;
cc.find("node_lose", e).active = !1;
} else {
cc.find("node_lose", e).active = !0;
cc.find("node_win", e).active = !1;
}
}
});
} else cc.vv.PopupManager.addPopup("BalootClient/KnockoutMatch/prefabs/KnockoutResultPlay", {
noTouchClose: !0,
noCloseHit: !0,
opacityIn: !0,
onShow: function(e) {
cc.find("label_rank", e).getComponent(cc.Label).string = i.ord;
cc.find("btn_to_lobby", e).on("click", function() {
t.doGoToHall();
});
cc.find("node_lose", e).active = !0;
cc.find("node_win", e).active = !1;
}
});
}
};
t.prototype.updateAllMathRank = function() {
if (this.localData) for (var e = this.localData.tn_info, t = 0, i = cc.director.getScene().getComponentsInChildren(c.default); t < i.length; t++) {
var n = i[t];
n.node.active = !1;
var o = n.node.parent.getComponent(a.PBPlayer);
if (o.playerInfoVo) {
n.node.active = !0;
for (var s = 0, r = e.players; s < r.length; s++) {
var l = r[s];
o.playerInfoVo.uid == l.uid && (n.rank = l.ord);
}
}
}
};
t.prototype.doGoToHall = function() {
facade.gotoHall();
};
__decorate([ l(cc.Label) ], t.prototype, "label_blind", void 0);
__decorate([ l(cc.Label) ], t.prototype, "label_rank", void 0);
__decorate([ l(n.default) ], t.prototype, "timeDown", void 0);
__decorate([ l(cc.Prefab) ], t.prototype, "waitStartPrefab", void 0);
__decorate([ l(cc.Prefab) ], t.prototype, "waitChangePrefab", void 0);
__decorate([ l(cc.Prefab) ], t.prototype, "waitCountPrefab", void 0);
return __decorate([ r ], t);
}(cc.Component);
i.default = d;
cc._RF.pop();
}, {
"../../../../PokerBase/scripts/player/PBPlayer": "PBPlayer",
"../../../../_FWExpand/UI/TimeDownCpt": "TimeDownCpt",
"./KnockoutDetailsInfoView": "KnockoutDetailsInfoView",
"./KnockoutRankCpt": "KnockoutRankCpt"
} ],
KnockoutDetailsInfoView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "50a9dJVYC5Pt6FqeGjEM0A2", "KnockoutDetailsInfoView");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.node_prize = null;
t.node_rule = null;
t.btn_get = null;
t.tn_id = 0;
return t;
}
t.prototype.onLoad = function() {
this.netListener = this.node.addComponent("NetListenerCmp");
this.netListener.registerMsg(MsgId.GET_KNOCKOUT_INFO, this.GET_KNOCKOUT_INFO, this);
this.btn_get.node.on("click", this.onClickGet, this);
};
t.prototype.onInit = function(e, t) {
void 0 === t && (t = 0);
this.tn_id = e;
this.reqConfig();
this.node.getComponentInChildren("Tabbar").setPage(t);
};
t.prototype.reqConfig = function() {
cc.vv.NetManager.send({
c: MsgId.GET_KNOCKOUT_INFO,
tn_id: this.tn_id
});
};
t.prototype.GET_KNOCKOUT_INFO = function(e) {
this.localData = e;
this.updateView();
};
t.prototype.updateView = function() {
var e = this, t = this.localData.tn_info, i = Math.floor(new Date().getTime() / 1e3);
this.unscheduleAllCallbacks();
cc.find("info/content/buyin/value", this.node_rule).getComponent(cc.Label).string = Global.FormatNumToComma(t.buy_in);
cc.find("info/content/pool/value", this.node_rule).getComponent(cc.Label).string = Global.FormatNumToComma(t.init_coin);
if (i < t.start_time) {
cc.find("node_players", this.node_prize).getComponentInChildren("ListView").numItems = 0;
cc.find("node_pool", this.node_prize).getComponentInChildren("ListView").numItems = 0;
cc.find("node_pool/node_nodata", this.node_prize).active = !0;
cc.find("node_players/node_nodata", this.node_prize).active = !0;
cc.find("node_pool_total/layout/value", this.node_prize).getComponent(cc.Label).string = "";
cc.find("node_player_total/layout/value", this.node_prize).getComponent(cc.Label).string = "";
cc.find("node_time/layout/value", this.node_prize).getComponent(cc.Label).string = "";
} else {
cc.find("node_pool/node_nodata", this.node_prize).active = !1;
cc.find("node_players/node_nodata", this.node_prize).active = !1;
cc.find("node_pool_total/layout/value", this.node_prize).getComponent(cc.Label).string = Global.FormatNumToComma(t.pool_prize);
cc.find("node_player_total/layout/value", this.node_prize).getComponent(cc.Label).string = t.join_cnt + "/" + t.curr_cnt;
if (i > t.stop_time) {
var n = t.stop_time - t.start_time;
cc.find("node_time/layout/value", this.node_prize).getComponent(cc.Label).string = Global.formatSecond(n, "mm:ss");
} else {
var a = i - t.start_time;
cc.find("node_time/layout/value", this.node_prize).getComponent(cc.Label).string = Global.formatSecond(a, "mm:ss");
this.schedule(function() {
cc.find("node_time/layout/value", e.node_prize).getComponent(cc.Label).string = Global.formatSecond(++a, "mm:ss");
}, 1);
}
cc.find("node_players", this.node_prize).getComponentInChildren("ListView").numItems = t.players.length;
cc.find("node_pool", this.node_prize).getComponentInChildren("ListView").numItems = t.win_ratio.length;
}
for (var o = 0, c = this.localData.tn_info.players; o < c.length; o++) {
var s = c[o];
cc.vv.UserManager.uid == s.uid && (this.selfInfo = s);
}
if (this.selfInfo && this.selfInfo.rewards && cc.director.getScene().name != Global.SCENE_NAME.HALL) {
this.node_prize.height = 966;
this.node_rule.height = 966;
this.btn_get.node.active = !0;
} else {
this.node_prize.height = 1030;
this.node_rule.height = 1030;
this.btn_get.node.active = !1;
}
};
t.prototype.onUpdateItemPool = function(e, t) {
var i = this.localData.tn_info.win_ratio[t], n = t + 1;
cc.find("icon_1", e).active = 1 == n;
cc.find("icon_2", e).active = 2 == n;
cc.find("icon_3", e).active = 3 == n;
cc.find("ord", e).active = n >= 4;
cc.find("ord", e).getComponent(cc.Label).string = n;
cc.find("value", e).active = !0;
cc.find("value", e).getComponent(cc.Label).string = Global.FormatNumToComma(this.localData.tn_info.pool_prize * i / 100);
};
t.prototype.onUpdateItemPlayer = function(e, t) {
var i = this.localData.tn_info.players[t];
i.ord = i.ord || t + 1;
cc.find("icon_1", e).active = 1 == i.ord;
cc.find("icon_2", e).active = 2 == i.ord;
cc.find("icon_3", e).active = 3 == i.ord;
cc.find("ord", e).active = i.ord >= 4;
cc.find("ord", e).getComponent(cc.Label).string = i.ord;
if (i.rewards) {
cc.find("layout/coin", e).active = !0;
cc.find("layout/coin", e).getComponent(cc.Label).string = i.rewards[0].count;
} else cc.find("layout/coin", e).active = !1;
cc.find("layout/value", e).getComponent(cc.Label).string = i.playername || "";
cc.find("bg_self", e).active = cc.vv.UserManager.uid == i.uid;
};
t.prototype.onClickGet = function() {
Global.RewardFly(this.selfInfo.rewards, this.btn_get.node.convertToWorldSpaceAR(cc.v2(0, 0)));
cc.vv.PopupManager.removePopup(this.node);
};
__decorate([ o(cc.Node) ], t.prototype, "node_prize", void 0);
__decorate([ o(cc.Node) ], t.prototype, "node_rule", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btn_get", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
KnockoutHintStartView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0e86cvTlXFKmqz65I+vB+r7", "KnockoutHintStartView");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../../../../_FWExpand/UI/TimeDownCpt"), a = cc._decorator, o = a.ccclass, c = a.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.timeDown = null;
return t;
}
t.prototype.onLoad = function() {
var e = this;
this.timeDown.setTimeFormatStr("ss");
this.timeDown.setCallback(function() {
cc.vv.PopupManager.removePopup(e.node);
});
this.timeDown.setUpdateFunc(function(e, t) {
t.string = e > 0 ? "<b><color=#FFDA48>" + e + "</color>s</b>" : "";
});
cc.find("btn_play", this.node).on("click", function() {
Global.dispatchEvent("HALL_TO_GAME");
cc.vv.NetManager.send({
c: MsgId.REQ_KNOCKOUT_JOIN,
tn_id: e.localData.tn_id
}, !0);
});
};
t.prototype.onInit = function(e) {
this.localData = e;
this.updateView();
};
t.prototype.updateView = function() {
cc.find("node_time/value", this.node).getComponent(cc.Label).string = Global.formatTime("hh:mm", this.localData.start_time);
this.timeDown.timelife = this.localData.start_time - Math.ceil(new Date().getTime() / 1e3);
};
__decorate([ c(n.default) ], t.prototype, "timeDown", void 0);
return __decorate([ o ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {
"../../../../_FWExpand/UI/TimeDownCpt": "TimeDownCpt"
} ],
KnockoutMatchView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9ba97yAA3dJr53neVKE/U4B", "KnockoutMatchView");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./scripts/KnockoutDetailsInfoView"), a = e("./scripts/KnockoutResultRegisterView"), o = cc._decorator, c = o.ccclass, s = o.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.headNodes = [];
t.infoNode = null;
t.listViewNode = null;
t.detailPrefab = null;
t.registerHintPrefab = null;
return t;
}
Object.defineProperty(t.prototype, "prizeUint", {
get: function() {
return Global.isYDApp() ? "" : "@";
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
this.netListener = this.node.addComponent("NetListenerCmp");
this.listView = this.listViewNode.getComponent("ListView");
};
t.prototype.onEnable = function() {
this.netListener.registerMsg(MsgId.GET_KNOCKOUT_CONFIG, this.GET_KNOCKOUT_CONFIG, this);
this.netListener.registerMsg(MsgId.REQ_KNOCKOUT_REGISTER, this.REQ_KNOCKOUT_REGISTER, this);
this.schedule(this.updateView.bind(this), 1);
this.schedule(this.reqConfig.bind(this), 30);
this.reqConfig();
};
t.prototype.onDisable = function() {
this.netListener.clear();
this.unscheduleAllCallbacks();
};
t.prototype.reqConfig = function() {
cc.vv.NetManager.sendAndCache({
c: MsgId.GET_KNOCKOUT_CONFIG
}, !0);
};
t.prototype.GET_KNOCKOUT_CONFIG = function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0); else {
this.localData = Global.deepClone(e);
this.updateView();
}
};
t.prototype.REQ_KNOCKOUT_REGISTER = function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0); else {
if (e.is_auto) {
Global.dispatchEvent("HALL_TO_GAME");
cc.vv.NetManager.send({
c: MsgId.REQ_KNOCKOUT_JOIN,
tn_id: e.tn_info.tn_id
}, !0);
} else cc.vv.PopupManager.addPopup(this.registerHintPrefab, {
scaleIn: !0,
noCloseHit: !0,
onShow: function(t) {
t.getComponent(a.default).onInit(0 == e.undo, e.tn_info);
}
});
this.reqConfig();
}
};
t.prototype.updateView = function() {
if (this.localData) {
if (this.localData.his_winner) {
for (var e = 0; e < this.headNodes.length; e++) {
var t = this.headNodes[e], i = this.localData.his_winner.players[e];
if (i) {
t.active = !0;
cc.find("head", t).getComponent("HeadCmp").setHead(i.uid, i.usericon);
cc.find("head", t).getComponent("HeadCmp").setAvatarFrame(i.avatarframe);
cc.find("name/value", t).getComponent(cc.Label).string = i.playername;
cc.find("coin/value", t).getComponent(cc.Label).string = this.prizeUint + Global.FormatNumToComma(i.rewards[0].count);
} else t.active = !1;
}
var n = this.localData.his_winner.tn_info;
cc.find("label_time", this.infoNode).getComponent(cc.Label).string = Global.formatTime("hh:mm", n.start_time);
cc.find("label_game", this.infoNode).getComponent(cc.Label).string = cc.vv.UserConfig.getGameName(n.gameid);
cc.find("icon_pool/value", this.infoNode).getComponent(cc.Label).string = this.prizeUint + Global.FormatNumToComma(n.pool_prize);
cc.find("icon_buyin/value", this.infoNode).getComponent(cc.Label).string = Global.FormatNumToComma(n.buy_in);
}
for (var a = 0, o = this.localData.list.length; [ 4, 5 ].indexOf(this.localData.list[0].state) >= 0 && a < o; ) {
var c = this.localData.list.shift();
a++;
c && this.localData.list.push(c);
}
this.listView.numItems = this.localData.list.length;
}
};
t.prototype.onUpdateItem = function(e, t) {
var i = this.localData.list[t];
cc.vv.UserConfig.setGameCafeFrame(cc.find("game_icon", e).getComponent(cc.Sprite), i.gameid);
cc.vv.UserConfig.setGameTitleFrame(cc.find("game_name", e).getComponent(cc.Sprite), i.gameid);
cc.find("start_time/value", e).getComponent(cc.Label).string = Global.formatTime("hh:mm", i.start_time);
cc.find("node_people/value", e).getComponent(cc.Label).string = ___("Players {1}/{2}", i.curr_cnt, i.max_cnt);
cc.find("icon_pool/value", e).getComponent(cc.Label).string = this.prizeUint + Global.FormatNumToComma(i.pool_prize);
cc.find("icon_buyin/value", e).getComponent(cc.Label).string = Global.FormatNumToComma(i.buy_in);
cc.find("icon_buyin", e).active = !0;
var n = Math.ceil(new Date().getTime() / 1e3);
cc.find("layout/btn_deregister", e).active = !1;
cc.find("layout/btn_register", e).active = !1;
cc.find("layout/btn_play", e).active = !1;
cc.find("layout/btn_play&register", e).active = !1;
cc.find("layout/label_running", e).active = !1;
cc.find("layout/label_end", e).active = !1;
cc.find("layout/label_registered", e).active = !1;
for (var a = null, o = 0, c = i.players; o < c.length; o++) {
var s = c[o];
s.uid == cc.vv.UserManager.uid && (a = s);
}
a && [ 2, 3 ].indexOf(a.state) >= 0 ? cc.find("node_played", e).active = !0 : cc.find("node_played", e).active = !1;
if ([ 4, 5 ].indexOf(i.state) >= 0) cc.find("layout/label_end", e).active = !0; else if (a && [ 3 ].indexOf(a.state) >= 0) cc.find("layout/label_running", e).active = !0; else if ([ 3 ].indexOf(i.state) >= 0) cc.find("layout/label_running", e).active = !0; else if (n < i.start_time - i.ahead_time) 1 == i.is_register ? Global.isYDApp() ? cc.find("layout/btn_deregister", e).active = !0 : cc.find("layout/label_registered", e).active = !0 : cc.find("layout/btn_register", e).active = !0; else if (n < i.start_time + i.deadline_time) if (1 == i.is_register) {
Global.isYDApp() && (cc.find("layout/btn_deregister", e).active = !0);
cc.find("layout/btn_play", e).active = !0;
cc.find("icon_buyin", e).active = !1;
} else cc.find("layout/btn_play&register", e).active = !0; else n < i.stop_time ? cc.find("layout/label_running", e).active = !0 : cc.find("layout/label_end", e).active = !0;
};
t.prototype.onClickDetail = function(e) {
var t = this.localData.list[e.currentTarget.parent._listId];
cc.vv.PopupManager.addPopup(this.detailPrefab, {
scaleIn: !0,
onShow: function(e) {
e.getComponent(n.default).onInit(t.tn_id);
}
});
};
t.prototype.onClickPlay = function(e) {
Global.dispatchEvent("HALL_TO_GAME");
var t = this.localData.list[e.currentTarget.parent.parent._listId];
cc.vv.NetManager.send({
c: MsgId.REQ_KNOCKOUT_JOIN,
tn_id: t.tn_id
}, !0);
};
t.prototype.onClickPlayRegister = function(e) {
var t = this.localData.list[e.currentTarget.parent.parent._listId];
cc.vv.NetManager.send({
c: MsgId.REQ_KNOCKOUT_REGISTER,
tn_id: t.tn_id,
undo: 0,
is_auto: 1
});
};
t.prototype.onClickRegister = function(e) {
var t = this.localData.list[e.currentTarget.parent.parent._listId];
cc.vv.NetManager.send({
c: MsgId.REQ_KNOCKOUT_REGISTER,
tn_id: t.tn_id,
undo: 0,
is_auto: 0
});
};
t.prototype.onClickDeregister = function(e) {
var t = this.localData.list[e.currentTarget.parent.parent._listId];
cc.vv.NetManager.send({
c: MsgId.REQ_KNOCKOUT_REGISTER,
tn_id: t.tn_id,
undo: 1,
is_auto: 0
});
};
__decorate([ s([ cc.Node ]) ], t.prototype, "headNodes", void 0);
__decorate([ s(cc.Node) ], t.prototype, "infoNode", void 0);
__decorate([ s(cc.Node) ], t.prototype, "listViewNode", void 0);
__decorate([ s(cc.Prefab) ], t.prototype, "detailPrefab", void 0);
__decorate([ s(cc.Prefab) ], t.prototype, "registerHintPrefab", void 0);
return __decorate([ c ], t);
}(cc.Component);
i.default = r;
cc._RF.pop();
}, {
"./scripts/KnockoutDetailsInfoView": "KnockoutDetailsInfoView",
"./scripts/KnockoutResultRegisterView": "KnockoutResultRegisterView"
} ],
KnockoutRankCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "830c7su/FFB5K22onjL1mtx", "KnockoutRankCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label_value = null;
return t;
}
Object.defineProperty(t.prototype, "rank", {
set: function(e) {
this.label_value.string = e ? ___("No.{1}", e) : "";
},
enumerable: !1,
configurable: !0
});
__decorate([ o(cc.Label) ], t.prototype, "label_value", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
KnockoutResultRegisterView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a478b9Wud1IcKrh3qb/xQ9v", "KnockoutResultRegisterView");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../../../../_FWExpand/UI/TimeDownCpt"), a = cc._decorator, o = a.ccclass, c = a.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.timeDown = null;
t.isJoin = !1;
return t;
}
t.prototype.onLoad = function() {
var e = this;
this.timeDown.setTimeFormatStr("hh:mm:ss");
this.timeDown.setCallback(this.updateView.bind(this));
cc.find("btn_play", this.node).on("click", function() {
Global.dispatchEvent("HALL_TO_GAME");
cc.vv.NetManager.send({
c: MsgId.REQ_KNOCKOUT_JOIN,
tn_id: e.localData.tn_id
}, !0);
});
};
t.prototype.onInit = function(e, t) {
this.localData = t;
this.isJoin = e;
this.updateView();
};
t.prototype.updateView = function() {
var e = this.localData;
cc.vv.UserConfig.setGameIconFrame(cc.find("game_icon", this.node).getComponent(cc.Sprite), e.gameid);
cc.vv.UserConfig.setGameTitleFrame(cc.find("game_name", this.node).getComponent(cc.Sprite), e.gameid);
cc.find("node_time/value", this.node).getComponent(cc.Label).string = Global.formatTime("hh:mm", e.start_time);
cc.find("node_title/text_knockout_title_registered_en", this.node).active = this.isJoin;
cc.find("node_title/text_knockout_title_cancel_en", this.node).active = !this.isJoin;
cc.find("node_status/icon_knockout_join", this.node).active = this.isJoin;
cc.find("node_status/icon_knockout_cancel", this.node).active = !this.isJoin;
cc.find("node_start_hint", this.node).active = this.isJoin;
cc.find("node_cancel_hint", this.node).active = !this.isJoin;
cc.find("btn_ok", this.node).active = !1;
cc.find("btn_play", this.node).active = !1;
var t = Math.ceil(new Date().getTime() / 1e3);
if (this.isJoin) {
this.timeDown.timelife = e.start_time - t;
if (t > e.start_time - e.ahead_time) {
cc.find("btn_play", this.node).active = !0;
cc.find("node_start_hint", this.node).active = !1;
} else cc.find("btn_ok", this.node).active = !0;
} else cc.find("btn_ok", this.node).active = !0;
};
__decorate([ c(n.default) ], t.prototype, "timeDown", void 0);
return __decorate([ o ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {
"../../../../_FWExpand/UI/TimeDownCpt": "TimeDownCpt"
} ],
KnockoutScheduleView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4cc053EujtKe6LdKdVGzn2N", "KnockoutScheduleView");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.listViewNode = null;
return t;
}
t.prototype.onLoad = function() {
this.netListener = this.node.addComponent("NetListenerCmp");
this.listView = this.listViewNode.getComponent("ListView");
this.netListener.registerMsg(MsgId.GET_KNOCKOUT_CONFIG, this.GET_KNOCKOUT_CONFIG, this);
};
t.prototype.onEnable = function() {
this.schedule(this.updateView.bind(this), 1);
this.reqConfig();
};
t.prototype.reqConfig = function() {
cc.vv.NetManager.sendAndCache({
c: MsgId.GET_KNOCKOUT_CONFIG
}, !0);
};
t.prototype.GET_KNOCKOUT_CONFIG = function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0); else {
this.localData = Global.deepClone(e);
this.updateView();
}
};
t.prototype.updateView = function() {
for (var e = 0, t = this.localData.list.length; [ 4, 5 ].indexOf(this.localData.list[0].state) >= 0 && e < t; ) {
var i = this.localData.list.shift();
e++;
i && this.localData.list.push(i);
}
this.listView.numItems = this.localData.list.length;
};
t.prototype.onUpdateItem = function(e, t) {
var i = this.localData.list[t];
cc.find("layout/start", e).getComponent(cc.Label).string = Global.formatTime("hh:mm", i.start_time);
cc.find("layout/people", e).getComponent(cc.Label).string = Global.FormatNumToComma(i.curr_cnt);
cc.find("layout/pool", e).getComponent(cc.Label).string = Global.FormatNumToComma(i.pool_prize);
cc.find("layout/buyin", e).getComponent(cc.Label).string = Global.FormatNumToComma(i.buy_in);
var n = new Date().getTime() / 1e3;
cc.find("layout/layout/btn_deregister", e).active = !1;
cc.find("layout/layout/btn_register", e).active = !1;
cc.find("layout/layout/btn_play", e).active = !1;
cc.find("layout/layout/btn_play&register", e).active = !1;
cc.find("layout/layout/label_running", e).active = !1;
cc.find("layout/layout/label_end", e).active = !1;
cc.find("layout/layout/label_registered", e).active = !1;
for (var a = null, o = 0, c = i.players; o < c.length; o++) {
var s = c[o];
s.uid == cc.vv.UserManager.uid && (a = s);
}
[ 4, 5 ].indexOf(i.state) >= 0 ? cc.find("layout/layout/label_end", e).active = !0 : a && [ 3 ].indexOf(a.state) >= 0 ? cc.find("layout/layout/label_running", e).active = !0 : [ 3 ].indexOf(i.state) >= 0 ? cc.find("layout/layout/label_running", e).active = !0 : n < i.start_time - i.ahead_time ? 1 == i.is_register ? Global.isYDApp() ? cc.find("layout/layout/btn_deregister", e).active = !0 : cc.find("layout/layout/label_registered", e).active = !0 : cc.find("layout/layout/btn_register", e).active = !0 : n < i.start_time + i.deadline_time ? 1 == i.is_register ? Global.isYDApp() ? cc.find("layout/layout/btn_deregister", e).active = !0 : cc.find("layout/layout/label_registered", e).active = !0 : cc.find("layout/layout/btn_play&register", e).active = !0 : n < i.stop_time ? cc.find("layout/layout/label_running", e).active = !0 : cc.find("layout/layout/label_end", e).active = !0;
};
t.prototype.onClickPlay = function(e) {
var t = this.localData.list[e.currentTarget.parent.parent.parent._listId];
Global.dispatchEvent("HALL_TO_GAME");
cc.vv.NetManager.send({
c: MsgId.REQ_KNOCKOUT_JOIN,
tn_id: t.tn_id
}, !0);
};
t.prototype.onClickPlayRegister = function(e) {
var t = this.localData.list[e.currentTarget.parent.parent.parent._listId];
cc.vv.NetManager.send({
c: MsgId.REQ_KNOCKOUT_REGISTER,
tn_id: t.tn_id,
undo: 0,
is_auto: 1
});
};
t.prototype.onClickRegister = function(e) {
var t = this.localData.list[e.currentTarget.parent.parent.parent._listId];
cc.vv.NetManager.send({
c: MsgId.REQ_KNOCKOUT_REGISTER,
tn_id: t.tn_id,
undo: 0,
is_auto: 0
});
};
t.prototype.onClickDeregister = function(e) {
var t = this.localData.list[e.currentTarget.parent.parent.parent._listId];
cc.vv.NetManager.send({
c: MsgId.REQ_KNOCKOUT_REGISTER,
tn_id: t.tn_id,
undo: 1,
is_auto: 0
});
};
__decorate([ o(cc.Node) ], t.prototype, "listViewNode", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
LMSlotMachine_MenuNode: [ function(e, t) {
"use strict";
cc._RF.push(t, "c2b41HWJs9Nm5DianhCSxD9", "LMSlotMachine_MenuNode");
var i = "slots_common/SlotRes/";
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.registerEvent();
Global.btnClickEvent(cc.find("btn_close", this.node), this.onBtnMenuClose, this);
var e = cc.find("btn_sound", this.node);
Global.btnClickEvent(e, this.onMenuSoundClicked, this);
var t = cc.find("btn_music", this.node);
Global.btnClickEvent(t, this.onMenuMusicClicked, this);
this.checkSoundVal();
Global.btnClickEvent(cc.find("btn_help", this.node), this.onMenuHelpClicked, this);
Global.btnClickEvent(cc.find("btn_exit", this.node), this.onMenuExit, this);
},
start: function() {
var e = new cc.Node("node_out");
e.addComponent(cc.Button);
e.parent = this.node;
e.width = 10 * cc.winSize.width;
e.height = 10 * cc.winSize.height;
var t = this.node.convertToNodeSpaceAR(cc.v2(cc.winSize.width / 2, cc.winSize.height / 2));
e.x = t.x;
e.y = t.y;
e.zIndex = -1;
Global.btnClickEvent(e, this.onBtnMenuClose, this);
cc.find("btn_help", this.node).active = !this._bInHall;
},
onDestroy: function() {
this._endCall && this._endCall();
},
registerEvent: function() {
cc.vv.gameData && cc.vv.gameData._EventId.SLOT_HIDE_MENU && Global.registerEvent(cc.vv.gameData._EventId.SLOT_HIDE_MENU, this.onEventHideMenu, this);
},
setCloseCall: function(e) {
this._endCall = e;
},
setIsInHall: function(e) {
this._bInHall = e;
},
checkSoundVal: function() {
var e = cc.find("btn_sound", this.node);
e.getChildByName("on").active = cc.vv.AudioManager.getEffVolume() > 0;
e.getChildByName("off").active = !e.getChildByName("on").active;
var t = cc.find("btn_music", this.node), i = t.getChildByName("on"), n = t.getChildByName("off");
i.active = cc.vv.AudioManager.getBgmVolume() > 0;
n.active = !i.active;
},
onMenuSoundClicked: function() {
cc.vv.AudioManager.playEff(i, "common_click", !0);
var e = cc.find("btn_sound", this.node);
e.getChildByName("on").active = !e.getChildByName("on").active;
e.getChildByName("off").active = !e.getChildByName("on").active;
var t = e.getChildByName("on").active ? 1 : 0;
cc.vv.AudioManager.setEffVolume(t);
StatisticsMgr.reqReport(t ? StatisticsMgr.REQ_HALL_EFFECT_OPEN : StatisticsMgr.REQ_HALL_EFFECT_CLOSE);
},
onMenuMusicClicked: function() {
cc.vv.AudioManager.playEff(i, "common_click", !0);
var e = cc.find("btn_music", this.node);
e.getChildByName("on").active = !e.getChildByName("on").active;
e.getChildByName("off").active = !e.getChildByName("on").active;
var t = e.getChildByName("on").active ? 1 : 0;
cc.vv.AudioManager.setBgmVolume(t);
StatisticsMgr.reqReport(t ? StatisticsMgr.REQ_HALL_BGM_OPEN : StatisticsMgr.REQ_HALL_BGM_CLOSE);
},
onMenuHelpClicked: function() {
var e = this;
if (cc.vv.gameData) {
var t, i, n;
(n = (t = cc.vv.gameData.getGameCfg()).help_prefab) || (n = "slots_common/SlotRes/prefab/LMSlots_Help_prefab");
(i = t.help_prefab_cfg) || (i = "LMSlots_Help_Base");
if (!n) {
console.log("未在cfg中配置help预制的路径");
return;
}
cc.loader.loadRes(n, cc.Prefab, function(t, n) {
if (!t) {
var a = e.node.parent.getChildByName("help_node");
if (a) a.active = !0; else {
(a = cc.instantiate(n)).getComponent(i) || a.addComponent(i);
a.name = "help_node";
a.parent = e.node.parent;
a.active = !0;
}
}
e.node.destroy();
});
}
},
SetBackLobby: function(e) {
cc.find("btn_exit", this.node).getComponent(cc.Button).interactable = e;
},
onMenuExit: function() {
cc.vv.AudioManager.playEff(i, "common_click", !0);
if (cc.vv.gameData) {
if (this._bSendExist) return;
this._bSendExist = !0;
var e = this;
this.scheduleOnce(function() {
e._bSendExist = !1;
}, 2);
cc.vv.gameData.ReqBackLobby();
}
},
onEventHideMenu: function() {
this.node.destroy();
},
onBtnMenuClose: function() {
cc.vv.AudioManager.playEff(i, "common_click", !0);
this.node.destroy();
}
});
cc._RF.pop();
}, {} ],
LMSlotMachine_PrizePool: [ function(e, t) {
"use strict";
cc._RF.push(t, "ad634sz45tEsImtk/cu1YrR", "LMSlotMachine_PrizePool");
cc.Class({
extends: cc.Component,
properties: {
_jackpotBase: 0,
_jackpotNum: 0,
_jackpotMax: 0,
_updateTime: .1,
_unlockBetNum: 0,
jMult: {
default: 1,
tooltip: "jackpt默认显示比例"
},
dataType: {
default: 0,
tooltip: "-1随机,0 mini,1 minior,2 major,3 grand(mega)"
},
_bet: 1e4,
_gameId: -1,
_mult: 1
},
onLoad: function() {
this._jackpotLabel = cc.find("lbl_num", this.node).getComponent(cc.Label);
this._mult = this.jMult;
-1 == this._gameId && (this._gameId = cc.vv.AppData.getGameId());
if (cc.vv.gameData && this._gameId > 0 && cc.vv.gameData._EventId) {
this._bet = cc.vv.gameData.GetTotalBet();
Global.registerEvent(cc.vv.gameData._EventId.SLOT_TOTALBET_UPDATED, this.onEventTotalbetUpdated, this);
var e = cc.vv.gameData.getGameJackpot();
e && e.unlock && this.dataType < e.unlock.length && (this._unlockBetNum = e.unlock[this.dataType]);
}
this.initData();
Global.registerEvent(EventId.REFUSH_GAME_JP, this.onEventRefushJPData, this);
this.updateJackPot();
},
start: function() {},
GetPoolType: function() {
return this.dataType;
},
GetUnLockNum: function() {
return this._unlockBetNum;
},
isLocked: function() {
return this._bet < this._unlockBetNum;
},
init: function(e, t) {
this._gameId = e;
this._bet = t;
this.initData();
this.updateJackPot();
},
onEventTotalbetUpdated: function(e, t) {
this._bet = e.detail;
var i = t;
this.initData();
if (this.isLocked() != this._bLock) {
this._bLock = this.isLocked();
Global.dispatchEvent(cc.vv.gameData._EventId.SLOT_JACKPOOL_LOCK_CHANGE, {
poolIdx: this.dataType,
val: this._bLock,
unLockBet: this._unlockBetNum,
bInit: i
});
}
},
setMult: function(e) {
this._mult = e;
},
PausePrizePool: function(e) {
this._PauseNum = e;
this._isPause = !0;
this.updateJackPot();
},
RestPrizePool: function() {
this._PauseNum = null;
this._isPause = !1;
},
initData: function() {
this._jackpotBase = Math.floor(100 * (.9 + .2 * Math.random()));
var e = cc.vv.AppData.getGameJackpot(this._gameId);
this.dataType < e.length && (this._jackpotBase = e[this.dataType]);
this._jackpotNum = this._bet * this._jackpotBase * (.95 + .1 * Math.random());
this._jackpotMax = this._jackpotNum * (1.05 + .05 * Math.random());
},
update: function(e) {
if (this._jackpotNum > 0 && !this._isPause) {
this._updateTime += e;
if (this._updateTime < .1) return;
this._updateTime = 0;
var t = this._jackpotNum * (1 + 4 * Math.random()) / 1e4;
t > 1e7 && (t /= 2);
this._jackpotNum += t;
this._jackpotNum > this._jackpotMax && this.initData();
this.updateJackPot();
}
},
updateJackPot: function() {
if (this._jackpotLabel) if (this._PauseNum) {
var e = Global.S2P(this._PauseNum * this._mult);
this._jackpotLabel.string = Global.FormatNumToComma(e);
} else {
var t = Global.S2P(this._jackpotNum * this._mult);
this._jackpotLabel.string = Global.FormatNumToComma(t);
}
},
onEventRefushJPData: function() {
this.initData();
},
getJackpotLabel: function() {
return this._jackpotLabel;
}
});
cc._RF.pop();
}, {} ],
LMSlots_Asset_Base: [ function(e, t) {
"use strict";
cc._RF.push(t, "e131eCLlMVOAYbIH91vb71T", "LMSlots_Asset_Base");
cc.Class({
extends: cc.Component,
properties: {
prefabs: {
default: [],
type: [ cc.Prefab ]
},
atlas: {
default: [],
type: [ cc.SpriteAtlas ]
},
sprites: {
default: [],
type: [ cc.SpriteFrame ]
},
fonts: {
default: [],
type: [ cc.Font ]
}
},
start: function() {},
onDestroy: function() {
for (var e = 0; e < this.prefabs.length; e++) {
var t = cc.loader.getDependsRecursively(this.prefabs[e]);
cc.loader.release(t);
}
for (var i = 0; i < this.atlas.length; i++) {
var n = cc.loader.getDependsRecursively(this.atlas[i]);
cc.loader.release(n);
}
for (var a = 0; a < this.sprites.length; a++) {
var o = cc.loader.getDependsRecursively(this.sprites[a]);
cc.loader.release(o);
}
for (var c = 0; c < this.fonts.length; c++) {
var s = cc.loader.getDependsRecursively(this.fonts[c]);
cc.loader.release(s);
}
},
GetPrefabByName: function(e) {
for (var t = 0; t < this.prefabs.length; t++) {
var i = this.prefabs[t];
if (e == i.name) return i;
}
},
GetAtlasByName: function(e) {
for (var t = 0; t < this.atlas.length; t++) {
var i = this.atlas[t];
if (e + ".plist" == i.name) return i;
}
},
GetSpriteByName: function(e) {
for (var t = 0; t < this.sprites.length; t++) {
var i = this.sprites[t];
if (e == i.name) return i;
}
},
GetFontByName: function(e) {
for (var t = 0; t < this.fonts.length; t++) {
var i = this.fonts[t];
if (e == i.name) return i;
}
}
});
cc._RF.pop();
}, {} ],
LMSlots_Bg_Adapt: [ function(e, t) {
"use strict";
cc._RF.push(t, "794dferuZJORqVirD1L4Lja", "LMSlots_Bg_Adapt");
cc.Class({
extends: cc.Component,
properties: {
ipad_auto: {
displayName: "ipad上的自动缩放",
tooltip: "挂载了这个就不要再挂widget组建了",
default: !0
}
},
onLoad: function() {
if (cc.sys.platform == cc.sys.IPAD && this.ipad_auto) {
var e = cc.winSize.width / this.node.width, t = cc.winSize.height / this.node.height;
this.node.scale = e > t ? e : t;
}
}
});
cc._RF.pop();
}, {} ],
LMSlots_Bottom_Base: [ function(e, t) {
"use strict";
cc._RF.push(t, "ce41872bEJB45JwmOBesPYA", "LMSlots_Bottom_Base");
cc.Class({
extends: cc.Component,
properties: {
_btn_spin: null,
_btn_stop: null,
_btn_stop_auto: null,
_btn_add_bet: null,
_btn_minus_bet: null,
_btn_max_bet: null,
_bAutoModel: !1,
_bStartRound: !1,
_bFreeModel: !1,
LONGTOUCHSPINE: 1,
_currBottomCoin: 0
},
onLoad: function() {
this._btn_spin = cc.find("btn_spin", this.node);
this._btn_stop = cc.find("btn_stop", this.node);
this._btn_stop_auto = cc.find("btn_stopAuto", this.node);
this._btn_add_bet = cc.find("totalBetBg/btn_add", this.node);
this._btn_minus_bet = cc.find("totalBetBg/btn_minus", this.node);
this._btn_max_bet = cc.find("btn_max", this.node);
this._lbl_total_bet = cc.find("totalBetBg/lbl_betNum", this.node);
this._btn_auto = cc.find("btn_auto", this.node);
this._InitAutoPanl();
Global.btnClickEvent(this._btn_spin, this.OnClickSpin, this);
this._btnSpinAni = cc.find("node_ani", this.node);
Global.btnClickEvent(this._btn_stop, this.OnClickStop, this);
Global.btnClickEvent(this._btn_stop_auto, this.OnClickStopAuto, this);
Global.btnClickEvent(this._btn_add_bet, this.OnClickAddBet, this);
Global.btnClickEvent(this._btn_minus_bet, this.OnClickMinusBet, this);
Global.btnClickEvent(this._btn_max_bet, this.OnClickMaxBet, this);
this._btn_max_bet.on(cc.Node.EventType.TOUCH_START, this.OnTouchMaxBtnBegan, this);
this._btn_auto.on("click", this.onClickAuto, this);
Global.registerEvent(cc.vv.gameData._EventId.SLOT_SHOW_HEADFOOTER_MASK, this.OnEventShowMask, this);
Global.registerEvent(EventId.NEWGUIDE_PRO_UI, this.OnEventCompleteGuide, this);
},
start: function() {},
Init: function() {
this.ShowBetCoin(!1);
},
ShowBetCoin: function(e, t) {
void 0 === e && (e = !0);
void 0 === t && (t = !1);
t || this._setAllFlag(!1);
var i = cc.vv.gameData.GetTotalBet();
if (t) ; else {
cc.find("totalBetBg/bet_bg", this.node).active = !0;
cc.find("totalBetBg/allin_bg", this.node).active = !1;
}
this._lbl_total_bet.getComponent(cc.Label).string = Global.FormatNumToComma(i);
var n = cc.find("totalBetBg/max_bet_particle", this.node);
if (cc.vv.gameData.IsMaxBet() && !t) {
this._btn_max_bet.getComponent(cc.Button).interactable = !1;
this._SetMaxBtnSpine(!1);
if (e) {
n.active = !0;
n.getComponent(cc.ParticleSystem).resetSystem();
}
cc.find("totalBetBg/bet_bg/title_TOTALBET", this.node).active = !1;
cc.find("totalBetBg/bet_bg/title_MAXBET", this.node).active = !0;
} else {
n.active = !1;
this._btn_max_bet.getComponent(cc.Button).interactable = !t;
this._SetMaxBtnSpine(!t);
cc.find("totalBetBg/bet_bg/title_TOTALBET", this.node).active = !0;
cc.find("totalBetBg/bet_bg/title_MAXBET", this.node).active = !1;
}
},
_checkBetsChange: function() {
return cc.vv.gameData.GetBetMults().length > 1;
},
OnTouchSpinBtnBegan: function() {
this._btnSpinAni.active = !1;
this.isCanShowAutoSelect() ? this._touchSpinBtnTime = 0 : this._touchSpinBtnTime = -1;
},
OnTouchSpinBtnEnded: function() {
if (this.isCanShowAutoSelect()) {
if (this._touchSpinBtnTime > 0) {
this._touchSpinBtnTime > this.LONGTOUCHSPINE ? this.ShowAutoSelect(!0) : this.OnClickSpin();
this._touchSpinBtnTime = -1;
}
} else this._touchSpinBtnTime = -1;
},
OnTouchSpinCancle: function() {
this._touchSpinBtnTime = -1;
},
isCanShowAutoSelect: function() {
var e;
this._btn_spin.getComponent(cc.Button) && (e = this._btn_spin.getComponent(cc.Button).interactable);
var t = this.GetIsFreeModel();
return !(!e || t);
},
ShowAutoSelect: function(e) {
var t = cc.find("PopSelectAutoTimes", this.node);
if (t.active != e) {
t.active = e;
e && this._playAudio("slot_show_autoselect");
}
},
OnClickSelectAutoTimes: function(e) {
this._playAudio("slot_openBetSelector");
var t = 4;
e && e.node && (t = parseInt(e.node.name.substr(-1, 1)));
this._touchSpinBtnTime = -1;
var i = [ 20, 50, 100, 500, 1e4 ][t - 1];
cc.vv.gameData.SetAutoModelTime(i);
this._autoTotal = i;
this.ShowAutoSelect(!1);
this.ShowAutoModel(!0);
this.DoAutoSpine();
},
getAutoModel: function() {
return this._bAutoModel;
},
OnClickSpin: function() {
if (!cc.vv.gameData.GetTopScript().isClickBackLobby()) {
var e, t = cc.vv.gameData.getGameCfg(), i = "slot_reel_click";
if (t.commEffect && t.commEffect.clickSpin) {
i = t.commEffect.clickSpin;
e = t.commEffect.path;
}
this._playAudio(i, e);
this.unschedule(this.DoAutoSpine);
this.unschedule(this.DoFreeSpine);
this.unschedule(this.SendSpinReq);
cc.vv.gameData.GetFreeTime() || this.DoHideWinAction();
if (this._CheckNeedBet()) if (this._CheckCoinEnough()) {
cc.vv.gameData.GetTopScript().MinusTotalBet(this._bAllIn);
this.SendSpinReq();
} else {
this.OnClickStopAuto();
cc.vv.AlertView.show(___("金币不足"), function() {
if (Global.isIOSAndroidReview()) cc.vv.PopupManager.addPopup("YD_Pro/Review/yd_more_coins"); else {
var e = "YD_Pro/prefab/yd_shop";
cc.vv.UserManager.isbindphone > 0 || (e = "YD_Pro/prefab/Register");
cc.vv.PopupManager.addPopup(e, {
onShow: function() {}
});
}
}, function() {}, !1, function() {}, ___("提示"), ___("取消"), ___("Deposit"));
} else this.SendSpinReq();
}
},
OnClickStop: function() {
cc.vv.gameData.GetSlotsScript().StopMove();
},
onClickAuto: function() {
if (this._btn_stop_auto.active) {
this.OnClickStopAuto();
this._showAutoFlag(!1);
} else this.isCanShowAutoSelect() ? this.ShowAutoSelect(!0) : cc.vv.FloatTip.show("The Game is running!");
},
_showAutoFlag: function(e) {
cc.find("sel_flag", this._btn_auto).active = e;
},
OnClickStopAuto: function() {
cc.vv.gameData.SetAutoModelTime(0);
cc.vv.gameData.SetAutoGame(!1);
this.ShowAutoModel(!1);
},
OnClickAddBet: function() {
if (!cc.vv.gameData.IsMaxBet() || !this._showAllInView(!0)) {
cc.vv.gameData.ChangeBetIdx(!0);
this.ShowBetCoin();
this._PlayBetAudio();
var e = cc.vv.gameData.GetTotalBet();
Global.dispatchEvent(cc.vv.gameData._EventId.SLOT_TOTALBET_UPDATED, e);
this._ShowBetProTip();
}
},
OnClickMinusBet: function() {
if (!cc.vv.gameData.IsMinBet() || !this._showAllInView(!0)) {
this._bAllIn || cc.vv.gameData.ChangeBetIdx();
this.ShowBetCoin();
this._PlayBetAudio();
var e = cc.vv.gameData.GetTotalBet();
Global.dispatchEvent(cc.vv.gameData._EventId.SLOT_TOTALBET_UPDATED, e);
this._ShowBetProTip();
}
},
OnClickMaxBet: function() {
var e = cc.vv.gameData.GetBetMaxIdx();
cc.vv.gameData.SetBetIdx(e);
cc.vv.gameData._serverRawMult = e;
cc.vv.UserManager.setEnterSelectBet(null);
this.ShowBetCoin();
this._PlayBetAudio();
var t = cc.vv.gameData.GetTotalBet();
Global.dispatchEvent(cc.vv.gameData._EventId.SLOT_TOTALBET_UPDATED, t);
this._ShowBetProTip();
},
_showAllInView: function() {
cc.find("totalBetBg/allin_bg", this.node).active = !1;
cc.find("totalBetBg/bet_bg", this.node).active = !0;
this.ShowBetCoin(!1);
},
_isCanShowAllIn: function() {
return cc.vv.gameData.GetCoin() > cc.vv.gameData.GetMaxBetVal();
},
resetAllin: function() {
this._setAllFlag(!1);
this._showAllInView(!1);
},
OnTouchMaxBtnBegan: function() {
this._btn_max_bet.getComponent(cc.Button).interactable && this._SetMaxBtnSpine(!1);
},
SetBetIdx: function(e) {
cc.vv.gameData.SetBetIdx(e);
cc.vv.gameData._serverRawMult = e;
cc.vv.UserManager.setEnterSelectBet(null);
this.ShowBetCoin(!1, this._bAllIn);
this._PlayBetAudio();
var t = cc.vv.gameData.GetTotalBet();
Global.dispatchEvent(cc.vv.gameData._EventId.SLOT_TOTALBET_UPDATED, t);
},
SendSpinReq: function() {
this.ShowBtnsByState("moveing_1");
var e = cc.vv.gameData.GetBetIdx(), t = null, i = cc.vv.gameData.GetAutoModelTime();
if (i) {
(t = {}).all = this._autoTotal;
t.rmd = i;
}
cc.vv.gameData.ReqSpin(e, t, this._bAllIn);
if (this._needRefushFreeTime) {
this._needRefushFreeTime = null;
var n = cc.vv.gameData.GetFreeTime();
cc.vv.gameData.SetFreeTime(n - 1);
var a = cc.vv.gameData.GetTotalFree(), o = cc.vv.gameData.GetFreeTime();
this.ShowFreeModel(!0, a - o, a);
}
cc.vv.gameData.GetSlotsScript().StartMove();
this._ShowBetProTip(!1);
this.ShowAutoSelect(!1);
},
ShowAutoModel: function(e) {
this._btn_stop_auto.active = e;
this._showAutoFlag(e);
e || (this._autoTotal = null);
this._UpdateAutoTimeLabel();
var t = cc.find("copy_add", this._btn_stop_auto), i = cc.find("copy_minus", this._btn_stop_auto), n = cc.find("copy_max", this._btn_stop_auto);
if (e) {
var a = function(e, t, i) {
var n = cc.instantiate(e);
n.parent = t;
n.name = i;
n.getComponent(cc.Button).interactable = !1;
n.position = t.convertToNodeSpaceAR(e.convertToWorldSpaceAR(cc.v2(0, 0)));
n.getComponent(cc.BlockInputEvents) || n.addComponent(cc.BlockInputEvents);
return n;
};
t || (t = a(this._btn_add_bet, this._btn_stop_auto, "copy_add"));
i || (i = a(this._btn_minus_bet, this._btn_stop_auto, "copy_minus"));
if (!n) {
n = a(this._btn_max_bet, this._btn_stop_auto, "copy_max");
cc.find("Background/maxSpine", n).active = !1;
}
}
},
CanDoNextRound: function() {
this._bStartRound = !1;
this.ShowBtnsByState("idle");
this._checkForsePoptips();
var e = cc.vv.gameData.GetFreeTime(), t = cc.vv.gameData.getGameCfg();
if (e > 0) {
cc.vv.gameData.GetTotalFree() === e && this.ShowBtnsByState("moveing_1");
this._needRefushFreeTime = !0;
this.scheduleOnce(this.DoFreeSpine, t.autoModelDelay);
} else {
var i = cc.vv.gameData.GetRespinTime();
if (i > 0) {
this.scheduleOnce(this.SendSpinReq, t.autoModelDelay);
cc.vv.gameData.SetRespinTime(i - 1);
} else cc.vv.gameData.GetAutoModelTime() > 0 ? this.scheduleOnce(this.DoAutoSpine, t.autoModelDelay) : this.resetAllin();
}
},
DoAutoSpine: function() {
var e = cc.vv.gameData.GetAutoModelTime();
cc.vv.gameData.SetAutoGame(e > 0);
if (e > 0) {
cc.vv.gameData.SetAutoModelTime(e - 1 > 500 ? 1e4 : e - 1);
e - 1 == 0 && this.ShowAutoModel(!1);
this._UpdateAutoTimeLabel();
this.OnClickSpin();
}
},
DoFreeSpine: function() {
var e = cc.vv.gameData.GetTotalFree(), t = cc.vv.gameData.GetFreeTime();
if (t > 0) {
this.ShowFreeModel(!0, e - t, e);
this.SendSpinReq();
}
},
ShowFreeModel: function(e, t, i) {
this._bFreeModel = e;
e || cc.vv.gameData.SetIsPuzzleModel(e);
var n = cc.find("free_time", this.node);
n.active = e;
if (e) {
var a = n.getChildByName("copy_max");
a && (a.getComponent(cc.Button).interactable = !1);
var o = cc.js.formatStr("%s / %s", t, i);
n.getChildByName("lbl_free_time").getComponent(cc.Label).string = o;
}
var c = cc.find("Canvas/safe_node/LMSlots_Collect_Puzzle");
if (c) {
c.active = !e;
var s = cc.vv.gameData.GetIsPuzzleModel();
this.SetBetNodeVisible(!s);
}
},
UpdateFreeTime: function(e, t) {
var i = cc.js.formatStr("%s / %s", t, e);
cc.find("free_time", this.node).getChildByName("lbl_free_time").getComponent(cc.Label).string = i;
},
GetIsFreeModel: function() {
return this._bFreeModel;
},
GetSpinBtnState: function() {
return this._btn_spin.active && this._btn_spin.getComponent(cc.Button).interactable;
},
SetBetNodeVisible: function(e) {
cc.find("totalBetBg", this.node).active = e;
},
ShowBtnsByState: function(e) {
cc.vv.gameData.SetSlotState(e);
if ("idle" == e) {
this._btn_spin.active = !0;
this._btnSpinAni.active = !0;
this._SetBtnEnable(this._btn_spin, !0);
this._btn_stop.active = !1;
var t = this._checkBetsChange();
this._SetBtnEnable(this._btn_add_bet, t);
this._SetBtnEnable(this._btn_minus_bet, t);
var i = !0;
cc.vv.gameData.IsMaxBet() && (i = !1);
this._SetBtnEnable(this._btn_max_bet, i);
this._SetMaxBtnSpine(i);
} else if ("moveing_1" == e) {
this._btn_spin.active = !0;
this._btnSpinAni.active = !1;
this._SetBtnEnable(this._btn_spin, !1);
this._SetMaxBtnSpine(!1);
this._btn_stop.active = !1;
this._SetBtnEnable(this._btn_add_bet, !1);
this._SetBtnEnable(this._btn_minus_bet, !1);
this._SetBtnEnable(this._btn_max_bet, !1);
this._SetMaxBtnSpine(!1);
} else if ("moveing_2" == e) {
this._btn_spin.active = !1;
this._btnSpinAni.active = !1;
this._btn_stop.active = !0;
this._SetBtnEnable(this._btn_stop, !0);
this._SetBtnEnable(this._btn_add_bet, !1);
this._SetBtnEnable(this._btn_minus_bet, !1);
this._SetBtnEnable(this._btn_max_bet, !1);
this._SetMaxBtnSpine(!1);
} else if ("stoped" == e) {
this._btn_spin.active = !0;
this._btnSpinAni.active = !1;
this._btn_stop.active = !1;
this._SetBtnEnable(this._btn_spin, !0);
this._SetBtnEnable(this._btn_add_bet, !1);
this._SetBtnEnable(this._btn_minus_bet, !1);
this._SetBtnEnable(this._btn_max_bet, !1);
this._SetMaxBtnSpine(!1);
} else if ("unstoped" == e) {
this._btn_spin.active = !1;
this._btnSpinAni.active = !1;
this._btn_stop.active = !0;
this._SetBtnEnable(this._btn_stop, !1);
this._SetBtnEnable(this._btn_add_bet, !1);
this._SetBtnEnable(this._btn_minus_bet, !1);
this._SetBtnEnable(this._btn_max_bet, !1);
this._SetMaxBtnSpine(!1);
}
},
ShowWin: function(e, t, i, n, a) {
var o = this;
return new Promise(function(c) {
var s = cc.find("winBg/node_pen_coin", o.node), r = cc.find("winBg/particle_bigwin", o.node), l = cc.find("winBg/lbl_winNum_nor", o.node), d = cc.find("winBg/lbl_winNum_up", o.node);
if (!i) {
i = 0;
var h = l.getComponent(cc.Label).string, _ = parseFloat(h.replace(/,/g, ""));
_ && (i = _);
}
o._currBottomCoin = e;
if (i != e) {
var p = cc.find("node_skip_win", o.node), u = cc.find("skipWin", p);
if (!u) {
(u = cc.instantiate(o._btn_spin)).name = "skipWin";
u.position = p.convertToNodeSpaceAR(o._btn_spin.convertToWorldSpaceAR(cc.v2(0, 0)));
u.parent = p;
u.active = !1;
}
o._playWinAudioHandle = null;
if (2 == t) {
if (u) {
u.height = cc.winSize.height;
u.width = cc.winSize.width;
}
var f = s.getComponent("DropCoins");
f.setPlay(10, 50, 300, cc.winSize.height);
r.active = !0;
r.getComponent(cc.ParticleSystem).resetSystem();
l.active = !1;
d.active = !0;
d.scale = 1;
var g = cc.vv.gameData.getGameCfg(), m = "win2", v = "win2end", S = null;
if (g.commEffect && g.commEffect.win2) {
m = g.commEffect.win2[0];
v = g.commEffect.win2[1];
S = g.commEffect.path;
}
var C = o, b = function() {
cc.vv.AudioManager.stopAudio(C._playWinAudioHandle);
u && (u.active = !1);
C._SetBgmVol(1);
f.stopPlay();
r.active = !1;
cc.tween(d).to(.1, {
scale: .5
}).call(function() {
cc.isValid(l) && (l.active = !0);
cc.isValid(d) && (d.active = !1);
}).start();
l.getComponent(cc.Label).string = Global.FormatNumToComma(e);
n && n();
C._playAudio(v, S);
c();
};
o._playAudio(m, S, null, function(t) {
C._playWinAudioHandle = t;
var n = a || cc.audioEngine.getDuration(t);
a || (n > 5 || n <= 1) && (n = 5);
Global.doRoallNumEff(d, i, e, n, b, null, 2, !0);
if (u) {
u.active = !0;
u.getComponent(cc.Button).interactable = !0;
u.targetOff(this);
u.once("click", b);
}
C._SetBgmVol(.3);
});
} else if (1 == t) {
if (u) {
u.height = o._btn_spin.height;
u.width = o._btn_spin.width;
}
r.active = !1;
d.active = !1;
l.active = !0;
var E = cc.vv.gameData.getGameCfg(), y = "win1", L = "win1end", T = null;
if (E.commEffect && E.commEffect.win1) {
y = E.commEffect.win1[0];
L = E.commEffect.win1[1];
T = E.commEffect.path;
}
var I = o, A = function t() {
if (u) {
u.off("click", t);
u.active = !1;
}
cc.vv.AudioManager.stopAudio(I._playWinAudioHandle);
I._SetBgmVol(1);
l.cleanup();
l.getComponent(cc.Label).string = Global.FormatNumToComma(e);
n && n();
I._playAudio(L, T);
c();
};
o._playAudio(y, T, null, function(t) {
I._playWinAudioHandle = t;
var n = a;
a || (n > 2 || n <= 0) && (n = 2);
if (u) {
u.active = !0;
u.getComponent(cc.Button).interactable = !0;
u.on("click", A);
}
I._SetBgmVol(.3);
Global.doRoallNumEff(l, i, e, n, A, null, 2, !0);
});
} else {
r.active = !1;
d.active = !1;
l.active = !0;
Global.doRoallNumEff(l, i, e, a, function() {
n && n();
c();
}, null, 2, !0);
}
} else {
cc.warn("Bottom底部增长金币：begin==end");
n && n();
c();
}
});
},
getCurrentWin: function() {
return this._currBottomCoin;
},
getStopBtnObj: function() {
return this._btn_stop;
},
SetWin: function(e) {
var t = cc.find("winBg/lbl_winNum_nor", this.node);
if (e > 0) {
t.active = !0;
t.getComponent(cc.Label).string = Global.FormatNumToComma(e);
this._currBottomCoin = e;
} else {
t.active = !1;
this._currBottomCoin = 0;
}
},
DoHideWinAction: function() {
var e = this, t = cc.find("winBg/lbl_winNum_nor", this.node);
cc.tween(t).to(.2, {
opacity: 0
}).call(function() {
t.opacity = 255;
t.active = !1;
t.getComponent(cc.Label).string = 0;
e._currBottomCoin = 0;
}).start();
},
ShowAuto: function(e) {
this._bAutoModel = e;
this._btn_stop_auto.active = e;
e && this.ShowBtnsByState("moveing_1");
},
ShowInputMask: function(e) {
var t = cc.find("mask_input", this.node);
t && (t.active = e);
},
OnEventShowMask: function(e) {
var t = e.detail;
this.ShowInputMask(t);
},
OnEventCompleteGuide: function(e) {
161 == e.detail && this.ShowAutoSelect(!0);
},
_SetBtnEnable: function(e, t) {
var i = e.getComponent(cc.Button);
i && (i.interactable = t);
},
_SetMaxBtnSpine: function(e) {
var t = cc.find("Background/maxSpine", this._btn_max_bet);
t.active = e;
e && t.getComponent(sp.Skeleton).setAnimation(0, "animation2", !0);
},
_CheckNeedBet: function() {
var e = !0;
cc.vv.gameData.GetRespinTime() && (e = !1);
this.GetIsFreeModel() && (e = !1);
return e;
},
_CheckCoinEnough: function() {
var e = cc.vv.gameData.GetCoin();
return cc.vv.gameData.GetTotalBet() <= e;
},
_UpdateAutoTimeLabel: function() {
var e = cc.vv.gameData.GetAutoModelTime(), t = this._btn_stop_auto.getChildByName("lbl_auto_times"), i = this._btn_stop_auto.getChildByName("nMaxA"), n = e > 500;
t.active = !n;
i.active = n;
t.getComponent(cc.Label).string = e;
},
_UpdateTouchSpine: function(e) {
if (this.isCanShowAutoSelect()) {
if (this._touchSpinBtnTime >= 0) {
this._touchSpinBtnTime += e;
if (this._touchSpinBtnTime >= this.LONGTOUCHSPINE) {
this._touchSpinBtnTime = -1;
this.ShowAutoSelect(!0);
}
}
} else {
this._touchSpinBtnTime = -1;
this.ShowAutoSelect(!1);
}
},
_InitAutoPanl: function() {
var e = this, t = cc.find("PopSelectAutoTimes", this.node);
if (t) {
t.active = !1;
cc.find("grayMask", t).on("click", function() {
e._touchSpinBtnTime = -1;
t.active = !1;
});
for (var i = 1; i <= 5; i++) Global.btnClickEvent(t.getChildByName("btn_" + i), this.OnClickSelectAutoTimes, this);
}
this._showAutoFlag(!1);
},
_PlayBetAudio: function() {
var e = cc.vv.gameData.GetBetIdx(), t = "bet" + e;
e == cc.vv.gameData.GetBetMults().length && (t = "global_max_bet");
this._playAudio("bet/" + t);
},
_playAudio: function(e, t, i, n) {
if (t) {
var a = cc.vv.gameData.getGameCfg();
if (a.bundleName) {
var o = a.bundleName;
t = "";
cc.vv.AudioManager.playEff(t, e, !0, !1, i, null, n, o);
} else cc.vv.AudioManager.playEff(t, e, !0, !1, i, null, n);
} else {
t = "slots_common/SlotRes/";
cc.vv.AudioManager.playEff(t, e, !0, !1, i, null, n);
}
},
_SetBgmVol: function(e) {
cc.vv.gameData.SetBgmVol(e);
},
_ShowBetProTip: function(e, t) {
void 0 === e && (e = !0);
void 0 === t && (t = !1);
var i = cc.find("node_bettips", this.node);
if (i) {
var n = i.getComponent("LMSlots_Bottom_BetTips");
if (n) if (e) {
i.active = !0;
cc.find("pro_bet/txt_allin", i).active = !1;
cc.find("pro_bet/txt_more", i).active = !0;
var a = cc.vv.gameData.GetBetMinIdx(), o = cc.vv.gameData.GetBetMaxIdx(), c = cc.vv.gameData.GetBetIdx();
t && (c = o);
var s = (c - a) / (o - a);
n.setBetPercent(s);
} else n.HideTips();
}
},
_checkForsePoptips: function() {
var e = cc.vv.UserManager.getNotEncoughCoinPoplist();
if (e && e.bforse) {
cc.vv.EventManager.emit(EventId.NOT_ENOUGH_COIN_POP_UI);
cc.vv.UserManager.setNotEncoughPopForceFlag(0);
}
},
_setAllFlag: function(e) {
this._bAllIn = e;
var t = cc.vv.gameData.GetCoin();
e || (t = 0);
cc.vv.gameData.setAllInVal(e, t);
},
update: function(e) {
this._UpdateTouchSpine(e);
}
});
cc._RF.pop();
}, {} ],
LMSlots_Bottom_BetTips: [ function(e, t) {
"use strict";
cc._RF.push(t, "d1723miXINHO6pU/gfOOumR", "LMSlots_Bottom_BetTips");
cc.Class({
extends: cc.Component,
properties: {},
start: function() {},
setBetPercent: function(e) {
var t = this, i = cc.find("pro_bet", this.node), n = i.getComponent(cc.ProgressBar);
cc.tween(n).to(.2, {
progress: e
}).start();
var a = cc.find("spr_point", i), o = 55 + e / .1 * -11;
cc.tween(a).to(.2, {
angle: o
}).start();
this.node.stopAllActions();
this.node.opacity = 255;
cc.tween(this.node).delay(2.5).call(function() {
t.HideTips();
}).start();
},
HideTips: function() {
var e = this;
this.node.stopAllActions();
cc.tween(this.node).to(.3, {
opacity: 0
}).call(function() {
e.node.active = !1;
}).start();
}
});
cc._RF.pop();
}, {} ],
LMSlots_GameData_Base: [ function(e, t) {
"use strict";
cc._RF.push(t, "70c60xCEl1EpqyzxCT4VDNb", "LMSlots_GameData_Base");
var i = e("SlotMachine_GameEventId"), n = e("GameIdMgr");
cc.Class({
extends: cc.Component,
properties: {
_gameId: null,
_deskInfo: null,
_cfg: null,
_gameInfo: null,
_slotsScp: null,
_assetScp: null,
_autoTime: 0,
_respinTime: 0,
_topScp: null,
_bottomScp: null,
_puzzleData: null,
_secBetVal: null,
_reqStartTime: 0,
_reqTotalTime: 0,
_reqTotalCount: 0,
_autoPlayTime: 5,
_serverRawMult: 0,
_manualAutoPlayTime: 8,
_bAutoGame: !1,
_newGameTipSpinCount: 0,
_newGameTipID: 0,
_isFirstPop: !0
},
init: function(e, t, i) {
if (!this._deskInfo) {
this._deskInfo = e;
this._serverRawMult = e.currmult;
var n = cc.vv.UserManager.getEnterSelectBet();
if (n) {
if (!this.GetFreeTime()) for (var a = 0; a < e.mults.length; a++) if (e.mults[a] == n) {
this.SetBetIdx(a + 1);
break;
}
} else if (cc.vv.UserManager.getEnterMaxBet()) {
cc.vv.UserManager.setEnterMaxBet(null);
this.GetFreeTime() || this.SetBetIdx(e.mults.length);
}
this._gameId = t;
this._gameJackpot = i;
this._puzzleData = e.chipGame;
this.clearLevelupData();
this.RegisterEvent();
this.RegisterMsg();
cc.vv.UserManager.playedGameIds.indexOf(t) < 0 && cc.vv.UserManager.playedGameIds.push(t);
}
},
RegisterEvent: function() {
this._EventId || (this._EventId = i);
this._EventId.SLOT_STOP_MOVE = "SLOT_STOP_MOVE";
},
UnregisterEvent: function() {},
RegisterMsg: function() {
cc.vv.NetManager.registerMsg(MsgId.GAME_LEVELROOM, this.OnRcvNetExitRoom, this);
cc.vv.NetManager.registerMsg(MsgId.SLOT_START, this.OnRcvNetSpine, this);
cc.vv.NetManager.registerMsg(MsgId.SLOT_SUBGAME_DATA, this.OnRcvNetSubAction, this, !0);
cc.vv.NetManager.registerMsg(MsgId.PULL_LEVEL_UP_EXP, this.onRecvLevelupExp, this);
cc.vv.NetManager.registerMsg(MsgId.PULL_CHANGE_EXP, this.onRecvChangeExp, this);
cc.vv.NetManager.registerMsg(MsgId.MONEY_CHANGED, this.onRcvNetMoneyChanged, this);
cc.vv.NetManager.registerMsg(MsgId.SYNC_COIN, this.onRcvNetMoneyChanged, this);
cc.vv.NetManager.registerMsg(MsgId.PULL_GUIDETASK_UPDATEINFO, this.onRcvNetUpdateGuideTask, this);
cc.vv.NetManager.registerMsg(MsgId.GAME_RECONNECT_DESKINFO, this.onRecvNetReconnectDeskinfo, this);
},
UnregisterMsg: function() {
cc.vv.NetManager.unregisterMsg(MsgId.GAME_LEVELROOM, this.OnRcvNetExitRoom);
cc.vv.NetManager.unregisterMsg(MsgId.SLOT_START, this.OnRcvNetSpine);
cc.vv.NetManager.unregisterMsg(MsgId.PULL_LEVEL_UP_EXP, this.onRecvLevelupExp, !1, this);
cc.vv.NetManager.unregisterMsg(MsgId.PULL_CHANGE_EXP, this.onRecvChangeExp, !1, this);
cc.vv.NetManager.unregisterMsg(MsgId.MONEY_CHANGED, this.onRcvNetMoneyChanged, !1, this);
cc.vv.NetManager.unregisterMsg(MsgId.SYNC_COIN, this.onRcvNetMoneyChanged, !1, this);
cc.vv.NetManager.unregisterMsg(MsgId.SLOT_SUBGAME_DATA, this.OnRcvNetSubAction, !0, this);
cc.vv.NetManager.unregisterMsg(MsgId.PULL_GUIDETASK_UPDATEINFO, this.onRcvNetUpdateGuideTask, !1, this);
cc.vv.NetManager.unregisterMsg(MsgId.GAME_RECONNECT_DESKINFO, this.onRecvNetReconnectDeskinfo);
},
getDeskInfo: function() {
return this._deskInfo;
},
getGameInfo: function() {
return this._gameInfo;
},
getGameJackpot: function() {
return this._gameJackpot;
},
SetTopBottomScript: function(e, t) {
this._topScp = e;
this._bottomScp = t;
},
GetTopScript: function() {
return this._topScp;
},
GetBottomScript: function() {
return this._bottomScp;
},
SetSlotsScript: function(e) {
this._slotsScp = e;
},
GetSlotsScript: function() {
return this._slotsScp;
},
SetAssetScript: function(e) {
this._assetScp = e;
},
GetAssetScript: function() {
return this._assetScp;
},
GetPrefabByName: function(e) {
return this._assetScp.GetPrefabByName(e);
},
GetAtlasByName: function(e) {
return this._assetScp.GetAtlasByName(e);
},
GetSpriteFrameByName: function(e) {
return this._assetScp.GetSpriteByName(e);
},
GetFontByName: function(e) {
return this._assetScp.GetFontByName(e);
},
getGameId: function() {
return this._gameId;
},
getGameCfg: function() {
if (!this._cfg) {
var t = cc.vv.GameDataCfg.getGameData(this.getGameId());
this._cfg = e(t.cfgCmp);
}
return this._cfg;
},
getGameDir: function() {
var e = cc.vv.GameItemCfg[this.getGameId()];
if (e) return cc.js.formatStr("games/%s/", e.name);
},
SetSlotState: function(e) {
this._slotStateStr = e;
},
GetSlotState: function() {
return this._slotStateStr || "idle";
},
setCoins: function(e, t) {
this._deskInfo.user.coin = e;
cc.vv.UserManager.coin = e;
t && this.RefushMyCoin();
},
GetCoin: function() {
return this._deskInfo.user.coin;
},
AddCoin: function(e, t) {
void 0 === t && (t = !1);
e > 0 && this.GetCoin();
var i = this.GetCoin();
this.setCoins(i + e);
t && this.RefushMyCoin();
},
RefushMyCoin: function() {
this._topScp.ShowCoin();
},
GetTotalBet: function() {
if (this._bAllin) return this._allinBet;
var e = this.GetBetIdx();
return this._deskInfo.mults[e - 1];
},
GetBetIdx: function() {
return this._deskInfo.currmult;
},
BetToIdx: function(e) {
for (var t, i = 0; i < this._deskInfo.mults.length; i++) if (this._deskInfo.mults[i] >= e) {
t = i;
break;
}
return t + 1;
},
IdxToBet: function(e) {
return this._deskInfo.mults[e - 1];
},
SetBetIdx: function(e) {
this._deskInfo.currmult = e;
cc.vv.gameData._serverRawMult = e;
cc.vv.UserManager.setEnterSelectBet(null);
},
ChangeBetIdx: function(e) {
var t = this.GetBetMaxIdx(), i = this.GetBetMinIdx();
if (e) {
this._deskInfo.currmult += 1;
this._deskInfo.currmult > t && (this._deskInfo.currmult = i);
} else {
this._deskInfo.currmult -= 1;
this._deskInfo.currmult < i && (this._deskInfo.currmult = t);
}
this._serverRawMult = this._deskInfo.currmult;
cc.vv.UserManager.setEnterSelectBet(null);
},
GetBetMinIdx: function() {
var e = 1;
this._deskInfo.betRange && (e = this._deskInfo.betRange[0]);
return e;
},
GetBetMaxIdx: function() {
var e = this.GetBetMults().length;
this._deskInfo.betRange && (e = this._deskInfo.betRange[1]);
return e;
},
GetMaxBetVal: function() {
var e = this.GetBetMaxIdx();
return this._deskInfo.mults[e - 1];
},
GetBetMults: function() {
return this._deskInfo.mults;
},
IsMaxBet: function() {
return this.GetBetIdx() == this.GetBetMaxIdx();
},
IsMinBet: function() {
return this.GetBetIdx() == this.GetBetMinIdx();
},
_checkClientBet: function() {
cc.vv.UserManager.getCurLv() < Global.SYS_OPEN.GUIDE_CHANGEBET && 2 == this._deskInfo.mults.length && (this._secBetVal = this._deskInfo.mults.pop());
},
GetGameWin: function() {
return this._gameInfo.wincoin;
},
GetAutoModelTime: function() {
return this._autoTime;
},
SetAutoModelTime: function(e) {
this._autoTime = e > 0 ? e : 0;
},
isAutoGame: function() {
return this._bAutoGame;
},
SetAutoGame: function(e) {
this._bAutoGame = e;
},
GetRespinTime: function() {
return this._respinTime;
},
SetRespinTime: function(e) {
this._respinTime = e > 0 ? e : 0;
},
GetFreeTime: function() {
return this._deskInfo.restFreeCount;
},
SetFreeTime: function(e) {
this._deskInfo.restFreeCount = e;
},
GetTotalFree: function() {
return this._deskInfo.allFreeCount;
},
SetTotalFree: function(e) {
return this._deskInfo.allFreeCount = e;
},
GetTotalFreeWin: function() {
return this._deskInfo.freeWinCoin;
},
GetGameTotalFreeWin: function() {
return this._gameInfo.freeWinCoin;
},
GetSpinePackFloat: function() {
return this._deskInfo.spinInfo;
},
SetSpinePackFloat: function(e) {
this._deskInfo.spinInfo = e;
},
AddTotalFreeTime: function(e) {
var t = this.GetTotalFree() + e, i = this.GetFreeTime() + e;
this.SetTotalFree(t);
this.SetFreeTime(i);
this._bottomScp.UpdateFreeTime(t, t - i);
},
PlayCommAudio: function(e, t, i) {
if (i) {
var n = cc.vv.gameData.getGameCfg();
if (n.bundleName) {
var a = n.bundleName;
i = "";
cc.vv.AudioManager.playEff(i, e, !0, !1, t, null, null, a);
} else cc.vv.AudioManager.playEff(i, e, !0, !1, t, null, null);
} else {
i = "slots_common/SlotRes/";
cc.vv.AudioManager.playEff(i, e, !0, !1, t);
}
},
ClearOneRoundData: function() {},
IsPrizePoolLock: function(e) {
var t = !0, i = this.getGameJackpot();
if (i) {
var n = i.unlock[e];
t = this.GetTotalBet() < n;
}
return t;
},
ReqSpin: function(e, t, i) {
if (!this._bSendingLevel) {
var n = {
c: MsgId.SLOT_START
};
n.betIndex = e;
t && (n.bAuto = JSON.stringify(t));
i && (n.allin = 1);
cc.vv.NetManager.send(n, !0);
this._sendInter = 0;
this._reqStartTime = new Date().getTime();
}
},
OnRcvNetSpine: function(e) {
this._sendInter = null;
this._bReconnect = null;
if (200 == e.code) {
this.setCurRoundIssue(e.issue);
this.setShowResultFinish(!1);
e.rp && e.rp.cur && (cc.vv.UserManager.rp = e.rp.cur);
this._deskInfo.user.coin = e.coin;
this._gameInfo = e;
this._deskInfo.restFreeCount = e.freeCnt;
this._deskInfo.allFreeCount = e.allFreeCnt;
e.mults && (this._deskInfo.mults = e.mults);
this._puzzleData = e.chipGame;
e.gameTask && cc.vv.UserManager.updateQuestInfoData(e.gameTask);
this.GetSlotsScript().onMsgSpine(e);
this.GetTopScript().onMsgSpine(e);
Global.dispatchEvent("EVENT_SPIN_MSG", e);
this._puzzleData && this._cfg.puzzleCfg && this._puzzleData.currChipInfo && cc.find("Canvas").getComponent("LMSlots_Puzzle").puzzleFly();
}
if (this._reqStartTime && this._reqStartTime > 0) {
var t = new Date().getTime() - this._reqStartTime;
this._reqTotalTime += t;
this._reqTotalCount += 1;
if (this._reqTotalCount >= 5) {
var i = Math.floor(this._reqTotalTime / this._reqTotalCount);
StatisticsMgr.httpReport(StatisticsMgr.HTTP_SPIN_NET_TIME, i, {
key: "gameid",
val: this._gameId
});
this._reqTotalTime = 0;
this._reqTotalCount = 0;
}
this._reqStartTime = 0;
}
},
OnRcvNetSubAction: function(e) {
200 == e.code && e.gameTask && cc.vv.UserManager.updateQuestInfoData(e.gameTask);
},
onRecvNetReconnectDeskinfo: function(e) {
if (e.gameid !== this._gameId) return !1;
this._bReconnect = !0;
this._deskInfo = e.deskinfo;
this._checkReconnectNet();
this._checkTimeout();
return !0;
},
_checkReconnectNet: function() {
this._bReconnect && this.GetSlotsScript() && this.GetSlotsScript().ReconnectNet();
},
SetMoveingTimeOut: function(e) {
this._bmoveTimeout = e;
this._checkTimeout();
},
_checkTimeout: function() {
if (this._bmoveTimeout && this._bReconnect) {
this._bReconnect = null;
this._bmoveTimeout = null;
this.GetIsQuestModel() && cc.vv.GameManager.setEnterOpation({
gameTask: 1
});
StatisticsMgr.reqReportNow(ReportConfig.ENTER_GAME, this._gameId, this._gameId);
cc.vv.GameManager.EnterGame(this._gameId);
}
},
CanDoNextRound: function() {
Global.dispatchEvent(EventId.REFUSH_QUEST_PRO);
this.setShowResultFinish(!0);
this.getDeskInfo().cashBackInfo && Global.dispatchEvent(EventId.SHOW_CASHBACK_ANIM);
if (this._newGameTipID) if (this._newGameTipID == this._gameId) {
var e = cc.vv.UserManager.getCurLv();
if (!this.GetIsQuestModel() && e >= Global.SYS_OPEN.NEW_GAMETIP && !this.GetFreeTime()) {
9 == this.getNewGameTipSpinCount() && cc.vv.QueueWinMrg.addPop("new_game_tip", "new_game_tip", {
type: 1,
prefabUrl: "CashHero/prefab/new_game_tip",
initDataCall: function(e) {
e.getComponent("NewGameTip").ShowGame(n.SLOT_ZUES);
}
});
this.addNewGameTipSpinCount();
}
} else this._newGameTipID = null;
this.doCheckBreakGrant();
cc.vv.QueueWinMrg && cc.vv.QueueWinMrg.startPop();
if (this._deskInfo.allFreeCount > 0 && this._deskInfo.allFreeCount === this._deskInfo.restFreeCount) this._bottomScp.SetBetIdx(this._serverRawMult); else if (this._deskInfo.allFreeCount > 0 && 0 === this._deskInfo.restFreeCount) {
var t = cc.vv.UserManager.getEnterSelectBet();
if (t && !this.GetFreeTime()) for (var i = 0; i < this._deskInfo.mults.length; i++) if (this._deskInfo.mults[i] === t) {
this._bottomScp.SetBetIdx(i + 1);
this._serverRawMult = i + 1;
break;
}
}
},
ReqBackLobby: function() {
var e = {
c: MsgId.GAME_LEVELROOM
};
e.deskid = this._gameId;
cc.vv.NetManager.send(e);
this._bSendingLevel = !0;
this._backRecount = 3;
},
setExitToHall: function(e) {
this._bBackHall = e;
},
requestExit: function() {
this.ReqBackLobby();
},
OnRcvNetExitRoom: function(e) {
if (200 === e.code) {
Global.saveLocal("SAVE_FROM_SUBGAME_ID", this._gameId);
var t = function() {
cc.vv.PopupManager.addPopup("BalootClient/BaseRes/prefabs/SceneTranslate", {
noMask: !0,
noCloseHit: !0,
onShow: function(e) {
e.getComponent("SceneTranslate").toHall();
}
});
};
if (cc.vv.UserManager.getEnterHallAction()) t(); else if (0 != this._bBackHall) {
if (this.GetIsQuestModel()) {
this.SetIsQuestModel(null);
cc.vv.NetManager.send({
c: MsgId.REQ_QUEST_INFO
});
return;
}
t();
}
}
},
onRecvLevelupExp: function(e) {
if (200 == e.code) {
this.levelupData = e.info;
cc.vv.UserManager.setCurLv(e.info.level);
cc.vv.UserManager.setCurExp(e.info.levelexp);
cc.vv.UserManager.setUpdateExp(e.info.levelup);
cc.vv.UserManager.setNextLvReward(e.next_level_reward);
this.levelupData.totalCoin = e.coin;
Global.dispatchEvent(EventId.PULL_LV_UP);
cc.vv.EventManager.emit(EventId.PULL_LV_UP);
if (e.info.level == Global.SYS_OPEN.GUIDE_CHANGEBET && this._secBetVal && 1 == this._deskInfo.mults.length) {
this._deskInfo.mults.push(this._secBetVal);
this._secBetVal = null;
}
e.cashback && (this._deskInfo.cashBackInfo = e.cashback);
if (e.gameids) {
var t = e.gameids, i = cc.find("Canvas"), n = cc.find("new_game_notice", i);
n || cc.loader.loadRes("CashHero/prefab/new_game_notice", cc.Prefab, function(e, a) {
if (!e && cc.isValid(i)) {
(n = cc.instantiate(a)).name = "new_game_notice";
n.parent = i;
n.getComponent("new_game_notice").setGameId(t);
}
});
}
e.onetimeleft && e.onetimeleft > 0 && cc.vv.UserManager.setLevelGift(e.onetimeleft);
}
},
getPuzzleData: function() {
return this._puzzleData;
},
getLevelupExp: function() {
return this.levelupData;
},
clearLevelupData: function() {
this.levelupData = null;
},
getExpChangeData: function() {
return this.expChangeData;
},
clearExpChangeData: function() {
this.expChangeData = null;
},
onRecvChangeExp: function(e) {
if (200 == e.code) {
cc.vv.UserManager.setCurExp(e.info.levelexp);
cc.vv.UserManager.setUpdateExp(e.info.levelup);
this.expChangeData = e.info;
Global.dispatchEvent(EventId.REFUSH_LV_EXP, e.info);
}
},
onRcvNetMoneyChanged: function(e) {
if (200 === e.code && e.uid === Global.playerData.uid) {
this.setCoins(e.coin);
this._topScp && this._topScp.ShowCoin();
}
},
onExit: function() {
this.UnregisterMsg();
},
clear: function() {
this.onExit();
cc.sys.garbageCollect();
cc.vv.QueueWinMrg && cc.vv.QueueWinMrg.clearQueueList();
this._deskInfo = null;
cc.vv.gameData = null;
},
awaitTime: function(e) {
return new Promise(function(t) {
var i = cc.find("Canvas");
if (i.isValid) {
var n = i.getComponent("LMSlots_Logic_Base");
cc.isValid(n) && n.scheduleOnce(function() {
t();
}, e);
}
});
},
SetBgmVol: function(e) {
0 != cc.vv.AudioManager.getBgmVolume() && cc.vv.AudioManager.setBgmVolume(e);
},
SetGuideId: function(e) {
this._newGuideSpine = e;
},
GetGuideId: function() {
return this._newGuideSpine || 0;
},
GetReelRandomIdx: function(e) {
this._reelIdx = this._reelIdx || [];
return this._reelIdx[e];
},
SetReelRandomIdx: function(e, t) {
this._reelIdx && (this._reelIdx[e] = t);
},
GetIsQuestModel: function() {
return this._deskInfo.gameTask;
},
SetIsQuestModel: function(e) {
this._deskInfo.gameTask = e;
},
SetBreakGrant: function(e) {
this._breakMsgData = e;
},
GetBreakGrant: function() {
return this._breakMsgData;
},
doCheckBreakGrant: function() {
var e = this.GetBreakGrant();
if (e) {
var t = cc.find("Canvas");
cc.loader.loadRes("hall_prefab/BreakGrant", cc.Prefab, function(i, n) {
if (i) AppLog.err("未找到资源"); else if (!t.getChildByName("BreakGrant")) {
var a = cc.instantiate(n);
a.parent = t;
a.getComponent("BreakGrant").init(e);
}
});
}
},
GetGuideTask: function() {
return this._deskInfo.newbieTask;
},
onRcvNetUpdateGuideTask: function(e) {
if (200 == e.code && e.newbieTask) {
this._deskInfo.newbieTask.state = e.newbieTask.state;
this._deskInfo.newbieTask.count = e.newbieTask.count;
Global.dispatchEvent(EventId.GET_GUIDETASK_REFUSH);
}
},
checkServerInitpopUI: function() {
var e = this._deskInfo.popInfo;
if (e) {
cc.vv.EventManager.emit(EventId.POPUI_BY_ID, e.poplist[0]);
this._deskInfo.popInfo = null;
this._isFirstPop = !1;
} else if (this._isFirstPop) {
this._isFirstPop = !1;
Global.dispatchEvent(EventId.END_QUEUE_POP);
}
},
clearServerInitpop: function() {
this._deskInfo.popInfo = null;
},
PauseSlot: function() {
this._doPauseAction(!1);
},
ResumeSlot: function() {
this._doPauseAction(!0);
},
SetIsPuzzleModel: function(e) {
this._bPuzzleModel = e;
},
GetIsPuzzleModel: function() {
return this._bPuzzleModel;
},
_doPauseAction: function(e) {
var t = cc.find("Canvas");
if (cc.isValid(t, !0)) {
var i = t.getComponent("LMSlots_Logic_Base");
if (cc.isValid(i)) {
if (e) {
if (this._bPasuseState) {
this._bPasuseState--;
if (this._bPasuseState > 0) return;
}
} else {
this._bPasuseState = this._bPasuseState || 0;
this._bPasuseState++;
if (this._bPasuseState > 1) return;
}
var n = [], a = [], o = function(e, t) {
if (cc.isValid(e)) {
e.enabled = t;
var i = cc.director.getScheduler();
t ? i.resumeTarget(e) : i.pauseTarget(e);
}
};
o(i, e);
var c = this.GetSlotsScript();
o(c, e);
o(this._bottomScp, e);
for (var s = c._reels, r = 0; r < s.length; r++) {
var l = s[r];
o(l, e);
var d = l._symbols;
if (d) for (var h = 0; h < d.length; h++) {
var _ = d[h];
o(_, e);
n.push(_.node);
}
}
if (e) {
cc.vv.AudioManager.resumeAllEffect();
this._bgmVol || (this._bgmVol = cc.vv.AudioManager.getBgmVolume());
this.SetBgmVol(this._bgmVol);
} else {
this._bgmVol = cc.vv.AudioManager.getBgmVolume();
this.SetBgmVol(.5 * this._bgmVol);
cc.vv.AudioManager.pauseAllEffect();
}
n.push(this._bottomScp.node);
var p = c.node;
n.push(p);
a.push(p);
var u = this._bottomScp.node;
a.push(u);
for (var f = cc.find("safe_node", t).getComponentsInChildren("LMSlots_PauseUI_Base"), g = 0; g < f.length; g++) {
var m = f[g];
o(m, e);
n.push(m.node);
a.push(m.node);
}
for (var v = 0; v < n.length; v++) {
n[v].active && (e ? n[v].resumeAllActions() : n[v].pauseAllActions());
for (var S = n[v].children, C = 0; C < S.length; C++) S[C].active && (e ? S[C].resumeAllActions() : S[C].pauseAllActions());
}
for (var b = 0; b < a.length; b++) for (var E = a[b].getComponentsInChildren(sp.Skeleton), y = 0; y < E.length; y++) E[y].node.active ? E[y].paused = !e : 1 == E[y].paused && e && (E[y].paused = !e);
}
}
},
update: function() {
if (cc.js.isNumber(this._sendInter)) {
this._sendInter += 1;
if (20 == this._sendInter) {
this._sendInter = null;
this.SetMoveingTimeOut(!0);
}
}
if (cc.js.isNumber(this._backRecount)) {
this._backRecount -= 1;
this._backRecount <= 0 && (this._bSendingLevel = null);
}
},
isNeedAutoPlay: function() {
return this.isAutoGame();
},
getAutoPlayTime: function() {
return this._autoPlayTime;
},
checkAutoPlay: function(e, t, i, n) {
void 0 === n && (n = 8);
if (this.isNeedAutoPlay()) {
e.stopAllActions();
cc.tween(e).delay(this._autoPlayTime).call(function() {
t();
}).start();
} else if (i) {
e.stopAllActions();
cc.tween(e).delay(n).call(function() {
t();
}).start();
}
},
getManualAutoPlayTime: function() {
return this._manualAutoPlayTime;
},
addNewGameTipSpinCount: function() {
this._newGameTipSpinCount++;
},
getNewGameTipSpinCount: function() {
return this._newGameTipSpinCount;
},
setAllInVal: function(e, t) {
this._bAllin = e;
this._allinBet = t;
},
getCurRoundIssue: function() {
return this._deskInfo.issue;
},
setCurRoundIssue: function(e) {
this._deskInfo.issue = e;
},
setShowResultFinish: function(e) {
this._bResultFinish = e;
},
getShowReulstFinish: function() {
return this._bResultFinish;
}
});
cc._RF.pop();
}, {
GameIdMgr: "GameIdMgr",
SlotMachine_GameEventId: "SlotMachine_GameEventId"
} ],
LMSlots_Help_Base_2: [ function(e, t) {
"use strict";
cc._RF.push(t, "ab5a4hm7XxIGrYWvXcbSr+m", "LMSlots_Help_Base_2");
cc.Class({
extends: cc.Component,
properties: {
_curShowIdx: 0,
_items_r: [],
_items_l: [],
_loadPrefabs: [],
_footerList: []
},
onLoad: function() {
this._laycontent = cc.find("mask_content/lay_content", this.node);
this._itemWith = this._laycontent.width;
this.InitItems();
this.InitPages();
var e = cc.find("popup_close", this.node);
Global.btnClickEvent(e, this.OnClickBackGame, this);
e.active = !1;
var t = cc.find("btn_left", this.node);
Global.btnClickEvent(t, this.OnClickLeft, this);
var i = cc.find("btn_right", this.node);
Global.btnClickEvent(i, this.OnClickRight, this);
var n = cc.find("lay_bg", this.node);
n.addComponent(cc.BlockInputEvents);
n.opacity = 0;
cc.find("footeritem", this.node).active = !1;
this.node.y = -cc.winSize.height;
},
start: function() {},
onDestroy: function() {},
onEnable: function() {
cc.vv.gameData.PauseSlot();
this.ShowUIAction();
},
InitItems: function() {
var e = this;
this.addIdx = 0;
var t = cc.vv.gameData.getGameCfg();
if (t && t.helpItems) for (var i = function(i) {
var n = t.helpItems[i];
t.bundleName ? window[t.bundleName].load(n, cc.Prefab, function(t, n) {
if (!t) {
e._loadPrefabs.push(n);
var a = cc.instantiate(n);
a.name = "item" + i;
var o = e.GetItemX(i);
a.parent = e._laycontent;
a.position = cc.v2(o, 0);
e._items_r[i] = a;
e.addIdx++;
}
}) : cc.loader.loadRes(n, cc.Prefab, function(t, n) {
if (!t) {
e._loadPrefabs.push(n);
var a = cc.instantiate(n);
a.name = "item" + i;
var o = e.GetItemX(i);
a.parent = e._laycontent;
a.position = cc.v2(o, 0);
e._items_r[i] = a;
e.addIdx++;
}
});
}, n = 0; n < t.helpItems.length; n++) i(n);
},
InitPages: function() {
var e = cc.vv.gameData.getGameCfg();
if (e && e.helpItems) for (var t = 0; t < e.helpItems.length; t++) {
var i = cc.instantiate(cc.find("footeritem", this.node));
i.parent = cc.find("footer", this.node);
i.active = !0;
this._footerList.push(i);
}
this.showFooter(0);
},
showFooter: function(e) {
this._currPage = e;
for (var t = 0; t < this._footerList.length; t++) cc.find("light", this._footerList[t]).active = t == e;
},
ShowUIAction: function() {
var e = this;
cc.vv.gameData.PlayCommAudio("info_page_open");
this.node.y = -cc.winSize.height;
var t = cc.find("lay_bg", this.node);
t.opacity = 0;
cc.tween(this.node).to(.5, {
y: 0
}).call(function() {
cc.find("popup_close", e.node).active = !0;
}).call(function() {
cc.tween(t).to(.3, {
opacity: 150
}).start();
}).start();
},
OnClickBackGame: function() {
var e = this;
cc.vv.gameData.ResumeSlot();
cc.vv.gameData.PlayCommAudio("info_page_close");
var t = cc.find("lay_bg", this.node);
cc.tween(t).to(.1, {
opacity: 0
}).start();
cc.tween(this.node).to(.5, {
y: -cc.winSize.height
}).call(function() {
e.node.active = !1;
}).start();
},
OnClickRight: function() {
if (this._isLoadFinish() && !this._bMoveing) {
this._bMoveing = !0;
cc.vv.gameData.PlayCommAudio("info_page_scroll");
if (1 == this._items_r.length) {
var e = this._items_l.shift();
e.position = cc.v2(this.GetItemX(1), 0);
this._items_r.push(e);
}
var t = this._items_r.shift();
this._items_l.push(t);
for (var i = 0; i < this._items_l.length; i++) {
var n = this._items_l[i];
this._moveNode(n, !0);
}
for (var a = 0; a < this._items_r.length; a++) {
var o = this._items_r[a];
this._moveNode(o, !0);
}
this.showFooter(++this._currPage > this._footerList.length - 1 ? 0 : this._currPage);
}
},
OnClickLeft: function() {
if (this._isLoadFinish() && !this._bMoveing) {
this._bMoveing = !0;
cc.vv.gameData.PlayCommAudio("info_page_scroll");
if (0 == this._items_l.length) {
var e = this._items_r.pop();
e.position = cc.v2(this.GetItemX(-1), 0);
this._items_l.push(e);
}
var t = this._items_l.pop();
this._items_r.unshift(t);
for (var i = 0; i < this._items_l.length; i++) {
var n = this._items_l[i];
this._moveNode(n, !1);
}
for (var a = 0; a < this._items_r.length; a++) {
var o = this._items_r[a];
this._moveNode(o, !1);
}
this.showFooter(--this._currPage < 0 ? this._footerList.length - 1 : this._currPage);
}
},
GetItemX: function(e) {
return this._itemWith * e;
},
_isLoadFinish: function() {
var e = cc.vv.gameData.getGameCfg();
if (e.helpItems) return e.helpItems.length == this.addIdx;
},
_moveNode: function(e, t) {
var i = this, n = 1;
t && (n = -1);
cc.tween(e).by(.2, {
position: cc.v2(this._itemWith * n, 0)
}).call(function() {
i._bMoveing = null;
}).start();
}
});
cc._RF.pop();
}, {} ],
LMSlots_Help_Base: [ function(e, t) {
"use strict";
cc._RF.push(t, "eeffd3mGBhMNY+AMBptg0d+", "LMSlots_Help_Base");
cc.Class({
extends: cc.Component,
properties: {
_curShowIdx: 0,
_items_r: [],
_items_l: [],
_loadPrefabs: []
},
onLoad: function() {
this._laycontent = cc.find("mask_content/lay_content", this.node);
this._itemWith = this._laycontent.width;
this.InitItems();
var e = cc.find("btn_backgame", this.node);
Global.btnClickEvent(e, this.OnClickBackGame, this);
e.active = !1;
var t = cc.find("btn_left", e);
Global.btnClickEvent(t, this.OnClickLeft, this);
var i = cc.find("btn_right", e);
Global.btnClickEvent(i, this.OnClickRight, this);
var n = cc.find("lay_bg", this.node);
n.addComponent(cc.BlockInputEvents);
n.opacity = 0;
this.node.y = -cc.winSize.height;
},
start: function() {},
onDestroy: function() {},
onEnable: function() {
cc.vv.gameData.PauseSlot();
this.ShowUIAction();
},
InitItems: function() {
var e = this;
this.addIdx = 0;
var t = cc.vv.gameData.getGameCfg();
if (t && t.helpItems) for (var i = function(i) {
var n = t.helpItems[i];
t.bundleName ? window[t.bundleName].load(n, cc.Prefab, function(t, n) {
if (!t) {
e._loadPrefabs.push(n);
var a = cc.instantiate(n);
a.name = "item" + i;
var o = e.GetItemX(i);
a.parent = e._laycontent;
a.position = cc.v2(o, 0);
e._items_r[i] = a;
e.addIdx++;
}
}) : cc.loader.loadRes(n, cc.Prefab, function(t, n) {
if (!t) {
e._loadPrefabs.push(n);
var a = cc.instantiate(n);
a.name = "item" + i;
var o = e.GetItemX(i);
a.parent = e._laycontent;
a.position = cc.v2(o, 0);
e._items_r[i] = a;
e.addIdx++;
}
});
}, n = 0; n < t.helpItems.length; n++) i(n);
},
ShowUIAction: function() {
var e = this;
cc.vv.gameData.PlayCommAudio("info_page_open");
this.node.y = -cc.winSize.height;
var t = cc.find("lay_bg", this.node);
t.opacity = 0;
cc.tween(this.node).to(.5, {
y: 0
}).call(function() {
cc.find("btn_backgame", e.node).active = !0;
}).call(function() {
cc.tween(t).to(.3, {
opacity: 150
}).start();
}).start();
},
OnClickBackGame: function() {
var e = this;
cc.vv.gameData.ResumeSlot();
cc.vv.gameData.PlayCommAudio("info_page_close");
var t = cc.find("lay_bg", this.node);
cc.tween(t).to(.1, {
opacity: 0
}).start();
cc.tween(this.node).to(.5, {
y: -cc.winSize.height
}).call(function() {
e.node.active = !1;
}).start();
},
OnClickRight: function() {
if (this._isLoadFinish() && !this._bMoveing) {
this._bMoveing = !0;
cc.vv.gameData.PlayCommAudio("info_page_scroll");
if (1 == this._items_r.length) {
var e = this._items_l.shift();
e.position = cc.v2(this.GetItemX(1), 0);
this._items_r.push(e);
}
var t = this._items_r.shift();
this._items_l.push(t);
for (var i = 0; i < this._items_l.length; i++) {
var n = this._items_l[i];
this._moveNode(n, !0);
}
for (var a = 0; a < this._items_r.length; a++) {
var o = this._items_r[a];
this._moveNode(o, !0);
}
}
},
OnClickLeft: function() {
if (this._isLoadFinish() && !this._bMoveing) {
this._bMoveing = !0;
cc.vv.gameData.PlayCommAudio("info_page_scroll");
if (0 == this._items_l.length) {
var e = this._items_r.pop();
e.position = cc.v2(this.GetItemX(-1), 0);
this._items_l.push(e);
}
var t = this._items_l.pop();
this._items_r.unshift(t);
for (var i = 0; i < this._items_l.length; i++) {
var n = this._items_l[i];
this._moveNode(n, !1);
}
for (var a = 0; a < this._items_r.length; a++) {
var o = this._items_r[a];
this._moveNode(o, !1);
}
}
},
GetItemX: function(e) {
return this._itemWith * e;
},
_isLoadFinish: function() {
var e = cc.vv.gameData.getGameCfg();
if (e.helpItems) return e.helpItems.length == this.addIdx;
},
_moveNode: function(e, t) {
var i = this, n = 1;
t && (n = -1);
cc.tween(e).by(.2, {
position: cc.v2(this._itemWith * n, 0)
}).call(function() {
i._bMoveing = null;
}).start();
}
});
cc._RF.pop();
}, {} ],
LMSlots_Loading_Base: [ function(e, t) {
"use strict";
cc._RF.push(t, "abedbbfCMZKrqaCGBXknTBq", "LMSlots_Loading_Base");
cc.Class({
extends: cc.Component,
properties: {
progressBar: {
default: null,
type: cc.Node,
displayName: "进度条"
},
_loadDone: !1,
_nIterval: 0,
_nPer: 0,
_loadTime: 0,
_updateFinish: !1
},
onLoad: function() {
Global.autoAdaptDevices(!1);
cc.director.resume();
this.progressBar.getComponent(cc.ProgressBar).progress = 0;
var e = cc.find("pro", this.progressBar);
e && (e.active = !1);
cc.vv.AudioManager.stopBgm();
cc.vv.NetManager.registerMsg(MsgId.GAME_ENTER_MATCH, this.onRcvNetEnterGame, this);
Global.registerEvent(EventId.ENTER_LOGIN_SUCCESS, this.onRecGameRconnect, this);
cc.vv.SubGameUpdateNode.on("update_subgame_pro", this.downloadingPro.bind(this));
Global.registerEvent("checkSubStart", this.downloadingStart, this);
Global.registerEvent("checkSubFinish", this.downloadingFinish, this);
Global.registerEvent("SubGameWaiting", this.downloadWaiting, this);
Global.registerEvent("update_subgame_fail", this.downloadFail, this);
},
onDestroy: function() {
cc.vv.NetManager.unregisterMsg(MsgId.GAME_ENTER_MATCH, this.onRcvNetEnterGame, !1, this);
},
start: function() {
this._playLoadingAudio();
this._downloadSubgame(this._gameId);
},
_downloadSubgame: function(e) {
this._proBaseval = 0;
if (Global.loadingDown) {
var t = cc.vv.UserManager.isNoNeedDownGame(e);
if (cc.sys.isNative && Global.openUpdate && !t) {
this._proBaseval = .5;
cc.vv.SubGameUpdateNode.emit("check_subgame", e);
} else {
this._updateFinish = !0;
this._doEnterGame();
}
} else {
this._updateFinish = !0;
this._enterGameFinish = !0;
this._doEnterGame();
}
},
_doEnterGame: function() {
if (cc.vv.gameData) {
var e = cc.vv.gameData.getDeskInfo();
if (e && e.isReconnect) {
this._enterGameFinish = !0;
this._gameId = e.gameid;
}
}
this._enterGameFinish ? this.EnterGameSuccess() : this.scheduleOnce(function() {
this._reqEnterGame();
}.bind(this), .2);
StatisticsMgr.reqReport(StatisticsMgr.REQ_SUBGAME_LOADING_START);
},
setEnterGame: function(e, t, i) {
this._gameId = e;
this._exData = t;
this._ssid = i;
cc.vv.AppData.setGameId(e);
},
_playLoadingAudio: function() {
var e = this;
this._playLoadingEff = !1;
cc.vv.AudioManager.playEff("slots_common/SlotRes/", "game_loading", !0, !1, function() {
e._playLoadingEff = !0;
});
},
_preLoadGameScene: function() {
var e = this, t = e._getGameData().mainScene;
cc.director.preloadScene(t, function(t) {
t ? e._loadErr = t : e._loadDone = !0;
});
StatisticsMgr.reqReport(StatisticsMgr.REQ_SUBGAME_LOADING_SUCC);
},
_reqEnterGame: function() {
cc.vv.GameManager.sendEnterGameReq(this._gameId, this._ssid, this._exData);
},
EnterGameSuccess: function() {
this._preLoadGameScene();
},
_updateProgress: function(e) {
this._nPer += e;
if (this._nPer >= 99) {
if (this._getLoadingFinishCondion()) {
var t = this._getGameData(), i = t.mainScene, n = t.orientation || Global.APP_ORIENTATION;
this._enterGameFinish = !1;
cc.vv.SceneMgr.enterScene(i, function() {}, n);
return;
}
this._nPer = 99;
this._showErrStr && this._setProVal(this._proBaseval + this._nPer / 100);
}
this._setProVal(this._proBaseval + this._nPer / 100);
},
_getLoadingFinishCondion: function() {
return this._loadDone && this._enterGameFinish;
},
_getGameData: function() {
var e = this._gameId;
e || (e = cc.vv.gameData.getGameId());
return cc.vv.GameDataCfg.getGameData(e);
},
_checkError: function(e) {
var t = this;
this._loadTime += e;
if (this._loadTime > 20) {
if (!this._enterGameFinish && this._bRecon) {
this._bRecon = null;
this._reqEnterGame();
}
if (this._bShowClose) return;
this._bShowClose = !0;
cc.loader.loadRes("slots_common/SlotRes/prefab/loading_btn_close", cc.Prefab, function(e, i) {
if (!e) {
var n = cc.instantiate(i);
n && (n.parent = t.node);
Global.btnClickEvent(n, t.OnClickLoadingClose, t);
}
});
this._showErrStr = "";
this._enterErr && (this._showErrStr += this._enterErr);
this._loadErr && (this._showErrStr += this._loadErr);
}
},
OnClickLoadingClose: function() {
var e = {
c: MsgId.GAME_LEVELROOM
};
e.deskid = this._gameId;
cc.vv.NetManager.send(e);
cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.HALL);
StatisticsMgr.reqReport(StatisticsMgr.REQ_SUBGAME_LOADING_FAIL);
},
onRcvNetEnterGame: function(t) {
if (200 == t.code) {
var i = cc.vv.GameDataCfg.getGameData(t.gameid);
if (i) if ("gameData" === i.dataName) if (null === cc.vv.gameData || void 0 === cc.vv.gameData) {
var n = e(i.dataCmp);
cc.vv.gameData = new n();
cc.vv.gameData.init(t.deskinfo, t.gameid, t.gameJackpot);
this._enterGameFinish = !0;
this.EnterGameSuccess();
} else cc.vv.gameData.init(t.deskinfo, t.gameid, t.gameJackpot); else {
var a = e(i.dataCmp);
if (a) {
a.init(t.deskinfo, !0);
cc.vv[i.dataName] = a;
this._enterGameFinish = !0;
this.EnterGameSuccess();
}
}
} else this._enterErr = cc.js.formatStr("errorcode:%s " + t.code);
},
onRecGameRconnect: function() {
this._bRecon = !0;
},
downloadingPro: function(e) {
var t = e.gameId, i = e.per;
if (t == this._gameId) {
this._setProVal(i / 2);
this._showTipText(Math.floor(i) + "%");
}
},
downloadingStart: function() {},
downloadingFinish: function(e) {
if (e.detail == this._gameId) {
this._updateFinish = !0;
this._showTipText("Download Success!");
}
},
downloadWaiting: function() {},
downloadFail: function(e) {
var t = e.detail;
t && t.id == this._gameId && t.code && this._showTipText(cc.js.formatStr("Download Failed!(%s)", t.code));
},
_showTipText: function(e) {
var t = cc.find("pro", this.progressBar);
if (t) {
t.active = !0;
t.getComponent(cc.Label).string = e;
}
},
_setProVal: function(e) {
e > 99 && (e = 100);
this.progressBar.getComponent(cc.ProgressBar).progress = e;
},
update: function(e) {
if (this._updateFinish) {
this._nIterval += e;
var t = 1;
this._loadDone && (t = 10 * Math.random());
if (this._nIterval > .03) {
this._nIterval = 0;
this._updateProgress(t);
}
this._checkError(e);
}
}
});
cc._RF.pop();
}, {} ],
LMSlots_Logic_Base: [ function(e, t) {
"use strict";
cc._RF.push(t, "5e312T0w6FLMJyVJAG87pNQ", "LMSlots_Logic_Base");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.InitCommComponent();
},
InitCommComponent: function() {
this.FitIPad();
this.node.addComponent("BigWin");
var e = cc.find("Canvas").getComponent("LMSlots_Asset_Base");
cc.vv.gameData.SetAssetScript(e);
var t = cc.find("safe_node", this.node), i = cc.vv.gameData.getGameCfg(), n = "LMSlots_Sound";
i.scripts.Sound && (n = i.scripts.Sound);
this.node.addComponent(n);
var a = cc.find("LMSlots_Top", t).addComponent(i.scripts.Top);
a.Init();
var o = cc.find("LMSlots_Bottom", t).addComponent(i.scripts.Bottom);
o.Init();
cc.vv.gameData.SetTopBottomScript(a, o);
var c = cc.find("slots", t);
if (c) {
var s = c.addComponent(i.scripts.Slots);
cc.vv.gameData.SetSlotsScript(s);
}
this.node.addComponent("LMSots_OtherSys");
i.puzzleCfg && this.node.addComponent("LMSlots_Puzzle");
},
StartSlot: function() {
var e = cc.vv.gameData.GetSlotsScript();
e && e.Init();
},
start: function() {
this.StartSlot();
},
FitIPad: function() {
Global.autoAdaptDevices(!1);
}
});
cc._RF.pop();
}, {} ],
LMSlots_Logo_Adapt: [ function(e, t) {
"use strict";
cc._RF.push(t, "52320ICsdZCzbpTthMz1Scl", "LMSlots_Logo_Adapt");
cc.Class({
extends: cc.Component,
properties: {
_bRefush: 0
},
onLoad: function() {
this.node.opacity = 0;
},
updateAlignment: function() {
this.node.opacity = 0;
this._bRefush = 0;
},
update: function() {
if (1 == this._bRefush) {
var e = this.node.convertToWorldSpaceAR(cc.v2(0, 0)), t = cc.vv.gameData.GetTopScript().node, i = cc.find("btn_purchase_bg", t);
if (!i) return;
var n = i.convertToWorldSpaceAR(cc.v2(0, -40));
if (n.y <= e.y + (this.node.height + i.height + 80) / 2) {
var a = t.parent.getComponentsInChildren("LMSlotMachine_PrizePool");
if (a) {
for (var o, c = Math.abs(n.y - e.y - (this.node.height + i.height + 80) / 2), s = 1e3, r = 0; r < a.length; r++) {
var l = a[r], d = l.node.convertToWorldSpaceAR(cc.v2(0, 0)), h = e.y - d.y - (l.node.height + this.node.height) / 2;
if (h < s) {
s = h;
o = l.node.getBoundingBoxToWorld();
}
}
if (o && s > 0 && (s > c || (c - s) / this.node.height < .5)) if (s > c) {
this.node.opacity = 255;
this.node.y -= c;
} else {
this.node.opacity = 255;
var _ = 1 - (c - s) / this.node.height;
this.node.scale *= _;
this.node.y = this.node.y - c + (1 - _) * this.node.height / 2;
}
}
} else this.node.opacity = 255;
}
this._bRefush++;
}
});
cc._RF.pop();
}, {} ],
LMSlots_Panel_Click: [ function(e, t) {
"use strict";
cc._RF.push(t, "700ceRVWyVEM645zvnkkczS", "LMSlots_Panel_Click");
cc.Class({
extends: cc.Component,
properties: {
panelBtn: cc.Button
},
onLoad: function() {
Global.btnClickEvent(this.panelBtn.node, this.onClickPanelBtn, this);
},
start: function() {},
onClickPanelBtn: function() {
if (!(cc.vv.gameData.GetAutoModelTime() > 0)) {
var e = cc.vv.gameData.GetSlotState();
"idle" == e ? this.sendSpinEvent() : "moveing_2" == e && this.sendStopEvent();
}
},
sendSpinEvent: function() {
cc.vv.gameData.GetBottomScript().OnClickSpin();
},
sendStopEvent: function() {
cc.vv.gameData.GetBottomScript().OnClickStop();
}
});
cc._RF.pop();
}, {} ],
LMSlots_PauseUI_Base: [ function(e, t) {
"use strict";
cc._RF.push(t, "95b40gCeCJDWKYjxQk5idaV", "LMSlots_PauseUI_Base");
cc.Class({
extends: cc.Component,
properties: {}
});
cc._RF.pop();
}, {} ],
LMSlots_PrizePool_Base: [ function(e, t) {
"use strict";
cc._RF.push(t, "2e4c5e8FwtJP7rpJloaFNbV", "LMSlots_PrizePool_Base");
cc.Class({
extends: cc.Component,
properties: {
_poolList: null
},
onLoad: function() {
Global.registerEvent(cc.vv.gameData._EventId.SLOT_JACKPOOL_LOCK_CHANGE, this.OnEventJackPoolLockChange, this);
this.InItPoolList();
},
start: function() {
this.CheckJoopLock(!0);
},
InItPoolList: function() {
this._poolList = this.node.getComponentsInChildren("LMSlotMachine_PrizePool");
for (var e = 0; e < this._poolList.length; e++) {
var t = this._poolList[e].node, i = t.getComponent(cc.Button);
i || (i = t.addComponent(cc.Button));
Global.btnClickEvent(t, this._OnClickPool, this);
}
},
GetPoolList: function() {
return this._poolList;
},
_OnClickPool: function(e) {
var t = e.node.getComponent("LMSlotMachine_PrizePool");
t && t.isLocked() && this.isCanClickJP() && this.OnClickUnLookPoolItem(t.GetPoolType(), t.GetUnLockNum());
},
_GetPoolNodeByType: function(e) {
for (var t = null, i = this.GetPoolList(), n = 0; n < i.length; n++) if (i[n].GetPoolType() == e) {
t = i[n].node;
break;
}
return t;
},
CheckJoopLock: function(e) {
for (var t = cc.vv.gameData.GetTotalBet(), i = this.GetPoolList(), n = 0; n < i.length; n++) i[n].onEventTotalbetUpdated({
detail: t
}, e);
},
OnClickUnLookPoolItem: function(e, t) {
var i = cc.vv.gameData.BetToIdx(t);
i && cc.vv.gameData.GetBottomScript().SetBetIdx(i);
},
OnEventJackPoolLockChange: function(e) {
var t = e.detail, i = t.poolIdx, n = t.val, a = t.unLockBet, o = t.bInit, c = this._GetPoolNodeByType(i);
this.ShowNodeLockByNode(c, n, a, i, o);
},
isCanClickJP: function() {
var e = !0;
cc.vv.gameData.GetTotalFree() > 0 && cc.vv.gameData.GetFreeTime() > 0 && (e = !1);
var t = cc.vv.gameData.GetBottomScript();
t && (t.GetSpinBtnState() || (e = !1));
return e;
},
PausePool: function(e) {
this._poolList = this.node.getComponentsInChildren("LMSlotMachine_PrizePool");
for (var t = 0; t < this._poolList.length; t++) for (var i = this._poolList[t].GetPoolType(), n = 0; n < e.length; n++) i == e[n].prizeType && this._poolList[t].PausePrizePool(e[n].pauseNum);
},
ResumePausePool: function() {
this._poolList = this.node.getComponentsInChildren("LMSlotMachine_PrizePool");
for (var e = 0; e < this._poolList.length; e++) this._poolList[e].RestPrizePool();
},
ShowNodeLockByNode: function() {
cc.log("补充奖池解锁表现");
}
});
cc._RF.pop();
}, {} ],
LMSlots_RP: [ function(e, t) {
"use strict";
cc._RF.push(t, "2b103Pkw4xLXKcFG3EW8+Pv", "LMSlots_RP");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this._lbl_rp = cc.find("lbl_val", this.node);
Global.registerEvent("EVENT_SPIN_MSG", this.onEventMsgSpine, this);
Global.btnClickEvent(this.node, this.onBtnRpClick, this);
},
start: function() {
this.ShowRP();
},
ShowRP: function() {
this._lbl_rp && (this._lbl_rp.getComponent(cc.Label).string = Global.FormatNumToComma(cc.vv.UserManager.rp));
},
roallRP: function(e) {
var t = this;
this._lbl_rp && e && cc.tween(this.node).delay(1).call(function() {
Global.doRoallNumEff(t._lbl_rp, cc.vv.UserManager.rp - e, cc.vv.UserManager.rp, 1.5, null, null, 0, !0);
}).start();
},
onEventMsgSpine: function(e) {
var t = e.detail;
this.onMsgSpine(t);
},
onMsgSpine: function(e) {
if (e && 200 == e.code) {
var t = 0;
e.rp && (t = e.rp.add);
this.roallRP(t);
}
},
onBtnRpClick: function() {
cc.vv.gameData.PlayCommAudio("common_click");
cc.vv.PopupManager.addPopup("BalootClient/RP/PopupRPGameView", {
opacityIn: !0
});
}
});
cc._RF.pop();
}, {} ],
LMSlots_Reel_Base: [ function(e, t) {
"use strict";
cc._RF.push(t, "b5a25CgYpBHgJ4HCgFn4una", "LMSlots_Reel_Base");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
cc.Class({
extends: cc.Component,
properties: {
_reelIdx: null,
_nCount: 0,
_symbols: [],
_symbolTemplete: null,
_holderNode: null,
_bMoving: !1,
_bStoping: !1,
_holderOrigPosY: null,
_curY: 0,
_stopTime: 0,
_bResizing: !1,
_result: null,
_originResult: null,
totalAddHeight: 0,
deltaHeight: 0,
curAddHeight: 0,
_reelState: [],
_topAniNode: null,
_backupDatas: null,
_cfg: null
},
onLoad: function() {
this._holderNode = cc.find("mask/holder", this.node);
this._holderOrigPosY = this._holderNode.position.y;
},
start: function() {},
Init: function(e, t, i) {
this._reelIdx = e;
this._nCount = t;
this._symbols = [];
this._topAniNode = i;
this._cfg = cc.vv.gameData.getGameCfg();
this.LoadSymbols();
this.ShowAntiEffect(!1);
},
GetReelIdx: function() {
return this._reelIdx;
},
LoadSymbols: function() {
var e = this._cfg.symbolPrefab;
if (!this._symbolTemplete) {
this._symbolTemplete = cc.vv.gameData.GetPrefabByName(e);
this._symbolTemplete && (this._symbolTemplete.optimizationPolicy = cc.Prefab.OptimizationPolicy.MULTI_INSTANCE);
}
for (var t = 0; t < this._nCount + 1; t++) this.CreateOneSymbol();
this.ReLayOut();
},
CreateOneSymbol: function() {
var e = cc.instantiate(this._symbolTemplete);
e.parent = this._holderNode;
var t = e.addComponent(this._cfg.scripts.Symbols), i = this._symbols.length;
t.SetSymbolReelIdx(this._reelIdx);
t.Init(i, this._topAniNode);
this._symbols.push(t);
},
ReLayOut: function() {
for (var e = 0; e < this._symbols.length; e++) {
var t = this._symbols[e];
t.node.position = this.GetSymbolPosByRow(e);
t.SetSymbolIdx(e);
}
},
GetSymbolByRow: function(e) {
return this._symbols[e];
},
GetSymbolPosByRow: function(e) {
return cc.v2(0, (e + .5) * this._cfg.symbolSize.height);
},
AddCount: function(e, t, i) {
void 0 === t && (t = .5);
void 0 === i && (i = 0);
if (!this._bResizing) {
this._bResizing = !0;
this._nCount += e;
this._offsetY = i;
var n = this._offsetY;
e < 0 && (n = -1 * this._offsetY);
if (this._symbols.length < this._nCount + 1) for (var a = this._nCount + 1 - this._symbols.length, o = 0; o < a; o++) this.CreateOneSymbol();
this.ReLayOut();
this.totalAddHeight = (e - n) * this._cfg.symbolSize.height;
this.deltaHeight = this.totalAddHeight / t;
this.curAddHeight = 0;
}
},
AppendSymbol: function(e, t) {
this._appendArray = e;
this._appedDir = t;
for (var i = 0; i < e.length; i++) {
var n = cc.instantiate(this._symbolTemplete);
n.parent = this._holderNode;
var a = n.addComponent(this._cfg.scripts.Symbols);
a.SetSymbolReelIdx(this._reelIdx);
if (1 == t) {
var o = -1 - i;
n.position = this.GetSymbolPosByRow(o);
a.Init(o, this._topAniNode);
this._symbols.unshift(a);
} else if (2 == t) {
var c = this._symbols.length - 1;
a.Init(c, this._topAniNode);
this._symbols.splice(c, 0, a);
}
a.ShowById(e[i]);
}
2 == t && this.ReLayOut();
},
DelAppendSymbol: function() {
if (this._appendArray) {
for (var e = 0; e < this._appendArray.length; e++) if (1 == this._appedDir) {
var t = this._symbols.pop();
this._destroySymbol(t);
} else if (2 == this._appedDir) {
var i = this._symbols.shift();
this._destroySymbol(i);
}
this._appendArray = null;
}
},
StartMove: function() {
this._result = null;
this._stopRightNow = null;
this._bNotifyReadyStop = null;
this._originResult = null;
this._addSpeed = 0;
this._curY = 0;
this._bMoving = !0;
this._bStoping = !1;
this._offsetY = 0;
for (var e = 0; e < this._symbols.length; e++) this._symbols[e].StartMove();
this._speed = this._cfg.speed * this.GetTimeScale();
this._offset = this._cfg.symbolSize.height;
},
StartRecycleSymbol: function(e) {
var t = cc.vv.gameData.getGameCfg();
if (this._symbols.length > t.row + 1) {
var i = -(this._symbols.length - (t.row + 1));
this.AddCount(i, e);
}
},
StopMove: function(e) {
if (!this._bResizing && this._bMoving) {
this._bStoping = !0;
this._stopTime = e;
}
},
updataSymbol: function() {
var e = this._symbols.shift(), t = null;
if (this._stopTime <= 0 && this._bStoping && this._result && !this._bResizing) if (this._result instanceof Array) {
this.ReadyToStop();
(t = this._result.shift()) || (this._bMoving = !1);
} else cc.error("LMSlots_Reel_Base.updataSymbol设置的结果不是数组!");
t ? e.ShowById(t.sid, t.data) : e.ShowRandomSymbol();
this._symbols.push(e);
this.ReLayOut();
this._curY = 0;
this._holderNode.y = this._holderOrigPosY;
this._bMoving || this.OnReelBounsAction();
},
StopMoveRightNow: function() {
this._stopRightNow = !0;
if (this._bMoving && this._originResult) {
this._result = Global.copy(this._originResult);
for (var e = 0; e < this._symbols.length; e++) this.updataSymbol();
}
},
AddDelayTime: function(e) {
if (this._bMoving) {
this._stopTime += e;
this._result = Global.copy(this._originResult);
} else cc.log(this._reelIdx + "列已经停止了还加速！！！");
},
SetSpeed: function(e) {
this._speed = e;
},
OnReelSpinEnd: function() {
this._reelState = [];
var e = cc.vv.gameData.GetSlotsScript();
e.OnReelSpinEnd(this._reelIdx);
var t = e.GetLastStopReelIdx();
this._reelIdx == t && e.OnSpinEnd();
},
ReadyToStop: function() {
if (!this._bNotifyReadyStop) {
this._bNotifyReadyStop = !0;
cc.vv.gameData.GetSlotsScript().OnReelReadyToStop(this._reelIdx);
}
},
OnReelBounsActionBefore: function() {
cc.vv.gameData.GetSlotsScript().OnReelBounsActionBefore(this._reelIdx);
if (this._originResult) for (var e = 0; e < this._originResult.length; e++) this._symbols[e].StopMoveBefore();
},
OnReelBounsActionDeep: function() {
this.ShowAntiEffect(!1);
this.playReelStop();
cc.vv.gameData.GetSlotsScript().OnReelBounsActionDeep(this._reelIdx);
if (this._originResult) for (var e = 0; e < this._originResult.length; e++) this._symbols[e].StopMoveDeep();
},
OnReelBounsActionEnd: function() {
cc.vv.gameData.GetCoin();
cc.vv.gameData.GetSlotsScript().OnReelBounsActionEnd(this._reelIdx);
if (this._originResult) for (var e = 0; e < this._originResult.length; e++) this._symbols[e].StopMoveEnd(); else cc.log("回弹结束，数据已经被清空了");
this.OnReelSpinEnd();
},
OnReelBounsAction: function(e) {
void 0 === e && (e = !1);
var t = this._cfg.bounceInfo ? this._cfg.bounceInfo.distance : 30, i = this._cfg.bounceInfo ? this._cfg.bounceInfo.time : .3, n = e ? 0 : t / this._speed;
i /= this.GetTimeScale();
cc.tween(this._holderNode).call(this.OnReelBounsActionBefore.bind(this)).to(n, {
position: cc.v2(this._holderNode.x, this._holderOrigPosY - t)
}).call(this.OnReelBounsActionDeep.bind(this)).to(i, {
position: cc.v2(this._holderNode.x, this._holderOrigPosY)
}).call(this.OnReelBounsActionEnd.bind(this)).start();
},
SetResult: function(e) {
this._originResult = Global.copy(e);
this._result = e;
},
AddReelStateInfo: function(e) {
this._reelState.push(e);
},
playReelStop: function() {
if (this._originResult) for (var e = 0; e < this._originResult.length; e++) for (var t, n = this._symbols[e], a = i(this._reelState); !(t = a()).done; ) {
var o = t.value;
o.isStop && o.id.includes(n.GetShowId()) && n.playStopAnimation();
}
if (this._cfg.reelStateInfo && this._cfg.reelStateInfo[0]) {
for (var c, s = "", r = "", l = !1, d = i(this._reelState); !(c = d()).done; ) {
var h = c.value;
if (h.isStop) {
r = h.symbolStopSound ? h.symbolStopSound : "";
l = !0;
} else s = h.reelStopSound ? h.reelStopSound : "";
}
l && (s = r);
var _ = this._cfg.reelStateInfo[0].path;
_ || (_ = cc.vv.gameData.getGameDir());
var p = cc.vv.gameData.getGameCfg();
if (p.bundleName) {
var u = p.bundleName;
_ = "";
cc.vv.AudioManager.playEff(_, s, !0, !1, null, null, null, u);
} else cc.vv.AudioManager.playEff(_, s, !0);
}
},
playAntiAnimation: function() {
var e = !1;
if (this._cfg.reelStateInfo && this._cfg.reelStateInfo[0]) for (var t, n = i(this._reelState); !(t = n()).done; ) {
var a = t.value;
if (a.isAnt && a.antiNode) {
this.ShowAntiEffect(!0, a.antiNode);
var o = a.path;
o || (o = cc.vv.gameData.getGameDir());
var c = cc.vv.gameData.getGameCfg();
if (c.bundleName) {
var s = c.bundleName;
o = "";
cc.vv.AudioManager.playEff(o, a.antSound, !0, !1, null, null, null, s);
} else cc.vv.AudioManager.playEff(o, a.antSound, !0);
var r = a.antSpeed;
r && (r *= this.GetTimeScale());
this._speed = r || this._speed;
e = !0;
}
}
return e;
},
ShowAntiEffect: function(e, t) {
if (0 == e) {
if (this._cfg.reelStateInfo) for (var n, a = i(this._cfg.reelStateInfo); !(n = a()).done; ) {
var o = n.value, c = cc.find("mask/" + o.antiNode, this.node);
if (c && c.active) {
c.active = !1;
this._stopRightNow && cc.vv.AudioManager.stopEffectByName(o.antSound);
}
}
} else {
var s = cc.find("mask/" + t, this.node);
s ? s.active = e : cc.log("未找到加速节点：mask/node_anti");
}
},
OnReelHeigtChange: function() {},
OnReelHeightChangeEnd: function() {},
UpdatePosition: function(e) {
this._stopTime = this._stopTime - e;
this._curY += e * this._speed;
this._curY > this._offset ? this.updataSymbol() : this._holderNode.y = this._holderOrigPosY - this._curY;
},
UpdateSize: function(e) {
var t = this.deltaHeight * e;
this.curAddHeight += t;
if (this.totalAddHeight > 0 && this.curAddHeight >= this.totalAddHeight || this.totalAddHeight < 0 && this.curAddHeight <= this.totalAddHeight) {
this.curAddHeight -= t;
t = this.totalAddHeight - this.curAddHeight;
this._bResizing = !1;
this.OnReelHeightChangeEnd(t > 0);
}
for (var i = this.GetResizeHeightObjs(), n = 0; n < i.length; n++) i[n].height += t;
for (var a = this.GetResizeMoveingObjs(), o = 0; o < a.length; o++) a[o].y += t;
this.OnReelHeigtChange(t);
if (!this._bResizing && this._symbols.length > this._nCount + 1) for (var c = this._symbols.length - (this._nCount + 1), s = 0; s < c; s++) {
var r = this._symbols.pop();
this._destroySymbol(r);
}
},
GetResizeHeightObjs: function() {
var e = [], t = cc.find("mask", this.node);
t && e.push(t);
var i = cc.find("reels_bg/reel_bg" + (this._reelIdx + 1), this.node.parent.parent);
i && e.push(i);
return e;
},
GetResizeMoveingObjs: function() {
var e = [], t = cc.find(cc.js.formatStr("reels_frame/reel%s/frame1", this._reelIdx + 1), this.node.parent.parent);
t && e.push(t);
return e;
},
Backup: function() {
this._backupDatas = [];
for (var e = 0; e < this._symbols.length; e++) {
var t = this._symbols[e].Backup();
this._backupDatas.push(t);
}
},
Resume: function() {
if (this._backupDatas) {
for (var e = 0; e < this._symbols.length; e++) {
var t = this._backupDatas[e];
this._symbols[e].Resume(t);
}
this._backupDatas = null;
}
},
GetTimeScale: function() {
return cc.vv.gameData.GetSlotsScript().GetTimeScale();
},
_destroySymbol: function(e) {
e.setAnimationToTop(!1);
e.ShowKuang(!1);
e.node.destroy();
},
update: function(e) {
this._bMoving && this.UpdatePosition(e);
this._bResizing && this.UpdateSize(e);
}
});
cc._RF.pop();
}, {} ],
LMSlots_Slots_Base: [ function(e, t) {
"use strict";
cc._RF.push(t, "cad066m/NhCcY3FeYgziXrh", "LMSlots_Slots_Base");
function i() {
i = function() {
return e;
};
var e = {}, t = Object.prototype, n = t.hasOwnProperty, a = "function" == typeof Symbol ? Symbol : {}, o = a.iterator || "@@iterator", c = a.asyncIterator || "@@asyncIterator", s = a.toStringTag || "@@toStringTag";
function r(e, t, i) {
return Object.defineProperty(e, t, {
value: i,
enumerable: !0,
configurable: !0,
writable: !0
}), e[t];
}
try {
r({}, "");
} catch (e) {
r = function(e, t, i) {
return e[t] = i;
};
}
function l(e, t, i, n) {
var a = t && t.prototype instanceof _ ? t : _, o = Object.create(a.prototype), c = new L(n || []);
return o._invoke = function(e, t, i) {
var n = "suspendedStart";
return function(a, o) {
if ("executing" === n) throw new Error("Generator is already running");
if ("completed" === n) {
if ("throw" === a) throw o;
return {
value: void 0,
done: !0
};
}
for (i.method = a, i.arg = o; ;) {
var c = i.delegate;
if (c) {
var s = b(c, i);
if (s) {
if (s === h) continue;
return s;
}
}
if ("next" === i.method) i.sent = i._sent = i.arg; else if ("throw" === i.method) {
if ("suspendedStart" === n) throw n = "completed", i.arg;
i.dispatchException(i.arg);
} else "return" === i.method && i.abrupt("return", i.arg);
n = "executing";
var r = d(e, t, i);
if ("normal" === r.type) {
if (n = i.done ? "completed" : "suspendedYield", r.arg === h) continue;
return {
value: r.arg,
done: i.done
};
}
"throw" === r.type && (n = "completed", i.method = "throw", i.arg = r.arg);
}
};
}(e, i, c), o;
}
function d(e, t, i) {
try {
return {
type: "normal",
arg: e.call(t, i)
};
} catch (e) {
return {
type: "throw",
arg: e
};
}
}
e.wrap = l;
var h = {};
function _() {}
function p() {}
function u() {}
var f = {};
r(f, o, function() {
return this;
});
var g = Object.getPrototypeOf, m = g && g(g(T([])));
m && m !== t && n.call(m, o) && (f = m);
var v = u.prototype = _.prototype = Object.create(f);
function S(e) {
[ "next", "throw", "return" ].forEach(function(t) {
r(e, t, function(e) {
return this._invoke(t, e);
});
});
}
function C(e, t) {
function i(a, o, c, s) {
var r = d(e[a], e, o);
if ("throw" !== r.type) {
var l = r.arg, h = l.value;
return h && "object" == typeof h && n.call(h, "__await") ? t.resolve(h.__await).then(function(e) {
i("next", e, c, s);
}, function(e) {
i("throw", e, c, s);
}) : t.resolve(h).then(function(e) {
l.value = e, c(l);
}, function(e) {
return i("throw", e, c, s);
});
}
s(r.arg);
}
var a;
this._invoke = function(e, n) {
function o() {
return new t(function(t, a) {
i(e, n, t, a);
});
}
return a = a ? a.then(o, o) : o();
};
}
function b(e, t) {
var i = e.iterator[t.method];
if (void 0 === i) {
if (t.delegate = null, "throw" === t.method) {
if (e.iterator.return && (t.method = "return", t.arg = void 0, b(e, t), "throw" === t.method)) return h;
t.method = "throw", t.arg = new TypeError("The iterator does not provide a 'throw' method");
}
return h;
}
var n = d(i, e.iterator, t.arg);
if ("throw" === n.type) return t.method = "throw", t.arg = n.arg, t.delegate = null, 
h;
var a = n.arg;
return a ? a.done ? (t[e.resultName] = a.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", 
t.arg = void 0), t.delegate = null, h) : a : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), 
t.delegate = null, h);
}
function E(e) {
var t = {
tryLoc: e[0]
};
1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), 
this.tryEntries.push(t);
}
function y(e) {
var t = e.completion || {};
t.type = "normal", delete t.arg, e.completion = t;
}
function L(e) {
this.tryEntries = [ {
tryLoc: "root"
} ], e.forEach(E, this), this.reset(!0);
}
function T(e) {
if (e) {
var t = e[o];
if (t) return t.call(e);
if ("function" == typeof e.next) return e;
if (!isNaN(e.length)) {
var i = -1, a = function t() {
for (;++i < e.length; ) if (n.call(e, i)) return t.value = e[i], t.done = !1, t;
return t.value = void 0, t.done = !0, t;
};
return a.next = a;
}
}
return {
next: I
};
}
function I() {
return {
value: void 0,
done: !0
};
}
return p.prototype = u, r(v, "constructor", u), r(u, "constructor", p), p.displayName = r(u, s, "GeneratorFunction"), 
e.isGeneratorFunction = function(e) {
var t = "function" == typeof e && e.constructor;
return !!t && (t === p || "GeneratorFunction" === (t.displayName || t.name));
}, e.mark = function(e) {
return Object.setPrototypeOf ? Object.setPrototypeOf(e, u) : (e.__proto__ = u, r(e, s, "GeneratorFunction")), 
e.prototype = Object.create(v), e;
}, e.awrap = function(e) {
return {
__await: e
};
}, S(C.prototype), r(C.prototype, c, function() {
return this;
}), e.AsyncIterator = C, e.async = function(t, i, n, a, o) {
void 0 === o && (o = Promise);
var c = new C(l(t, i, n, a), o);
return e.isGeneratorFunction(i) ? c : c.next().then(function(e) {
return e.done ? e.value : c.next();
});
}, S(v), r(v, s, "Generator"), r(v, o, function() {
return this;
}), r(v, "toString", function() {
return "[object Generator]";
}), e.keys = function(e) {
var t = [];
for (var i in e) t.push(i);
return t.reverse(), function i() {
for (;t.length; ) {
var n = t.pop();
if (n in e) return i.value = n, i.done = !1, i;
}
return i.done = !0, i;
};
}, e.values = T, L.prototype = {
constructor: L,
reset: function(e) {
if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, 
this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(y), 
!e) for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0);
},
stop: function() {
this.done = !0;
var e = this.tryEntries[0].completion;
if ("throw" === e.type) throw e.arg;
return this.rval;
},
dispatchException: function(e) {
if (this.done) throw e;
var t = this;
function i(i, n) {
return c.type = "throw", c.arg = e, t.next = i, n && (t.method = "next", t.arg = void 0), 
!!n;
}
for (var a = this.tryEntries.length - 1; a >= 0; --a) {
var o = this.tryEntries[a], c = o.completion;
if ("root" === o.tryLoc) return i("end");
if (o.tryLoc <= this.prev) {
var s = n.call(o, "catchLoc"), r = n.call(o, "finallyLoc");
if (s && r) {
if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
if (this.prev < o.finallyLoc) return i(o.finallyLoc);
} else if (s) {
if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
} else {
if (!r) throw new Error("try statement without catch or finally");
if (this.prev < o.finallyLoc) return i(o.finallyLoc);
}
}
}
},
abrupt: function(e, t) {
for (var i = this.tryEntries.length - 1; i >= 0; --i) {
var a = this.tryEntries[i];
if (a.tryLoc <= this.prev && n.call(a, "finallyLoc") && this.prev < a.finallyLoc) {
var o = a;
break;
}
}
o && ("break" === e || "continue" === e) && o.tryLoc <= t && t <= o.finallyLoc && (o = null);
var c = o ? o.completion : {};
return c.type = e, c.arg = t, o ? (this.method = "next", this.next = o.finallyLoc, 
h) : this.complete(c);
},
complete: function(e, t) {
if ("throw" === e.type) throw e.arg;
return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, 
this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), 
h;
},
finish: function(e) {
for (var t = this.tryEntries.length - 1; t >= 0; --t) {
var i = this.tryEntries[t];
if (i.finallyLoc === e) return this.complete(i.completion, i.afterLoc), y(i), h;
}
},
catch: function(e) {
for (var t = this.tryEntries.length - 1; t >= 0; --t) {
var i = this.tryEntries[t];
if (i.tryLoc === e) {
var n = i.completion;
if ("throw" === n.type) {
var a = n.arg;
y(i);
}
return a;
}
}
throw new Error("illegal catch attempt");
},
delegateYield: function(e, t, i) {
return this.delegate = {
iterator: T(e),
resultName: t,
nextLoc: i
}, "next" === this.method && (this.arg = void 0), h;
}
}, e;
}
function n(e, t, i, n, a, o, c) {
try {
var s = e[o](c), r = s.value;
} catch (e) {
i(e);
return;
}
s.done ? t(r) : Promise.resolve(r).then(n, a);
}
function a(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = o(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var n = 0;
return function() {
return n >= e.length ? {
done: !0
} : {
done: !1,
value: e[n++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function o(e, t) {
if (e) {
if ("string" == typeof e) return c(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? c(e, t) : void 0;
}
}
function c(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
cc.Class({
extends: cc.Component,
properties: {
_topScript: null,
_bottomScript: null,
_col: 0,
_row: 0,
_reels: [],
_cfg: null,
_stopTime: null,
_gameInfo: null,
_bStopRightnow: null,
_topAniNode: null
},
onLoad: function() {
this._topAniNode = cc.find("top_ani", this.node);
},
start: function() {},
Init: function() {
this._topScript = cc.vv.gameData.GetTopScript();
this._bottomScript = cc.vv.gameData.GetBottomScript();
this._cfg = cc.vv.gameData.getGameCfg();
this._col = this._cfg.col;
this._row = this._cfg.row;
this.createReels(this._col, this._row);
this._bottomScript.ShowBtnsByState("idle");
this.RegisterEvent();
this.ReconnectShow();
},
RegisterEvent: function() {},
createReels: function(e, t) {
for (var i = this._cfg.scripts.Reels, n = 0; n < e; n++) {
var a = cc.find("reels/reel" + (n + 1), this.node).addComponent(i);
a.Init(n, t, this._topAniNode);
this._reels.push(a);
}
},
ReconnectShow: function() {
if (cc.vv.gameData.GetFreeTime()) {
this.ShowGameview(!0);
this.CanDoNextRound();
} else this.ShowGameview(!1);
},
ReconnectNet: function() {},
ShowGameview: function(e) {
if (e) {
var t = cc.vv.gameData.GetTotalFree(), i = cc.vv.gameData.GetFreeTime();
this._bottomScript.ShowFreeModel(!0, t - i, t);
var n = cc.vv.gameData.GetTotalFreeWin();
this._bottomScript.SetWin(n);
} else this._bottomScript.ShowFreeModel(!1);
var a = cc.find("Canvas/safe_node/spr_bg_normal"), o = cc.find("Canvas/safe_node/spr_bg_free");
if (o) {
a && (a.active = !e);
o.active = e;
}
},
StartMove: function() {
this._bStopRightnow = null;
this._gameInfo = null;
this._topScript.StartMove();
cc.vv.gameData.ClearOneRoundData();
this.MoveReels(this._reels);
this._stopTime = this.GetStopTime();
},
MoveReels: function(e) {
this.moveReelLastIdx = -1;
for (var t = 0; t < e.length; t++) {
var i = e[t];
i.StartMove();
var n = i.GetReelIdx();
n > this.moveReelLastIdx && (this.moveReelLastIdx = n);
}
},
StopMove: function() {
this._bStopRightnow = !0;
this._bottomScript.ShowBtnsByState("moveing_1");
this._stopTime = -1;
for (var e = 0; e < this._reels.length; e++) {
var t = this._reels[e];
t.StopMove(0);
t.StopMoveRightNow();
}
},
onMsgSpine: function(e) {
this._gameInfo = e;
var t = e.resultCards;
this.SetSlotsResult(t);
this.SetReelStateInfo(t);
},
SetSlotsResult: function(e) {
for (var t = e.length / this._col, i = [], n = 0; n < e.length; n++) {
Math.floor(n / t);
var a = n % this._col;
if (this._cfg.symbol[e[n]]) {
var o = {};
o.sid = e[n];
i[a] || (i[a] = []);
i[a].unshift(o);
}
}
for (var c = 0; c < this._reels.length; c++) {
var s = this._reels[c], r = i[c];
s.SetResult(r);
}
},
SetReelStateInfo: function(e) {
var t = this;
if (this._cfg.reelStateInfo) {
for (var i = [], n = 0; n < e.length; n++) {
var o = e[n], c = n % this._col;
i[c] || (i[c] = []);
i[c].push(o);
}
for (var s, r = function() {
var e = s.value, n = Global.copy(e);
n.isStop = !1;
n.isAnt = !1;
for (var a = n.mini, o = Global.copy(n.counts), c = 0, r = !0, l = 0; l < i.length; l++) {
var d = t._reels[l], h = i[l];
n.isStop = !1;
n.isAnt = !1;
c >= a - 1 && n.counts[l] > 0 && r && (n.isAnt = !0);
var _ = h.reduce(function(e, t) {
return n.id.includes(t) ? e + 1 : e + 0;
}, 0);
c += _;
o.shift();
var p = (o.length > 0 ? o.reduce(function(e, t) {
return e + t;
}) : 0) + c;
_ > 0 && p >= a && r && (n.isStop = !0);
n.continuous && n.counts[l] > 0 && 0 == _ && (r = !1);
d.AddReelStateInfo(Global.copy(n));
}
}, l = a(this._cfg.reelStateInfo); !(s = l()).done; ) r();
}
},
GetResutByRowCol: function(e, t, i) {
return e[this.ChangeRowColToIdx(e, t, i)];
},
ChangeRowColToIdx: function(e, t, i) {
var n = e.length / this._col;
return this._col * (n - t - 1) + i;
},
GetSymbolByIdx: function(e) {
var t = (e - 1) % this._col, i = this._row - Math.floor((e - 1) / this._col) - 1;
return this._reels[t].GetSymbolByRow(i);
},
OnReelSpinEnd: function() {},
DoCheckReelAnti: function(e) {
if (!this._bStopRightnow) for (var t = !1, i = 0; i < this._reels.length; i++) {
var n = this._reels[i].GetReelIdx();
n == e + 1 && (t = this._reels[i].playAntiAnimation());
if (n > e && t) {
var a = cc.vv.gameData.getGameCfg().AddAntiTime || 1;
this._reels[i].AddDelayTime(a);
}
}
},
OnReelReadyToStop: function() {},
OnReelBounsActionEnd: function() {},
OnReelBounsActionDeep: function() {},
OnReelBounsActionBefore: function(e) {
this.DoCheckReelAnti(e);
},
OnSpinEnd: function() {
var e = this;
this.ShowWinTrace();
var t = cc.vv.gameData.GetGameWin(), i = t;
cc.vv.gameData.GetTotalFree() > 0 && cc.vv.gameData.GetTotalFree() != cc.vv.gameData.GetFreeTime() && (i = cc.vv.gameData.GetGameTotalFreeWin());
this.ShowBottomWin(t, i, !0, function() {
if (e.CheckSpecialReward()) e._bottomScript.ShowBtnsByState("moveing_1"); else {
e.CanDoNextRound();
e.CheckExitFreeGame();
}
});
},
CanDoNextRound: function() {
cc.vv.gameData.CanDoNextRound();
this._topScript.StopMove();
this._bottomScript.CanDoNextRound();
},
ShowWinTrace: function() {
for (var e = [], t = 0; t < this._gameInfo.zjLuXian.length; t++) for (var i = this._gameInfo.zjLuXian[t], n = 0; n < i.indexs.length; n++) e[i.indexs[n]] = 1;
if (this._gameInfo.scatterZJLuXian && this._gameInfo.scatterZJLuXian.indexs) for (var a = 0; a < this._gameInfo.scatterZJLuXian.indexs.length; a++) e[this._gameInfo.scatterZJLuXian.indexs[a]] = 1;
for (var o in e) {
var c = this.GetSymbolByIdx(Number(o));
if (c) {
c.playWinAnimation();
c.ShowKuang();
}
}
},
ShowBottomWin: function(e, t, a, o, c) {
var s, r = this;
return (s = i().mark(function n() {
var s, l, d, h, _, p;
return i().wrap(function(i) {
for (;;) switch (i.prev = i.next) {
case 0:
s = r;
l = r._gameInfo && r._gameInfo.betcoin || cc.vv.gameData.GetTotalBet();
if (!((d = e / l) < 10 && d > 0)) {
i.next = 19;
break;
}
if (!(d >= 5)) {
i.next = 11;
break;
}
i.next = 7;
return s._bottomScript.ShowWin(t, 2, c, null);

case 7:
a && s._topScript.ShowCoinByRoll();
o && o();
i.next = 17;
break;

case 11:
h = null;
d < 1 && (h = 1);
i.next = 15;
return s._bottomScript.ShowWin(t, 1, c, null, h);

case 15:
a && s._topScript.ShowCoinByRoll();
o && o();

case 17:
i.next = 32;
break;

case 19:
if (!(d >= 10)) {
i.next = 31;
break;
}
if (!(_ = cc.find("Canvas").getComponent("BigWin"))) {
i.next = 28;
break;
}
0;
if (!(p = d >= 80 ? 5 : d >= 60 ? 4 : d >= 40 ? 3 : d > 20 ? 2 : 1)) {
i.next = 26;
break;
}
return i.abrupt("return", new Promise(function(i) {
_.ShowBigWin(p, e, function() {
s._bottomScript.ShowWin(t, 3, c, null, .3);
a && s._topScript.ShowCoinByRoll();
o && o();
i();
});
}));

case 26:
i.next = 29;
break;

case 28:
console.log("未添加BigWin组件");

case 29:
i.next = 32;
break;

case 31:
o && o();

case 32:
case "end":
return i.stop();
}
}, n);
}), function() {
var e = this, t = arguments;
return new Promise(function(i, a) {
var o = s.apply(e, t);
function c(e) {
n(o, i, a, c, r, "next", e);
}
function r(e) {
n(o, i, a, c, r, "throw", e);
}
c(void 0);
});
})();
},
CheckSpecialReward: function() {
var e = this.CheckEnterFreeGame(), t = this.CheckTriggerSubGame();
return e || t;
},
CheckExitFreeGame: function() {},
CheckEnterFreeGame: function() {},
CheckTriggerSubGame: function() {
return !1;
},
GetStopTime: function() {
return .1;
},
SetStopTime: function(e) {
this._stopTime = e;
},
GetReelStopInter: function(e) {
return e * (this._cfg.reelStopInter || .6);
},
GetLastStopReelIdx: function() {
return this.moveReelLastIdx;
},
ShowSymbolTopAni: function(e, t) {
if (this._topAniNode) {
var i = cc.vv.gameData.getGameCfg().scripts.Symbols, n = cc.find(cc.js.formatStr("top_symbol_%s_%s", e, t), this._topAniNode);
if (n) {
n.active = !0;
return n.getComponent(i);
}
var a = this._reels[t].GetSymbolByRow(e);
if (a) {
var o = a.node.convertToWorldSpaceAR(cc.v2(0)), c = cc.instantiate(a.node);
c.parent = this._topAniNode;
c.name = cc.js.formatStr("top_symbol_%s_%s", e, t);
c.position = this._topAniNode.convertToNodeSpaceAR(o);
return c.getComponent(i);
}
}
},
ClearAllTopShow: function() {
this._topAniNode && this._topAniNode.destroyAllChildren();
},
Backup: function() {
this._bBackup = !0;
for (var e = 0; e < this._reels.length; e++) this._reels[e].Backup();
},
Resume: function() {
if (this._bBackup) {
this._bBackup = null;
this.ClearAllTopShow();
for (var e = 0; e < this._reels.length; e++) this._reels[e].Resume();
}
},
SetTimeScale: function(e) {
this._timeScaleVal = e;
},
GetTimeScale: function() {
return this._timeScaleVal || 1;
},
CanStopSlot: function() {
return null != this._gameInfo;
},
update: function(e) {
if (this._stopTime > 0) {
this._stopTime = this._stopTime - e;
if (this._stopTime <= 0) if (this.CanStopSlot()) {
this._roundSpineTime = 0;
this._bottomScript.ShowBtnsByState("moveing_2");
for (var t = 0; t < this._reels.length; t++) {
var i = this._reels[t], n = this.GetReelStopInter(t);
i.StopMove(n);
}
} else {
this._stopTime = e;
this._roundSpineTime = this._roundSpineTime || 0;
this._roundSpineTime += e;
this._roundSpineTime > 20 && this._topScript.SetBackLobby(!0);
}
}
}
});
cc._RF.pop();
}, {} ],
LMSlots_Sound: [ function(e, t) {
"use strict";
cc._RF.push(t, "0bb6fpEW7BPx5vdKGLyPHOS", "LMSlots_Sound");
cc.Class({
extends: cc.Component,
properties: {
playingBgm: null,
soundPath: ""
},
onLoad: function() {
Global.SlotsSoundMgr = this;
this.soundPath || (this.soundPath = cc.vv.gameData.getGameDir());
},
onDestroy: function() {
Global.SlotsSoundMgr = null;
},
playEffect: function(e, t, i) {
void 0 === t && (t = !1);
void 0 === i && (i = null);
if (e && "" != e) {
var n = cc.vv.gameData.getGameCfg();
if (n.bundleName) {
var a = n.bundleName;
return cc.vv.AudioManager.playEff("", e, !0, t, i, null, null, a);
}
return cc.vv.AudioManager.playEff(this.soundPath, e, !0, t, i);
}
},
playEffectByUnSync: function(e, t, i) {
var n = this;
void 0 === t && (t = !1);
void 0 === i && (i = null);
return new Promise(function(a) {
var o = function() {
a();
}, c = cc.vv.gameData.getGameCfg();
if (c.bundleName) {
var s = c.bundleName;
cc.vv.AudioManager.playEff("", e, !0, t, i, null, o, s);
} else cc.vv.AudioManager.playEff(n.soundPath, e, !0, t, i, null, o);
});
},
stopEffectByName: function(e) {
cc.vv.AudioManager.stopEffectByName(e);
},
playBgm: function(e) {
if (e && "" != e) {
this.stopBgm();
this.playingBgm = e;
var t = cc.vv.gameData.getGameCfg();
if (t.bundleName) {
var i = t.bundleName;
cc.vv.AudioManager.playBgm("", e, !0, 1, null, !0, i);
} else cc.vv.AudioManager.playBgm(this.soundPath, e, !0);
}
},
playNormalBgm: function(e, t) {
void 0 === e && (e = !1);
void 0 === t && (t = 1);
var i = cc.vv.gameData.getGameCfg();
if (i.normalBgm) if (i.bundleName) {
var n = i.bundleName;
this.playUnLoopBgm(i.normalBgm, e, t, n);
} else this.playUnLoopBgm(i.normalBgm, e, t); else cc.log("cfg未配置normalBgm");
},
stopBgm: function() {
this.playingBgm = null;
cc.vv.AudioManager.setClearBgmCall();
cc.vv.AudioManager.stopBgm();
},
playUnLoopBgm: function(e, t, i, n) {
var a = this;
if (t || !this.playingBgm) {
this.stopBgm();
a.playingBgm = e;
var o = this.soundPath;
n && (o = "");
cc.vv.AudioManager.playBgm(o, e, !0, i, function() {
a.playingBgm = null;
a.bCheckNext = !0;
}, !1, n);
}
},
playCommonEff: function(e) {
cc.vv.AudioManager.playEff("slots_common/SlotRes/", e, !0);
},
update: function() {
if (this.bCheckNext) {
this.bCheckNext = null;
cc.vv.gameData && "idle" != cc.vv.gameData.GetSlotState() && this.playNormalBgm();
}
}
});
cc._RF.pop();
}, {} ],
LMSlots_Subgame777_item: [ function(e, t) {
"use strict";
cc._RF.push(t, "1f78foz7Q9JmLPK00rnZiN2", "LMSlots_Subgame777_item");
cc.Class({
extends: e("LMSlots_PauseUI_Base"),
properties: {
_itemIndex: null,
_reelIdx: null,
_round: 0,
itemAtlas: cc.SpriteAtlas
},
start: function() {},
resetItem: function(e, t, i) {
this._itemIndex = e;
this._reelIdx = t;
this._cfg = i;
},
getItemIdx: function() {
return this._itemIndex;
},
clrearItemData: function() {
this._round = 0;
},
showRandSprite: function() {
var e = this.getItemCfg()[Global.random(1, 8)];
this.node.getComponent(cc.Sprite).spriteFrame = this.itemAtlas.getSpriteFrame(e.normal);
},
showResultSprite: function(e) {
var t = this.getItemById(e);
if (t) {
var i = this.itemAtlas.getSpriteFrame(t.normal);
i && (this.node.getComponent(cc.Sprite).spriteFrame = i);
}
},
setMoveState: function(e) {
this._moveState = e;
},
getMoveState: function() {
return this._moveState;
},
getRound: function() {
return this._round;
},
setRound: function(e) {
this._round = e;
},
addRound: function() {
this._round += 1;
},
getItemCfg: function() {
return this._cfg;
},
getItemById: function(e) {
var t = this.getItemCfg();
for (var i in t) {
var n = t[i];
if (i == e) return n;
}
}
});
cc._RF.pop();
}, {
LMSlots_PauseUI_Base: "LMSlots_PauseUI_Base"
} ],
LMSlots_Subgame777_reel: [ function(e, t) {
"use strict";
cc._RF.push(t, "3c5d24XLk5K9bvKFY98tbbJ", "LMSlots_Subgame777_reel");
var i = "LMSlots_Subgame777_item";
cc.Class({
extends: e("LMSlots_PauseUI_Base"),
properties: {
prefab_item: {
default: null,
type: cc.Prefab,
tooltip: "物品的预制"
},
reelIdx: 0,
_num: 3,
_allItems: [],
_curInterv: 0,
_gamecfg: null
},
start: function() {},
createItems: function(e) {
this._gamecfg = e;
for (var t = 0; t < this._num + 1; t++) {
var n = cc.instantiate(this.prefab_item);
n.position = this.getItemPosition(t);
this.node.addChild(n);
var a = n.getComponent(i);
if (a) {
a.resetItem(t, this.reelIdx, this._gamecfg);
a.showRandSprite();
}
this._allItems.push(n);
}
},
getItemPosition: function(e) {
var t = this.node.height / (this._num - 1) * e;
return cc.v2(0, t);
},
startMove: function(e) {
this._resultReel = e;
for (var t = this._allItems, n = 0; n < t.length; n++) {
var a = t[n].getComponent(i);
if (a) {
a.setMoveState("moveing");
a.clrearItemData();
}
}
this._bStartMove = !0;
this._curInterv = 0;
this._moveIntervCfg = 1 / 60;
var o = cc.vv.gameData.getGameCfg();
this._moveSpeed = o.sub777_speed || 40;
this._roundMax = 5;
this._stopNum = 0;
},
stopMove: function() {
var e = this._allItems;
this._moveSpeed = 10 * this._moveSpeed;
for (var t = 0; t < e.length; t++) {
var n = e[t].getComponent(i);
n && n.setRound(this._roundMax - 1);
}
},
addStopItemNum: function() {
this._stopNum += 1;
this._stopNum == this._allItems.length && this.doReelStopAction();
},
doReelStopAction: function() {
Global.dispatchEvent(cc.vv.gameData._EventId.REEL_STOP);
},
update: function(e) {
var t = this, n = this;
if (this._bStartMove) {
this._curInterv += e;
if (this._curInterv >= this._moveIntervCfg) {
this._curInterv = 0;
for (var a = this.getBottomPosY(), o = this._allItems, c = function(e) {
var c = o[e], s = c.getComponent(i);
if (s && "moveing" == s.getMoveState()) if (s.getRound() < t._roundMax + t.reelIdx) {
c.y -= t._moveSpeed;
if (c.y <= a) {
c.y = t.getTopPosY();
s.addRound();
s.showRandSprite();
}
} else {
s.showResultSprite(t._resultReel[e]);
var r = t.getItemPosition(s.getItemIdx()), l = (c.y - r.y) / (1 / t._moveIntervCfg * t._moveSpeed);
s.setMoveState("easing");
cc.tween(c).to(l, {
position: r
}, {
easing: "elasticIn"
}).call(function() {
s.setMoveState("idle");
n.addStopItemNum();
}).start();
}
}, s = 0; s < o.length; s++) c(s);
}
}
},
getBottomPosY: function() {
return -this.getItemPosition(1).y;
},
getTopPosY: function() {
return this.getItemPosition(this._num).y;
}
});
cc._RF.pop();
}, {
LMSlots_PauseUI_Base: "LMSlots_PauseUI_Base"
} ],
LMSlots_Subgame777: [ function(e, t) {
"use strict";
cc._RF.push(t, "44b4dc+6N9EFa322FV8HI3e", "LMSlots_Subgame777");
var i, n, a = ((i = {})[1] = {
normal: "theme160_s_104",
win_node: "s104"
}, i[2] = {
normal: "theme160_s_103",
win_node: "s103"
}, i[3] = {
normal: "theme160_s_102",
win_node: "s102"
}, i[4] = {
normal: "theme160_s_105",
win_node: "s105"
}, i[5] = {
normal: "theme160_s_106",
win_node: "s106"
}, i[6] = {
normal: "theme160_s_107",
win_node: "s107"
}, i[7] = {
normal: "theme160_s_108",
win_node: "s108"
}, i[8] = {
normal: "theme160_s_109",
win_node: "s109"
}, i), o = ((n = {})[1] = 3117, n[2] = 25, n[3] = 9, n[4] = 7.5, n[5] = 9.4, n[6] = 7.5, 
n[7] = 5, n[8] = 2.5, n);
cc.Class({
extends: e("LMSlots_PauseUI_Base"),
properties: {},
onLoad: function() {
var e = cc.find("node_pop_ui/node_start/btn_start", this.node);
Global.btnClickEvent(e, function() {
e.stopAllActions();
this.onClickStart();
}, this);
var t = cc.find("node_pop_ui/node_end/btn_collect", this.node);
Global.btnClickEvent(t, function() {
t.stopAllActions();
this.onClickCollect();
}, this);
this._pop_win = cc.find("node_pop_ui", this.node);
this._pop_win.active = !1;
this.showInitReel();
Global.registerEvent(cc.vv.gameData._EventId.REEL_STOP, this.recvReelStop, this);
this._soundCfg = cc.vv.gameData.getGameCfg().soundCfg;
},
onEnable: function() {
cc.vv.NetManager.registerMsg(MsgId.SLOT_SUBGAME_DATA, this.onRcvSubGameAction, this);
},
onDisable: function() {
cc.vv.NetManager.unregisterMsg(MsgId.SLOT_SUBGAME_DATA, this.onRcvSubGameAction, !1, this);
},
start: function() {},
ReconnectNet: function(e) {
this._subGameData || this.showEnter(e);
},
showEnter: function(e) {
this.node.active = !0;
this._bSendReq = !1;
this._subGameData = null;
var t = cc.vv.gameData.GetBottomScript();
t && t.ShowBtnsByState("moveing_1");
if (!this._pop_win.active) {
this._pop_win.active = !0;
var i = cc.find("node_start", this._pop_win);
cc.find("node_end", this._pop_win).active = !1;
i.active = !0;
this._startRound = 0;
this.hideAllSubNode();
this._showPopWinAction(this._pop_win);
this.ShowAvgReward(e);
cc.vv.gameData.checkAutoPlay(i, this.onClickStart.bind(this));
}
},
showEnd: function() {
var e = cc.find("node_start", this._pop_win), t = cc.find("node_end", this._pop_win);
t.active = !0;
e.active = !1;
var i = this._subGameData.wincoin, n = cc.find("lbl_win", t);
Global.doRoallNumEff(n, 0, i, 1.5, null, null, 0, !0);
this._showPopWinAction(this._pop_win);
cc.vv.gameData.checkAutoPlay(t, this.onClickCollect.bind(this));
},
ShowAvgReward: function(e) {
e || (e = 0);
for (var t = 1; t <= 8; t++) {
var i = cc.find("spr_machine/node_mult/M" + t, this.node);
i && (i.getComponent(cc.Label).string = Global.formatNumShort(o[t] * e, 1));
}
},
hidePopWin: function() {
var e = this;
Global.showAlertAction(e._pop_win, !1, 1, .1, function() {
e._pop_win.active = !1;
});
},
onClickStart: function() {
if (!this._bSendReq) {
this._bSendReq = !0;
var e = {
c: MsgId.SLOT_SUBGAME_DATA,
data: {}
};
e.data.rtype = 1;
e.gameid = cc.vv.gameData.getGameId();
cc.vv.NetManager.send(e, !0);
this.hidePopWin();
Global.SlotsSoundMgr.playCommonEff("common_click");
}
},
onClickCollect: function() {
var e = cc.find("node_pop_ui/node_end/lbl_win", this.node);
if (e.getNumberOfRunningActions() > 0) {
e.stopAllActions();
e.getComponent(cc.Label).string = Global.FormatNumToComma(this._subGameData.wincoin);
} else {
Global.SlotsSoundMgr.playCommonEff("common_click");
Global.dispatchEvent(cc.vv.gameData._EventId.SLOT_ENERGYGAME_OperationOVER, {
isshow: !1,
etype: 0
});
this._pop_win.active = !1;
this.showTranse();
}
},
showTranse: function() {
this.subWin();
},
subWin: function() {
this.node.active = !1;
var e = this._subGameData.wincoin;
cc.vv.gameData.AddCoin(e);
var t = cc.vv.gameData.GetBottomScript().getCurrentWin() || 0;
t += e;
cc.vv.gameData.GetSlotsScript().ShowBottomWin(e, t, !0, function() {
cc.vv.gameData.GetSlotsScript().CanDoNextRound();
});
},
onRcvSubGameAction: function(e) {
var t = this;
AppLog.log("接收游戏动作数据");
if (200 == e.code) {
this._subGameData = e.data;
this.scheduleOnce(function() {
t.startMoveReel();
}, 1);
}
},
showInitReel: function() {
for (var e = 0; e < 3; e++) cc.find("spr_machine/node_content/reel" + (e + 1), this.node).getComponent("LMSlots_Subgame777_reel").createItems(a);
},
startMoveReel: function() {
this._stopReelNum = 0;
if (this._subGameData) for (var e = 0; e < 3; e++) {
var t = [ 0, 0, 0 ], i = this._subGameData.cardsList[this._startRound];
t[1] = i[e];
cc.find("spr_machine/node_content/reel" + (e + 1), this.node).getComponent("LMSlots_Subgame777_reel").startMove(t);
}
Global.SlotsSoundMgr.playCommonEff("slot_spin");
this.showBottomStop(!0);
},
showBottomStop: function() {
var e = cc.vv.gameData.GetBottomScript().getStopBtnObj(), t = cc.instantiate(e);
t.active = !0;
t.getComponent(cc.Button).interactable = !0;
this._stop77Btn = t;
t.parent = e.parent;
t.on("click", this.stop777Call, this);
},
stop777Call: function() {
this._stop77Btn.destroy();
for (var e = 0; e < 3; e++) cc.find("spr_machine/node_content/reel" + (e + 1), this.node).getComponent("LMSlots_Subgame777_reel").stopMove();
},
_showPopWinAction: function(e, t) {
e.active = !0;
Global.showAlertAction(e, !0, .01, 1, t);
Global.SlotsSoundMgr.playCommonEff("slot_popup");
},
recvReelStop: function() {
var e = this, t = this;
this._stopReelNum += 1;
if (3 == this._stopReelNum) {
this._stop77Btn && this._stop77Btn.destroy();
var i = this._subGameData.cardsList[this._startRound];
this._startRound += 1;
if (this._startRound < this._subGameData.cardsList.length) this.scheduleOnce(function() {
t.startMoveReel();
}, 1); else {
Global.SlotsSoundMgr.stopEffectByName("slot_spin");
Global.SlotsSoundMgr.playCommonEff("slot_win");
this.showResultAnimation(i);
this.scheduleOnce(function() {
e.showEnd();
}, 3);
}
}
},
showResultAnimation: function(e) {
this.ShowResultNode(!0);
for (var t = 0; t < e.length; t++) {
var i = this.getSpineAnimationName(e[t]), n = cc.find("spr_machine/node_content/winmask/Sp_Game777_Symbol" + t + "/" + i, this.node);
n.active = !0;
n.getComponent(sp.Skeleton).setAnimation(0, "animation", !0);
cc.tween(n).repeat(10, cc.sequence(cc.fadeIn(.1), cc.delayTime(.2), cc.fadeOut(.1), cc.delayTime(.2))).start();
}
},
ShowResultNode: function(e) {
cc.find("spr_machine/node_content/winmask", this.node).active = e;
},
getSpineAnimationName: function(e) {
var t = a;
for (var i in t) {
var n = t[i];
if (i == e) return n.win_node;
}
},
hideAllSubNode: function() {
this.ShowResultNode(!1);
for (var e = 0; e < 3; e++) for (var t = cc.find("spr_machine/node_content/winmask/Sp_Game777_Symbol" + e, this.node).children, i = 0; i < t.length; i++) t[i].active = !1;
}
});
cc._RF.pop();
}, {
LMSlots_PauseUI_Base: "LMSlots_PauseUI_Base"
} ],
LMSlots_Symbol_Base: [ function(e, t) {
"use strict";
cc._RF.push(t, "eaac20vZuJM/rS1j4SRwuTT", "LMSlots_Symbol_Base");
cc.Class({
extends: cc.Component,
properties: {
_symbolIdx: -1,
_reelIdx: -1,
_id: null,
_data: null,
_showNode: null,
_topAniNode: null,
_isKuang: !1,
_state: ""
},
start: function() {},
Init: function(e, t) {
this._topAniNode = t;
this.SetSymbolIdx(e);
this.ShowRandomSymbol();
},
ShowRandomSymbol: function() {
var e, t = this.GetRandomCfg();
if (t) {
var i = t[this._reelIdx + 1];
if (i) {
var n = cc.vv.gameData.GetReelRandomIdx(this._reelIdx);
cc.js.isNumber(n) || (n = Global.random(1, i.length) - 1);
(e = i[n]) || (e = i[n = 0]);
cc.vv.gameData.SetReelRandomIdx(this._reelIdx, ++n);
}
} else {
var a = cc.vv.gameData.getGameCfg(), o = Global.random(1, a.randomSymbols.length);
e = a.randomSymbols[o - 1];
}
this.ShowById(e);
},
GetRandomCfg: function() {
var e = cc.vv.gameData.getGameCfg();
return (cc.vv.gameData.GetTotalFree() > 0 && cc.vv.gameData.GetTotalFree() !== cc.vv.gameData.GetFreeTime()) > 0 && e.cardmapfree ? e.cardmapfree : e.cardmap;
},
ShowById: function(e, t) {
this._id = e;
this._data = t;
this._state = "normal";
this._showNode && (this._showNode.active = !1);
var i = cc.vv.gameData.getGameCfg().symbol[e];
if (i && i.node) {
this._showNode = cc.find(i.node, this.node);
this._showNode.active = !0;
i.zIndex && (this.node.zIndex = i.zIndex);
} else console.log("未找到配置id:" + e);
},
GetShowId: function() {
return this._id;
},
GetData: function() {
return this._data;
},
ShowKuang: function(e) {
void 0 === e && (e = !0);
this._isKuang = e;
var t = cc.vv.gameData.getGameCfg();
if (t.kuang) {
var i = cc.vv.gameData.GetAssetScript(), n = this.GetKuangShowParent();
if (i && n) {
var a = n.getChildByName("kuang" + this._symbolIdx + "_" + this._reelIdx);
if (e) {
if (!a || !cc.isValid(a, !0)) {
var o = i.GetPrefabByName(t.kuang);
if (o) {
(a = cc.instantiate(o)).name = "kuang" + this._symbolIdx + "_" + this._reelIdx;
a.parent = n;
}
}
var c = this.node.convertToWorldSpaceAR(cc.v2(0, 0)), s = n.convertToNodeSpaceAR(c);
a.position = s;
a.active = !0;
t.symbol[this._id].win_ani && (a.zIndex = t.symbol[this._id].win_ani.zIndex - this._symbolIdx + 10 * this._reelIdx + 10);
} else a && (a.active = !1);
}
}
},
SetSymbolIdx: function(e) {
this._symbolIdx = e;
var t = 50 - e;
if (this._id) {
var i = cc.vv.gameData.getGameCfg().symbol[this._id];
i && i.zIndex && (t = i.zIndex);
}
this.node.zIndex = t;
},
GetSymbolReelIdx: function() {
return this._reelIdx;
},
SetSymbolReelIdx: function(e) {
this._reelIdx = e;
},
GetKuangShowParent: function() {
return this._topAniNode;
},
ShowNormal: function() {
this.ShowById(this._id, this._data);
this.setAnimationToTop(!1);
},
StartMove: function() {
this.setAnimationToTop(!1);
this.ShowKuang(!1);
this.stopWinTweenAction();
this.node.zIndex = 50 - this._symbolIdx + 10 * this._reelIdx;
},
StopMoveBefore: function() {},
StopMoveDeep: function() {},
StopMoveEnd: function() {},
playWinAnimation: function() {
this._showNode && (this._showNode.active = !1);
var e = this._id, t = cc.vv.gameData.getGameCfg();
if (t.symbol[e] && t.symbol[e].win_node) {
this._state = "win";
this._showNode && (this._showNode.active = !1);
var i = this.setAnimationToTop(!0);
i.active = !0;
var n = cc.find(t.symbol[e].win_node, i);
n.active = !0;
if (t.symbol[e].win_ani && "" != t.symbol[e].win_ani.name) {
i.zIndex = t.symbol[e].win_ani.zIndex - this._symbolIdx + 10 * this._reelIdx;
var a = n.getComponent(sp.Skeleton);
a && a.setAnimation(0, t.symbol[e].win_ani.name, !0);
}
} else {
this._showNode.active = !0;
this.playWinTweenAction();
}
},
playStopAnimation: function() {
var e = this._id, t = cc.vv.gameData.getGameCfg();
if (t.symbol[e] && t.symbol[e].win_node && t.symbol[e].stop_ani) {
this._state = "stop";
this._showNode && (this._showNode.active = !1);
this._showNode = cc.find(t.symbol[e].win_node, this.node);
this._showNode.active = !0;
if ("" != t.symbol[e].stop_ani.name) {
this.node.zIndex = t.symbol[e].stop_ani.zIndex - this._symbolIdx + 10 * this._reelIdx;
var i = this._showNode.getComponent(sp.Skeleton);
i && i.setAnimation(0, t.symbol[e].stop_ani.name, !1);
}
}
},
playidleAnimation: function() {
var e = !1, t = this._id, i = cc.vv.gameData.getGameCfg();
if (i.symbol[t] && i.symbol[t].win_node && i.symbol[t].idle_ani) {
this._state = "idle";
this._showNode && (this._showNode.active = !1);
this._showNode = cc.find(i.symbol[t].win_node, this.node);
this._showNode.active = !0;
if ("" != i.symbol[t].idle_ani.name) {
this.node.zIndex = i.symbol[t].idle_ani.zIndex - this._symbolIdx + 10 * this._reelIdx;
e = !0;
var n = this._showNode.getComponent(sp.Skeleton);
n && n.setAnimation(0, i.symbol[t].idle_ani.name, !0);
}
}
return e;
},
playTriggerAnimation: function() {
var e = !1, t = this._id, i = cc.vv.gameData.getGameCfg();
if (i.symbol[t] && i.symbol[t].win_node && i.symbol[t].trigger_ani) {
this._state = "trigger";
this._showNode && (this._showNode.active = !1);
var n = this.setAnimationToTop(!0);
n.active = !0;
var a = cc.find(i.symbol[t].win_node, n);
a.active = !0;
if ("" != i.symbol[t].trigger_ani.name) {
n.zIndex = i.symbol[t].trigger_ani.zIndex - this._symbolIdx + 10 * this._reelIdx;
e = !0;
var o = a.getComponent(sp.Skeleton);
o && o.setAnimation(0, i.symbol[t].trigger_ani.name, !1);
}
}
return e;
},
setAnimationToTop: function(e) {
if (this._topAniNode) {
if (e) {
var t = cc.find(cc.js.formatStr("symbol_ani_%s_%s", this._symbolIdx, this._reelIdx), this._topAniNode);
t || (t = cc.instantiate(this.node));
var i = this.node.convertToWorldSpaceAR(cc.v2(0));
t.parent = this._topAniNode;
t.name = cc.js.formatStr("symbol_ani_%s_%s", this._symbolIdx, this._reelIdx);
t.position = this._topAniNode.convertToNodeSpaceAR(i);
this.node.active = !1;
return t;
}
var n = cc.find(cc.js.formatStr("symbol_ani_%s_%s", this._symbolIdx, this._reelIdx), this._topAniNode);
if (n) {
n.removeFromParent();
n.destroy();
}
this.node.active = !0;
this._showNode && (this._showNode.active = !0);
}
return this.node;
},
Backup: function() {
var e = {};
e.symbolIdx = this._symbolIdx;
e.id = this._id;
this._data && (e.data = Global.copy(this._data));
e.isKuang = this._isKuang;
e.state = this._state;
return e;
},
Resume: function(e) {
if (e) {
this._symbolIdx = e.symbolIdx;
this._id = e.id;
this._data = Global.copy(e.data);
this.ShowKuang(e.isKuang);
this.ShowNormal();
var t = e.state;
"win" == t ? this.playWinAnimation() : "stop" == t ? this.playStopAnimation() : "idle" == t ? this.playidleAnimation() : "trigger" == t && this.playTriggerAnimation();
}
},
playWinTweenAction: function() {
this._showNode.stopAllActions();
var e = this._showNode.scale;
this._showNodeOrgScale = e;
cc.tween(this._showNode).repeatForever(cc.tween().to(.35, {
scale: e + .2
}).to(.35, {
scale: e
}).delay(1)).start();
},
stopWinTweenAction: function() {
if (this._showNode) {
this._showNode.active = !0;
this._showNode.stopAllActions();
if (this._showNodeOrgScale) {
this._showNode.scale = this._showNodeOrgScale;
this._showNodeOrgScale = null;
}
this._showNode.opacity = 255;
}
}
});
cc._RF.pop();
}, {} ],
LMSlots_SysFloat: [ function(e, t) {
"use strict";
cc._RF.push(t, "e6fbcrnECJKwLDoDNzVLCOk", "LMSlots_SysFloat");
cc.Class({
extends: cc.Component,
properties: {
_btns: null,
_btne: null,
_node_bingo: null,
_node_explore: null,
_node_growup: null,
_node_heropack: null,
_node_heroexp: null,
_bExpandFlag: null,
_openFloat: []
},
onLoad: function() {
Global.FixDesignScale_V(this.node);
this._btns = cc.find("btn_s", this.node);
Global.btnClickEvent(this._btns, this.onClickShou, this);
this._btne = cc.find("btn_e", this.node);
Global.btnClickEvent(this._btne, this.onClickExpand, this);
var e = cc.vv.UserManager.isOpen(Global.SYS_OPEN.HERO_CARD);
this._node_growup = cc.find("content/LMSlotsSys_road", this.node);
this._node_growup.active = !e;
this._node_bingo = cc.find("content/bingo_float", this.node);
var t = cc.vv.gameData.getDeskInfo().bingoInfo;
this._node_bingo.active = !(!e || !t);
this._node_explore = cc.find("content/explore_float", this.node);
var i = cc.vv.gameData.getDeskInfo().journeyInfo;
this._node_explore.active = !(!e || !i);
this._node_heropack = cc.find("content/card_heropack_float", this.node);
this._node_heropack.active = e;
this._node_heroexp = cc.find("content/heroexp_float", this.node);
var n = cc.vv.HerocardManager.isCardUnlock(cc.vv.gameData.getDeskInfo().spCardId);
this._node_heroexp.active = e && n;
Global.registerEvent("HEROCARD_UPDATED", this.onCardUpate, this);
Global.registerEvent(EventId.PULL_LV_UP, this.onEventExpLevelup, this);
Global.registerEvent(EventId.REFUSH_SYS_FLOAT, this.onEventRefushSysFloat, this);
},
start: function() {
var e = cc.find("content", this.node);
e.getComponent(cc.Layout).updateLayout();
var t = this.node.getBoundingBox(), i = Math.min(840, .5 * cc.winSize.height);
this.node.position = cc.v2((cc.winSize.width - t.width) / 2, i - cc.winSize.height / 2 + e.height / 4);
this._updateItemOrder(!0);
var n = cc.vv.UserManager.isOpen(Global.SYS_OPEN.EXPLORATION);
this._showFlotState(n);
},
onEnable: function() {
this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this);
},
onDisable: function() {
this.node.off(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this);
},
onClickShou: function() {
Global.playComEff("ch_btn_click");
this._showFlotState(!1);
},
onClickExpand: function() {
Global.playComEff("ch_btn_click");
this._showFlotState(!0);
},
_showFlotState: function(e) {
if (this._bExpandFlag != e) {
for (var t = 1; t < this._openFloat.length; t++) this._openFloat[t].active = e;
this._bExpandFlag = e;
this._updatePosition();
}
},
_updatePosition: function() {
var e = cc.find("content", this.node);
e.getComponent(cc.Layout).updateLayout();
this.node.height = e.height;
this._btne.y = -e.height - this._btne.height / 2 + 5;
this._btns.y = -e.height - this._btns.height / 2 + 5;
this._btne.active = !this._bExpandFlag;
this._btns.active = this._bExpandFlag;
},
_updateItemOrder: function(e) {
e && (this._openFloat = []);
var t = cc.vv.UserManager.isOpen(Global.SYS_OPEN.BINGO), i = cc.vv.UserManager.isOpen(Global.SYS_OPEN.HERO_CARD), n = cc.vv.UserManager.isOpen(Global.SYS_OPEN.EXPLORATION);
this._node_heropack.active = i && (e || this._bExpandFlag);
this._node_growup.active = !i;
cc.vv.HerocardManager.isCardUnlock(cc.vv.gameData.getDeskInfo().spCardId);
this._node_heroexp.active = i;
var a = cc.vv.gameData.getDeskInfo().bingoInfo, o = cc.vv.gameData.getDeskInfo().spinInfo, c = cc.vv.gameData.getDeskInfo().journeyInfo;
if (!o) {
(o = new Object()).spinCnt = 0;
o.maxCnt = 100;
}
var s = [];
if (e) {
this._node_heropack.active && s.push({
node: this._node_heropack,
norLv: 2,
bUp: o.spinCnt == o.maxCnt
});
this._node_bingo.active && s.push({
node: this._node_bingo,
norLv: 3,
bUp: t && a.percent >= 100
});
this._node_explore.active && s.push({
node: this._node_explore,
norLv: 3,
bUp: n && c.percent >= 100
});
this._node_growup.active && s.push({
node: this._node_growup,
norLv: 1,
bUp: !1
});
this._node_heroexp.active && s.push({
node: this._node_heroexp,
norLv: 1,
bUp: !1
});
s.sort(function(e, t) {
return t.bUp == e.bUp ? e.norLv - t.norLv : t.bUp - e.bUp;
});
}
for (var r = 0; r < s.length; r++) {
s[r].node.setSiblingIndex(r + 1);
this._openFloat.push(s[r].node);
}
},
onEventExpLevelup: function() {
(cc.vv.UserManager.getCurLv() != Global.SYS_OPEN.HERO_CARD || cc.vv.NewGuide._isDoneGuide(85)) && this._updateItemOrder();
},
onCardUpate: function() {
this._updateItemOrder();
},
onEventRefushSysFloat: function() {
this._updateItemOrder();
},
_onTouchMove: function(e) {
var t = e.getDelta();
this.node.x += t.x;
this.node.y += t.y;
var i = cc.winSize.width, n = cc.winSize.height;
this.node.x + this.node.width / 4 > i / 2 && (this.node.x = i / 2 - this.node.width / 4);
this.node.x - this.node.width / 4 < -i / 2 && (this.node.x = -i / 2 + this.node.width / 4);
this.node.y > n / 2 - 100 && (this.node.y = n / 2 - 100);
this.node.y - this.node.height < -(n / 2 - 100) && (this.node.y = this.node.height - (n / 2 - 100));
}
});
cc._RF.pop();
}, {} ],
LMSlots_Top_Base: [ function(e, t) {
"use strict";
cc._RF.push(t, "54c45L1g2FDU5LNKdLDNSV7", "LMSlots_Top_Base");
var i = "slots_common/SlotRes/";
cc.Class({
extends: cc.Component,
properties: {
_btn_back: null,
_lbl_coin: null
},
onLoad: function() {
this._lbl_coin = cc.find("playerCoins/lbl_coinsNum", this.node);
this._btn_purchase = cc.find("btn_purchase", this.node);
Global.btnClickEvent(this._btn_purchase, this.onBtnPurchaseClicked, this);
var e = cc.find("btn_diamond", this.node);
Global.btnClickEvent(e, this.onBtnDiamond, this);
this._btn_menu = cc.find("btn_menu", this.node);
Global.btnClickEvent(this._btn_menu, this.onBtnMenuClicked, this);
Global.registerEvent(cc.vv.gameData._EventId.SLOT_SHOW_HEADFOOTER_MASK, this.OnEventShowMask, this);
Global.registerEvent(cc.vv.gameData._EventId.SLOT_UPDATE_BALANCE, this.OnEventRefushCoin, this);
Global.registerEvent(cc.vv.gameData._EventId.SLOT_TOTALBET_UPDATED, this.onBetChange, this);
Global.registerEvent("USER_INFO_CHANGE", this.showHeadInfo, this);
Global.registerEvent("USER_VIP_EXP_CHANGE", this.showVip, this);
},
start: function() {},
Init: function() {
this.ShowCoin();
this.showDiamond();
this.showHeadInfo();
this.showVip();
this.showMetal();
},
showDiamond: function() {
cc.find("playerDiamond/lbl_val", this.node).getComponent(cc.Label).string = Global.FormatNumToComma(cc.vv.UserManager.dcoin);
},
onBtnDiamond: function() {
cc.vv.AudioManager.playEff(i, "common_click", !0);
cc.loader.loadRes("BalootClient/ShopV2/ShopViewMain", cc.Prefab, function(e, t) {
if (!e) {
var i = cc.instantiate(t);
i.parent = cc.find("Canvas");
i.active = !0;
i.getComponent("ShopViewMain").showTab("0");
}
});
},
showHeadInfo: function() {
var e = cc.vv.UserManager.uid, t = cc.vv.UserManager.userIcon, i = cc.vv.UserManager.avatarframe || 0, n = cc.find("head", this.node);
n.getComponent("HeadCmp").setHead(e, t);
n.getComponent("HeadCmp").setAvatarFrame(i);
var a = cc.find("head/level", this.node), o = cc.vv.UserManager.level();
a && a.getComponent("LevelCpt").setLevel(o);
this.showVip();
},
showVip: function() {
cc.find("playervip", this.node).getComponent("VipExpCpt").updateVipExp();
},
showMetal: function() {
var e = cc.vv.UserManager.dcashbonus, t = cc.vv.UserManager.cashbonus;
cc.find("playermetal/progress", this.node).getComponent(cc.ProgressBar).progress = 0 == t ? 0 : e / t;
cc.find("playermetal/value", this.node).getComponent(cc.Label).string = e + "/" + t;
},
isClickBackLobby: function() {
return this._bSendExist;
},
onBtnBackLobbyClicked: function() {
cc.vv.AudioManager.playEff(i, "common_click", !0);
if (cc.vv.gameData) {
if (this._bSendExist) return;
this._bSendExist = !0;
var e = this;
this.scheduleOnce(function() {
e._bSendExist = !1;
}, 2);
cc.vv.gameData.ReqBackLobby();
}
},
ShowCoin: function() {
var e = cc.vv.gameData.GetCoin();
this._lbl_coin.getComponent(cc.Label).string = Global.FormatNumToComma(e);
this.onBetChange();
},
GetShowCoin: function() {
return Global.FormatCommaNumToNum(this._lbl_coin.getComponent(cc.Label).string);
},
ShowCoinByRoll: function(e, t, i, n) {
void 0 === i && (i = 1);
var a = this;
Number(e) || (e = this.GetShowCoin());
Number(t) || (t = cc.vv.gameData.GetCoin());
i || (i = 1);
Global.doRoallNumEff(this._lbl_coin, e, t, i, function() {
a.ShowCoin();
n && n();
}, null, 2, !0);
},
SetBackLobby: function(e) {
var t = cc.find("Canvas").getComponentInChildren("LMSlotMachine_MenuNode");
t && t.SetBackLobby(e);
},
MinusTotalBet: function(e) {
var t = cc.vv.gameData.GetTotalBet();
e && (t = cc.vv.gameData.GetCoin());
cc.vv.gameData.AddCoin(-t);
this.ShowCoin();
},
StartMove: function() {
this.SetBackLobby(!1);
},
StopMove: function() {
var e = !0, t = cc.vv.gameData.GetFreeTime(), i = cc.vv.gameData.GetRespinTime();
(t > 0 || i > 0) && (e = !1);
this.SetBackLobby(e);
this.onBetChange();
},
ShowInputMask: function(e) {
var t = cc.find("mask_input", this.node);
t && (t.active = e);
},
OnEventShowMask: function(e) {
var t = e.detail;
this.ShowInputMask(t);
},
OnEventRefushCoin: function() {
this.ShowCoin();
},
onBtnPurchaseClicked: function() {
cc.vv.AudioManager.playEff(i, "common_click", !0);
if (Global.isIOSAndroidReview()) cc.vv.PopupManager.addPopup("YD_Pro/Review/yd_more_coins"); else {
var e = "YD_Pro/prefab/yd_shop";
cc.vv.UserManager.isbindphone > 0 || (e = "YD_Pro/prefab/Register");
cc.vv.PopupManager.addPopup(e, {
onShow: function() {}
});
}
},
onBtnMenuClicked: function(e) {
var t = this;
cc.vv.AudioManager.playEff(i, "common_click", !0);
this._showMenuAni(!0);
cc.loader.loadRes("slots_common/SlotRes/prefab/LMSlots_MenuNode", cc.Prefab, function(i, n) {
if (!i && cc.isValid(t.node)) {
var a = t.node.parent.getChildByName("LMSlots_MenuNode");
if (!a) {
var o = cc.instantiate(n);
Global.FixDesignScale(o);
o.name = "LMSlots_MenuNode";
o.parent = t.node.parent;
var c = o.scaleY, s = e.target;
if (s) {
var r = s.convertToWorldSpaceAR(cc.Vec2(0, 0)), l = t.node.parent.convertToNodeSpaceAR(r);
o.position = cc.v2(l.x - 15, l.y - (s.height / 2 - 5) * c + 10);
o.scaleY = 0;
cc.tween(o).to(.1, {
scaleY: c
}).start();
}
a = o;
o.getComponent("LMSlotMachine_MenuNode").setCloseCall(function() {
t._showMenuAni(!1);
});
}
}
});
},
_showMenuAni: function(e) {
var t = cc.find("btn_menu/ani", this.node);
if (t) {
var i = e ? "animation_3" : "animation_4";
t.getComponent(sp.Skeleton).setAnimation(0, i, !1);
}
},
onBetChange: function() {
var e = cc.vv.gameData.GetTotalBet(), t = cc.vv.gameData.GetCoin();
cc.find("playerCoins/less_coin", this.node).active = t < e;
},
onMsgSpine: function(e) {
e && e.code;
},
onDestroy: function() {
cc.vv.NetManager.unregisterMsg(MsgId.REQ_DOUBLE_XP, this.onRcvShowLevelUpParty, !1, this);
}
});
cc._RF.pop();
}, {} ],
LMSlots_backlobby: [ function(e, t) {
"use strict";
cc._RF.push(t, "981e7GE0XlHUpXEtro5lAJw", "LMSlots_backlobby");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
Global.autoAdaptDevices(!1);
},
start: function() {
this.preloadHall();
cc.vv.UserManager.syncHallInfo();
cc.sys.platform == cc.sys.IPAD && (cc.find("common_bg/logo_ani", this.node).scale = .8);
},
preloadHall: function() {
var e = this;
this._preLoadHallFinish = !1;
cc.director.preloadScene(Global.SCENE_NAME.HALL, function() {
e._preLoadHallFinish = !0;
});
},
update: function() {
if (this._preLoadHallFinish && !this._bSend) {
this._bSend = !0;
cc.vv.EventManager.emit(EventId.ENTER_HALL);
}
}
});
cc._RF.pop();
}, {} ],
LMSots_OtherSys: [ function(e, t) {
"use strict";
cc._RF.push(t, "434daUc+xFPSrC1qvSdhjk3", "LMSots_OtherSys");
cc.Class({
extends: cc.Component,
properties: {
_sys_node: null
},
onLoad: function() {
this._sys_node = cc.find("safe_node/node_sys_1", this.node);
},
start: function() {},
startMoneybank: function() {
this._loadPrefab("BalootClient/PiggyBank/prefabs/PiggyBankBtn", function(e) {
var t = cc.instantiate(e);
t.y = -20;
var i = t.addComponent(cc.Widget);
i.isAlignLeft = !0;
i.left = 0;
t.parent = cc.vv.gameData.GetBottomScript().node;
});
},
startRP: function() {
var e = this, t = "slots_common/SlotRes/prefab/sys_playerRP", i = cc.vv.gameData.getGameCfg();
i && i.sys_playerRP && (t = i.sys_playerRP);
this._loadPrefab(t, function(t) {
var i = cc.instantiate(t);
i.parent = e._sys_node;
i.getComponent(cc.Widget).updateAlignment();
});
},
_loadPrefab: function(e, t) {
cc.loader.loadRes(e, cc.Prefab, function(i, n) {
i ? AppLog.err("未找到资源:" + e) : t(n);
});
}
});
cc._RF.pop();
}, {} ],
LabelRollCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "ec67cWutYZGo6SIj+5r9U2I", "LabelRollCmp");
cc.Class({
extends: cc.Component,
properties: {
label: cc.Label,
formatCurrency: !0,
template: "",
_value: 0,
value: {
type: cc.Integer,
get: function() {
return this._value;
},
set: function(e) {
this._value = e;
this.label || (this.label = this.node.getComponent(cc.Label));
this.formatCurrency ? this.template ? this.label.string = this.template.replace("{0}", Global.FormatNumToComma(Math.floor(e))) : this.label.string = Global.FormatNumToComma(Math.floor(e)) : this.label.string = value.toString();
}
}
},
onLoad: function() {},
startRoll: function(e, t, i, n) {
e = e || 0;
t = t || 0;
i = i || 1.5;
this.value = e;
this._tweenObj = cc.tween(this).to(i, {
value: t
}).call(function() {
n && n();
}).start();
},
stopRoll: function() {
this._tweenObj && this._tweenObj.stop();
}
});
cc._RF.pop();
}, {} ],
LabelSwitchCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "19182DM6mZNd68Qk6zH1Cjg", "LabelSwitchCmp");
cc.Class({
extends: cc.Component,
editor: {
requireComponent: cc.Label,
executeInEditMode: !0
},
properties: {
fonts: {
default: [],
type: [ cc.Font ],
tooltip: "bmf字体列表"
},
currIndex: {
default: 0,
type: cc.Integer,
tooltip: "默认显示字体在列表中的下标",
notify: function() {
this._currIndex = this.currIndex;
this.showLabel();
}
}
},
onload: function() {
this.showLabel();
},
showLabel: function() {
this.fonts.length > 0 && (this.node.getComponent(cc.Label).font = this.fonts[this._currIndex]);
},
showLabelByName: function(e) {
var t = this;
this.fonts.forEach(function(i) {
i.name == e && (t.node.getComponent(cc.Label).font = i);
});
},
setIndex: function(e) {
this._currIndex = e;
this.showLabel();
},
getIndex: function() {
return this._currIndex;
},
setContent: function(e) {
this.node.getComponent(cc.Label).string = e + "";
}
});
cc._RF.pop();
}, {} ],
LangBoxBtnCpt: [ function(e, t) {
"use strict";
cc._RF.push(t, "6d02573dQJLrrBAw7JQ20Ln", "LangBoxBtnCpt");
cc.Class({
extends: cc.Component,
properties: {
label: cc.Label,
hitIcon: cc.Node,
prefab: cc.Prefab
},
onLoad: function() {
var e = this;
this.updateView();
this.getComponent(cc.Button) && this.node.on("click", function() {
cc.vv.PopupManager.addPopup(e.prefab, {
noMask: !0,
onShow: function(t) {
cc.isValid(e.hitIcon) && (e.hitIcon.angle = 180);
var i = e.node.convertToWorldSpaceAR(cc.v2(0, -e.node.height / 2 - 10)), n = cc.find("Canvas").convertToNodeSpaceAR(i);
t.position = n.add(cc.v2(0, 100));
t.opacity = 100;
cc.tween(t).to(.1, {
position: n,
opacity: 255
}).call(function() {
var i = t.getComponent("LangBoxCpt");
i && i.initView(function() {
e.updateView();
});
var n = t.getComponent("SettingLangBoxCpt");
n && n.initView();
}).start();
}
});
}, this);
},
updateView: function() {
cc.isValid(this.label.node) && (this.label.string = cc.vv.i18nManager.getConfig().name);
cc.isValid(this.hitIcon) && (this.hitIcon.angle = 0);
}
});
cc._RF.pop();
}, {} ],
LangBoxCpt: [ function(e, t) {
"use strict";
cc._RF.push(t, "29686NowUlPY5PEjpVa9G9e", "LangBoxCpt");
cc.Class({
extends: cc.Component,
properties: {
arItem: cc.Node,
enItem: cc.Node
},
initView: function(e) {
var t = this;
this.closeFunc = e;
this.arItem.on("click", function() {
t.onChangeLang(cc.vv.i18nLangEnum.AR);
}, this);
this.enItem.on("click", function() {
t.onChangeLang(cc.vv.i18nLangEnum.EN);
}, this);
},
onLoad: function() {
var e = cc.vv.i18nManager.getConfig();
cc.find("isSelect", this.arItem).active = "ar" == e.lang;
cc.find("isSelect", this.enItem).active = "en" == e.lang;
},
onChangeLang: function(e) {
cc.vv.i18nManager.setLanguage(e);
var t = cc.vv.i18nManager.getLanguageConfig(e), i = Global.getLocal("client_uuid", "");
cc.log(i);
cc.vv.NetManager.requestHttp("/lang?ddid=" + i + "&lan=" + t.id, {}, function() {});
cc.vv.PopupManager.removePopup(this.node);
},
onDestroy: function() {
this.closeFunc && this.closeFunc();
}
});
cc._RF.pop();
}, {} ],
LanguageButton: [ function(e, t) {
"use strict";
cc._RF.push(t, "1992d/Wl3RH1rskR1oI45V4", "LanguageButton");
var i = cc.Class({
name: "btn_spritesList",
properties: {
normalSprite: {
default: null,
type: cc.SpriteFrame
},
pressedSprite: {
default: null,
type: cc.SpriteFrame
},
hoverSprite: {
default: null,
type: cc.SpriteFrame
},
disabledSprite: {
default: null,
type: cc.SpriteFrame
}
}
});
cc.Class({
extends: e("LanguageUIBase"),
properties: {
zh_sprites: {
displayName: "中文图片数组",
visible: function() {
return this.isInLanguageList(Global.LANGUAGE.ZH);
},
default: null,
type: i
},
en_sprites: {
default: null,
displayName: "英文图片数组",
visible: function() {
return this.isInLanguageList(Global.LANGUAGE.EN);
},
type: i
},
ind_sprites: {
default: null,
displayName: "印度文图片数组",
visible: function() {
return this.isInLanguageList(Global.LANGUAGE.IDA);
},
type: i
},
ar_sprites: {
default: null,
displayName: "阿拉伯文图片数组",
visible: function() {
return this.isInLanguageList(Global.LANGUAGE.AR);
},
type: i
}
},
start: function() {
this.updateSpirte();
},
updateSpirte: function() {
var e = this.getComponent(cc.Button), t = null;
Global.language === Global.LANGUAGE.ZH && this.zh_sprites ? t = this.zh_sprites : Global.language === Global.LANGUAGE.EN && this.en_sprites ? t = this.en_sprites : Global.language === Global.LANGUAGE.IDA && this.ind_sprites ? t = this.ind_sprites : Global.language === Global.LANGUAGE.AR && this.ar_sprites && (t = this.ar_sprites);
if (t) if (e.transition == cc.Button.Transition.SPRITE) {
t.normalSprite && (e.normalSprite = t.normalSprite);
t.pressedSprite && (e.pressedSprite = t.pressedSprite);
t.hoverSprite && (e.hoverSprite = t.hoverSprite);
t.disabledSprite && (e.disabledSprite = t.disabledSprite);
} else if (e.transition == cc.Button.Transition.SCALE) {
var i = e.getComponent(cc.Sprite);
i && t.normalSprite && (i.spriteFrame = t.normalSprite);
}
},
display: function() {
this._super();
this.updateSpirte();
}
});
cc._RF.pop();
}, {
LanguageUIBase: "LanguageUIBase"
} ],
LanguageFont: [ function(e, t) {
"use strict";
cc._RF.push(t, "0a064GywadLlLJ0hSr8ZL1D", "LanguageFont");
cc.Class({
extends: e("LanguageUIBase"),
properties: {
Font_en: {
default: null,
type: cc.Font,
displayName: "英文的字体",
visible: function() {
return this.isInLanguageList(Global.LANGUAGE.EN);
}
},
Font_zh: {
default: null,
type: cc.Font,
displayName: "中文的字体",
visible: function() {
return this.isInLanguageList(Global.LANGUAGE.ZH);
}
},
Font_ind: {
default: null,
type: cc.Font,
displayName: "印度文的字体",
visible: function() {
return this.isInLanguageList(Global.LANGUAGE.IDA);
}
},
Font_ar: {
default: null,
type: cc.Font,
displayName: "阿拉伯文的字体",
visible: function() {
return this.isInLanguageList(Global.LANGUAGE.AR);
}
}
},
updateLabel: function() {
var e = this.getComponent(cc.Label);
e || (e = this.getComponent(cc.RichText));
if (e) {
Global.language === Global.LANGUAGE.EN && this.Font_en && (e.font = this.Font_en);
Global.language === Global.LANGUAGE.ZH && this.Font_zh && (e.font = this.Font_zh);
Global.language === Global.LANGUAGE.IDA && this.Font_ind && (e.font = this.Font_ind);
Global.language === Global.LANGUAGE.AR && this.Font_ar && (e.font = this.Font_ar);
}
},
start: function() {
this.updateLabel();
},
display: function() {
this._super();
this.updateLabel();
}
});
cc._RF.pop();
}, {
LanguageUIBase: "LanguageUIBase"
} ],
LanguageLabel: [ function(e, t) {
"use strict";
cc._RF.push(t, "159690+EL9JkJAPZ14Ga+Wz", "LanguageLabel");
cc.Class({
extends: e("LanguageUIBase"),
properties: {
id: {
default: "",
displayName: "文字KEY"
},
_setParam: null
},
start: function() {
this.updateLabel();
},
updateLabel: function(e) {
var t = this.getComponent(cc.Label);
t || (t = this.getComponent(cc.RichText));
if (t) {
if (!e) {
if (!this.id) return;
e = cc.vv.Language[this.id];
}
t.string = e;
}
},
setLabel: function() {
for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++) t[i] = arguments[i];
var n = this._getLanKeyByVal(t[0]);
this._setKey = n;
this._setParam = t;
this._setRefushData(n, t);
},
_setRefushData: function(e, t) {
var i = cc.vv.Language[e];
I18N && I18N.ChangeParamPos && (i = I18N.ChangeParamPos(i));
if (i) {
for (var n = 1; n < t.length; n++) i = i.replace("{" + n + "}", t[n]);
this.updateLabel(i);
} else cc.log("不存在:" + e);
},
display: function() {
this._super();
this.id ? this.updateLabel() : this._setParam && this._setKey && this._setRefushData(this._setKey, this._setParam);
},
_getLanKeyByVal: function(e) {
return function(e, t, i) {
void 0 === i && (i = function(e, t) {
return e === t;
});
return Object.keys(e).find(function(n) {
return i(e[n], t);
});
}(cc.vv.Language, e);
}
});
cc._RF.pop();
}, {
LanguageUIBase: "LanguageUIBase"
} ],
LanguageSpine: [ function(e, t) {
"use strict";
cc._RF.push(t, "5efa0M+bExEILUjIHwugz4x", "LanguageSpine");
cc.Class({
extends: e("LanguageUIBase"),
properties: {
en_sp: {
default: "",
visible: function() {
return this.isInLanguageList(Global.LANGUAGE.EN);
},
displayName: "英文皮肤名"
},
ind_sp: {
default: "",
visible: function() {
return this.isInLanguageList(Global.LANGUAGE.IDA);
},
tooltip: "没设置的话，就显示英文资源",
displayName: "印度文皮肤名"
},
ar_sp: {
default: "",
visible: function() {
return this.isInLanguageList(Global.LANGUAGE.AR);
},
tooltip: "阿拉伯文资源",
displayName: "阿拉伯文皮肤名称"
}
},
updateSkin: function() {
var e = this.getComponent(sp.Skeleton);
if (e) {
var t;
Global.language === Global.LANGUAGE.EN && this.en_sp ? t = this.en_sp : Global.language === Global.LANGUAGE.IDA && this.ind_sp ? t = this.ind_sp : Global.language === Global.LANGUAGE.AR && this.ar_sp && (t = this.ar_sp);
t && e.setSkin(t);
}
},
start: function() {
this.updateSkin();
},
display: function() {
this._super();
this.updateSkin();
}
});
cc._RF.pop();
}, {
LanguageUIBase: "LanguageUIBase"
} ],
LanguageSprite: [ function(e, t) {
"use strict";
cc._RF.push(t, "718aaLyhd5CTa1XX2GQH1rY", "LanguageSprite");
cc.Class({
extends: e("LanguageUIBase"),
properties: {
zh_sprite: {
default: null,
visible: function() {
return this.isInLanguageList(Global.LANGUAGE.ZH);
},
type: cc.SpriteFrame,
displayName: "中文翻译图片"
},
en_sprite: {
default: null,
visible: function() {
return this.isInLanguageList(Global.LANGUAGE.EN);
},
type: cc.SpriteFrame,
displayName: "英文翻译图片"
},
ind_sprite: {
default: null,
visible: function() {
return this.isInLanguageList(Global.LANGUAGE.IDA);
},
type: cc.SpriteFrame,
tooltip: "没设置的话，就显示英文资源",
displayName: "印度文翻译图片"
},
ar_sprite: {
default: null,
visible: function() {
return this.isInLanguageList(Global.LANGUAGE.AR);
},
type: cc.SpriteFrame,
tooltip: "阿拉伯文资源",
displayName: "阿拉伯文翻译图片"
},
_changeCall: null
},
updateSpirte: function() {
Global.language === Global.LANGUAGE.ZH ? this.zh_sprite ? this.getComponent(cc.Sprite).spriteFrame = this.zh_sprite : this._changeCall && this._changeCall() : Global.language === Global.LANGUAGE.EN ? this.en_sprite ? this.getComponent(cc.Sprite).spriteFrame = this.en_sprite : this._changeCall && this._changeCall() : Global.language === Global.LANGUAGE.IDA ? this.ind_sprite ? this.getComponent(cc.Sprite).spriteFrame = this.ind_sprite : this.en_sprite ? this.getComponent(cc.Sprite).spriteFrame = this.en_sprite : this._changeCall && this._changeCall() : Global.language === Global.LANGUAGE.AR && (this.ar_sprite ? this.getComponent(cc.Sprite).spriteFrame = this.ar_sprite : this._changeCall && this._changeCall());
},
setSptite: function(e, t) {
e === Global.LANGUAGE.ZH ? this.zh_sprite = t : e === Global.LANGUAGE.EN ? this.en_sprite = t : e === Global.LANGUAGE.IDA ? this.ind_sprite = t : e === Global.LANGUAGE.AR && (this.ar_sprite = t);
},
setSpriteChangeCall: function(e) {
this._changeCall = e;
this.updateSpirte();
},
start: function() {
this.updateSpirte();
},
display: function() {
this._super();
this.updateSpirte();
}
});
cc._RF.pop();
}, {
LanguageUIBase: "LanguageUIBase"
} ],
LanguageUIAdjust: [ function(e, t) {
"use strict";
cc._RF.push(t, "9aa7d1sGZ9LF7tGGQ7yTuYF", "LanguageUIAdjust");
cc.Class({
extends: e("LanguageUIBase"),
properties: {
bScaleX: {
default: !1,
displayName: "ScaleX翻转"
},
bLabelTopAlign: {
default: !1,
displayName: "Label是否上对齐"
},
bLabelBottomAlign: {
default: !1,
displayName: "Label是否下对齐"
},
bAuto: {
default: !0,
displayName: "自动调整"
},
bPosX: {
default: !0,
visible: function() {
return !this.bAuto;
},
displayName: "PosX对称"
},
bAnchorX: {
default: !0,
visible: function() {
return !this.bAuto;
},
displayName: "AnchorX对称"
},
bLabelAlign: {
default: !0,
visible: function() {
return !this.bAuto && (this.node.getComponent(cc.Label) || this.node.getComponent(cc.RichText));
},
displayName: "Label/Text水平对齐方式"
},
bLayoutAlign: {
default: !0,
visible: function() {
return !this.bAuto && this.node.getComponent(cc.Layout) || this.node.getComponent("List");
},
displayName: "Layout/List水平对齐方式"
},
bProgressDir: {
default: !0,
visible: function() {
return !this.bAuto && this.node.getComponent(cc.ProgressBar);
},
displayName: "Progress方向"
},
_defaultScaleX: null,
_defaultLabelAlignV: null,
_defaultPosX: null,
_defaultAnchorX: null,
_defaultLabelAlignH: null,
_defaultLayoutAlign: null,
_defaultProgressDir: null
},
start: function() {
this.updateNode();
},
updateNode: function() {
null == this._defaultScaleX && (this._defaultScaleX = this.node.scaleX);
null == this._defaultPosX && (this._defaultPosX = this.node.x);
null == this._defaultAnchorX && (this._defaultAnchorX = this.node.anchorX);
var e = this.node.getComponent(cc.Label) || this.node.getComponent(cc.RichText);
if (e) {
null == this._defaultLabelAlignH && (this._defaultLabelAlignH = e.horizontalAlign);
null == this._defaultLabelAlignV && (this._defaultLabelAlignV = e.verticalAlign);
}
var t = this.node.getComponent(cc.Layout);
if (!t) {
var i = this.node.getComponent("List");
i && (t = i._layout);
}
t && t.type == cc.Layout.Type.HORIZONTAL && null == this._defaultLayoutAlign && (this._defaultLayoutAlign = t.horizontalDirection);
var n = this.node.getComponent(cc.ProgressBar);
n && null == this._defaultProgressDir && (this._defaultProgressDir = n.reverse);
if (Global.language === Global.LANGUAGE.AR) {
this.bScaleX && (this.node.scaleX = -this._defaultScaleX);
this.bPosX && (this.node.x = -this._defaultPosX);
this.bAnchorX && (this.node.anchorX = 1 - this._defaultAnchorX);
if (e) {
if (this.bLabelAlign) {
var a = this._getLabelHorizontalAlign(this._defaultLabelAlignH);
e.overflow == cc.Label.Overflow.RESIZE_HEIGHT && this._defaultLabelAlignH == cc.macro.TextAlignment.CENTER && (a = cc.macro.TextAlignment.RIGHT);
e.horizontalAlign = a;
}
this.bLabelTopAlign && null != this._defaultLabelAlignV && (e.verticalAlign = cc.Label.VerticalAlign.TOP);
this.bLabelBottomAlign && null != this._defaultLabelAlignV && (e.verticalAlign = cc.Label.VerticalAlign.BOTTOM);
}
this.bLayoutAlign && t && (t.horizontalDirection = this._getLayoutHorzontalAlign(this._defaultLayoutAlign));
this.bProgressDir && n && (n.reverse = !this._defaultProgressDir);
} else {
this.node.scaleX = this._defaultScaleX;
this.node.x = this._defaultPosX;
this.node.anchorX = this._defaultAnchorX;
if (e) {
this.bLabelAlign && (e.horizontalAlign = this._defaultLabelAlignH);
this.bLabelTopAlign && null != this._defaultLabelAlignV && (e.verticalAlign = this._defaultLabelAlignV);
}
this.bLayoutAlign && t && (t.horizontalDirection = this._defaultLayoutAlign);
this.bProgressDir && n && (n.reverse = this._defaultProgressDir);
}
},
_getLabelHorizontalAlign: function(e) {
return e == cc.macro.TextAlignment.LEFT ? cc.macro.TextAlignment.RIGHT : e == cc.macro.TextAlignment.RIGHT ? cc.macro.TextAlignment.LEFT : e;
},
_getLayoutHorzontalAlign: function(e) {
return e == cc.Layout.HorizontalDirection.LEFT_TO_RIGHT ? cc.Layout.HorizontalDirection.RIGHT_TO_LEFT : cc.Layout.HorizontalDirection.LEFT_TO_RIGHT;
},
display: function() {
this._super();
this.updateNode();
}
});
cc._RF.pop();
}, {
LanguageUIBase: "LanguageUIBase"
} ],
LanguageUIBase: [ function(e, t) {
"use strict";
cc._RF.push(t, "41dd5uQ769CYKZcOFwgIUPz", "LanguageUIBase");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
Global.registerEvent(EventId.SYS_CHANGE_LANGUAGE, this.onEventChangeLan, this);
},
start: function() {},
display: function() {
cc.log("语言切换");
},
isInLanguageList: function(e) {
var t = !1, i = Global.languageList;
if (i) for (var n = 0; n < i.length; n++) if (i[n] == e) {
t = !0;
break;
}
return t;
},
onEventChangeLan: function() {
Global.saveLocal(Global.SAVE_LANGUAGE, Global.language);
Global.language === Global.LANGUAGE.ZH ? cc.vv.Language = e("ChineseCfg") : cc.vv.Language = e("EnglishCfg");
if (Global.languageList) for (var t = 0; t < Global.languageList.length; t++) if (Global.languageList[t] == Global.language) {
var i = e(Global.language);
Object.assign(cc.vv.Language, i);
}
this.display();
}
});
cc._RF.pop();
}, {
ChineseCfg: "ChineseCfg",
EnglishCfg: "EnglishCfg"
} ],
LanguageUtil: [ function(e, t) {
"use strict";
cc._RF.push(t, "172a6DMun1BM5G26fCAELKz", "LanguageUtil");
var i = cc.Class({
extends: cc.Component,
statics: {
setI18nLabel: function(e, t) {
if (e) {
var i, n = e.getComponent("LanguageLabel");
n || (n = e.addComponent("LanguageLabel"));
for (var a = arguments.length, o = new Array(a > 2 ? a - 2 : 0), c = 2; c < a; c++) o[c - 2] = arguments[c];
(i = n).setLabel.apply(i, [ t ].concat(o));
}
},
setI18Sprite: function(e, t, i) {
if (e) {
var n = e.getComponent("LanguageSprite");
n || (n = e.addComponent("LanguageSprite"));
n.setSptite(t, i);
}
},
setI18SpriteChangeCall: function(e, t) {
if (e) {
var i = e.getComponent("LanguageSprite");
i || (i = e.addComponent("LanguageSprite"));
i.setSpriteChangeCall(t);
}
},
ChangeParamPos: function(e) {
var t = e;
if (Global.language === Global.LANGUAGE.AR) {
var i = /^[a-zA-Z0-9-\\{\\}!%٪]{1,30}/, n = i.exec(t);
if (n && 0 == n.index && n[0].length < n.input.length) {
var a = t.replace(i, "");
t = a + n[0];
}
}
return t;
},
getI18nLabel: function(e, t) {
return e.replace("{1}", t);
}
}
});
window.I18N = i;
cc._RF.pop();
}, {} ],
LeagueExpCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "661e6/FNoVEV5zizky91Zq/", "LeagueExpCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.icon = null;
t.label = null;
t.progress = null;
t.animNode = null;
return t;
}
t.prototype.onLoad = function() {
this.node.addComponent("NetListenerCmp").registerMsg(MsgId.LEAGUE_EXP_CHANGE, this.onNet_LEAGUE_EXP_CHANGE, this);
};
t.prototype.setGameId = function(e, t) {
this._gameId = e;
this._gameLeuExp = t;
this._nIterval = 0;
this._nCount = 0;
this._setExpVal(t);
};
t.prototype.updateView = function() {
this._setExpVal(cc.vv.UserManager.leagueexp);
};
t.prototype._setExpVal = function(e) {
var t = cc.vv.UserConfig.getRank(e);
cc.vv.UserConfig.setRankFrame(this.icon, t.stage);
if (t.next) {
var i = e - t.score, n = t.next.score - t.score;
this.progress.progress = i / n;
this.label.string = Global.FormatNumToComma(i) + "/" + Global.FormatNumToComma(n);
} else {
this.progress.progress = 1;
this.label.string = Global.FormatNumToComma(e);
}
};
t.prototype.updateProgress = function(e, t) {
var i = this, n = cc.vv.UserConfig.getRank(t);
if (n.next) {
var a = (t - n.score) / (n.next.score - n.score);
Global.doRoallNumEff(this.label.node, e, t, 1.2, function() {}, null, 0, !0, null, "%s/" + Global.FormatNumToComma(n.next.score));
if (a < this.progress.progress) {
var o = this.icon.node.scale;
cc.tween(this.icon.node).to(.2, {
scale: 1.2 * o
}).call(function() {
cc.vv.UserConfig.setRankFrame(i.icon, n.stage);
}).to(.2, {
scale: 1 * o
}).start();
} else cc.vv.UserConfig.setRankFrame(this.icon, n.stage);
cc.tween(this.progress).call(function() {
i.animNode.active = !0;
}).to(1.2, {
progress: a
}, {
progress: function(e, t, n, a) {
i.animNode.x = -i.progress.node.width / 2 + i.progress.node.width * n;
return e + (t - e) * a;
}
}).call(function() {
i.animNode.active = !1;
}).start();
} else {
this.progress.progress = 1;
this.label.string = Global.FormatNumToComma(t);
}
};
t.prototype.onNet_LEAGUE_EXP_CHANGE = function(e) {
if (200 == e.code && e.gameid == this._gameId) {
var t = this._gameLeuExp;
this._gameLeuExp = e.exp;
this.updateProgress(t, this._gameLeuExp);
}
};
t.prototype.updateTimeShow = function() {
if (this._gameId) {
var e = cc.find("lbl_time", this.node);
if (e) {
var t = cc.vv.UserManager.leagueRmindTime;
t > 0 && (e.getComponent(cc.Label).string = ___("结束剩余时间") + ": " + Global.formatSecond(t, "hh:mm:ss"));
}
}
};
t.prototype.update = function(e) {
this._nIterval += e;
if (this._nIterval > 1) {
this._nIterval = 0;
this._nCount += 1;
this.updateTimeShow();
if (this._nCount % 3 == 0) if (1 == this.label.node.active) {
if (0 == this.label.node.getNumberOfRunningActions() && cc.vv.UserManager.leagueRmindTime > 0 && (t = cc.find("lbl_time", this.node))) {
t.active = !0;
this.label.node.active = !1;
}
} else {
var t;
if (t = cc.find("lbl_time", this.node)) {
t.active = !1;
this.label.node.active = !0;
}
}
}
};
__decorate([ o(cc.Sprite) ], t.prototype, "icon", void 0);
__decorate([ o(cc.Label) ], t.prototype, "label", void 0);
__decorate([ o(cc.ProgressBar) ], t.prototype, "progress", void 0);
__decorate([ o(cc.Node) ], t.prototype, "animNode", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
LeftMenuCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f8c56Ii/a9FGrbLEdWtceEU", "LeftMenuCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.moveX = 200;
t.touchNode = null;
t.switchBtn = null;
t.switchIcon = null;
t.extNode = null;
t._show = !0;
return t;
}
Object.defineProperty(t.prototype, "show", {
get: function() {
return this._show;
},
set: function(e) {
this._show = e;
this.touchNode && (this.touchNode.active = e);
var t = e ? cc.winSize.width / 2 : cc.winSize.width / 2 + this.moveX, i = e ? 0 : -180;
this.node.stopAllActions();
cc.tween(this.node).to(.2, {
x: t
}).start();
cc.tween(this.switchIcon.node).to(.2, {
angle: i
}).start();
this.extNode && (this.extNode.active = e);
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
var e = this;
this.switchBtn.node.on("click", function() {
e.show = !e.show;
e.callback && e.callback(e.show);
e.show || cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
});
this.touchNode && this.touchNode.on("click", function() {
if (e.show) {
e.show = !1;
cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
}
}, this);
};
t.prototype.setCallback = function(e) {
this.callback = e;
};
__decorate([ o ], t.prototype, "moveX", void 0);
__decorate([ o(cc.Node) ], t.prototype, "touchNode", void 0);
__decorate([ o(cc.Button) ], t.prototype, "switchBtn", void 0);
__decorate([ o(cc.Sprite) ], t.prototype, "switchIcon", void 0);
__decorate([ o(cc.Node) ], t.prototype, "extNode", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
LevelCfg: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d8b1f0wmSdD76R5wGeYnUYJ", "LevelCfg");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.getLevelProgress = i.getLevelRemainingExp = i.getCmpLevelNeedExp = i.getLevelNeedExp = i.totalExp2Level = void 0;
var n = [ [ 1, 0 ], [ 2, 70 ], [ 3, 150 ], [ 4, 240 ], [ 5, 340 ], [ 6, 460 ], [ 7, 590 ], [ 8, 730 ], [ 9, 890 ], [ 10, 1060 ], [ 11, 1260 ], [ 12, 1480 ], [ 13, 1720 ], [ 14, 1990 ], [ 15, 2280 ], [ 16, 2610 ], [ 17, 2970 ], [ 18, 3370 ], [ 19, 3800 ], [ 20, 4270 ], [ 21, 4770 ], [ 22, 5310 ], [ 23, 5880 ], [ 24, 6490 ], [ 25, 7140 ], [ 26, 7830 ], [ 27, 8570 ], [ 28, 9350 ], [ 29, 10170 ], [ 30, 11040 ], [ 31, 11950 ], [ 32, 12950 ], [ 33, 14030 ], [ 34, 15200 ], [ 35, 16460 ], [ 36, 17800 ], [ 37, 19270 ], [ 38, 20870 ], [ 39, 22600 ], [ 40, 24460 ], [ 41, 26450 ], [ 42, 28570 ], [ 43, 30820 ], [ 44, 33200 ], [ 45, 35610 ], [ 46, 38040 ], [ 47, 40490 ], [ 48, 42960 ], [ 49, 45470 ], [ 50, 48030 ], [ 51, 50630 ], [ 52, 53250 ], [ 53, 55890 ], [ 54, 58560 ], [ 55, 61250 ], [ 56, 63960 ], [ 57, 66710 ], [ 58, 69510 ], [ 59, 72350 ], [ 60, 75230 ], [ 61, 78130 ], [ 62, 81060 ], [ 63, 84010 ], [ 64, 86980 ], [ 65, 89970 ], [ 66, 93e3 ], [ 67, 96080 ], [ 68, 99200 ], [ 69, 102360 ], [ 70, 105550 ], [ 71, 108760 ], [ 72, 111990 ], [ 73, 115240 ], [ 74, 118510 ], [ 75, 121830 ], [ 76, 125190 ], [ 77, 128590 ], [ 78, 132040 ], [ 79, 135510 ], [ 80, 139e3 ], [ 81, 142510 ], [ 82, 146040 ], [ 83, 149590 ], [ 84, 153170 ], [ 85, 156770 ], [ 86, 160410 ], [ 87, 164090 ], [ 88, 167820 ], [ 89, 171570 ], [ 90, 175340 ], [ 91, 179130 ], [ 92, 182940 ], [ 93, 186780 ], [ 94, 190640 ], [ 95, 194520 ], [ 96, 198440 ], [ 97, 202410 ], [ 98, 206420 ], [ 99, 210450 ], [ 100, 214500 ], [ 101, 218570 ], [ 102, 222670 ], [ 103, 226810 ], [ 104, 230990 ], [ 105, 235220 ], [ 106, 239490 ], [ 107, 243780 ], [ 108, 248090 ], [ 109, 252420 ], [ 110, 256780 ], [ 111, 261180 ], [ 112, 265620 ], [ 113, 270110 ], [ 114, 274640 ], [ 115, 279190 ], [ 116, 283760 ], [ 117, 288350 ], [ 118, 292970 ], [ 119, 297630 ], [ 120, 302330 ] ], a = 120;
function o(e) {
for (var t = n.length - 1; t >= 0; t--) {
var i = n[t];
if (e > i[1]) return i[0];
}
return 1;
}
i.totalExp2Level = o;
i.getLevelNeedExp = function(e) {
e = e || 1;
e = Math.min(e, a);
return n[e - 1][1];
};
function c(e) {
if ((e = e || 1) === a) return 0;
var t = Math.min(e + 1, a);
return n[t - 1][1] - n[e - 1][1];
}
i.getCmpLevelNeedExp = c;
function s(e) {
var t = o(e);
return e - n[t - 1][1];
}
i.getLevelRemainingExp = s;
i.getLevelProgress = function(e) {
var t = c(o(e));
return s(e) / t;
};
cc._RF.pop();
}, {} ],
LevelCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8312fijOZJOWbFh6qhG+XcL", "LevelCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.value = null;
t.spine = null;
return t;
}
t.prototype.setLevelExp = function(e) {
this.level = cc.vv.UserConfig.totalExp2Level(e);
this.updateView();
};
t.prototype.setLevel = function(e) {
this.level = e;
this.updateView();
};
t.prototype.updateView = function() {
this.spine.setAnimation(0, cc.vv.UserConfig.getLevelSpineName(this.level), !0);
this.value.string = "Lv" + this.level.toString();
};
__decorate([ o(cc.Label) ], t.prototype, "value", void 0);
__decorate([ o(sp.Skeleton) ], t.prototype, "spine", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
LikeGameCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f4524w56CxFdK4s1Wnp1B5R", "LikeGameCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.gameBtnNodes = [];
return t;
}
t.prototype.onLoad = function() {
this.node.active = cc.vv.UserManager.favorite_games.length > 0;
for (var e = 0; e < this.gameBtnNodes.length; e++) {
var t = this.gameBtnNodes[e], i = cc.vv.UserManager.favorite_games[e], n = cc.vv.UserManager.isGameOpen(i);
if (i && n) {
i = Number(i);
t.active = !0;
t.getComponent("RoomTypeBtn").gameid = i;
t.getComponent("RoomTypeBtn").updateView();
} else t.active = !1;
}
};
t.prototype.start = function() {};
__decorate([ o(cc.Node) ], t.prototype, "gameBtnNodes", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
ListItem: [ function(e, t) {
"use strict";
cc._RF.push(t, "abbdfSQlBxA45L8HaG9a2Rn", "ListItem");
var i = cc.Enum({
NONE: 0,
TOGGLE: 1,
SWITCH: 2
});
cc.Class({
editor: {
disallowMultiple: !1,
menu: "自定义组件/List Item",
executionOrder: -5001
},
extends: cc.Component,
properties: {
icon: {
default: null,
type: cc.Sprite
},
title: cc.Node,
selectedMode: {
default: i.NONE,
type: i,
tooltip: !1
},
selectedFlag: {
default: null,
type: cc.Node,
visible: function() {
var e = this.selectedMode > 0;
e || (this.selectedFlag = null);
return e;
}
},
selectedSpriteFrame: {
default: null,
type: cc.SpriteFrame,
visible: function() {
var e = this.selectedMode == i.SWITCH;
e || (this.selectedSpriteFrame = null);
return e;
}
},
adaptiveSize: {
default: !1,
tooltip: !1
},
_selected: !1,
selected: {
visible: !1,
get: function() {
return this._selected;
},
set: function(e) {
this._selected = e;
if (this.selectedFlag) switch (this.selectedMode) {
case i.TOGGLE:
this.selectedFlag.active = e;
break;

case i.SWITCH:
this.selectedFlag.spriteFrame = e ? this.selectedSpriteFrame : this._unselectedSpriteFrame;
}
}
},
_btnCom: null,
btnCom: {
visible: !1,
get: function() {
this._btnCom || (this._btnCom = this.node.getComponent(cc.Button));
return this._btnCom;
}
}
},
onLoad: function() {
if (this.title) {
var e = this.title.getComponent(cc.Label);
e || (e = this.title.getComponent(cc.RichText));
this.title = e;
}
this.btnCom || (this.selectedMode, i.NONE);
if (this.selectedMode == i.SWITCH) {
var t = this.selectedFlag.getComponent(cc.Sprite);
this.selectedFlag = t;
this._unselectedSpriteFrame = t.spriteFrame;
}
},
onDestroy: function() {
var e = this;
e.node.off(cc.Node.EventType.SIZE_CHANGED, e._onSizeChange, e);
},
_registerEvent: function() {
var e = this;
if (!e.eventReg) {
e.btnCom && e._list.selectedMode > 0 && e.btnCom.clickEvents.unshift(e.createEvt(e, "onClickThis"));
e.adaptiveSize && e.node.on(cc.Node.EventType.SIZE_CHANGED, e._onSizeChange, e);
e.eventReg = !0;
}
},
_onSizeChange: function() {
this._list._onItemAdaptive(this.node);
},
createEvt: function(e, t, i) {
if (e.isValid) {
e.comName = e.comName || e.name.match(/\<(.*?)\>/g).pop().replace(/\<|>/g, "");
var n = new cc.Component.EventHandler();
n.target = i || e.node;
n.component = e.comName;
n.handler = t;
return n;
}
},
showAni: function(e, t, i) {
var n, a = this;
switch (e) {
case 0:
n = [ new cc.scaleTo(.2, .7), new cc.moveBy(.3, 0, 2 * this.node.height) ];
break;

case 1:
n = [ new cc.scaleTo(.2, .7), new cc.moveBy(.3, 2 * this.node.width, 0) ];
break;

case 2:
n = [ new cc.scaleTo(.2, .7), new cc.moveBy(.3, 0, -2 * this.node.height) ];
break;

case 3:
n = [ new cc.scaleTo(.2, .7), new cc.moveBy(.3, -2 * this.node.width, 0) ];
break;

default:
n = [ new cc.scaleTo(.3, .1) ];
}
(t || i) && n.push(new cc.CallFunc(function() {
if (i) {
a._list._delSingleItem(a.node);
for (var e = a._list.displayData.length - 1; e >= 0; e--) if (a._list.displayData[e].listId == a.node._listId) {
a._list.displayData.splice(e, 1);
break;
}
}
t();
}));
this.node.runAction(new cc.Sequence(n));
},
onClickThis: function() {
this._list.selectedId = this.node._listId;
}
});
cc._RF.pop();
}, {} ],
ListViewItem: [ function(e, t) {
"use strict";
cc._RF.push(t, "80954QqmTdHqLLVTjaOI7/v", "ListViewItem");
var i = cc.Enum({
NONE: 0,
TOGGLE: 1,
SWITCH: 2
});
cc.Class({
editor: {
disallowMultiple: !1,
menu: "UI/List Item",
executionOrder: -5001
},
extends: cc.Component,
properties: {
icon: {
default: null,
type: cc.Sprite
},
title: cc.Node,
selectedMode: {
default: i.NONE,
type: i,
tooltip: !1
},
selectedFlag: {
default: null,
type: cc.Node,
visible: function() {
var e = this.selectedMode > 0;
e || (this.selectedFlag = null);
return e;
}
},
selectedSpriteFrame: {
default: null,
type: cc.SpriteFrame,
visible: function() {
var e = this.selectedMode == i.SWITCH;
e || (this.selectedSpriteFrame = null);
return e;
}
},
adaptiveSize: {
default: !1,
tooltip: !1
},
_selected: !1,
selected: {
visible: !1,
get: function() {
return this._selected;
},
set: function(e) {
this._selected = e;
if (this.selectedFlag) switch (this.selectedMode) {
case i.TOGGLE:
this.selectedFlag.active = e;
break;

case i.SWITCH:
this.selectedFlag.spriteFrame = e ? this.selectedSpriteFrame : this._unselectedSpriteFrame;
}
}
},
_btnCom: null,
btnCom: {
visible: !1,
get: function() {
this._btnCom || (this._btnCom = this.node.getComponent(cc.Button));
return this._btnCom;
}
}
},
onLoad: function() {
if (this.title) {
var e = this.title.getComponent(cc.Label);
e || (e = this.title.getComponent(cc.RichText));
this.title = e;
}
if (this.selectedMode == i.SWITCH) {
var t = this.selectedFlag.getComponent(cc.Sprite);
this.selectedFlag = t;
this._unselectedSpriteFrame = t.spriteFrame;
}
},
onDestroy: function() {
this.node.off(cc.Node.EventType.SIZE_CHANGED, this._onSizeChange, this);
},
_registerEvent: function() {
if (!this.eventReg) {
this.btnCom && this._list.selectedMode > 0 && this.btnCom.clickEvents.unshift(this.createEvt(this, "onClickThis"));
this.adaptiveSize && this.node.on(cc.Node.EventType.SIZE_CHANGED, this._onSizeChange, this);
this.eventReg = !0;
}
},
_onSizeChange: function() {
this._list._onItemAdaptive(this.node);
},
createEvt: function(e, t, i) {
if (e.isValid) {
e.comName = e.comName || e.name.match(/\<(.*?)\>/g).pop().replace(/\<|>/g, "");
var n = new cc.Component.EventHandler();
n.target = i || e.node;
n.component = e.comName;
n.handler = t;
return n;
}
},
showAni: function(e, t, i) {
var n, a = this;
switch (e) {
case 0:
n = cc.tween(a.node).to(.2, {
scale: .7
}).by(.3, {
y: 2 * a.node.height
});
break;

case 1:
n = cc.tween(a.node).to(.2, {
scale: .7
}).by(.3, {
x: 2 * a.node.width
});
break;

case 2:
n = cc.tween(a.node).to(.2, {
scale: .7
}).by(.3, {
y: -2 * a.node.height
});
break;

case 3:
n = cc.tween(a.node).to(.2, {
scale: .7
}).by(.3, {
x: -2 * a.node.width
});
break;

default:
n = cc.tween(a.node).to(.3, {
scale: .1
});
}
(t || i) && n.call(function() {
if (i) {
a._list._delSingleItem(a.node);
for (var e = a._list.displayData.length - 1; e >= 0; e--) if (a._list.displayData[e].listId == a.node._listId) {
a._list.displayData.splice(e, 1);
break;
}
}
t();
});
n.start();
},
onClickThis: function() {
this._list.selectedId = this.node._listId;
}
});
cc._RF.pop();
}, {} ],
ListView: [ function(e, t) {
"use strict";
cc._RF.push(t, "1a5dc+DW15NyJt2TvWMMi5r", "ListView");
var i = cc.Enum({
NODE: 1,
PREFAB: 2
}), n = cc.Enum({
NORMAL: 1,
ADHERING: 2,
PAGE: 3
}), a = cc.Enum({
NONE: 0,
SINGLE: 1,
MULT: 2
}), o = e("ListViewItem");
cc.Class({
extends: cc.Component,
editor: {
disallowMultiple: !1,
menu: "UI/ListView",
requireComponent: cc.ScrollView,
executionOrder: -5e3
},
properties: {
templateType: {
default: i.NODE,
type: i
},
tmpNode: {
default: null,
type: cc.Node,
tooltip: !1,
visible: function() {
var e = this.templateType == i.NODE;
e || (this.tmpNode = null);
return e;
}
},
tmpPrefab: {
default: null,
type: cc.Prefab,
tooltip: !1,
visible: function() {
var e = this.templateType == i.PREFAB;
e || (this.tmpPrefab = null);
return e;
}
},
_slideMode: 1,
slideMode: {
type: n,
tooltip: !1,
get: function() {
return this._slideMode;
},
set: function(e) {
null != e && (this._slideMode = e);
}
},
pageDistance: {
default: .3,
type: cc.Float,
range: [ 0, 1, .1 ],
tooltip: !1,
slide: !0,
visible: function() {
return this._slideMode == n.PAGE;
}
},
pageChangeEvent: {
default: null,
type: cc.Component.EventHandler,
tooltip: !1,
visible: function() {
var e = this._slideMode == n.PAGE;
e || (this.pageChangeEvent = null);
return e;
}
},
_virtual: !0,
virtual: {
tooltip: !1,
get: function() {
return this._virtual;
},
set: function(e) {
null != e && (this._virtual = e);
0 != this._numItems && this._onScrolling();
}
},
cyclic: {
default: !1,
tooltip: !1,
visible: function() {
var e = this.slideMode == n.NORMAL;
e || (this.cyclic = !1);
return e;
}
},
lackCenter: {
default: !1,
tooltip: !1,
visible: function() {
return this.virtual;
}
},
lackSlide: {
default: !1,
tooltip: !1,
visible: function() {
var e = this.virtual && !this.lackCenter;
e || (this.lackSlide = !1);
return e;
}
},
_updateRate: 0,
updateRate: {
type: cc.Integer,
range: [ 0, 6, 1 ],
tooltip: !1,
slide: !0,
get: function() {
return this._updateRate;
},
set: function(e) {
e >= 0 && e <= 6 && (this._updateRate = e);
}
},
frameByFrameRenderNum: {
default: 0,
type: cc.Integer,
range: [ 0, 12, 1 ],
tooltip: !1,
slide: !0
},
renderEvent: {
default: null,
type: cc.Component.EventHandler,
tooltip: !1
},
selectedMode: {
default: a.NONE,
type: a,
tooltip: !1
},
repeatEventSingle: {
default: !1,
tooltip: !1,
visible: function() {
return this.selectedMode == a.SINGLE;
}
},
selectedEvent: {
default: null,
type: cc.Component.EventHandler,
tooltip: !1,
visible: function() {
var e = this.selectedMode > 0;
e || (this.selectedEvent = null);
return e;
}
},
_selectedId: -1,
selectedId: {
visible: !1,
get: function() {
return this._selectedId;
},
set: function(e) {
var t, i = this;
switch (i.selectedMode) {
case a.SINGLE:
if (!i.repeatEventSingle && e == i._selectedId) return;
t = i.getItemByListId(e);
i._selectedId >= 0 ? i._lastSelectedId = i._selectedId : i._lastSelectedId = null;
i._selectedId = e;
t && (t.listItem.selected = !0);
if (i._lastSelectedId >= 0 && i._lastSelectedId != i._selectedId) {
var n = i.getItemByListId(i._lastSelectedId);
n && (n.listItem.selected = !1);
}
i.selectedEvent && cc.Component.EventHandler.emitEvents([ i.selectedEvent ], t, e % this._actualNumItems, null == i._lastSelectedId ? null : i._lastSelectedId % this._actualNumItems);
break;

case a.MULT:
if (!(t = i.getItemByListId(e))) return;
i._selectedId >= 0 && (i._lastSelectedId = i._selectedId);
i._selectedId = e;
var o = !t.listItem.selected;
t.listItem.selected = o;
var c = i.multSelected.indexOf(e);
o && c < 0 ? i.multSelected.push(e) : !o && c >= 0 && i.multSelected.splice(c, 1);
i.selectedEvent && cc.Component.EventHandler.emitEvents([ i.selectedEvent ], t, e % this._actualNumItems, null == i._lastSelectedId ? null : i._lastSelectedId % this._actualNumItems, o);
}
}
},
_numItems: {
default: 0,
serializable: !1
},
numItems: {
visible: !1,
get: function() {
return this._actualNumItems;
},
set: function(e) {
var t = this;
if (t.checkInited()) if (null == e || e < 0) cc.error("numItems set the wrong::", e); else {
t._actualNumItems = t._numItems = e;
t._forceUpdate = !0;
if (t._virtual) {
t._resizeContent();
t.cyclic && (t._numItems = t._cyclicNum * t._numItems);
t._onScrolling();
t.frameByFrameRenderNum || t.slideMode != n.PAGE || (t.curPageNum = t.nearestListId);
} else {
if (t.cyclic) {
t._resizeContent();
t._numItems = t._cyclicNum * t._numItems;
}
var i = t.content.getComponent(cc.Layout);
i && (i.enabled = !0);
t._delRedundantItem();
t.firstListId = 0;
if (t.frameByFrameRenderNum > 0) {
for (var a = t.frameByFrameRenderNum > t._numItems ? t._numItems : t.frameByFrameRenderNum, o = 0; o < a; o++) t._createOrUpdateItem2(o);
if (t.frameByFrameRenderNum < t._numItems) {
t._updateCounter = t.frameByFrameRenderNum;
t._updateDone = !1;
}
} else {
for (var c = 0; c < t._numItems; c++) t._createOrUpdateItem2(c);
t.displayItemNum = t._numItems;
}
}
}
}
}
},
onLoad: function() {
this._init();
},
onDestroy: function() {
var e = this;
cc.isValid(e._itemTmp) && e._itemTmp.destroy();
cc.isValid(e.tmpNode) && e.tmpNode.destroy();
},
onEnable: function() {
this._registerEvent();
this._init();
if (this._aniDelRuning) {
this._aniDelRuning = !1;
if (this._aniDelItem) {
if (this._aniDelBeforePos) {
this._aniDelItem.position = this._aniDelBeforePos;
delete this._aniDelBeforePos;
}
if (this._aniDelBeforeScale) {
this._aniDelItem.scale = this._aniDelBeforeScale;
delete this._aniDelBeforeScale;
}
delete this._aniDelItem;
}
if (this._aniDelCB) {
this._aniDelCB();
delete this._aniDelCB;
}
}
},
onDisable: function() {
this._unregisterEvent();
},
_registerEvent: function() {
var e = this;
e.node.on(cc.Node.EventType.TOUCH_START, e._onTouchStart, e, !0);
e.node.on("touch-up", e._onTouchUp, e, !0);
e.node.on(cc.Node.EventType.TOUCH_CANCEL, e._onTouchCancelled, e, !0);
e.node.on("scroll-began", e._onScrollBegan, e, !0);
e.node.on("scroll-ended", e._onScrollEnded, e, !0);
e.node.on("scrolling", e._onScrolling, e, !0);
e.node.on(cc.Node.EventType.SIZE_CHANGED, e._onSizeChanged, e);
},
_unregisterEvent: function() {
var e = this;
e.node.off(cc.Node.EventType.TOUCH_START, e._onTouchStart, e, !0);
e.node.off("touch-up", e._onTouchUp, e, !0);
e.node.off(cc.Node.EventType.TOUCH_CANCEL, e._onTouchCancelled, e, !0);
e.node.off("scroll-began", e._onScrollBegan, e, !0);
e.node.off("scroll-ended", e._onScrollEnded, e, !0);
e.node.off("scrolling", e._onScrolling, e, !0);
e.node.off(cc.Node.EventType.SIZE_CHANGED, e._onSizeChanged, e);
},
_init: function() {
var e = this;
if (!e._inited) {
e._scrollView = e.node.getComponent(cc.ScrollView);
e.content = e._scrollView.content;
if (e.content) {
e._layout = e.content.getComponent(cc.Layout);
e._align = e._layout.type;
e._resizeMode = e._layout.resizeMode;
e._startAxis = e._layout.startAxis;
e._topGap = e._layout.paddingTop;
e._rightGap = e._layout.paddingRight;
e._bottomGap = e._layout.paddingBottom;
e._leftGap = e._layout.paddingLeft;
e._columnGap = e._layout.spacingX;
e._lineGap = e._layout.spacingY;
e._colLineNum;
e._verticalDir = e._layout.verticalDirection;
e._horizontalDir = e._layout.horizontalDirection;
e.setTemplateItem(cc.instantiate(e.templateType == i.PREFAB ? e.tmpPrefab : e.tmpNode));
if (e._slideMode == n.ADHERING || e._slideMode == n.PAGE) {
e._scrollView.inertia = !1;
e._scrollView._onMouseWheel = function() {};
}
e.virtual || (e.lackCenter = !1);
e._lastDisplayData = [];
e.displayData = [];
e._pool = [];
e._forceUpdate = !1;
e._updateCounter = 0;
e._updateDone = !0;
e.curPageNum = 0;
if (e.cyclic) {
e._scrollView._processAutoScrolling = this._processAutoScrolling.bind(e);
e._scrollView._startBounceBackIfNeeded = function() {
return !1;
};
}
switch (e._align) {
case cc.Layout.Type.HORIZONTAL:
switch (e._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
e._alignCalcType = 1;
break;

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
e._alignCalcType = 2;
}
break;

case cc.Layout.Type.VERTICAL:
switch (e._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
e._alignCalcType = 3;
break;

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
e._alignCalcType = 4;
}
break;

case cc.Layout.Type.GRID:
switch (e._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
switch (e._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
e._alignCalcType = 3;
break;

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
e._alignCalcType = 4;
}
break;

case cc.Layout.AxisDirection.VERTICAL:
switch (e._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
e._alignCalcType = 1;
break;

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
e._alignCalcType = 2;
}
}
}
e.content.removeAllChildren();
e._inited = !0;
} else cc.error(e.node.name + "'s cc.ScrollView unset content!");
}
},
_processAutoScrolling: function(e) {
this._scrollView._autoScrollAccumulatedTime += 1 * e;
var t = Math.min(1, this._scrollView._autoScrollAccumulatedTime / this._scrollView._autoScrollTotalTime);
if (this._scrollView._autoScrollAttenuate) {
var i = t - 1;
t = i * i * i * i * i + 1;
}
var n = this._scrollView._autoScrollStartPosition.add(this._scrollView._autoScrollTargetDelta.mul(t)), a = this._scrollView.getScrollEndedEventTiming(), o = Math.abs(t - 1) <= a;
if (Math.abs(t - 1) <= this._scrollView.getScrollEndedEventTiming() && !this._scrollView._isScrollEndedWithThresholdEventFired) {
this._scrollView._dispatchEvent("scroll-ended-with-threshold");
this._scrollView._isScrollEndedWithThresholdEventFired = !0;
}
o && (this._scrollView._autoScrolling = !1);
var c = n.sub(this._scrollView.getContentPosition());
this._scrollView._moveContent(this._scrollView._clampDelta(c), o);
this._scrollView._dispatchEvent("scrolling");
if (!this._scrollView._autoScrolling) {
this._scrollView._isBouncing = !1;
this._scrollView._scrolling = !1;
this._scrollView._dispatchEvent("scroll-ended");
}
},
setTemplateItem: function(e) {
if (e) {
var t = this;
t._itemTmp = e;
t._resizeMode == cc.Layout.ResizeMode.CHILDREN ? t._itemSize = t._layout.cellSize : t._itemSize = new cc.size(e.width, e.height);
var i = e.getComponent(o), n = !1;
i || (n = !0);
n && (t.selectedMode = a.NONE);
(i = e.getComponent(cc.Widget)) && i.enabled && (t._needUpdateWidget = !0);
t.selectedMode == a.MULT && (t.multSelected = []);
switch (t._align) {
case cc.Layout.Type.HORIZONTAL:
t._colLineNum = 1;
t._sizeType = !1;
break;

case cc.Layout.Type.VERTICAL:
t._colLineNum = 1;
t._sizeType = !0;
break;

case cc.Layout.Type.GRID:
switch (t._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
var c = t.content.width - t._leftGap - t._rightGap;
t._colLineNum = Math.floor((c + t._columnGap) / (t._itemSize.width + t._columnGap));
t._sizeType = !0;
break;

case cc.Layout.AxisDirection.VERTICAL:
var s = t.content.height - t._topGap - t._bottomGap;
t._colLineNum = Math.floor((s + t._lineGap) / (t._itemSize.height + t._lineGap));
t._sizeType = !1;
}
}
}
},
checkInited: function(e) {
e = null == e || e;
if (!this._inited) {
e && cc.error("List initialization not completed!");
return !1;
}
return !0;
},
_resizeContent: function() {
var e, t = this;
switch (t._align) {
case cc.Layout.Type.HORIZONTAL:
if (t._customSize) {
var i = t._getFixedSize();
e = t._leftGap + i.val + t._itemSize.width * (t._numItems - i.count) + t._columnGap * (t._numItems - 1) + t._rightGap;
} else e = t._leftGap + t._itemSize.width * t._numItems + t._columnGap * (t._numItems - 1) + t._rightGap;
break;

case cc.Layout.Type.VERTICAL:
if (t._customSize) {
var n = t._getFixedSize();
e = t._topGap + n.val + t._itemSize.height * (t._numItems - n.count) + t._lineGap * (t._numItems - 1) + t._bottomGap;
} else e = t._topGap + t._itemSize.height * t._numItems + t._lineGap * (t._numItems - 1) + t._bottomGap;
break;

case cc.Layout.Type.GRID:
t.lackCenter && (t.lackCenter = !1);
switch (t._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
var a = Math.ceil(t._numItems / t._colLineNum);
e = t._topGap + t._itemSize.height * a + t._lineGap * (a - 1) + t._bottomGap;
break;

case cc.Layout.AxisDirection.VERTICAL:
var o = Math.ceil(t._numItems / t._colLineNum);
e = t._leftGap + t._itemSize.width * o + t._columnGap * (o - 1) + t._rightGap;
}
}
var c = t.content.getComponent(cc.Layout);
c && (c.enabled = !1);
t._allItemSize = e;
t._allItemSizeNoEdge = t._allItemSize - (t._sizeType ? t._topGap + t._bottomGap : t._leftGap + t._rightGap);
if (t.cyclic) {
var s = t._sizeType ? t.node.height : t.node.width;
t._cyclicPos1 = 0;
s -= t._cyclicPos1;
t._cyclicNum = Math.ceil(s / t._allItemSizeNoEdge) + 1;
var r = t._sizeType ? t._lineGap : t._columnGap;
t._cyclicPos2 = t._cyclicPos1 + t._allItemSizeNoEdge + r;
t._cyclicAllItemSize = t._allItemSize + t._allItemSizeNoEdge * (t._cyclicNum - 1) + r * (t._cyclicNum - 1);
t._cycilcAllItemSizeNoEdge = t._allItemSizeNoEdge * t._cyclicNum;
t._cycilcAllItemSizeNoEdge += r * (t._cyclicNum - 1);
}
t._lack = !t.cyclic && t._allItemSize < (t._sizeType ? t.node.height : t.node.width);
var l = t._lack && t.lackCenter || !t.lackSlide ? .1 : 0, d = t._lack ? (t._sizeType ? t.node.height : t.node.width) - l : t.cyclic ? t._cyclicAllItemSize : t._allItemSize;
d < 0 && (d = 0);
t._sizeType ? t.content.height = d : t.content.width = d;
},
_onScrolling: function(e) {
null == this.frameCount && (this.frameCount = this._updateRate);
if (!this._forceUpdate && e && "scroll-ended" != e.type && this.frameCount > 0) this.frameCount--; else {
this.frameCount = this._updateRate;
if (!this._aniDelRuning) {
if (this.cyclic) {
var t = this.content.getPosition();
t = this._sizeType ? t.y : t.x;
var i = this._allItemSizeNoEdge + (this._sizeType ? this._lineGap : this._columnGap), n = this._sizeType ? cc.v2(0, i) : cc.v2(i, 0);
switch (this._alignCalcType) {
case 1:
if (t > -this._cyclicPos1) {
this.content.x = -this._cyclicPos2;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(n));
} else if (t < -this._cyclicPos2) {
this.content.x = -this._cyclicPos1;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(n));
}
break;

case 2:
if (t < this._cyclicPos1) {
this.content.x = this._cyclicPos2;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(n));
} else if (t > this._cyclicPos2) {
this.content.x = this._cyclicPos1;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(n));
}
break;

case 3:
if (t < this._cyclicPos1) {
this.content.y = this._cyclicPos2;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(n));
} else if (t > this._cyclicPos2) {
this.content.y = this._cyclicPos1;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(n));
}
break;

case 4:
if (t > -this._cyclicPos1) {
this.content.y = -this._cyclicPos2;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(n));
} else if (t < -this._cyclicPos2) {
this.content.y = -this._cyclicPos1;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(n));
}
}
}
this._calcViewPos();
var a, o, c, s;
if (this._sizeType) {
a = this.viewTop;
c = this.viewBottom;
} else {
o = this.viewRight;
s = this.viewLeft;
}
if (this._virtual) {
this.displayData = [];
var r, l = 0, d = this._numItems - 1;
if (this._customSize) for (var h = !1; l <= d && !h; l++) {
r = this._calcItemPos(l);
switch (this._align) {
case cc.Layout.Type.HORIZONTAL:
r.right >= s && r.left <= o ? this.displayData.push(r) : 0 != l && this.displayData.length > 0 && (h = !0);
break;

case cc.Layout.Type.VERTICAL:
r.bottom <= a && r.top >= c ? this.displayData.push(r) : 0 != l && this.displayData.length > 0 && (h = !0);
break;

case cc.Layout.Type.GRID:
switch (this._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
r.bottom <= a && r.top >= c ? this.displayData.push(r) : 0 != l && this.displayData.length > 0 && (h = !0);
break;

case cc.Layout.AxisDirection.VERTICAL:
r.right >= s && r.left <= o ? this.displayData.push(r) : 0 != l && this.displayData.length > 0 && (h = !0);
}
}
} else {
var _ = this._itemSize.width + this._columnGap, p = this._itemSize.height + this._lineGap;
switch (this._alignCalcType) {
case 1:
l = (s - this._leftGap) / _;
d = (o - this._leftGap) / _;
break;

case 2:
l = (-o - this._rightGap) / _;
d = (-s - this._rightGap) / _;
break;

case 3:
l = (-a - this._topGap) / p;
d = (-c - this._topGap) / p;
break;

case 4:
l = (c - this._bottomGap) / p;
d = (a - this._bottomGap) / p;
}
l = Math.floor(l) * this._colLineNum;
d = Math.ceil(d) * this._colLineNum;
l < 0 && (l = 0);
--d >= this._numItems && (d = this._numItems - 1);
for (;l <= d; l++) this.displayData.push(this._calcItemPos(l));
}
this._delRedundantItem();
if (this.displayData.length <= 0 || !this._numItems) {
this._lastDisplayData = [];
return;
}
this.firstListId = this.displayData[0].id;
this.displayItemNum = this.displayData.length;
var u = this._lastDisplayData.length, f = this.displayItemNum != u;
if (f) {
this.frameByFrameRenderNum > 0 && this._lastDisplayData.sort(function(e, t) {
return e - t;
});
f = this.firstListId != this._lastDisplayData[0] || this.displayData[this.displayItemNum - 1].id != this._lastDisplayData[u - 1];
}
if (this._forceUpdate || f) if (this.frameByFrameRenderNum > 0) if (this._numItems > 0) {
this._updateDone ? this._updateCounter = 0 : this._doneAfterUpdate = !0;
this._updateDone = !1;
} else {
this._updateCounter = 0;
this._updateDone = !0;
} else {
this._lastDisplayData = [];
for (var g = 0; g < this.displayItemNum; g++) this._createOrUpdateItem(this.displayData[g]);
this._forceUpdate = !1;
}
this._calcNearestItem();
}
}
}
},
_calcViewPos: function() {
var e = this.content.getPosition();
switch (this._alignCalcType) {
case 1:
this.elasticLeft = e.x > 0 ? e.x : 0;
this.viewLeft = (e.x < 0 ? -e.x : 0) - this.elasticLeft;
this.viewRight = this.viewLeft + this.node.width;
this.elasticRight = this.viewRight > this.content.width ? Math.abs(this.viewRight - this.content.width) : 0;
this.viewRight += this.elasticRight;
break;

case 2:
this.elasticRight = e.x < 0 ? -e.x : 0;
this.viewRight = (e.x > 0 ? -e.x : 0) + this.elasticRight;
this.viewLeft = this.viewRight - this.node.width;
this.elasticLeft = this.viewLeft < -this.content.width ? Math.abs(this.viewLeft + this.content.width) : 0;
this.viewLeft -= this.elasticLeft;
break;

case 3:
this.elasticTop = e.y < 0 ? Math.abs(e.y) : 0;
this.viewTop = (e.y > 0 ? -e.y : 0) + this.elasticTop;
this.viewBottom = this.viewTop - this.node.height;
this.elasticBottom = this.viewBottom < -this.content.height ? Math.abs(this.viewBottom + this.content.height) : 0;
this.viewBottom += this.elasticBottom;
break;

case 4:
this.elasticBottom = e.y > 0 ? Math.abs(e.y) : 0;
this.viewBottom = (e.y < 0 ? -e.y : 0) - this.elasticBottom;
this.viewTop = this.viewBottom + this.node.height;
this.elasticTop = this.viewTop > this.content.height ? Math.abs(this.viewTop - this.content.height) : 0;
this.viewTop -= this.elasticTop;
}
},
_calcItemPos: function(e) {
var t, i, n, a, o, c, s, r;
switch (this._align) {
case cc.Layout.Type.HORIZONTAL:
switch (this._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
if (this._customSize) {
var l = this._getFixedSize(e);
o = this._leftGap + (this._itemSize.width + this._columnGap) * (e - l.count) + (l.val + this._columnGap * l.count);
var d = this._customSize[e];
t = d > 0 ? d : this._itemSize.width;
} else {
o = this._leftGap + (this._itemSize.width + this._columnGap) * e;
t = this._itemSize.width;
}
if (this.lackCenter) {
o -= this._leftGap;
o += this.content.width / 2 - this._allItemSizeNoEdge / 2;
}
return {
id: e,
left: o,
right: c = o + t,
x: o + this._itemTmp.anchorX * t,
y: this._itemTmp.y
};

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
if (this._customSize) {
var h = this._getFixedSize(e);
c = -this._rightGap - (this._itemSize.width + this._columnGap) * (e - h.count) - (h.val + this._columnGap * h.count);
var _ = this._customSize[e];
t = _ > 0 ? _ : this._itemSize.width;
} else {
c = -this._rightGap - (this._itemSize.width + this._columnGap) * e;
t = this._itemSize.width;
}
if (this.lackCenter) {
c += this._rightGap;
c -= this.content.width / 2 - this._allItemSizeNoEdge / 2;
}
return {
id: e,
right: c,
left: o = c - t,
x: o + this._itemTmp.anchorX * t,
y: this._itemTmp.y
};
}
break;

case cc.Layout.Type.VERTICAL:
switch (this._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
if (this._customSize) {
var p = this._getFixedSize(e);
n = -this._topGap - (this._itemSize.height + this._lineGap) * (e - p.count) - (p.val + this._lineGap * p.count);
var u = this._customSize[e];
a = n - (i = u > 0 ? u : this._itemSize.height);
} else {
n = -this._topGap - (this._itemSize.height + this._lineGap) * e;
i = this._itemSize.height;
}
if (this.lackCenter) {
n += this._topGap;
n -= this.content.height / 2 - this._allItemSizeNoEdge / 2;
}
return {
id: e,
top: n,
bottom: a = n - i,
x: this._itemTmp.x,
y: a + this._itemTmp.anchorY * i
};

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
if (this._customSize) {
var f = this._getFixedSize(e);
a = this._bottomGap + (this._itemSize.height + this._lineGap) * (e - f.count) + (f.val + this._lineGap * f.count);
var g = this._customSize[e];
i = g > 0 ? g : this._itemSize.height;
} else {
a = this._bottomGap + (this._itemSize.height + this._lineGap) * e;
i = this._itemSize.height;
}
if (this.lackCenter) {
a -= this._bottomGap;
a += this.content.height / 2 - this._allItemSizeNoEdge / 2;
}
return {
id: e,
top: n = a + i,
bottom: a,
x: this._itemTmp.x,
y: a + this._itemTmp.anchorY * i
};
}

case cc.Layout.Type.GRID:
var m = Math.floor(e / this._colLineNum);
switch (this._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
switch (this._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
r = (a = (n = -this._topGap - (this._itemSize.height + this._lineGap) * m) - this._itemSize.height) + this._itemTmp.anchorY * this._itemSize.height;
break;

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
n = (a = this._bottomGap + (this._itemSize.height + this._lineGap) * m) + this._itemSize.height;
r = a + this._itemTmp.anchorY * this._itemSize.height;
}
s = this._leftGap + e % this._colLineNum * (this._itemSize.width + this._columnGap);
switch (this._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
s += this._itemTmp.anchorX * this._itemSize.width;
s -= this.content.anchorX * this.content.width;
break;

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
s += (1 - this._itemTmp.anchorX) * this._itemSize.width;
s -= (1 - this.content.anchorX) * this.content.width;
s *= -1;
}
return {
id: e,
top: n,
bottom: a,
x: s,
y: r
};

case cc.Layout.AxisDirection.VERTICAL:
switch (this._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
c = (o = this._leftGap + (this._itemSize.width + this._columnGap) * m) + this._itemSize.width;
s = o + this._itemTmp.anchorX * this._itemSize.width;
s -= this.content.anchorX * this.content.width;
break;

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
s = (o = (c = -this._rightGap - (this._itemSize.width + this._columnGap) * m) - this._itemSize.width) + this._itemTmp.anchorX * this._itemSize.width;
s += (1 - this.content.anchorX) * this.content.width;
}
r = -this._topGap - e % this._colLineNum * (this._itemSize.height + this._lineGap);
switch (this._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
r -= (1 - this._itemTmp.anchorY) * this._itemSize.height;
r += (1 - this.content.anchorY) * this.content.height;
break;

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
r -= this._itemTmp.anchorY * this._itemSize.height;
r += this.content.anchorY * this.content.height;
r *= -1;
}
return {
id: e,
left: o,
right: c,
x: s,
y: r
};
}
}
},
_calcExistItemPos: function(e) {
var t = this.getItemByListId(e);
if (!t) return null;
var i = {
id: e,
x: t.x,
y: t.y
};
if (this._sizeType) {
i.top = t.y + t.height * (1 - t.anchorY);
i.bottom = t.y - t.height * t.anchorY;
} else {
i.left = t.x - t.width * t.anchorX;
i.right = t.x + t.width * (1 - t.anchorX);
}
return i;
},
getItemPos: function(e) {
return this._virtual ? this._calcItemPos(e) : this.frameByFrameRenderNum ? this._calcItemPos(e) : this._calcExistItemPos(e);
},
_getFixedSize: function(e) {
if (!this._customSize) return null;
null == e && (e = this._numItems);
var t = 0, i = 0;
for (var n in this._customSize) if (parseInt(n) < e) {
t += this._customSize[n];
i++;
}
return {
val: t,
count: i
};
},
_onScrollBegan: function() {
this._beganPos = this._sizeType ? this.viewTop : this.viewLeft;
},
_onScrollEnded: function() {
var e = this;
e.curScrollIsTouch = !1;
if (null != e.scrollToListId) {
var t = e.getItemByListId(e.scrollToListId);
e.scrollToListId = null;
t && cc.tween(t).to(.1, {
scale: 1.06
}).to(.1, {
scale: 1
}).start();
}
e._onScrolling();
e._slideMode != n.ADHERING || e.adhering ? e._slideMode == n.PAGE && (null != e._beganPos && e.curScrollIsTouch ? this._pageAdhere() : e.adhere()) : e.adhere();
},
_onTouchStart: function(e, t) {
if (!this._scrollView.hasNestedViewGroup(e, t)) {
this.curScrollIsTouch = !0;
if (e.eventPhase !== cc.Event.AT_TARGET || e.target !== this.node) {
for (var i = e.target; null == i._listId && i.parent; ) i = i.parent;
this._scrollItem = null != i._listId ? i : e.target;
}
}
},
_onTouchUp: function() {
var e = this;
e._scrollPos = null;
if (e._slideMode == n.ADHERING) {
e.adhering && (e._adheringBarrier = !0);
e.adhere();
} else e._slideMode == n.PAGE && (null != e._beganPos ? e._pageAdhere() : e.adhere());
this._scrollItem = null;
},
_onTouchCancelled: function(e, t) {
var i = this;
if (!i._scrollView.hasNestedViewGroup(e, t) && !e.simulate) {
i._scrollPos = null;
if (i._slideMode == n.ADHERING) {
i.adhering && (i._adheringBarrier = !0);
i.adhere();
} else i._slideMode == n.PAGE && (null != i._beganPos ? i._pageAdhere() : i.adhere());
this._scrollItem = null;
}
},
_onSizeChanged: function() {
this.checkInited(!1) && this._onScrolling();
},
_onItemAdaptive: function(e) {
if (!this._sizeType && e.width != this._itemSize.width || this._sizeType && e.height != this._itemSize.height) {
this._customSize || (this._customSize = {});
var t = this._sizeType ? e.height : e.width;
if (this._customSize[e._listId] != t) {
this._customSize[e._listId] = t;
this._resizeContent();
this.updateAll();
if (null != this._scrollToListId) {
this._scrollPos = null;
this.unschedule(this._scrollToSo);
this.scrollTo(this._scrollToListId, Math.max(0, this._scrollToEndTime - new Date().getTime() / 1e3));
}
}
}
},
_pageAdhere: function() {
var e = this;
if (e.cyclic || !(e.elasticTop > 0 || e.elasticRight > 0 || e.elasticBottom > 0 || e.elasticLeft > 0)) {
var t = e._sizeType ? e.viewTop : e.viewLeft, i = (e._sizeType ? e.node.height : e.node.width) * e.pageDistance;
if (Math.abs(e._beganPos - t) > i) switch (e._alignCalcType) {
case 1:
case 4:
e._beganPos > t ? e.prePage(.5) : e.nextPage(.5);
break;

case 2:
case 3:
e._beganPos < t ? e.prePage(.5) : e.nextPage(.5);
} else e.elasticTop <= 0 && e.elasticRight <= 0 && e.elasticBottom <= 0 && e.elasticLeft <= 0 && e.adhere();
e._beganPos = null;
}
},
adhere: function() {
var e = this;
if (e.checkInited() && !(e.elasticTop > 0 || e.elasticRight > 0 || e.elasticBottom > 0 || e.elasticLeft > 0)) {
e.adhering = !0;
e._calcNearestItem();
var t = (e._sizeType ? e._topGap : e._leftGap) / (e._sizeType ? e.node.height : e.node.width);
e.scrollTo(e.nearestListId, .7, t);
}
},
update: function() {
if (!(this.frameByFrameRenderNum <= 0 || this._updateDone)) if (this._virtual) {
for (var e = this._updateCounter + this.frameByFrameRenderNum > this.displayItemNum ? this.displayItemNum : this._updateCounter + this.frameByFrameRenderNum, t = this._updateCounter; t < e; t++) {
var i = this.displayData[t];
i && this._createOrUpdateItem(i);
}
if (this._updateCounter >= this.displayItemNum - 1) if (this._doneAfterUpdate) {
this._updateCounter = 0;
this._updateDone = !1;
this._doneAfterUpdate = !1;
} else {
this._updateDone = !0;
this._delRedundantItem();
this._forceUpdate = !1;
this._calcNearestItem();
this.slideMode == n.PAGE && (this.curPageNum = this.nearestListId);
} else this._updateCounter += this.frameByFrameRenderNum;
} else if (this._updateCounter < this._numItems) {
for (var a = this._updateCounter + this.frameByFrameRenderNum > this._numItems ? this._numItems : this._updateCounter + this.frameByFrameRenderNum, o = this._updateCounter; o < a; o++) this._createOrUpdateItem2(o);
this._updateCounter += this.frameByFrameRenderNum;
} else {
this._updateDone = !0;
this._calcNearestItem();
this.slideMode == n.PAGE && (this.curPageNum = this.nearestListId);
}
},
_createOrUpdateItem: function(e) {
var t = this.getItemByListId(e.id);
if (t) {
if (this._forceUpdate && this.renderEvent) {
t.setPosition(new cc.v2(e.x, e.y));
this._resetItemSize(t);
this.renderEvent && cc.Component.EventHandler.emitEvents([ this.renderEvent ], t, e.id % this._actualNumItems);
}
} else {
var i = !1, n = this._pool.length > 0;
if (n) t = this._pool.pop(); else {
i = !0;
t = cc.instantiate(this._itemTmp);
}
if (!n || !cc.isValid(t)) {
i = !0;
t = cc.instantiate(this._itemTmp);
n = !1;
}
if (t._listId != e.id) {
t._listId = e.id;
t.setContentSize(this._itemSize);
}
t.active = !0;
if (i) {
cc.log("=========================>", i);
this.content.addChild(t);
}
t.setPosition(new cc.v2(e.x, e.y));
this._resetItemSize(t);
if (n && this._needUpdateWidget) {
var a = t.getComponent(cc.Widget);
a && a.updateAlignment();
}
t.setSiblingIndex(this.content.childrenCount - 1);
var c = t.getComponent(o);
t.listItem = c;
if (c) {
c._list = this;
c._registerEvent();
}
this.renderEvent && cc.Component.EventHandler.emitEvents([ this.renderEvent ], t, e.id % this._actualNumItems);
}
this._resetItemSize(t);
this._updateListItem(t.listItem);
this._lastDisplayData.indexOf(e.id) < 0 && this._lastDisplayData.push(e.id);
},
_createOrUpdateItem2: function(e) {
var t = this.content.children[e];
if (t) {
if (this._forceUpdate && this.renderEvent) {
t._listId = e;
this.renderEvent && cc.Component.EventHandler.emitEvents([ this.renderEvent ], t, e % this._actualNumItems);
}
} else {
(t = cc.instantiate(this._itemTmp))._listId = e;
this.content.addChild(t);
var i = t.getComponent(o);
t.listItem = i;
if (i) {
i._list = this;
i._registerEvent();
}
this.renderEvent && cc.Component.EventHandler.emitEvents([ this.renderEvent ], t, e % this._actualNumItems);
}
this._updateListItem(t.listItem);
this._lastDisplayData.indexOf(e) < 0 && this._lastDisplayData.push(e);
},
_updateListItem: function(e) {
if (e && this.selectedMode > a.NONE) switch (this.selectedMode) {
case a.SINGLE:
e.selected = this.selectedId == e.node._listId;
break;

case a.MULT:
e.selected = this.multSelected.indexOf(e.node._listId) >= 0;
}
},
_resetItemSize: function() {},
_updateItemPos: function(e) {
var t = isNaN(e) ? e : this.getItemByListId(e), i = this.getItemPos(t._listId);
t.setPosition(i.x, i.y);
},
setMultSelected: function(e, t) {
var i = this;
if (i.checkInited()) {
Array.isArray(e) || (e = [ e ]);
if (null == t) i.multSelected = e; else {
var n, a;
if (t) for (var o = e.length - 1; o >= 0; o--) {
n = e[o];
(a = i.multSelected.indexOf(n)) < 0 && i.multSelected.push(n);
} else for (var c = e.length - 1; c >= 0; c--) {
n = e[c];
(a = i.multSelected.indexOf(n)) >= 0 && i.multSelected.splice(a, 1);
}
}
i._forceUpdate = !0;
i._onScrolling();
}
},
getMultSelected: function() {
return this.multSelected;
},
hasMultSelected: function(e) {
return this.multSelected && this.multSelected.indexOf(e) >= 0;
},
updateItem: function(e) {
if (this.checkInited()) {
Array.isArray(e) || (e = [ e ]);
for (var t = 0, i = e.length; t < i; t++) {
var n = e[t], a = this.getItemByListId(n);
a && cc.Component.EventHandler.emitEvents([ this.renderEvent ], a, n % this._actualNumItems);
}
}
},
updateAll: function() {
this.checkInited() && (this.numItems = this.numItems);
},
getItemByListId: function(e) {
if (this.content) for (var t = this.content.childrenCount - 1; t >= 0; t--) if (this.content.children[t].active && this.content.children[t]._listId == e) return this.content.children[t];
},
_getOutsideItem: function() {
for (var e, t = [], i = this.content.childrenCount - 1; i >= 0; i--) (e = this.content.children[i]).active && !this.displayData.find(function(t) {
return t.id == e._listId;
}) && t.push(e);
return t;
},
_delRedundantItem: function() {
if (this._virtual) for (var e = this._getOutsideItem(), t = e.length - 1; t >= 0; t--) {
var i = e[t];
if (!this._scrollItem || i._listId != this._scrollItem._listId) {
i.isCached = !0;
i.active = !1;
this._pool.push(i);
for (var n = this._lastDisplayData.length - 1; n >= 0; n--) if (this._lastDisplayData[n] == i._listId) {
this._lastDisplayData.splice(n, 1);
break;
}
}
} else for (;this.content.childrenCount > this._numItems; ) this._delSingleItem(this.content.children[this.content.childrenCount - 1]);
},
_delSingleItem: function(e) {
e.removeFromParent();
e.destroy && e.destroy();
e = null;
},
aniDelItem: function(e, t, i) {
var n = this;
if (!n.checkInited() || n.cyclic || !n._virtual) return cc.error("This function is not allowed to be called!");
if (!t) return cc.error("CallFunc are not allowed to be NULL, You need to delete the corresponding index in the data array in the CallFunc!");
if (n._aniDelRuning) return cc.warn("Please wait for the current deletion to finish!");
var o = n.getItemByListId(e);
if (o) {
n._aniDelRuning = !0;
n._aniDelCB = t;
n._aniDelItem = o;
n._aniDelBeforePos = o.position;
n._aniDelBeforeScale = o.scale;
var c = n.displayData[n.displayData.length - 1].id, s = o.listItem.selected;
o.listItem.showAni(i, function() {
var i;
c < n._numItems - 2 && (i = c + 1);
if (null != i) {
var r = n._calcItemPos(i);
n.displayData.push(r);
n._virtual ? n._createOrUpdateItem(r) : n._createOrUpdateItem2(i);
} else n._numItems--;
if (n.selectedMode == a.SINGLE) s ? n._selectedId = -1 : n._selectedId - 1 >= 0 && n._selectedId--; else if (n.selectedMode == a.MULT && n.multSelected.length) {
var l = n.multSelected.indexOf(e);
l >= 0 && n.multSelected.splice(l, 1);
for (var d = n.multSelected.length - 1; d >= 0; d--) n.multSelected[d] >= e && n.multSelected[d]--;
}
if (n._customSize) {
n._customSize[e] && delete n._customSize[e];
var h, _ = {};
for (var p in n._customSize) {
h = n._customSize[p];
_[(p = parseInt(p)) - (p >= e ? 1 : 0)] = h;
}
n._customSize = _;
}
for (var u, f, g = null != i ? i : c; g >= e + 1; g--) if (o = n.getItemByListId(g)) {
var m = n._calcItemPos(g - 1);
u = cc.tween(o).to(.2333, {
position: cc.v2(m.x, m.y)
});
if (g <= e + 1) {
f = !0;
u.call(function() {
n._aniDelRuning = !1;
t(e);
delete n._aniDelCB;
});
}
u.start();
}
if (!f) {
n._aniDelRuning = !1;
t(e);
delete n._aniDelCB;
}
}, !0);
} else t(e);
},
scrollTo: function(e, t, i, n) {
var a = this;
if (a.checkInited()) {
null == t ? t = .5 : t < 0 && (t = 0);
e < 0 ? e = 0 : e >= a._numItems && (e = a._numItems - 1);
!a._virtual && a._layout && a._layout.enabled && a._layout.updateLayout();
var o, c, s = a.getItemPos(e);
if (!s) return !1;
switch (a._alignCalcType) {
case 1:
o = s.left;
o -= null != i ? a.node.width * i : a._leftGap;
s = new cc.v2(o, 0);
break;

case 2:
o = s.right - a.node.width;
o += null != i ? a.node.width * i : a._rightGap;
s = new cc.v2(o + a.content.width, 0);
break;

case 3:
c = s.top;
c += null != i ? a.node.height * i : a._topGap;
s = new cc.v2(0, -c);
break;

case 4:
c = s.bottom + a.node.height;
c -= null != i ? a.node.height * i : a._bottomGap;
s = new cc.v2(0, -c + a.content.height);
}
var r = a.content.getPosition();
r = Math.abs(a._sizeType ? r.y : r.x);
var l = a._sizeType ? s.y : s.x;
if (Math.abs((null != a._scrollPos ? a._scrollPos : r) - l) > .5) {
a._scrollPos = l;
a._scrollToListId = e;
a._scrollToEndTime = new Date().getTime() / 1e3 + t;
a._scrollView.scrollToOffset(s, t);
a._scrollToSo = a.scheduleOnce(function() {
a._adheringBarrier || (a.adhering = a._adheringBarrier = !1);
a._scrollPos = a._scrollToListId = a._scrollToEndTime = a._scrollToSo = null;
if (n) {
var t = a.getItemByListId(e);
t && cc.tween(t).to(.1, {
scale: 1.05
}).to(.1, {
scale: 1
}).start();
}
}, t + .1);
t <= 0 && a._onScrolling();
}
}
},
_calcNearestItem: function() {
var e, t, i, n, a, o, c = this;
c.nearestListId = null;
c._virtual && c._calcViewPos();
i = c.viewTop;
n = c.viewRight;
a = c.viewBottom;
o = c.viewLeft;
for (var s = !1, r = 0; r < c.content.childrenCount && !s; r += c._colLineNum) if (e = this._virtual ? this.displayData[r] : this._calcExistItemPos(r)) {
t = this._sizeType ? (e.top + e.bottom) / 2 : t = (e.left + e.right) / 2;
switch (this._alignCalcType) {
case 1:
if (e.right >= o) {
this.nearestListId = e.id;
o > t && (this.nearestListId += this._colLineNum);
s = !0;
}
break;

case 2:
if (e.left <= n) {
this.nearestListId = e.id;
n < t && (this.nearestListId += this._colLineNum);
s = !0;
}
break;

case 3:
if (e.bottom <= i) {
this.nearestListId = e.id;
i < t && (this.nearestListId += this._colLineNum);
s = !0;
}
break;

case 4:
if (e.top >= a) {
this.nearestListId = e.id;
a > t && (this.nearestListId += this._colLineNum);
s = !0;
}
}
}
if ((e = this._virtual ? this.displayData[this.displayItemNum - 1] : this._calcExistItemPos(this._numItems - 1)) && e.id == c._numItems - 1) {
t = c._sizeType ? (e.top + e.bottom) / 2 : t = (e.left + e.right) / 2;
switch (c._alignCalcType) {
case 1:
n > t && (c.nearestListId = e.id);
break;

case 2:
o < t && (c.nearestListId = e.id);
break;

case 3:
a < t && (c.nearestListId = e.id);
break;

case 4:
i > t && (c.nearestListId = e.id);
}
}
},
prePage: function(e) {
if (this.checkInited()) {
null == e && (e = .5);
this.skipPage(this.curPageNum - 1, e);
}
},
nextPage: function(e) {
if (this.checkInited()) {
null == e && (e = .5);
this.skipPage(this.curPageNum + 1, e);
}
},
skipPage: function(e, t) {
var i = this;
if (i.checkInited()) {
if (i._slideMode != n.PAGE) return cc.error("This function is not allowed to be called, Must SlideMode = PAGE!");
if (!(e < 0 || e >= i._numItems) && i.curPageNum != e) {
i.curPageNum = e;
i.pageChangeEvent && cc.Component.EventHandler.emitEvents([ i.pageChangeEvent ], e);
i.scrollTo(e, t);
}
}
},
calcCustomSize: function(e) {
var t = this;
if (t.checkInited()) {
if (!t._itemTmp) return cc.error("Unset template item!");
if (!t.renderEvent) return cc.error("Unset Render-Event!");
t._customSize = {};
var i = cc.instantiate(t._itemTmp);
t.content.addChild(i);
for (var n = 0; n < e; n++) {
cc.Component.EventHandler.emitEvents([ t.renderEvent ], i, n);
i.height == t._itemSize.height && i.width == t._itemSize.width || (t._customSize[n] = t._sizeType ? i.height : i.width);
}
Object.keys(t._customSize).length || (t._customSize = null);
i.removeFromParent();
i.destroy && i.destroy();
return t._customSize;
}
}
});
cc._RF.pop();
}, {
ListViewItem: "ListViewItem"
} ],
List: [ function(e, t) {
"use strict";
cc._RF.push(t, "c5a09lTqKZKE6FCobKt/vl8", "List");
var i = cc.Enum({
NODE: 1,
PREFAB: 2
}), n = cc.Enum({
NORMAL: 1,
ADHERING: 2,
PAGE: 3
}), a = cc.Enum({
NONE: 0,
SINGLE: 1,
MULT: 2
}), o = e("ListItem");
cc.Class({
extends: cc.Component,
editor: {
disallowMultiple: !1,
menu: "自定义组件/List",
requireComponent: cc.ScrollView,
executionOrder: -5e3
},
properties: {
templateType: {
default: i.NODE,
type: i
},
tmpNode: {
default: null,
type: cc.Node,
tooltip: !1,
visible: function() {
var e = this.templateType == i.NODE;
e || (this.tmpNode = null);
return e;
}
},
tmpPrefab: {
default: null,
type: cc.Prefab,
tooltip: !1,
visible: function() {
var e = this.templateType == i.PREFAB;
e || (this.tmpPrefab = null);
return e;
}
},
_slideMode: 1,
slideMode: {
type: n,
tooltip: !1,
get: function() {
return this._slideMode;
},
set: function(e) {
null != e && (this._slideMode = e);
}
},
pageDistance: {
default: .3,
type: cc.Float,
range: [ 0, 1, .1 ],
tooltip: !1,
slide: !0,
visible: function() {
return this._slideMode == n.PAGE;
}
},
pageChangeEvent: {
default: null,
type: cc.Component.EventHandler,
tooltip: !1,
visible: function() {
var e = this._slideMode == n.PAGE;
e || (this.pageChangeEvent = null);
return e;
}
},
_virtual: !0,
virtual: {
tooltip: !1,
get: function() {
return this._virtual;
},
set: function(e) {
null != e && (this._virtual = e);
0 != this._numItems && this._onScrolling();
}
},
cyclic: {
default: !1,
tooltip: !1,
visible: function() {
var e = this.virtual && this.slideMode == n.NORMAL;
e || (this.cyclic = !1);
return e;
}
},
lackCenter: {
default: !1,
tooltip: !1,
visible: function() {
return this.virtual;
}
},
lackSlide: {
default: !1,
tooltip: !1,
visible: function() {
var e = this.virtual && !this.lackCenter;
e || (this.lackSlide = !1);
return e;
}
},
_updateRate: 0,
updateRate: {
type: cc.Integer,
range: [ 0, 6, 1 ],
tooltip: !1,
slide: !0,
get: function() {
return this._updateRate;
},
set: function(e) {
e >= 0 && e <= 6 && (this._updateRate = e);
}
},
frameByFrameRenderNum: {
default: 0,
type: cc.Integer,
range: [ 0, 12, 1 ],
tooltip: !1,
slide: !0
},
renderEvent: {
default: null,
type: cc.Component.EventHandler,
tooltip: !1
},
selectedMode: {
default: a.NONE,
type: a,
tooltip: !1
},
repeatEventSingle: {
default: !1,
tooltip: !1,
visible: function() {
return this.selectedMode == a.SINGLE;
}
},
selectedEvent: {
default: null,
type: cc.Component.EventHandler,
tooltip: !1,
visible: function() {
var e = this.selectedMode > 0;
e || (this.selectedEvent = null);
return e;
}
},
_selectedId: -1,
selectedId: {
visible: !1,
get: function() {
return this._selectedId;
},
set: function(e) {
var t, i = this;
switch (i.selectedMode) {
case a.SINGLE:
if (!i.repeatEventSingle && e == i._selectedId) return;
t = i.getItemByListId(e);
i._selectedId >= 0 ? i._lastSelectedId = i._selectedId : i._lastSelectedId = null;
i._selectedId = e;
t && (t.listItem.selected = !0);
if (i._lastSelectedId >= 0 && i._lastSelectedId != i._selectedId) {
var n = i.getItemByListId(i._lastSelectedId);
n && (n.listItem.selected = !1);
}
i.selectedEvent && cc.Component.EventHandler.emitEvents([ i.selectedEvent ], t, e % this._actualNumItems, null == i._lastSelectedId ? null : i._lastSelectedId % this._actualNumItems);
break;

case a.MULT:
if (!(t = i.getItemByListId(e))) return;
i._selectedId >= 0 && (i._lastSelectedId = i._selectedId);
i._selectedId = e;
var o = !t.listItem.selected;
t.listItem.selected = o;
var c = i.multSelected.indexOf(e);
o && c < 0 ? i.multSelected.push(e) : !o && c >= 0 && i.multSelected.splice(c, 1);
i.selectedEvent && cc.Component.EventHandler.emitEvents([ i.selectedEvent ], t, e % this._actualNumItems, null == i._lastSelectedId ? null : i._lastSelectedId % this._actualNumItems, o);
}
}
},
_numItems: {
default: 0,
serializable: !1
},
numItems: {
visible: !1,
get: function() {
return this._actualNumItems;
},
set: function(e) {
console.log("设置numitems");
var t = this;
if (t.checkInited()) if (null == e || e < 0) cc.error("numItems set the wrong::", e); else {
console.log("设置numitems 开始");
t._actualNumItems = t._numItems = e;
t._forceUpdate = !0;
if (t._virtual) {
t._resizeContent();
t.cyclic && (t._numItems = t._cyclicNum * t._numItems);
t._onScrolling();
t.frameByFrameRenderNum || t.slideMode != n.PAGE || (t.curPageNum = t.nearestListId);
} else {
var i = t.content.getComponent(cc.Layout);
i && (i.enabled = !0);
t._delRedundantItem();
t.firstListId = 0;
if (t.frameByFrameRenderNum > 0) {
for (var a = t.frameByFrameRenderNum > t._numItems ? t._numItems : t.frameByFrameRenderNum, o = 0; o < a; o++) t._createOrUpdateItem2(o);
if (t.frameByFrameRenderNum < t._numItems) {
t._updateCounter = t.frameByFrameRenderNum;
t._updateDone = !1;
}
} else {
for (var c = 0; c < e; c++) t._createOrUpdateItem2(c);
t.displayItemNum = e;
}
}
}
}
}
},
onLoad: function() {
this._init();
},
onDestroy: function() {
this._itemTmp && this._itemTmp.isValid && this._itemTmp.destroy();
for (;this._pool.size(); ) this._pool.get().destroy();
},
onEnable: function() {
this._registerEvent();
this._init();
},
onDisable: function() {
this._unregisterEvent();
},
_registerEvent: function() {
var e = this;
e.node.on(cc.Node.EventType.TOUCH_START, e._onTouchStart, e, !0);
e.node.on("touch-up", e._onTouchUp, e, !0);
e.node.on(cc.Node.EventType.TOUCH_CANCEL, e._onTouchCancelled, e, !0);
e.node.on("scroll-began", e._onScrollBegan, e, !0);
e.node.on("scroll-ended", e._onScrollEnded, e, !0);
e.node.on("scrolling", e._onScrolling, e, !0);
e.node.on(cc.Node.EventType.SIZE_CHANGED, e._onSizeChanged, e);
},
_unregisterEvent: function() {
var e = this;
e.node.off(cc.Node.EventType.TOUCH_START, e._onTouchStart, e, !0);
e.node.off("touch-up", e._onTouchUp, e, !0);
e.node.off(cc.Node.EventType.TOUCH_CANCEL, e._onTouchCancelled, e, !0);
e.node.off("scroll-began", e._onScrollBegan, e, !0);
e.node.off("scroll-ended", e._onScrollEnded, e, !0);
e.node.off("scrolling", e._onScrolling, e, !0);
e.node.off(cc.Node.EventType.SIZE_CHANGED, e._onSizeChanged, e);
},
_init: function() {
var e = this;
if (!e._inited) {
e._scrollView = e.node.getComponent(cc.ScrollView);
e.content = e._scrollView.content;
if (e.content) {
e._layout = e.content.getComponent(cc.Layout);
e._align = e._layout.type;
e._resizeMode = e._layout.resizeMode;
e._startAxis = e._layout.startAxis;
e._topGap = e._layout.paddingTop;
e._rightGap = e._layout.paddingRight;
e._bottomGap = e._layout.paddingBottom;
e._leftGap = e._layout.paddingLeft;
e._columnGap = e._layout.spacingX;
e._lineGap = e._layout.spacingY;
e._colLineNum;
e._verticalDir = e._layout.verticalDirection;
e._horizontalDir = e._layout.horizontalDirection;
e.setTemplateItem(cc.instantiate(e.templateType == i.PREFAB ? e.tmpPrefab : e.tmpNode));
if (e._slideMode == n.ADHERING || e._slideMode == n.PAGE) {
e._scrollView.inertia = !1;
e._scrollView._onMouseWheel = function() {};
}
e.virtual || (e.lackCenter = !1);
e._lastDisplayData = [];
e.displayData = [];
e._pool = new cc.NodePool();
e._forceUpdate = !1;
e._updateCounter = 0;
e._updateDone = !0;
e.curPageNum = 0;
if (e.cyclic) {
e._scrollView._processAutoScrolling = this._processAutoScrolling.bind(e);
e._scrollView._startBounceBackIfNeeded = function() {
return !1;
};
}
switch (e._align) {
case cc.Layout.Type.HORIZONTAL:
switch (e._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
e._alignCalcType = 1;
break;

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
e._alignCalcType = 2;
}
break;

case cc.Layout.Type.VERTICAL:
switch (e._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
e._alignCalcType = 3;
break;

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
e._alignCalcType = 4;
}
break;

case cc.Layout.Type.GRID:
switch (e._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
switch (e._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
e._alignCalcType = 3;
break;

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
e._alignCalcType = 4;
}
break;

case cc.Layout.AxisDirection.VERTICAL:
switch (e._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
e._alignCalcType = 1;
break;

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
e._alignCalcType = 2;
}
}
}
e.content.children.forEach(function(e) {
e.removeFromParent();
e.isValid && e.destroy();
});
e._inited = !0;
} else cc.error(e.node.name + "'s cc.ScrollView unset content!");
}
},
_processAutoScrolling: function(e) {
this._scrollView._autoScrollAccumulatedTime += 1 * e;
var t = Math.min(1, this._scrollView._autoScrollAccumulatedTime / this._scrollView._autoScrollTotalTime);
if (this._scrollView._autoScrollAttenuate) {
var i = t - 1;
t = i * i * i * i * i + 1;
}
var n = this._scrollView._autoScrollStartPosition.add(this._scrollView._autoScrollTargetDelta.mul(t)), a = this._scrollView.getScrollEndedEventTiming(), o = Math.abs(t - 1) <= a;
if (Math.abs(t - 1) <= this._scrollView.getScrollEndedEventTiming() && !this._scrollView._isScrollEndedWithThresholdEventFired) {
this._scrollView._dispatchEvent("scroll-ended-with-threshold");
this._scrollView._isScrollEndedWithThresholdEventFired = !0;
}
o && (this._scrollView._autoScrolling = !1);
var c = n.sub(this._scrollView.getContentPosition());
this._scrollView._moveContent(this._scrollView._clampDelta(c), o);
this._scrollView._dispatchEvent("scrolling");
if (!this._scrollView._autoScrolling) {
this._scrollView._isBouncing = !1;
this._scrollView._scrolling = !1;
this._scrollView._dispatchEvent("scroll-ended");
}
},
setTemplateItem: function(e) {
if (e) {
var t = this;
t._itemTmp = e;
t._resizeMode == cc.Layout.ResizeMode.CHILDREN ? t._itemSize = t._layout.cellSize : t._itemSize = new cc.size(e.width, e.height);
var i = e.getComponent(o), n = !1;
i || (n = !0);
i && (i._btnCom || e.getComponent(cc.Button) || (n = !0));
n && (t.selectedMode = a.NONE);
(i = e.getComponent(cc.Widget)) && i.enabled && (t._needUpdateWidget = !0);
t.selectedMode == a.MULT && (t.multSelected = []);
switch (t._align) {
case cc.Layout.Type.HORIZONTAL:
t._colLineNum = 1;
t._sizeType = !1;
break;

case cc.Layout.Type.VERTICAL:
t._colLineNum = 1;
t._sizeType = !0;
break;

case cc.Layout.Type.GRID:
switch (t._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
var c = t.content.width - t._leftGap - t._rightGap;
t._colLineNum = Math.floor((c + t._columnGap) / (t._itemSize.width + t._columnGap));
t._sizeType = !0;
break;

case cc.Layout.AxisDirection.VERTICAL:
var s = t.content.height - t._topGap - t._bottomGap;
t._colLineNum = Math.floor((s + t._lineGap) / (t._itemSize.height + t._lineGap));
t._sizeType = !1;
}
}
}
},
checkInited: function(e) {
e = null == e || e;
if (!this._inited) {
e && cc.error("List initialization not completed!");
return !1;
}
return !0;
},
_resizeContent: function() {
var e, t = this;
switch (t._align) {
case cc.Layout.Type.HORIZONTAL:
if (t._customSize) {
var i = t._getFixedSize();
e = t._leftGap + i.val + t._itemSize.width * (t._numItems - i.count) + t._columnGap * (t._numItems - 1) + t._rightGap;
} else e = t._leftGap + t._itemSize.width * t._numItems + t._columnGap * (t._numItems - 1) + t._rightGap;
break;

case cc.Layout.Type.VERTICAL:
if (t._customSize) {
var n = t._getFixedSize();
e = t._topGap + n.val + t._itemSize.height * (t._numItems - n.count) + t._lineGap * (t._numItems - 1) + t._bottomGap;
} else e = t._topGap + t._itemSize.height * t._numItems + t._lineGap * (t._numItems - 1) + t._bottomGap;
break;

case cc.Layout.Type.GRID:
t.lackCenter && (t.lackCenter = !1);
switch (t._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
var a = Math.ceil(t._numItems / t._colLineNum);
e = t._topGap + t._itemSize.height * a + t._lineGap * (a - 1) + t._bottomGap;
break;

case cc.Layout.AxisDirection.VERTICAL:
var o = Math.ceil(t._numItems / t._colLineNum);
e = t._leftGap + t._itemSize.width * o + t._columnGap * (o - 1) + t._rightGap;
}
}
var c = t.content.getComponent(cc.Layout);
c && (c.enabled = !1);
t._allItemSize = e;
t._allItemSizeNoEdge = t._allItemSize - (t._sizeType ? t._topGap + t._bottomGap : t._leftGap + t._rightGap);
if (t.cyclic) {
var s = t._sizeType ? t.node.height : t.node.width;
t._cyclicPos1 = 0;
s -= t._cyclicPos1;
t._cyclicNum = Math.ceil(s / t._allItemSizeNoEdge) + 1;
var r = t._sizeType ? t._lineGap : t._columnGap;
t._cyclicPos2 = t._cyclicPos1 + t._allItemSizeNoEdge + r;
t._cyclicAllItemSize = t._allItemSize + t._allItemSizeNoEdge * (t._cyclicNum - 1) + r * (t._cyclicNum - 1);
t._cycilcAllItemSizeNoEdge = t._allItemSizeNoEdge * t._cyclicNum;
t._cycilcAllItemSizeNoEdge += r * (t._cyclicNum - 1);
}
t._lack = !t.cyclic && t._allItemSize < (t._sizeType ? t.node.height : t.node.width);
var l = t._lack && t.lackCenter || !t.lackSlide ? .1 : 0, d = t._lack ? (t._sizeType ? t.node.height : t.node.width) - l : t.cyclic ? t._cyclicAllItemSize : t._allItemSize;
d < 0 && (d = 0);
t._sizeType ? t.content.height = d : t.content.width = d;
},
_onScrolling: function(e) {
null == this.frameCount && (this.frameCount = this._updateRate);
if (!this._forceUpdate && e && "scroll-ended" != e.type && this.frameCount > 0) this.frameCount--; else {
this.frameCount = this._updateRate;
if (!this._aniDelRuning) {
if (this.cyclic) {
var t = this.content.getPosition();
t = this._sizeType ? t.y : t.x;
var i = this._allItemSizeNoEdge + (this._sizeType ? this._lineGap : this._columnGap), n = this._sizeType ? cc.v2(0, i) : cc.v2(i, 0);
switch (this._alignCalcType) {
case 1:
if (t > -this._cyclicPos1) {
this.content.x = -this._cyclicPos2;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(n));
} else if (t < -this._cyclicPos2) {
this.content.x = -this._cyclicPos1;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(n));
}
break;

case 2:
if (t < this._cyclicPos1) {
this.content.x = this._cyclicPos2;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(n));
} else if (t > this._cyclicPos2) {
this.content.x = this._cyclicPos1;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(n));
}
break;

case 3:
if (t < this._cyclicPos1) {
this.content.y = this._cyclicPos2;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(n));
} else if (t > this._cyclicPos2) {
this.content.y = this._cyclicPos1;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(n));
}
break;

case 4:
if (t > -this._cyclicPos1) {
this.content.y = -this._cyclicPos2;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(n));
} else if (t < -this._cyclicPos2) {
this.content.y = -this._cyclicPos1;
this._scrollView.isAutoScrolling() && (this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(n));
}
}
}
this._calcViewPos();
var a, o, c, s;
if (this._sizeType) {
a = this.viewTop;
c = this.viewBottom;
} else {
o = this.viewRight;
s = this.viewLeft;
}
if (this._virtual) {
this.displayData = [];
var r, l = 0, d = this._numItems - 1;
if (this._customSize) for (var h = !1; l <= d && !h; l++) {
r = this._calcItemPos(l);
switch (this._align) {
case cc.Layout.Type.HORIZONTAL:
r.right >= s && r.left <= o ? this.displayData.push(r) : 0 != l && this.displayData.length > 0 && (h = !0);
break;

case cc.Layout.Type.VERTICAL:
r.bottom <= a && r.top >= c ? this.displayData.push(r) : 0 != l && this.displayData.length > 0 && (h = !0);
break;

case cc.Layout.Type.GRID:
switch (this._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
r.bottom <= a && r.top >= c ? this.displayData.push(r) : 0 != l && this.displayData.length > 0 && (h = !0);
break;

case cc.Layout.AxisDirection.VERTICAL:
r.right >= s && r.left <= o ? this.displayData.push(r) : 0 != l && this.displayData.length > 0 && (h = !0);
}
}
} else {
var _ = this._itemSize.width + this._columnGap, p = this._itemSize.height + this._lineGap;
switch (this._alignCalcType) {
case 1:
l = (s + this._leftGap) / _;
d = (o + this._rightGap) / _;
break;

case 2:
l = (-o - this._rightGap) / _;
d = (-s - this._leftGap) / _;
break;

case 3:
l = (-a - this._topGap) / p;
d = (-c - this._bottomGap) / p;
break;

case 4:
l = (c + this._bottomGap) / p;
d = (a + this._topGap) / p;
}
l = Math.floor(l) * this._colLineNum;
d = Math.ceil(d) * this._colLineNum;
l < 0 && (l = 0);
--d >= this._numItems && (d = this._numItems - 1);
for (;l <= d; l++) this.displayData.push(this._calcItemPos(l));
}
if (this.displayData.length <= 0 || !this._numItems) {
this._lastDisplayData = [];
this._delRedundantItem();
return;
}
this.firstListId = this.displayData[0].id;
this.displayItemNum = this.displayData.length;
var u = this._lastDisplayData.length;
if (this._forceUpdate || this.displayItemNum != u || this.firstListId != this._lastDisplayData[0] || this.displayData[this.displayItemNum - 1].id != this._lastDisplayData[u - 1]) {
this._lastDisplayData = [];
if (this.frameByFrameRenderNum > 0) if (this._numItems > 0) {
this._updateDone ? this._updateCounter = 0 : this._doneAfterUpdate = !0;
this._updateDone = !1;
} else {
this._delRedundantItem();
this._updateCounter = 0;
this._updateDone = !0;
} else {
for (var f = 0; f < this.displayItemNum; f++) this._createOrUpdateItem(this.displayData[f]);
this._delRedundantItem();
this._forceUpdate = !1;
}
}
this._calcNearestItem();
}
}
}
},
_calcViewPos: function() {
var e = this.content.getPosition();
switch (this._alignCalcType) {
case 1:
this.elasticLeft = e.x > 0 ? e.x : 0;
this.viewLeft = (e.x < 0 ? -e.x : 0) - this.elasticLeft;
this.viewRight = this.viewLeft + this.node.width;
this.elasticRight = this.viewRight > this.content.width ? Math.abs(this.viewRight - this.content.width) : 0;
this.viewRight += this.elasticRight;
break;

case 2:
this.elasticRight = e.x < 0 ? -e.x : 0;
this.viewRight = (e.x > 0 ? -e.x : 0) + this.elasticRight;
this.viewLeft = this.viewRight - this.node.width;
this.elasticLeft = this.viewLeft < -this.content.width ? Math.abs(this.viewLeft + this.content.width) : 0;
this.viewLeft -= this.elasticLeft;
break;

case 3:
this.elasticTop = e.y < 0 ? Math.abs(e.y) : 0;
this.viewTop = (e.y > 0 ? -e.y : 0) + this.elasticTop;
this.viewBottom = this.viewTop - this.node.height;
this.elasticBottom = this.viewBottom < -this.content.height ? Math.abs(this.viewBottom + this.content.height) : 0;
this.viewBottom += this.elasticBottom;
break;

case 4:
this.elasticBottom = e.y > 0 ? Math.abs(e.y) : 0;
this.viewBottom = (e.y < 0 ? -e.y : 0) - this.elasticBottom;
this.viewTop = this.viewBottom + this.node.height;
this.elasticTop = this.viewTop > this.content.height ? Math.abs(this.viewTop - this.content.height) : 0;
this.viewTop -= this.elasticTop;
}
},
_calcItemPos: function(e) {
var t, i, n, a, o, c, s, r;
switch (this._align) {
case cc.Layout.Type.HORIZONTAL:
switch (this._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
if (this._customSize) {
var l = this._getFixedSize(e);
o = this._leftGap + (this._itemSize.width + this._columnGap) * (e - l.count) + (l.val + this._columnGap * l.count);
var d = this._customSize[e];
t = d > 0 ? d : this._itemSize.width;
} else {
o = this._leftGap + (this._itemSize.width + this._columnGap) * e;
t = this._itemSize.width;
}
c = o + t;
if (this.lackCenter) {
var h = this.content.width / 2 - this._allItemSizeNoEdge / 2;
o += h;
c += h;
}
return {
id: e,
left: o,
right: c,
x: o + this._itemTmp.anchorX * t,
y: this._itemTmp.y
};

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
if (this._customSize) {
var _ = this._getFixedSize(e);
c = -this._rightGap - (this._itemSize.width + this._columnGap) * (e - _.count) - (_.val + this._columnGap * _.count);
var p = this._customSize[e];
t = p > 0 ? p : this._itemSize.width;
} else {
c = -this._rightGap - (this._itemSize.width + this._columnGap) * e;
t = this._itemSize.width;
}
o = c - t;
if (this.lackCenter) {
var u = this.content.width / 2 - this._allItemSizeNoEdge / 2;
o -= u;
c -= u;
}
return {
id: e,
right: c,
left: o,
x: o + this._itemTmp.anchorX * t,
y: this._itemTmp.y
};
}
break;

case cc.Layout.Type.VERTICAL:
switch (this._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
if (this._customSize) {
var f = this._getFixedSize(e);
n = -this._topGap - (this._itemSize.height + this._lineGap) * (e - f.count) - (f.val + this._lineGap * f.count);
var g = this._customSize[e];
a = n - (i = g > 0 ? g : this._itemSize.height);
} else {
n = -this._topGap - (this._itemSize.height + this._lineGap) * e;
i = this._itemSize.height;
}
a = n - i;
if (this.lackCenter) {
var m = this.content.height / 2 - this._allItemSizeNoEdge / 2;
n -= m;
a -= m;
}
return {
id: e,
top: n,
bottom: a,
x: this._itemTmp.x,
y: a + this._itemTmp.anchorY * i
};

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
if (this._customSize) {
var v = this._getFixedSize(e);
a = this._bottomGap + (this._itemSize.height + this._lineGap) * (e - v.count) + (v.val + this._lineGap * v.count);
var S = this._customSize[e];
i = S > 0 ? S : this._itemSize.height;
} else {
a = this._bottomGap + (this._itemSize.height + this._lineGap) * e;
i = this._itemSize.height;
}
n = a + i;
if (this.lackCenter) {
var C = this.content.height / 2 - this._allItemSizeNoEdge / 2;
n += C;
a += C;
}
return {
id: e,
top: n,
bottom: a,
x: this._itemTmp.x,
y: a + this._itemTmp.anchorY * i
};
}

case cc.Layout.Type.GRID:
var b = Math.floor(e / this._colLineNum);
switch (this._startAxis) {
case cc.Layout.AxisDirection.HORIZONTAL:
switch (this._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
r = (a = (n = -this._topGap - (this._itemSize.height + this._lineGap) * b) - this._itemSize.height) + this._itemTmp.anchorY * this._itemSize.height;
break;

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
n = (a = this._bottomGap + (this._itemSize.height + this._lineGap) * b) + this._itemSize.height;
r = a + this._itemTmp.anchorY * this._itemSize.height;
}
s = this._leftGap + e % this._colLineNum * (this._itemSize.width + this._columnGap);
switch (this._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
s += this._itemTmp.anchorX * this._itemSize.width;
s -= this.content.anchorX * this.content.width;
break;

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
s += (1 - this._itemTmp.anchorX) * this._itemSize.width;
s -= (1 - this.content.anchorX) * this.content.width;
s *= -1;
}
return {
id: e,
top: n,
bottom: a,
x: s,
y: r
};

case cc.Layout.AxisDirection.VERTICAL:
switch (this._horizontalDir) {
case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:
c = (o = this._leftGap + (this._itemSize.width + this._columnGap) * b) + this._itemSize.width;
s = o + this._itemTmp.anchorX * this._itemSize.width;
s -= this.content.anchorX * this.content.width;
break;

case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:
s = (o = (c = -this._rightGap - (this._itemSize.width + this._columnGap) * b) - this._itemSize.width) + this._itemTmp.anchorX * this._itemSize.width;
s += (1 - this.content.anchorX) * this.content.width;
}
r = -this._topGap - e % this._colLineNum * (this._itemSize.height + this._lineGap);
switch (this._verticalDir) {
case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:
r -= (1 - this._itemTmp.anchorY) * this._itemSize.height;
r += (1 - this.content.anchorY) * this.content.height;
break;

case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:
r -= this._itemTmp.anchorY * this._itemSize.height;
r += this.content.anchorY * this.content.height;
r *= -1;
}
return {
id: e,
left: o,
right: c,
x: s,
y: r
};
}
}
},
_calcExistItemPos: function(e) {
var t = this.getItemByListId(e);
if (!t) return null;
var i = {
id: e,
x: t.x,
y: t.y
};
if (this._sizeType) {
i.top = t.y + t.height * (1 - t.anchorY);
i.bottom = t.y - t.height * t.anchorY;
} else {
i.left = t.x - t.width * t.anchorX;
i.right = t.x + t.width * (1 - t.anchorX);
}
return i;
},
getItemPos: function(e) {
return this._virtual ? this._calcItemPos(e) : this.frameByFrameRenderNum ? this._calcItemPos(e) : this._calcExistItemPos(e);
},
_getFixedSize: function(e) {
if (!this._customSize) return null;
null == e && (e = this._numItems);
var t = 0, i = 0;
for (var n in this._customSize) if (parseInt(n) < e) {
t += this._customSize[n];
i++;
}
return {
val: t,
count: i
};
},
_onScrollBegan: function() {
this._beganPos = this._sizeType ? this.viewTop : this.viewLeft;
},
_onScrollEnded: function() {
var e = this;
if (null != e.scrollToListId) {
var t = e.getItemByListId(e.scrollToListId);
e.scrollToListId = null;
t && t.runAction(new cc.sequence(new cc.scaleTo(.1, 1.06), new cc.scaleTo(.1, 1)));
}
e._onScrolling();
e._slideMode != n.ADHERING || e.adhering ? e._slideMode == n.PAGE && (null != e._beganPos ? this._pageAdhere() : e.adhere()) : e.adhere();
},
_onTouchStart: function(e, t) {
if (!this._scrollView.hasNestedViewGroup(e, t) && (e.eventPhase !== cc.Event.AT_TARGET || e.target !== this.node)) {
for (var i = e.target; null == i._listId && i.parent; ) i = i.parent;
this._scrollItem = null != i._listId ? i : e.target;
}
},
_onTouchUp: function() {
var e = this;
e._scrollPos = null;
if (e._slideMode == n.ADHERING) {
e.adhering && (e._adheringBarrier = !0);
e.adhere();
} else e._slideMode == n.PAGE && (null != e._beganPos ? e._pageAdhere() : e.adhere());
this._scrollItem = null;
},
_onTouchCancelled: function(e, t) {
var i = this;
if (!i._scrollView.hasNestedViewGroup(e, t) && !e.simulate) {
i._scrollPos = null;
if (i._slideMode == n.ADHERING) {
i.adhering && (i._adheringBarrier = !0);
i.adhere();
} else i._slideMode == n.PAGE && (null != i._beganPos ? i._pageAdhere() : i.adhere());
this._scrollItem = null;
}
},
_onSizeChanged: function() {
this.checkInited(!1) && this._onScrolling();
},
_onItemAdaptive: function(e) {
var t = this;
if (this.checkInited(!1) && (!this._sizeType && e.width != this._itemSize.width || this._sizeType && e.height != this._itemSize.height)) {
this._customSize || (this._customSize = {});
var i = this._sizeType ? e.height : e.width;
if (this._customSize[e._listId] != i) {
this._customSize[e._listId] = i;
this._resizeContent();
this.content.children.forEach(function(e) {
t._updateItemPos(e);
});
if (!isNaN(this._scrollToListId)) {
this._scrollPos = null;
this.unschedule(this._scrollToSo);
this.scrollTo(this._scrollToListId, Math.max(0, this._scrollToEndTime - new Date().getTime() / 1e3));
}
}
}
},
_pageAdhere: function() {
var e = this;
if (e.cyclic || !(e.elasticTop > 0 || e.elasticRight > 0 || e.elasticBottom > 0 || e.elasticLeft > 0)) {
var t = e._sizeType ? e.viewTop : e.viewLeft, i = (e._sizeType ? e.node.height : e.node.width) * e.pageDistance;
if (Math.abs(e._beganPos - t) > i) switch (e._alignCalcType) {
case 1:
case 4:
e._beganPos > t ? e.prePage(.5) : e.nextPage(.5);
break;

case 2:
case 3:
e._beganPos < t ? e.prePage(.5) : e.nextPage(.5);
} else e.elasticTop <= 0 && e.elasticRight <= 0 && e.elasticBottom <= 0 && e.elasticLeft <= 0 && e.adhere();
e._beganPos = null;
}
},
adhere: function() {
var e = this;
if (e.checkInited() && !(e.elasticTop > 0 || e.elasticRight > 0 || e.elasticBottom > 0 || e.elasticLeft > 0)) {
e.adhering = !0;
e._calcNearestItem();
var t = (e._sizeType ? e._topGap : e._leftGap) / (e._sizeType ? e.node.height : e.node.width);
e.scrollTo(e.nearestListId, .7, t);
}
},
update: function() {
if (!(this.frameByFrameRenderNum <= 0 || this._updateDone)) if (this._virtual) {
for (var e = this._updateCounter + this.frameByFrameRenderNum > this.displayItemNum ? this.displayItemNum : this._updateCounter + this.frameByFrameRenderNum, t = this._updateCounter; t < e; t++) {
var i = this.displayData[t];
i && this._createOrUpdateItem(i);
}
if (this._updateCounter >= this.displayItemNum - 1) if (this._doneAfterUpdate) {
this._updateCounter = 0;
this._updateDone = !1;
this._scrollView.isScrolling() || (this._doneAfterUpdate = !1);
} else {
this._updateDone = !0;
this._delRedundantItem();
this._forceUpdate = !1;
this._calcNearestItem();
this.slideMode == n.PAGE && (this.curPageNum = this.nearestListId);
} else this._updateCounter += this.frameByFrameRenderNum;
} else if (this._updateCounter < this._numItems) {
for (var a = this._updateCounter + this.frameByFrameRenderNum > this._numItems ? this._numItems : this._updateCounter + this.frameByFrameRenderNum, o = this._updateCounter; o < a; o++) this._createOrUpdateItem2(o);
this._updateCounter += this.frameByFrameRenderNum;
} else {
this._updateDone = !0;
this._calcNearestItem();
this.slideMode == n.PAGE && (this.curPageNum = this.nearestListId);
}
},
_createOrUpdateItem: function(e) {
var t = this.getItemByListId(e.id);
if (t) {
if (this._forceUpdate && this.renderEvent) {
t.setPosition(new cc.v2(e.x, e.y));
this._resetItemSize(t);
this.renderEvent && cc.Component.EventHandler.emitEvents([ this.renderEvent ], t, e.id % this._actualNumItems);
}
} else {
var i = this._pool.size() > 0;
if ((t = i ? this._pool.get() : cc.instantiate(this._itemTmp))._listId != e.id) {
t._listId = e.id;
t.setContentSize(this._itemSize);
}
t.setPosition(new cc.v2(e.x, e.y));
this._resetItemSize(t);
this.content.addChild(t);
if (i && this._needUpdateWidget) {
var n = t.getComponent(cc.Widget);
n && n.updateAlignment();
}
t.setSiblingIndex(this.content.childrenCount - 1);
var a = t.getComponent(o);
t.listItem = a;
if (a) {
a._list = this;
a._registerEvent();
}
this.renderEvent && cc.Component.EventHandler.emitEvents([ this.renderEvent ], t, e.id % this._actualNumItems);
}
this._resetItemSize(t);
this._updateListItem(t.listItem);
this._lastDisplayData.indexOf(e.id) < 0 && this._lastDisplayData.push(e.id);
},
_createOrUpdateItem2: function(e) {
var t = this.content.children[e];
if (t) {
if (this._forceUpdate && this.renderEvent) {
t._listId = e;
this.renderEvent && cc.Component.EventHandler.emitEvents([ this.renderEvent ], t, e);
}
} else {
(t = cc.instantiate(this._itemTmp))._listId = e;
this.content.addChild(t);
var i = t.getComponent(o);
t.listItem = i;
if (i) {
i._list = this;
i._registerEvent();
}
this.renderEvent && cc.Component.EventHandler.emitEvents([ this.renderEvent ], t, e);
}
this._updateListItem(t.listItem);
this._lastDisplayData.indexOf(e) < 0 && this._lastDisplayData.push(e);
},
_updateListItem: function(e) {
if (e && this.selectedMode > a.NONE) switch (this.selectedMode) {
case a.SINGLE:
e.selected = this.selectedId == e.node._listId;
break;

case a.MULT:
e.selected = this.multSelected.indexOf(e.node._listId) >= 0;
}
},
_resetItemSize: function() {},
_updateItemPos: function(e) {
var t = isNaN(e) ? e : this.getItemByListId(e), i = this.getItemPos(t._listId);
t.setPosition(i.x, i.y);
},
setMultSelected: function(e, t) {
var i = this;
if (i.checkInited()) {
Array.isArray(e) || (e = [ e ]);
if (null == t) i.multSelected = e; else {
var n, a;
if (t) for (var o = e.length - 1; o >= 0; o--) {
n = e[o];
(a = i.multSelected.indexOf(n)) < 0 && i.multSelected.push(n);
} else for (var c = e.length - 1; c >= 0; c--) {
n = e[c];
(a = i.multSelected.indexOf(n)) >= 0 && i.multSelected.splice(a, 1);
}
}
i._forceUpdate = !0;
i._onScrolling();
}
},
updateItem: function(e) {
if (this.checkInited()) {
Array.isArray(e) || (e = [ e ]);
for (var t = 0, i = e.length; t < i; t++) {
var n = e[t], a = this.getItemByListId(n);
a && cc.Component.EventHandler.emitEvents([ this.renderEvent ], a, n % this._actualNumItems);
}
}
},
updateAll: function() {
this.checkInited() && (this.numItems = this.numItems);
},
getItemByListId: function(e) {
for (var t = this.content.childrenCount - 1; t >= 0; t--) if (this.content.children[t]._listId == e) return this.content.children[t];
},
_getOutsideItem: function() {
for (var e, t, i = [], n = this.content.childrenCount - 1; n >= 0; n--) {
e = this.content.children[n];
if (t = !0) for (var a = this.displayItemNum - 1; a >= 0; a--) if (this.displayData[a]) {
var o = this.displayData[a].id;
if (e._listId == o) {
t = !1;
break;
}
}
t && i.push(e);
}
return i;
},
_delRedundantItem: function() {
if (this._virtual) for (var e = this._getOutsideItem(), t = e.length - 1; t >= 0; t--) {
var i = e[t];
this._scrollItem && i._listId == this._scrollItem._listId || this._pool.put(i);
} else for (;this.content.childrenCount > this._numItems; ) this._delSingleItem(this.content.children[this.content.childrenCount - 1]);
},
_delSingleItem: function(e) {
e.removeFromParent();
e.destroy && e.destroy();
e = null;
},
aniDelItem: function(e, t, i) {
var n = this;
if (!n.checkInited() || n.cyclic || !n._virtual) return cc.error("This function is not allowed to be called!");
if (n._aniDelRuning) return cc.warn("Please wait for the current deletion to finish!");
var o = n.getItemByListId(e);
if (o) {
n._aniDelRuning = !0;
var c = n.displayData[n.displayData.length - 1].id, s = o.listItem.selected;
o.listItem.showAni(i, function() {
var i;
c < n._numItems - 2 && (i = c + 1);
if (null != i) {
var r = n._calcItemPos(i);
n.displayData.push(r);
n._virtual ? n._createOrUpdateItem(r) : n._createOrUpdateItem2(i);
} else n._numItems--;
if (n.selectedMode == a.SINGLE) s ? n._selectedId = -1 : n._selectedId - 1 >= 0 && n._selectedId--; else if (n.selectedMode == a.MULT && n.multSelected.length) {
var l = n.multSelected.indexOf(e);
l >= 0 && n.multSelected.splice(l, 1);
for (var d = n.multSelected.length - 1; d >= 0; d--) n.multSelected[d] >= e && n.multSelected[d]--;
}
if (n._customSize) {
n._customSize[e] && delete n._customSize[e];
var h, _ = {};
for (var p in n._customSize) {
h = n._customSize[p];
_[(p = parseInt(p)) - (p >= e ? 1 : 0)] = h;
}
n._customSize = _;
}
for (var u, f, g = null != i ? i : c; g >= e + 1; g--) if (o = n.getItemByListId(g)) {
var m = n._calcItemPos(g - 1);
u = [ new cc.moveTo(.2333, new cc.v2(m.x, m.y)) ];
if (g <= e + 1) {
f = !0;
u.push(new cc.CallFunc(function() {
n._aniDelRuning = !1;
t(e);
}));
}
u.length > 1 ? o.runAction(new cc.Sequence(u)) : o.runAction(u[0]);
}
if (!f) {
n._aniDelRuning = !1;
t(e);
}
}, !0);
} else t(e);
},
scrollTo: function(e, t, i, n) {
var a = this;
if (a.checkInited()) {
null == t ? t = .5 : t < 0 && (t = 0);
e < 0 ? e = 0 : e >= a._numItems && (e = a._numItems - 1);
!a._virtual && a._layout && a._layout.enabled && a._layout.updateLayout();
var o, c, s = a.getItemPos(e);
switch (a._alignCalcType) {
case 1:
o = s.left;
o -= null != i ? a.node.width * i : a._leftGap;
s = new cc.v2(o, 0);
break;

case 2:
o = s.right - a.node.width;
o += null != i ? a.node.width * i : a._rightGap;
s = new cc.v2(o + a.content.width, 0);
break;

case 3:
c = s.top;
c += null != i ? a.node.height * i : a._topGap;
s = new cc.v2(0, -c);
break;

case 4:
c = s.bottom + a.node.height;
c -= null != i ? a.node.height * i : a._bottomGap;
s = new cc.v2(0, -c + a.content.height);
}
var r = a.content.getPosition();
r = Math.abs(a._sizeType ? r.y : r.x);
var l = a._sizeType ? s.y : s.x;
if (Math.abs((null != a._scrollPos ? a._scrollPos : r) - l) > .5) {
a._scrollPos = l;
a._scrollToListId = e;
a._scrollToEndTime = new Date().getTime() / 1e3 + t;
a._scrollView.scrollToOffset(s, t);
a._scrollToSo = a.scheduleOnce(function() {
a._adheringBarrier || (a.adhering = a._adheringBarrier = !1);
a._scrollPos = a._scrollToListId = a._scrollToEndTime = a._scrollToSo = null;
if (n) {
var t = a.getItemByListId(e);
t && t.runAction(new cc.sequence(new cc.scaleTo(.1, 1.05), new cc.scaleTo(.1, 1)));
}
}, t + .1);
t <= 0 && a._onScrolling();
}
}
},
_calcNearestItem: function() {
var e, t, i, n, a, o, c = this;
c.nearestListId = null;
c._virtual && c._calcViewPos();
i = c.viewTop;
n = c.viewRight;
a = c.viewBottom;
o = c.viewLeft;
for (var s = !1, r = 0; r < c.content.childrenCount && !s; r += c._colLineNum) if (e = this._virtual ? this.displayData[r] : this._calcExistItemPos(r)) {
t = this._sizeType ? (e.top + e.bottom) / 2 : t = (e.left + e.right) / 2;
switch (this._alignCalcType) {
case 1:
if (e.right >= o) {
this.nearestListId = e.id;
o > t && (this.nearestListId += this._colLineNum);
s = !0;
}
break;

case 2:
if (e.left <= n) {
this.nearestListId = e.id;
n < t && (this.nearestListId += this._colLineNum);
s = !0;
}
break;

case 3:
if (e.bottom <= i) {
this.nearestListId = e.id;
i < t && (this.nearestListId += this._colLineNum);
s = !0;
}
break;

case 4:
if (e.top >= a) {
this.nearestListId = e.id;
a > t && (this.nearestListId += this._colLineNum);
s = !0;
}
}
}
if ((e = this._virtual ? this.displayData[this.displayItemNum - 1] : this._calcExistItemPos(this._numItems - 1)) && e.id == c._numItems - 1) {
t = c._sizeType ? (e.top + e.bottom) / 2 : t = (e.left + e.right) / 2;
switch (c._alignCalcType) {
case 1:
n > t && (c.nearestListId = e.id);
break;

case 2:
o < t && (c.nearestListId = e.id);
break;

case 3:
a < t && (c.nearestListId = e.id);
break;

case 4:
i > t && (c.nearestListId = e.id);
}
}
},
prePage: function(e) {
if (this.checkInited()) {
null == e && (e = .5);
this.skipPage(this.curPageNum - 1, e);
}
},
nextPage: function(e) {
if (this.checkInited()) {
null == e && (e = .5);
this.skipPage(this.curPageNum + 1, e);
}
},
skipPage: function(e, t) {
var i = this;
if (i.checkInited()) {
if (i._slideMode != n.PAGE) return cc.error("This function is not allowed to be called, Must SlideMode = PAGE!");
if (!(e < 0 || e >= i._numItems) && i.curPageNum != e) {
i.curPageNum = e;
i.pageChangeEvent && cc.Component.EventHandler.emitEvents([ i.pageChangeEvent ], e);
i.scrollTo(e, t);
}
}
},
calcCustomSize: function(e) {
var t = this;
if (t.checkInited()) {
if (!t._itemTmp) return cc.error("Unset template item!");
if (!t.renderEvent) return cc.error("Unset Render-Event!");
t._customSize = {};
var i = cc.instantiate(t._itemTmp);
t.content.addChild(i);
for (var n = 0; n < e; n++) {
cc.Component.EventHandler.emitEvents([ t.renderEvent ], i, n);
i.height == t._itemSize.height && i.width == t._itemSize.width || (t._customSize[n] = t._sizeType ? i.height : i.width);
}
Object.keys(t._customSize).length || (t._customSize = null);
i.removeFromParent();
i.destroy && i.destroy();
return t._customSize;
}
}
});
cc._RF.pop();
}, {
ListItem: "ListItem"
} ],
LoadingTip: [ function(e, t) {
"use strict";
cc._RF.push(t, "5ee7d9cnTlKdptplZ2oUA8z", "LoadingTip");
cc.Class({
extends: cc.Component,
properties: {
node_loading: cc.Node,
lbl_tips: cc.Label,
_isLongShow: !1
},
onLoad: function() {
this.lbl_tips.node.active = !1;
this.node_loading.active = !1;
this.node.position = Global.centerPos;
this.node.active = !1;
cc.vv.LoadingTip = this;
},
start: function() {
this.playNetTipAni();
},
onEnable: function() {
this.node.x = cc.winSize.width / 2;
this.node.y = cc.winSize.height / 2;
this.node.scale = 1;
Global.FixDesignScale_V(this.node);
},
showAndClose: function(e) {
var t = this;
if (e && "string" == typeof e) {
this.node_loading.active = !0;
this.lbl_tips.string = e;
this.lbl_tips.node.active = !0;
} else this.node_loading.active = !0;
this.scheduleOnce(function() {
t.hide(!1, !0);
}, 20);
},
show: function(e, t) {
var i = this;
if (!this._isLongShow && !this.node.active) {
this.node.active = !0;
cc.find("net_tip", this.node).active = !1;
this._isLongShow = t;
var n = cc.find("shield_touch", this.node);
n && (n.active = this._isLongShow);
if (e && "string" == typeof e) {
this.node_loading.active = !0;
this.lbl_tips.string = e;
this.lbl_tips.node.active = !0;
} else {
this.scheduleOnce(function() {
cc.isValid(i.node_loading) && (i.node_loading.active = !0);
}, 2);
if (this._isLongShow) return;
this.scheduleOnce(function() {
i.hide();
}, 20);
}
}
},
showNetErrorTip: function(e) {
if (!this.node.active) {
this.node.active = !0;
var t = cc.find("net_tip", this.node);
t.active = !1;
cc.find("shield_touch", this.node).active = !1;
var i = function() {
t.active = !0;
};
e ? this.scheduleOnce(i, 2) : i();
}
},
hide: function(e, t) {
var i = this;
this.unscheduleAllCallbacks();
var n = function() {
if (!i._isLongShow || t) {
i._isLongShow = !1;
i.node.active = !1;
i.lbl_tips.node.active = !1;
i.node_loading.active = !1;
}
};
e ? this.node.runAction(cc.sequence(cc.delayTime(e), cc.callFunc(n))) : n();
},
playNetTipAni: function() {
this._showByIdx(0, !1);
this._bstartAni = !0;
this._interVal = 0;
this._nCount = 0;
},
_showByIdx: function(e, t) {
var i = cc.find("net_tip", this.node);
if (i) if (0 == e) for (var n = 0; n < 3; n++) {
var a = cc.find("net_" + (n + 1), i);
a && (a.active = t);
} else {
var o = cc.find("net_" + e, i);
o && (o.active = t);
}
},
update: function(e) {
if (this._bstartAni) {
this._interVal += e;
if (this._interVal > .5) {
this._interVal = 0;
this._nCount += 1;
var t = this._nCount % 4;
this._showByIdx(t, 0 != t);
}
}
}
});
cc._RF.pop();
}, {} ],
Logo: [ function(e, t) {
"use strict";
cc._RF.push(t, "30ecc8MkAVKl5esV8z0/DAI", "Logo");
cc.Class({
extends: cc.Component,
properties: {
audio_clip: {
default: null,
type: cc.AudioClip
},
_nClickCount: 0
},
onLoad: function() {
cc.sys.localStorage.removeItem("screen_log");
cc.find("DebugBtn", this.node).on("click", this.onClickBg, this);
},
onDestroy: function() {
this.current && cc.audioEngine.stop(this.current);
},
start: function() {
this.preloadLaunchScene();
this.playLogoAni();
},
onClickBg: function() {
this._nClickCount = this._nClickCount || 0;
this._nClickCount++;
if (this._nClickCount > 7) {
var e = cc.sys.localStorage.getItem("screen_log");
if (e) {
e = 0;
cc.sys.localStorage.removeItem("screen_log");
} else {
e = 1;
cc.sys.localStorage.setItem("screen_log", e);
}
}
},
preloadLaunchScene: function() {
var e = this;
cc.director.preloadScene("Launch_BC", function(t) {
t || (e._loadSceneSucc = !0);
});
},
playLogoAni: function() {
var e = this;
this.current = cc.audioEngine.play(this.audio_clip, !1, 1);
cc.tween(this.node).delay(2.8).call(function() {
e._playLogoAniSucc = !0;
}).start();
},
startChangeScene: function() {
cc.director.loadScene("Launch_BC");
},
_hideNativeSplash: function() {
cc.sys.os, cc.sys.OS_ANDROID;
},
update: function() {
if (this._loadSceneSucc && this._playLogoAniSucc) {
if (this._bStartChange) return;
this._bStartChange = !0;
this.startChangeScene();
}
}
});
cc._RF.pop();
}, {} ],
LongTouchCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "53f39wbZARP0Li4lADfJnbF", "LongTouchCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.touchTime = 2;
t.callback = null;
return t;
}
t.prototype.onLoad = function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);
};
t.prototype.setCallback = function(e) {
this.callback = e;
};
t.prototype.onTouchStart = function() {
this.unscheduleAllCallbacks();
this.scheduleOnce(this.onTimeOut, this.touchTime);
};
t.prototype.onTouchMove = function() {};
t.prototype.onTouchEnd = function() {
this.unscheduleAllCallbacks();
};
t.prototype.onTimeOut = function() {
this.callback && this.callback();
};
__decorate([ o ], t.prototype, "touchTime", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
LoopPageView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "869ce4O9GpLKbosmPM8uzik", "LoopPageView");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = (n.property, n.requireComponent), c = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
this.pageView = this.getComponent(cc.PageView);
for (var e = this.pageView.getPages(), t = 0, i = e; t < i.length; t++) {
var n = i[t];
this.pageView.addPage(cc.instantiate(n));
}
for (var a = 0, o = e; a < o.length; a++) {
n = o[a];
this.pageView.addPage(cc.instantiate(n));
}
this.pageView.node.on("page-end", function(e) {
cc.log(e.getCurrentPageIndex());
0 == e.getCurrentPageIndex() || (e.getCurrentPageIndex(), e.getPages().length);
});
};
t.prototype.nextPage = function() {
var e = this.pageView.getCurrentPageIndex();
this.pageView.scrollToPage(++e, 1);
};
return __decorate([ a, o(cc.PageView) ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
MD5: [ function(require, module, exports) {
(function(process, global) {
"use strict";
cc._RF.push(module, "d4a884fYKpFcqtQlsR6ZGrp", "MD5");
(function() {
var ERROR = "input is invalid type", WINDOW = "object" == typeof window, root = WINDOW ? window : {};
root.JS_MD5_NO_WINDOW && (WINDOW = !1);
var WEB_WORKER = !WINDOW && "object" == typeof self, NODE_JS = !root.JS_MD5_NO_NODE_JS && "object" == typeof process && process.versions && process.versions.node;
NODE_JS ? root = global : WEB_WORKER && (root = self);
var COMMON_JS = !root.JS_MD5_NO_COMMON_JS && "object" == typeof module && module.exports, AMD = "function" == typeof define && define.amd, ARRAY_BUFFER = !root.JS_MD5_NO_ARRAY_BUFFER && "undefined" != typeof ArrayBuffer, HEX_CHARS = "0123456789abcdef".split(""), EXTRA = [ 128, 32768, 8388608, -2147483648 ], SHIFT = [ 0, 8, 16, 24 ], OUTPUT_TYPES = [ "hex", "array", "digest", "buffer", "arrayBuffer", "base64" ], BASE64_ENCODE_CHAR = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split(""), blocks = [], buffer8;
if (ARRAY_BUFFER) {
var buffer = new ArrayBuffer(68);
buffer8 = new Uint8Array(buffer);
blocks = new Uint32Array(buffer);
}
!root.JS_MD5_NO_NODE_JS && Array.isArray || (Array.isArray = function(e) {
return "[object Array]" === Object.prototype.toString.call(e);
});
!ARRAY_BUFFER || !root.JS_MD5_NO_ARRAY_BUFFER_IS_VIEW && ArrayBuffer.isView || (ArrayBuffer.isView = function(e) {
return "object" == typeof e && e.buffer && e.buffer.constructor === ArrayBuffer;
});
var createOutputMethod = function(e) {
return function(t) {
return new Md5(!0).update(t)[e]();
};
}, createMethod = function() {
var e = createOutputMethod("hex");
NODE_JS && (e = nodeWrap(e));
e.create = function() {
return new Md5();
};
e.update = function(t) {
return e.create().update(t);
};
for (var t = 0; t < OUTPUT_TYPES.length; ++t) {
var i = OUTPUT_TYPES[t];
e[i] = createOutputMethod(i);
}
return e;
}, nodeWrap = function nodeWrap(method) {
var crypto = eval("require('crypto')"), Buffer = eval("require('buffer').Buffer"), nodeMethod = function(e) {
if ("string" == typeof e) return crypto.createHash("md5").update(e, "utf8").digest("hex");
if (null == e) throw ERROR;
e.constructor === ArrayBuffer && (e = new Uint8Array(e));
return Array.isArray(e) || ArrayBuffer.isView(e) || e.constructor === Buffer ? crypto.createHash("md5").update(new Buffer(e)).digest("hex") : method(e);
};
return nodeMethod;
};
function Md5(e) {
if (e) {
blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
this.blocks = blocks;
this.buffer8 = buffer8;
} else if (ARRAY_BUFFER) {
var t = new ArrayBuffer(68);
this.buffer8 = new Uint8Array(t);
this.blocks = new Uint32Array(t);
} else this.blocks = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];
this.h0 = this.h1 = this.h2 = this.h3 = this.start = this.bytes = this.hBytes = 0;
this.finalized = this.hashed = !1;
this.first = !0;
}
Md5.prototype.update = function(e) {
if (!this.finalized) {
var t, i = typeof e;
if ("string" !== i) {
if ("object" !== i) throw ERROR;
if (null === e) throw ERROR;
if (ARRAY_BUFFER && e.constructor === ArrayBuffer) e = new Uint8Array(e); else if (!(Array.isArray(e) || ARRAY_BUFFER && ArrayBuffer.isView(e))) throw ERROR;
t = !0;
}
for (var n, a, o = 0, c = e.length, s = this.blocks, r = this.buffer8; o < c; ) {
if (this.hashed) {
this.hashed = !1;
s[0] = s[16];
s[16] = s[1] = s[2] = s[3] = s[4] = s[5] = s[6] = s[7] = s[8] = s[9] = s[10] = s[11] = s[12] = s[13] = s[14] = s[15] = 0;
}
if (t) if (ARRAY_BUFFER) for (a = this.start; o < c && a < 64; ++o) r[a++] = e[o]; else for (a = this.start; o < c && a < 64; ++o) s[a >> 2] |= e[o] << SHIFT[3 & a++]; else if (ARRAY_BUFFER) for (a = this.start; o < c && a < 64; ++o) if ((n = e.charCodeAt(o)) < 128) r[a++] = n; else if (n < 2048) {
r[a++] = 192 | n >> 6;
r[a++] = 128 | 63 & n;
} else if (n < 55296 || n >= 57344) {
r[a++] = 224 | n >> 12;
r[a++] = 128 | n >> 6 & 63;
r[a++] = 128 | 63 & n;
} else {
n = 65536 + ((1023 & n) << 10 | 1023 & e.charCodeAt(++o));
r[a++] = 240 | n >> 18;
r[a++] = 128 | n >> 12 & 63;
r[a++] = 128 | n >> 6 & 63;
r[a++] = 128 | 63 & n;
} else for (a = this.start; o < c && a < 64; ++o) if ((n = e.charCodeAt(o)) < 128) s[a >> 2] |= n << SHIFT[3 & a++]; else if (n < 2048) {
s[a >> 2] |= (192 | n >> 6) << SHIFT[3 & a++];
s[a >> 2] |= (128 | 63 & n) << SHIFT[3 & a++];
} else if (n < 55296 || n >= 57344) {
s[a >> 2] |= (224 | n >> 12) << SHIFT[3 & a++];
s[a >> 2] |= (128 | n >> 6 & 63) << SHIFT[3 & a++];
s[a >> 2] |= (128 | 63 & n) << SHIFT[3 & a++];
} else {
n = 65536 + ((1023 & n) << 10 | 1023 & e.charCodeAt(++o));
s[a >> 2] |= (240 | n >> 18) << SHIFT[3 & a++];
s[a >> 2] |= (128 | n >> 12 & 63) << SHIFT[3 & a++];
s[a >> 2] |= (128 | n >> 6 & 63) << SHIFT[3 & a++];
s[a >> 2] |= (128 | 63 & n) << SHIFT[3 & a++];
}
this.lastByteIndex = a;
this.bytes += a - this.start;
if (a >= 64) {
this.start = a - 64;
this.hash();
this.hashed = !0;
} else this.start = a;
}
if (this.bytes > 4294967295) {
this.hBytes += this.bytes / 4294967296 << 0;
this.bytes = this.bytes % 4294967296;
}
return this;
}
};
Md5.prototype.finalize = function() {
if (!this.finalized) {
this.finalized = !0;
var e = this.blocks, t = this.lastByteIndex;
e[t >> 2] |= EXTRA[3 & t];
if (t >= 56) {
this.hashed || this.hash();
e[0] = e[16];
e[16] = e[1] = e[2] = e[3] = e[4] = e[5] = e[6] = e[7] = e[8] = e[9] = e[10] = e[11] = e[12] = e[13] = e[14] = e[15] = 0;
}
e[14] = this.bytes << 3;
e[15] = this.hBytes << 3 | this.bytes >>> 29;
this.hash();
}
};
Md5.prototype.hash = function() {
var e, t, i, n, a, o, c = this.blocks;
if (this.first) t = ((t = ((e = ((e = c[0] - 680876937) << 7 | e >>> 25) - 271733879 << 0) ^ (i = ((i = (-271733879 ^ (n = ((n = (-1732584194 ^ 2004318071 & e) + c[1] - 117830708) << 12 | n >>> 20) + e << 0) & (-271733879 ^ e)) + c[2] - 1126478375) << 17 | i >>> 15) + n << 0) & (n ^ e)) + c[3] - 1316259209) << 22 | t >>> 10) + i << 0; else {
e = this.h0;
t = this.h1;
i = this.h2;
t = ((t += ((e = ((e += ((n = this.h3) ^ t & (i ^ n)) + c[0] - 680876936) << 7 | e >>> 25) + t << 0) ^ (i = ((i += (t ^ (n = ((n += (i ^ e & (t ^ i)) + c[1] - 389564586) << 12 | n >>> 20) + e << 0) & (e ^ t)) + c[2] + 606105819) << 17 | i >>> 15) + n << 0) & (n ^ e)) + c[3] - 1044525330) << 22 | t >>> 10) + i << 0;
}
t = ((t += ((e = ((e += (n ^ t & (i ^ n)) + c[4] - 176418897) << 7 | e >>> 25) + t << 0) ^ (i = ((i += (t ^ (n = ((n += (i ^ e & (t ^ i)) + c[5] + 1200080426) << 12 | n >>> 20) + e << 0) & (e ^ t)) + c[6] - 1473231341) << 17 | i >>> 15) + n << 0) & (n ^ e)) + c[7] - 45705983) << 22 | t >>> 10) + i << 0;
t = ((t += ((e = ((e += (n ^ t & (i ^ n)) + c[8] + 1770035416) << 7 | e >>> 25) + t << 0) ^ (i = ((i += (t ^ (n = ((n += (i ^ e & (t ^ i)) + c[9] - 1958414417) << 12 | n >>> 20) + e << 0) & (e ^ t)) + c[10] - 42063) << 17 | i >>> 15) + n << 0) & (n ^ e)) + c[11] - 1990404162) << 22 | t >>> 10) + i << 0;
t = ((t += ((e = ((e += (n ^ t & (i ^ n)) + c[12] + 1804603682) << 7 | e >>> 25) + t << 0) ^ (i = ((i += (t ^ (n = ((n += (i ^ e & (t ^ i)) + c[13] - 40341101) << 12 | n >>> 20) + e << 0) & (e ^ t)) + c[14] - 1502002290) << 17 | i >>> 15) + n << 0) & (n ^ e)) + c[15] + 1236535329) << 22 | t >>> 10) + i << 0;
t = ((t += ((n = ((n += (t ^ i & ((e = ((e += (i ^ n & (t ^ i)) + c[1] - 165796510) << 5 | e >>> 27) + t << 0) ^ t)) + c[6] - 1069501632) << 9 | n >>> 23) + e << 0) ^ e & ((i = ((i += (e ^ t & (n ^ e)) + c[11] + 643717713) << 14 | i >>> 18) + n << 0) ^ n)) + c[0] - 373897302) << 20 | t >>> 12) + i << 0;
t = ((t += ((n = ((n += (t ^ i & ((e = ((e += (i ^ n & (t ^ i)) + c[5] - 701558691) << 5 | e >>> 27) + t << 0) ^ t)) + c[10] + 38016083) << 9 | n >>> 23) + e << 0) ^ e & ((i = ((i += (e ^ t & (n ^ e)) + c[15] - 660478335) << 14 | i >>> 18) + n << 0) ^ n)) + c[4] - 405537848) << 20 | t >>> 12) + i << 0;
t = ((t += ((n = ((n += (t ^ i & ((e = ((e += (i ^ n & (t ^ i)) + c[9] + 568446438) << 5 | e >>> 27) + t << 0) ^ t)) + c[14] - 1019803690) << 9 | n >>> 23) + e << 0) ^ e & ((i = ((i += (e ^ t & (n ^ e)) + c[3] - 187363961) << 14 | i >>> 18) + n << 0) ^ n)) + c[8] + 1163531501) << 20 | t >>> 12) + i << 0;
t = ((t += ((n = ((n += (t ^ i & ((e = ((e += (i ^ n & (t ^ i)) + c[13] - 1444681467) << 5 | e >>> 27) + t << 0) ^ t)) + c[2] - 51403784) << 9 | n >>> 23) + e << 0) ^ e & ((i = ((i += (e ^ t & (n ^ e)) + c[7] + 1735328473) << 14 | i >>> 18) + n << 0) ^ n)) + c[12] - 1926607734) << 20 | t >>> 12) + i << 0;
t = ((t += ((o = (n = ((n += ((a = t ^ i) ^ (e = ((e += (a ^ n) + c[5] - 378558) << 4 | e >>> 28) + t << 0)) + c[8] - 2022574463) << 11 | n >>> 21) + e << 0) ^ e) ^ (i = ((i += (o ^ t) + c[11] + 1839030562) << 16 | i >>> 16) + n << 0)) + c[14] - 35309556) << 23 | t >>> 9) + i << 0;
t = ((t += ((o = (n = ((n += ((a = t ^ i) ^ (e = ((e += (a ^ n) + c[1] - 1530992060) << 4 | e >>> 28) + t << 0)) + c[4] + 1272893353) << 11 | n >>> 21) + e << 0) ^ e) ^ (i = ((i += (o ^ t) + c[7] - 155497632) << 16 | i >>> 16) + n << 0)) + c[10] - 1094730640) << 23 | t >>> 9) + i << 0;
t = ((t += ((o = (n = ((n += ((a = t ^ i) ^ (e = ((e += (a ^ n) + c[13] + 681279174) << 4 | e >>> 28) + t << 0)) + c[0] - 358537222) << 11 | n >>> 21) + e << 0) ^ e) ^ (i = ((i += (o ^ t) + c[3] - 722521979) << 16 | i >>> 16) + n << 0)) + c[6] + 76029189) << 23 | t >>> 9) + i << 0;
t = ((t += ((o = (n = ((n += ((a = t ^ i) ^ (e = ((e += (a ^ n) + c[9] - 640364487) << 4 | e >>> 28) + t << 0)) + c[12] - 421815835) << 11 | n >>> 21) + e << 0) ^ e) ^ (i = ((i += (o ^ t) + c[15] + 530742520) << 16 | i >>> 16) + n << 0)) + c[2] - 995338651) << 23 | t >>> 9) + i << 0;
t = ((t += ((n = ((n += (t ^ ((e = ((e += (i ^ (t | ~n)) + c[0] - 198630844) << 6 | e >>> 26) + t << 0) | ~i)) + c[7] + 1126891415) << 10 | n >>> 22) + e << 0) ^ ((i = ((i += (e ^ (n | ~t)) + c[14] - 1416354905) << 15 | i >>> 17) + n << 0) | ~e)) + c[5] - 57434055) << 21 | t >>> 11) + i << 0;
t = ((t += ((n = ((n += (t ^ ((e = ((e += (i ^ (t | ~n)) + c[12] + 1700485571) << 6 | e >>> 26) + t << 0) | ~i)) + c[3] - 1894986606) << 10 | n >>> 22) + e << 0) ^ ((i = ((i += (e ^ (n | ~t)) + c[10] - 1051523) << 15 | i >>> 17) + n << 0) | ~e)) + c[1] - 2054922799) << 21 | t >>> 11) + i << 0;
t = ((t += ((n = ((n += (t ^ ((e = ((e += (i ^ (t | ~n)) + c[8] + 1873313359) << 6 | e >>> 26) + t << 0) | ~i)) + c[15] - 30611744) << 10 | n >>> 22) + e << 0) ^ ((i = ((i += (e ^ (n | ~t)) + c[6] - 1560198380) << 15 | i >>> 17) + n << 0) | ~e)) + c[13] + 1309151649) << 21 | t >>> 11) + i << 0;
t = ((t += ((n = ((n += (t ^ ((e = ((e += (i ^ (t | ~n)) + c[4] - 145523070) << 6 | e >>> 26) + t << 0) | ~i)) + c[11] - 1120210379) << 10 | n >>> 22) + e << 0) ^ ((i = ((i += (e ^ (n | ~t)) + c[2] + 718787259) << 15 | i >>> 17) + n << 0) | ~e)) + c[9] - 343485551) << 21 | t >>> 11) + i << 0;
if (this.first) {
this.h0 = e + 1732584193 << 0;
this.h1 = t - 271733879 << 0;
this.h2 = i - 1732584194 << 0;
this.h3 = n + 271733878 << 0;
this.first = !1;
} else {
this.h0 = this.h0 + e << 0;
this.h1 = this.h1 + t << 0;
this.h2 = this.h2 + i << 0;
this.h3 = this.h3 + n << 0;
}
};
Md5.prototype.hex = function() {
this.finalize();
var e = this.h0, t = this.h1, i = this.h2, n = this.h3;
return HEX_CHARS[e >> 4 & 15] + HEX_CHARS[15 & e] + HEX_CHARS[e >> 12 & 15] + HEX_CHARS[e >> 8 & 15] + HEX_CHARS[e >> 20 & 15] + HEX_CHARS[e >> 16 & 15] + HEX_CHARS[e >> 28 & 15] + HEX_CHARS[e >> 24 & 15] + HEX_CHARS[t >> 4 & 15] + HEX_CHARS[15 & t] + HEX_CHARS[t >> 12 & 15] + HEX_CHARS[t >> 8 & 15] + HEX_CHARS[t >> 20 & 15] + HEX_CHARS[t >> 16 & 15] + HEX_CHARS[t >> 28 & 15] + HEX_CHARS[t >> 24 & 15] + HEX_CHARS[i >> 4 & 15] + HEX_CHARS[15 & i] + HEX_CHARS[i >> 12 & 15] + HEX_CHARS[i >> 8 & 15] + HEX_CHARS[i >> 20 & 15] + HEX_CHARS[i >> 16 & 15] + HEX_CHARS[i >> 28 & 15] + HEX_CHARS[i >> 24 & 15] + HEX_CHARS[n >> 4 & 15] + HEX_CHARS[15 & n] + HEX_CHARS[n >> 12 & 15] + HEX_CHARS[n >> 8 & 15] + HEX_CHARS[n >> 20 & 15] + HEX_CHARS[n >> 16 & 15] + HEX_CHARS[n >> 28 & 15] + HEX_CHARS[n >> 24 & 15];
};
Md5.prototype.toString = Md5.prototype.hex;
Md5.prototype.digest = function() {
this.finalize();
var e = this.h0, t = this.h1, i = this.h2, n = this.h3;
return [ 255 & e, e >> 8 & 255, e >> 16 & 255, e >> 24 & 255, 255 & t, t >> 8 & 255, t >> 16 & 255, t >> 24 & 255, 255 & i, i >> 8 & 255, i >> 16 & 255, i >> 24 & 255, 255 & n, n >> 8 & 255, n >> 16 & 255, n >> 24 & 255 ];
};
Md5.prototype.array = Md5.prototype.digest;
Md5.prototype.arrayBuffer = function() {
this.finalize();
var e = new ArrayBuffer(16), t = new Uint32Array(e);
t[0] = this.h0;
t[1] = this.h1;
t[2] = this.h2;
t[3] = this.h3;
return e;
};
Md5.prototype.buffer = Md5.prototype.arrayBuffer;
Md5.prototype.base64 = function() {
for (var e, t, i, n = "", a = this.array(), o = 0; o < 15; ) {
e = a[o++];
t = a[o++];
i = a[o++];
n += BASE64_ENCODE_CHAR[e >>> 2] + BASE64_ENCODE_CHAR[63 & (e << 4 | t >>> 4)] + BASE64_ENCODE_CHAR[63 & (t << 2 | i >>> 6)] + BASE64_ENCODE_CHAR[63 & i];
}
e = a[o];
return n + (BASE64_ENCODE_CHAR[e >>> 2] + BASE64_ENCODE_CHAR[e << 4 & 63] + "==");
};
var exports = createMethod();
if (COMMON_JS) module.exports = exports; else {
root.md5 = exports;
AMD && define(function() {
return exports;
});
}
})();
cc._RF.pop();
}).call(this, require("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
}, {
_process: 2
} ],
MaskProgress: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "844bb39AwZBGLhrJap51U1/", "MaskProgress");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = n.executeInEditMode, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bar = null;
t._percent = 0;
return t;
}
Object.defineProperty(t.prototype, "percent", {
get: function() {
return this._percent;
},
set: function(e) {
if (this._percent != e) {
this._percent = e;
this.updateView();
}
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
this.updateView();
};
t.prototype.updateView = function(e, t) {
void 0 === e && (e = !1);
void 0 === t && (t = .5);
if (this.bar) {
var i = this.percent * this.bar.width;
e ? cc.tween(this.bar).to(t, {
x: i
}).start() : this.bar.x = i;
} else cc.log("未绑定bar节点");
};
t.prototype.toPercent = function(e, t) {
void 0 === t && (t = .5);
this._percent = e;
this.updateView(!0);
};
__decorate([ o(cc.Node) ], t.prototype, "bar", void 0);
__decorate([ o() ], t.prototype, "_percent", void 0);
__decorate([ o({
type: cc.Float,
range: [ 0, 1, .1 ],
slide: !0
}) ], t.prototype, "percent", null);
return __decorate([ a, c ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {} ],
Md5: [ function(e, t) {
"use strict";
cc._RF.push(t, "cf119bz6SlOELlpweyrZmfc", "Md5");
t.exports = function(e) {
function t(e, t, i) {
return e & t | ~e & i;
}
function i(e, t, i) {
return i & e | ~i & t;
}
function n(e, t, i) {
return e ^ t ^ i;
}
function a(e, t, i) {
return t ^ (e | ~i);
}
function o(e, t) {
return e[t + 3] << 24 | e[t + 2] << 16 | e[t + 1] << 8 | e[t];
}
if (!e instanceof Uint8Array) {
(function() {
try {
console.log("input data type mismatch only support Uint8Array");
} catch (e) {}
})();
return null;
}
for (var c = [], s = 0; s < e.byteLength; s++) c.push(e[s]);
var r = c.length;
c.push(128);
var l = c.length % 64;
if (l > 56) {
for (s = 0; s < 64 - l; s++) c.push(0);
l = c.length % 64;
}
for (s = 0; s < 56 - l; s++) c.push(0);
c = c.concat(function(e) {
for (var t = [], i = 0; i < 8; i++) {
t.push(255 & e);
e >>>= 8;
}
return t;
}(8 * r));
var d = 1732584193, h = 4023233417, _ = 2562383102, p = 271733878, u = 0, f = 0, g = 0, m = 0;
function v(e, t) {
return 4294967295 & e + t;
}
var S = function(e, t, i, n) {
var a, o, c = m;
m = g;
g = f;
f = v(f, (a = v(u, v(e, v(t, i)))) << (o = n) & 4294967295 | a >>> 32 - o);
u = c;
};
for (s = 0; s < c.length / 64; s++) {
u = d;
var C = 64 * s;
S(t(f = h, g = _, m = p), 3614090360, o(c, C), 7);
S(t(f, g, m), 3905402710, o(c, C + 4), 12);
S(t(f, g, m), 606105819, o(c, C + 8), 17);
S(t(f, g, m), 3250441966, o(c, C + 12), 22);
S(t(f, g, m), 4118548399, o(c, C + 16), 7);
S(t(f, g, m), 1200080426, o(c, C + 20), 12);
S(t(f, g, m), 2821735955, o(c, C + 24), 17);
S(t(f, g, m), 4249261313, o(c, C + 28), 22);
S(t(f, g, m), 1770035416, o(c, C + 32), 7);
S(t(f, g, m), 2336552879, o(c, C + 36), 12);
S(t(f, g, m), 4294925233, o(c, C + 40), 17);
S(t(f, g, m), 2304563134, o(c, C + 44), 22);
S(t(f, g, m), 1804603682, o(c, C + 48), 7);
S(t(f, g, m), 4254626195, o(c, C + 52), 12);
S(t(f, g, m), 2792965006, o(c, C + 56), 17);
S(t(f, g, m), 1236535329, o(c, C + 60), 22);
S(i(f, g, m), 4129170786, o(c, C + 4), 5);
S(i(f, g, m), 3225465664, o(c, C + 24), 9);
S(i(f, g, m), 643717713, o(c, C + 44), 14);
S(i(f, g, m), 3921069994, o(c, C), 20);
S(i(f, g, m), 3593408605, o(c, C + 20), 5);
S(i(f, g, m), 38016083, o(c, C + 40), 9);
S(i(f, g, m), 3634488961, o(c, C + 60), 14);
S(i(f, g, m), 3889429448, o(c, C + 16), 20);
S(i(f, g, m), 568446438, o(c, C + 36), 5);
S(i(f, g, m), 3275163606, o(c, C + 56), 9);
S(i(f, g, m), 4107603335, o(c, C + 12), 14);
S(i(f, g, m), 1163531501, o(c, C + 32), 20);
S(i(f, g, m), 2850285829, o(c, C + 52), 5);
S(i(f, g, m), 4243563512, o(c, C + 8), 9);
S(i(f, g, m), 1735328473, o(c, C + 28), 14);
S(i(f, g, m), 2368359562, o(c, C + 48), 20);
S(n(f, g, m), 4294588738, o(c, C + 20), 4);
S(n(f, g, m), 2272392833, o(c, C + 32), 11);
S(n(f, g, m), 1839030562, o(c, C + 44), 16);
S(n(f, g, m), 4259657740, o(c, C + 56), 23);
S(n(f, g, m), 2763975236, o(c, C + 4), 4);
S(n(f, g, m), 1272893353, o(c, C + 16), 11);
S(n(f, g, m), 4139469664, o(c, C + 28), 16);
S(n(f, g, m), 3200236656, o(c, C + 40), 23);
S(n(f, g, m), 681279174, o(c, C + 52), 4);
S(n(f, g, m), 3936430074, o(c, C), 11);
S(n(f, g, m), 3572445317, o(c, C + 12), 16);
S(n(f, g, m), 76029189, o(c, C + 24), 23);
S(n(f, g, m), 3654602809, o(c, C + 36), 4);
S(n(f, g, m), 3873151461, o(c, C + 48), 11);
S(n(f, g, m), 530742520, o(c, C + 60), 16);
S(n(f, g, m), 3299628645, o(c, C + 8), 23);
S(a(f, g, m), 4096336452, o(c, C), 6);
S(a(f, g, m), 1126891415, o(c, C + 28), 10);
S(a(f, g, m), 2878612391, o(c, C + 56), 15);
S(a(f, g, m), 4237533241, o(c, C + 20), 21);
S(a(f, g, m), 1700485571, o(c, C + 48), 6);
S(a(f, g, m), 2399980690, o(c, C + 12), 10);
S(a(f, g, m), 4293915773, o(c, C + 40), 15);
S(a(f, g, m), 2240044497, o(c, C + 4), 21);
S(a(f, g, m), 1873313359, o(c, C + 32), 6);
S(a(f, g, m), 4264355552, o(c, C + 60), 10);
S(a(f, g, m), 2734768916, o(c, C + 24), 15);
S(a(f, g, m), 1309151649, o(c, C + 52), 21);
S(a(f, g, m), 4149444226, o(c, C + 16), 6);
S(a(f, g, m), 3174756917, o(c, C + 44), 10);
S(a(f, g, m), 718787259, o(c, C + 8), 15);
S(a(f, g, m), 3951481745, o(c, C + 36), 21);
d = v(d, u);
h = v(h, f);
_ = v(_, g);
p = v(p, m);
}
return function(e, t, i, n) {
for (var a, o, c, s = "", r = 0, l = 0, d = 3; d >= 0; d--) {
r = 255 & (l = arguments[d]);
r <<= 8;
r |= 255 & (l >>>= 8);
r <<= 8;
r |= 255 & (l >>>= 8);
r <<= 8;
s += (o = void 0, c = void 0, o = ((a = r |= l >>>= 8) >>> 24).toString(16), c = (16777215 & a).toString(16), 
"00".substr(0, 2 - o.length) + o + "000000".substr(0, 6 - c.length) + c);
}
return s;
}(p, _, h, d).toLowerCase();
};
cc._RF.pop();
}, {} ],
MemoryPrintTool: [ function(e, t) {
"use strict";
cc._RF.push(t, "e4522hRgv1I/Lsoj15aGWis", "MemoryPrintTool");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
Global.registerEvent("MEM_PRINT", this.onEventPrint, this);
},
start: function() {},
print: function(e) {
var t = cc.loader._cache, i = 0, n = 0;
for (var a in t) if ("png" == t[a].type || "jpg" == t[a].type) {
var o = t[a];
if (cc.isValid(o, !0)) {
var c = o.url, s = (o.content.width * o.content.height * (c.indexOf(".jpg") > -1 ? 3 : 4) / 1024 / 1024).toFixed(2);
n += Number(s);
i += 1;
Number(s) > e && console.log(c + "大小:" + s);
}
}
console.log("文件总数" + i + "总内存:" + n);
},
onEventPrint: function(e) {
var t = 0;
e && e.detail && (t = e.detail);
this.print(t);
}
});
cc._RF.pop();
}, {} ],
MoveShapeChange: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c1072wuLUBMwqXedvyoru0B", "MoveShapeChange");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.MoveShapeChange = void 0;
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._enabledShapeChange = !1;
t.shapeNode = null;
t.posRefNode = null;
t._shapOriginScale = {
scaleX: 1,
scaleY: 1
};
t._shapChangeVector = cc.v2(0, 0);
t._prePos = cc.v2(0, 0);
return t;
}
Object.defineProperty(t.prototype, "enabledShapeChange", {
get: function() {
return this._enabledShapeChange;
},
set: function(e) {
if (this._enabledShapeChange != e) {
this._enabledShapeChange = e;
this._shapChangeVector.x = 0;
this._shapChangeVector.y = 0;
this.shapeNode.skewX = 0;
this.shapeNode.skewY = 0;
if (e) {
this._prePos.x = this.posRefNode.x;
this._prePos.y = this.posRefNode.y;
this._shapOriginScale.scaleX = this.shapeNode.scaleX;
this._shapOriginScale.scaleY = this.shapeNode.scaleY;
} else {
this.shapeNode.scaleX = this._shapOriginScale.scaleX;
this.shapeNode.scaleY = this._shapOriginScale.scaleY;
}
}
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
this.shapeNode || (this.shapeNode = this.node);
this.posRefNode || (this.posRefNode = this.node);
if (this._enabledShapeChange) {
this._prePos.x = this.posRefNode.x;
this._prePos.y = this.posRefNode.y;
}
};
t.prototype.update = function() {
if (this._enabledShapeChange) {
var e = this.posRefNode.getPosition(), t = e.sub(this._prePos);
t.mulSelf(.1);
this._shapChangeVector.addSelf(t);
this._prePos = e;
var i = cc.v2(.3, .9);
this._shapChangeVector.x > 0 && (i.x = -i.x);
this._shapChangeVector.y > 0 && (i.y = -i.y);
this._shapChangeVector.addSelf(i);
Math.abs(this._shapChangeVector.x) <= Math.abs(i.x) && (this._shapChangeVector.x = 0);
Math.abs(this._shapChangeVector.y) <= Math.abs(i.y) && (this._shapChangeVector.y = 0);
this._shapChangeVector = this._shapChangeVector.clampf(cc.v2(-5, -15), cc.v2(5, 15));
if (this._shapChangeVector.x * this._shapChangeVector.y >= 0) {
this.shapeNode.skewX = -Math.abs(this._shapChangeVector.x);
this.shapeNode.skewY = -Math.abs(this._shapChangeVector.y);
} else {
this.shapeNode.skewX = Math.abs(this._shapChangeVector.x);
this.shapeNode.skewY = Math.abs(this._shapChangeVector.y);
}
this.shapeNode.scaleX = this._shapOriginScale.scaleX - Math.abs(.04 * this.shapeNode.skewX);
this.shapeNode.scaleY = this._shapOriginScale.scaleX - Math.abs(this.shapeNode.skewY * (.2 / 15));
}
};
__decorate([ o() ], t.prototype, "_enabledShapeChange", void 0);
__decorate([ o(cc.Boolean) ], t.prototype, "enabledShapeChange", null);
__decorate([ o({
type: cc.Node,
tooltip: "用于形变动画的节点"
}) ], t.prototype, "shapeNode", void 0);
__decorate([ o({
type: cc.Node,
tooltip: "用于坐标计算的节点"
}) ], t.prototype, "posRefNode", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.MoveShapeChange = c;
cc._RF.pop();
}, {} ],
MsgIdConfig: [ function(e, t) {
"use strict";
cc._RF.push(t, "35012kZycNNdJOF9b3ui5p7", "MsgIdConfig");
var i = e("MsgIdDef");
i.ALL_RANK_LIST = 243;
i.UPDATE_USER_INFO = 211;
i.BUY_USER_FRAME = 63;
i.REQU_GET_VIP_REWARD = 282;
i.REQU_CHARGE_VIP = 1062;
i.PULL_CHANGE_EXP = 1052;
i.PULL_LEVEL_UP_EXP = 1050;
i.NEW_NOTICE_MISSION_CUR_PROCESS = 1053;
i.CHANGE_LANGUAGE = 199;
i.CHANGE_BONUS_LIST = 1070;
i.CHAT_USER_INFO_UPDATE = 1091;
i.CHAT_NEW_MSG = 1092;
i.CHAT_LEAVE_ROOM = 424;
i.CHAT_SEND_MSG = 334;
i.CHAT_DEL_MSG = 1094;
i.CHAT_DELALL_MSG = 1095;
i.DIAMOND_TO_COIN = 429;
i.LIKE_OPR = 357;
i.RANK_THREE_DATA = 258;
i.REQ_SKIN_BAG = 415;
i.REQ_ROOM_PALYER_NUM = 311;
i.REQ_RANK_MAIN_VIEW = 460;
i.REQ_SHOP_FREE_REWARD = 264;
i.REQ_CHAT_FRIEND_EXIT = 271;
i.MAIL_REMOVE_ALL = 201;
i.MAIL_READ = 203;
i.VIP_DAILY_VIEW = 283;
i.REPORT_USER = 222;
i.GET_OFFLINE_REWARDS = 220;
i.WORLD_GIFT_BUY = 660;
i.USER_FEEDBAKC = 169;
i.USER_REPORT_CHAT = 223;
i.USER_NEW_GIFT = 168;
i.GET_ALL_VIP_REAWRDS = 152;
i.REQ_UPDATE_LEAGUE_EXP = 150;
i.GAME_RECORD = 700;
i.USE_PROP = 420;
i.PRIVATE_CHAT_LIST = 463;
i.SHARE_WHATSAPP_REPORT = 430;
i.TASK_COMPLETE_NOTIFY = 1070;
i.SALON_INCOME_RECORD = 505;
i.LEAGUE_CHANGE_NOTIFY = 1043;
i.TASK_SALON_CONFIG = 290;
i.TASK_SALON_REWARD = 291;
i.GAME_CONFIG = 333;
i.SALON_INVITE_CHAT = 335;
i.COUNTRY_TOP_CHANGE = 10355;
i.DELETE_FRIEND_RECORD = 469;
i.GET_NEWER_GIFT_REWARDS = 665;
i.GET_BANKRUPTCY_INFO = 149;
i.GET_BANKRUPTCY_REWARD = 151;
i.GET_PHONE_CODE = 135;
i.BIND_PHONE = 134;
i.BANK_CARD_VERIFY = 140;
i.BANK_CARD_GET = 141;
i.BANK_CARD_DEL = 144;
i.GET_PAY_RECORD = 142;
i.GET_WITHDRAW_RECORD = 143;
i.GET_BALANCE_RECORD = 800;
i.PIGGY_BANK_VIEW = 249;
i.PIGGY_BANK_NOTIFY = 100065;
i.LEAGUE_VIEW = 188;
i.LEAGUE_APPLY = 187;
i.LEAGUE_RECORD = 189;
i.LEAGUE_REWARD = 190;
i.LEAGUE_EXP_CHANGE = 100067;
i.LEAGUE_LEVEL_UP = 100068;
i.RP_VIEW = 312;
i.RP_REWARD = 313;
i.RP_VIEW_RULE = 314;
i.COUNTRY_RANK = 354;
i.COUNTRY_VOTE = 355;
i.SALON_GET_TEST = 336;
i.SALON_GET_INCOME = 506;
i.SALON_INVITE_APPLY = 192;
i.FRIEND_ROOM_CREATE = 500;
i.FRIEND_ROOM_JOIN = 501;
i.FRIEND_ROOM_INVITE = 503;
i.FRIEND_ROOM_BE_INVITE = 126201;
i.FRIEND_ROOM_INVITE_FEEDBACK = 126202;
i.FRIEND_ROOM_LIST = 175;
i.FRIEND_ROOM_LIST_CHANGE = 125620;
i.FRIEND_ROOM_LEAVE = 176;
i.FRIEND_ROOM_DISSOLVE = 504;
i.CHECK_DESK_INFO = 502;
i.ONLINE_ENTER_LONLINE = 185;
i.ONLINE_START_MATCH_ROOM = 170;
i.ONLINE_REC_MATCH_ROOM = 125618;
i.ONLINE_REQ_CANCLE_MATCH = 171;
i.VIP_ROOM_LIST = 175;
i.VIP_ROOM_LIST_CHANGE = 125620;
i.VIP_CREATE_ROOM = 172;
i.VIP_JOIN_ROOM = 173;
i.VIP_ROOM_MATCH_CHANGE = 125619;
i.VIP_EXIT_VIP_MATCH = 174;
i.VIP_DISMISS_ROOM = 125621;
i.VIP_FAST_JOIN = 177;
i.LEAGUE_ENTER_LEAGUE = 178;
i.LEAGUE_RECEIVE_AN_INVITATION = 125622;
i.LEAGUE_KICK_FRIEND = 180;
i.LEAGUE_GOT_KICKED = 125625;
i.LEAGUE_START_MATCH = 181;
i.LEAGUE_REC_MATCH_ROOM = 125618;
i.LEAGUE_REQ_CANCLE_MATCH = 171;
i.LEAGUE_RANKING_LIST = 242;
i.LEAGUE_TASK_LIST = 216;
i.LEAGUE_TASK_GET_REWARD = 217;
i.EXIT_MODULE = 176;
i.INVITE_FRIEND_JOIN_TEAM = 179;
i.KICK_TEAM_MEMBER = 180;
i.INVITATION_RESULT = 182;
i.QUIT_TEAM = 184;
i.TEAM_CHANGE_ENTER = 186;
i.FRIEND_LIST = 270;
i.SOCIAL_FRIEND_LIST = 270;
i.SOCIAL_FRIEND_MESSAGE_LIST = 452;
i.SOCIAL_FRIEND_REQUEST_LIST = 449;
i.SOCIAL_FRIEND_REQUEST_HANDLE = 448;
i.SOCIAL_FRIEND_HANDLE_ADD = 273;
i.SOCIAL_FRIEND_HANDLE_REMOVE = 274;
i.SOCIAL_FRIEND_HANDLE_RECOMMEND = 278;
i.SOCIAL_FRIEND_MSG_LIST = 453;
i.SOCIAL_FRIEND_MSG_SEND = 451;
i.SOCIAL_FRIEND_MSG_REV = 100203;
i.SOCIAL_RECENT_PLAYER_LIST = 450;
i.SOCIAL_SEARCH_USER = 468;
i.SOCIAL_SYSTEM_MESSAGE_LIST = 426;
i.SOCIAL_SYSTEM_MESSAGE_DELETE = 427;
i.SOCIAL_SYSTEM_MESSAGE_DELETE_ALL = 428;
i.GAME_SHARE_REWARD = 191;
i.EVENT_SIGN_CONFIG = 418;
i.EVENT_SIGN_REWARD = 419;
i.EVENT_VIP_SIGN_CONFIG = 416;
i.EVENT_VIP_SIGN_REWARD = 417;
i.EVENT_TASK_CONFIG = 216;
i.EVENT_TASK_REWARD = 217;
i.EVENT_TASK_MAIN_CONFIG = 342;
i.EVENT_TASK_MAIN_REWARD = 343;
i.EVENT_VIP_MAIN_CONFIG = 345;
i.EVENT_VIP_MAIN_REWARD = 346;
i.EVENT_BONUS_RECORD = 315;
i.EVENT_LOGIN_BONUS_CONFIG = 344;
i.EVENT_GET_NEW_PLAYER_CONFIG = 218;
i.EVENT_GET_NEW_PLAYER_REWARD = 219;
i.EVENT_GET_DAILYTASK_MAIN_REWARD = 221;
i.EVENT_RETURN_WATER_CONFIG = 194;
i.EVENT_RETURN_WATER_REWARD = 195;
i.EVENT_GET_RANK_INFO = 197;
i.EVENT_REGISTER_RANK_INFO = 198;
i.EVENT_GET_RANK_CONFIG = 200;
i.EVENT_GET_RANK_REWARDS_CFG = 207;
i.EVENT_ONLINE_WHEEL_CONF = 208;
i.EVENT_ONLINE_WHEEL_RESULT = 209;
i.EVENT_ONLINE_GET_STATE = 210;
i.EVENT_FB_SHARE_CONFIG = 240;
i.EVENT_FB_SHARE_SUCCESS = 241;
i.EVENT_FB_SHARE_REWARD = 247;
i.EVENT_FEEDBACK = 169;
i.EVENT_FB_INVITE_CONFIG = 254;
i.EVENT_FB_INVITE_REWARD = 255;
i.EVENT_FB_INVITE_REWARD_ALL = 256;
i.EVENT_FB_INVITE_BIND_CODE = 257;
i.REQ_REFFERS_LIST = 255;
i.REQ_REFFERS_REWARDS = 256;
i.REQ_REFFERS_DETAILS = 259;
i.REQ_REFFERS_LIST_DETAILS = 261;
i.REQ_REFFERS_REWARDS_DETAILS = 262;
i.CLUB_LIST_RECOMMEND = 471;
i.CLUB_LIST_RANK = 472;
i.CLUB_CREATE = 473;
i.CLUB_INFO = 474;
i.CLUB_APPLY = 475;
i.CLUB_LIST_APPLY = 476;
i.CLUB_HANDLE_APPLY = 477;
i.CLUB_HANDLE_REMOVE = 478;
i.CLUB_LIST_USER = 479;
i.CLUB_SIGN = 480;
i.CLUB_EXIT = 481;
i.CLUB_UPDATE_INFO = 482;
i.CLUB_ROOM_LIST = 483;
i.CLUB_ROOMT_CREATE = 484;
i.CLUB_ROOMT_JOIN = 485;
i.CLUB_ROOMT_INVITE = 486;
i.CLUB_ROOMT_BE_INVITE = 126102;
i.NOTIFY_CLUB_JOIN = 1080;
i.NOTIFY_CLUB_REMOVE = 1081;
i.EVENT_MENSA_CARD_INFO = 461;
i.EVENT_MENSA_CARD_TAKE_REWRAD = 462;
i.EVENT_MENSA_CARD_TASK_INFO = 463;
i.EVENT_MENSA_CARD_REFRESH_TASK = 464;
i.EVENT_MENSA_CARD_CMP_TASK = 465;
i.EVENT_MENSA_CARD_TAKE_ALL_REWRAD = 467;
i.USER_GIFT_SEND = 661;
i.USER_GIFT_SEND_LIST = 662;
i.USER_GIFT_GET_LIST = 663;
i.USER_GIFT_BROADCAST = 1042;
i.USER_EXCHANGE_CODE = 664;
i.GET_MATCH_CONFIG = 510;
i.ENTER_MATCH = 511;
i.GET_MATCH_INFO = 512;
i.PUll_MATCH_INFO = 100069;
i.END_MATCH = 100070;
i.GET_KNOCKOUT_CONFIG = 294;
i.GET_KNOCKOUT_INFO = 295;
i.REQ_KNOCKOUT_REGISTER = 296;
i.REQ_KNOCKOUT_JOIN = 297;
i.REQ_KNOCKOUT_READY = 1084;
i.REQ_KNOCKOUT_UPDATE = 1085;
i.REQ_KNOCKOUT_CHANGE = 1087;
i.REQ_KNOCKOUT_COUNT = 1088;
i.REQ_KNOCKOUT_OVER = 1089;
i.REQ_KNOCKOUT_LOSE = 1086;
i.REQ_KNOCKOUT_EXIT = 1090;
i.GET_RAND_USERS = 310;
i.YD_WITHDRAW_GET = 130;
i.YD_WITHDRAW_SAVE = 131;
i.YD_WITHDRAW_DRAW = 132;
i.YD_WITHDRAW_RECORD = 133;
i.YD_WITHDRAW_BANK_SUPPORT = 136;
i.BONUS_COIN_PRPPORTION = 260;
i.BONUS_COIN_INFO = 418;
i.BONUS_COIN_TRANSFER = 419;
i.REFER_INFO = 254;
i.REFER_BROADCAST_INFO = 267;
i.UPDATE_PINMSG = 100072;
i.LUCKYSPIN_RECORDS = 345;
i.BONUS_PROM_LIST = 362;
window.MsgId = i;
cc._RF.pop();
}, {
MsgIdDef: "MsgIdDef"
} ],
MsgIdDef: [ function(e, t) {
"use strict";
cc._RF.push(t, "c8460wa37hDmJVmIyKt6G6R", "MsgIdDef");
var i = cc.Class({
extends: cc.Component,
statics: {}
});
window.MsgId = i;
i.HEARTBEAT = 11, i.LOGIN = 1;
i.LOGIN_USERID = 2;
i.RELOGIN_USERID = 3;
i.REGET_DESKINFO = 4;
i.REGET_DESKINFO_2 = 5;
i.LOGIN_OUT = 12, i.SYNC_COIN = 29, i.ACCOUNT_DELETE = 1093;
i.UPDATE_FCMTOKEN = 390;
i.BIND_INVITE_CODE = 28;
i.PURCHASE_AGENT_LIST = 50;
i.PURCHASE_GOODS_LIST = 51;
i.FEEDBACK_COMMIT = 52;
i.MESSAGE_SYSTEM = 53;
i.MODIFY_INFO = 54;
i.IDENTITY_PERSONAL = 55;
i.TOTAL_RANK_LIST = 56;
i.HALL_SPEAKER_LIST = 59;
i.EMAIL_LIST = 60;
i.EMAIL_READ = 61;
i.PERSIONAL_INFO = 62;
i.EMAIL_RECEIVE = 63;
i.COMMIT_REPORT = 64;
i.AC_RESERVE_COIN = 72;
i.AC_RESERVE_TAKE_LIMIT = 73;
i.BIND_ACCOUNT = 74;
i.GET_BOUNS = 75;
i.GET_ONLINE_BOUNS_STATUS = 76;
i.GET_TASK_LIST = 77;
i.RECEIVE_REWARD = 78;
i.TODAY_RANK_LIST = 79;
i.ACTIVITY_LIST = 80;
i.ACTIVITY_GET_FIVE_STAR = 81;
i.ACT_COMMIT_FIVE_STAR = 82;
i.ACT_INVITE_GIFT_LIST = 83;
i.MODIFY_NICKNAME = 84;
i.SEND_CHAT = 85;
i.GET_CHAT_LIST = 86;
i.BIND_ACCOUNT_WX = 87;
i.BIG_CHARGE_ANGENT = 88;
i.BIG_CHARGE_BACKLIST = 89;
i.BIG_CHARGE_ORDER = 90;
i.BIG_CHARGE_REBACKWARD = 91;
i.BIG_CHARGE_REWARD_CORD = 92;
i.AGENT_REWARD_DATA = 93;
i.AGENT_REWARD_REBACKWARD = 94;
i.HALL_VERSOIN = 96;
i.AGENT_REWARD_STATIC = 97;
i.BANK_LOGIN = 100;
i.BANK_HALL_INFO = 101;
i.BANK_SAVE_COIN = 102;
i.BANK_TAKE_COIN = 103;
i.BANK_RECORD_LIST = 104;
i.BANK_MODIFY_PW = 105;
i.BANK_EXIT = 106;
i.BANK_TAKE_INGAME = 107;
i.NICKNAME_INCLUCE_ILLEGAL_CHARACTER = 1073;
i.NICKNAME_HAD_USED = 1074;
i.PURCHASE_GET_ORDER = 70;
i.PURCHASE_CHECK_ORDER = 71;
i.PURCHASE_RECHARGE_SUC = 1035;
i.REWARD_ONLINE = 1036;
i.TASK_FINISH_NOTICE = 1037;
i.POP_FIVE_STAR_NOTICE = 1038;
i.MONEY_CHANGED = 1010;
i.GAME_REMOTE_LOGIN = 1017;
i.GAME_NEED_RESTART = 801;
i.GAME_SESS_LIST = 30;
i.GAME_ROOM_LIST = 34;
i.GAME_CREATEROOM = 31;
i.GAME_JOINROOM = 32;
i.GAME_LEVELROOM = 40;
i.GAME_ENTER_MATCH = 43;
i.RELIEF_FUND = 99;
i.ENTER_CASINO = 120;
i.EXIT_CASINO = 121;
i.CHANGE_CASINO_COIN = 122;
i.NOTIFY_SYS_KICK_HALL = 100050;
i.NOTIFY_SYS_KICK_LOGIN = 100054;
i.GLOBAL_MAIL_NOTIFY = 100053;
i.GLOBAL_SPEAKER_NOTIFY = 100055;
i.GLOBAL_SYSTEM_NOTIFY = 100066;
i.SEND_CHAT_NOTICE = 100056;
i.PLAYER_LEAVE = 1016;
i.SYNC_PLAYER_INFO = 100057;
i.GAME_RECONNECT_DESKINFO = 99e3;
i.GAME_ENTER_BACKGROUND = 9900;
i.SCORE_LOG = 27;
i.MODIFY_PSW = 26;
i.GAME_LIST = 100059;
i.JACKTPOT_HALL = 121202;
i.JACKPOT_GAME = 121203;
i.NOTIFY_KICK = 100906;
i.REQ_REDPACK = 7100;
i.OPEN_REDPACK = 7101;
i.REQ_LUCKRAIN = 7102;
i.REQ_GROWUPDATA = 130;
i.REQ_LUCKBOX = 131;
i.REQ_LUCKBOX_REWARD = 132;
i.REQ_AGENT_INFO = 135;
i.REQ_TRANSFER = 142;
i.REQ_MODIFY_CHARGE_PSW = 136;
i.REQ_WITHDRAWAL = 137;
i.REQ_WITHDRAWAL_RECORD = 138;
i.REQ_AGENTLIST = 139;
i.REQ_TRANSFER_RECORD = 140;
i.REQ_FAV_CHANGE = 150;
i.RESET_PSW = 143;
i.ENTER_CASINO = 120;
i.EXIT_CASINO = 121;
i.CHANGE_CASINO_COIN = 122;
i.CAME_REDPACK_ALLSCENE = 1039;
i.ACTIVE_LUNPAN = 1018;
i.REQ_SHOP = 201;
i.REQ_MAIL_LIST = 202;
i.REQ_READ_MAIL = 203;
i.REQ_GET_MAIL_ATTACH = 204;
i.REQ_GET_LEVEL_GITFS = 214;
i.REQ_GET_ALL_MALL_ATTACH = 215;
i.REQ_GET_NEW_MAIL = 100053;
i.REQ_GET_ONLINE_COIN = 205;
i.REQ_ONLINE_REWARDS = 206;
i.REQ_GET_SPINE_CONF = 208;
i.REQ_GET_SPINE_RESULT = 209;
i.REQ_GET_TURNTABLE_STATE = 210;
i.REQ_SHOP_RET_SUCCESS = 211, i.REQ_GET_VIP_INFO = 212;
i.REQ_OPEN_GIFT = 213;
i.REQ_GET_DAILY_MISSION_LIST = 216;
i.REQ_GET_MISSION_REWARD = 217;
i.REQ_DAILY_MISSION_REMAIN_REWARD = 280;
i.REQ_GET_SIGNIN_LIST = 218;
i.REQ_GET_SIGIN_ACTION = 219;
i.REQ_SHOP_EX = 263;
i.REQ_SHOP_CONFIG = 333;
i.REQ_SKIN_SHOP = 421;
i.REQ_BUY_SKIN_SHOP_ITEM = 422;
i.REQ_GET_FBInfo = 240;
i.REQ_SHARE_SUCC = 241;
i.REQ_RANK = 242;
i.REQ_RANK_GET_WIN_COIN = 247;
i.REQ_MAIL_ADDZBMATCHINFO = 248;
i.REQ_GET_MONEYBANK = 249;
i.REQ_BIND_FACEBOOK = 244;
i.REQ_REPORT_STATISTICS = 245;
i.REQ_COLLECT_NEWERGIFT = 246;
i.REQ_LEVEL_UP_PARTY_INFO = 252;
i.REQ_LEVEL_UP_PARTY_AWARD = 253;
i.LEVEL_UP_PARTY_UPDATE_NOTICE = 100063;
i.REQ_FRIENDS_LIST = 270;
i.REQ_ADD_FRIENDS = 273;
i.REQ_DELETE_FRIENDS = 274;
i.RET_ADD_FRIENDS_NOTICE = 1059;
i.FRIEND_PRESENT = 271;
i.FRIEND_PRESENTALL = 272;
i.GET_JACKPOT = 276;
i.GET_JACKPOTALL = 277;
i.REQ_RECOMMENDLIST = 278;
i.REQ_COLLECT_BREAKGRANT_COIN = 151;
i.REQ_HUMMER_PRODUCT_LIST = 152;
i.COLLECT_BREAKGRANT_COIN_NOTICE = 1057;
i.REQ_MISSION_PASS_INFO = 257;
i.REQ_PURCHASE_LIST_INFO = 258;
i.REQ_COLLECT_MISSION_PASS_REWARD = 259;
i.REQ_COLLECT_MISSION_PASS_ALL_REWARD = 260;
i.REQ_REDEEM = 264;
i.SPORT_LIST = 160;
i.SPORT_JOIN = 161;
i.SPORT_RANKING = 162;
i.SPORT_CANCEL = 163;
i.PULL_LEVEL_UP_EXP = 1050;
i.PULL_CHANGE_EXP = 1052;
i.PULL_RED_NOTICE = 1019;
i.PULL_ADD_OL_MULTILE = 100064;
i.PULL_RANK_RESULT = 1054;
i.PULL_JACKPOT_OTHER = 1055;
i.PULL_ONETIMEONLY_DEL = 10056;
i.REQ_DOUBLE_XP = 250;
i.REQ_EVENT_OFFER_REWARD = 251;
i.REQ_PIGBANK_FREEOPEN = 256;
i.REQ_CH_MAILREWARD = 268;
i.REQ_CH_MAILREWARDALL = 269;
i.PULL_CH_MAILS_REDDOT = 1058;
i.PULL_CH_LESSCOIN_ACTIVELIST = 1060;
i.REQ_COLLECT_OFFLINE_REWARD = 220;
i.REQ_COLLECT_GROWTH_FUND = 279;
i.REQ_SUCCESS_GROWTH_FUND = 1061;
i.REQ_REFRESH_VIP = 1051;
i.REQ_QUEST_INFO_LOGINPOP = 319;
i.REQ_QUEST_INFO = 320;
i.REQ_QUEST_REWARD = 321;
i.REQ_WORLD_CHAT = 322;
i.REQ_CARDSHARE_CHAT = 323;
i.REQ_CARDSHARE_GIFT = 324;
i.REQ_HALL_TAB_BONUS = 281;
i.REQ_COLLECT_WEEK_MONTH_CARD = 282;
i.NOTICE_BUY_WEEK_MONTH_CARD_SUCCESS = 1062;
i.NOTIFY_BUY_HUMMER = 1063;
i.SAVE_GUIDE_ID = 284;
i.REQ_LUCKYSMASH_INFO = 285;
i.REQ_LUCKYSMASH_RECORD = 286;
i.REQ_LUCKYSMASH_CRUSH = 287;
i.REQ_OPEN_TRIAL_CARD = 288;
i.REQ_GET_TRIAL_CARD = 289;
i.REQ_CLUB_LIST = 290;
i.REQ_CLUB_DETAILS = 291;
i.REQ_CLUB_CREATE = 292;
i.REQ_DISSOLVE_CLUB = 293;
i.REQ_CHANGE_CLUB_INFO = 294;
i.REQ_APPLY_CLUB = 295;
i.REQ_DEAL_APPLY = 296;
i.REQ_DEAL_INVITE = 297;
i.REQ_EXIT_CLUB = 298;
i.REQ_DEL_CLUB_USER = 299;
i.REQ_CLUB_APPLY_LIST = 300;
i.REQ_CLUB_USER_INFO_LIST = 301;
i.REQ_CLUB_CHAT = 302;
i.REQ_CLUB_REWARDS = 303;
i.REQ_CLUB_GET_REWARD = 304;
i.REQ_CLUB_TASK = 305;
i.REQ_CLUB_TASK_GET_REWARD = 306;
i.REQ_CAN_APPLY_CLUB_LIST = 307;
i.REQ_CLUB_INVITE_OTHER = 308;
i.REQ_CLUB_INVITE_LIST = 309;
i.REQ_HEROCARD_LIST = 325;
i.REQ_HEROCARD_INFO = 326;
i.REQ_HEROCARD_UNLOCK = 327;
i.REQ_HEROCARD_ADD_STAR = 328;
i.REQ_HEROCARD_LEVEL_UP = 329;
i.REQ_HEROCARD_SUMMON = 362;
i.REQ_HEROCARD_SUMMON_DIAMOND = 364;
i.NOTIFY_HEROCARD_DROP = 1064;
i.REQ_HEROCARD_RANK = 374;
i.REQ_PVP_FIGHT = 375;
i.REQ_PVP_RANK = 376;
i.REQ_PVP_MATCH = 377;
i.REQ_PVP_SET_FORMATION = 378;
i.REQ_PVP_BUY_TICKET = 379;
i.REQ_PVP_RECORD = 383;
i.REQ_PVP_DETAIL = 384;
i.REQ_PVP_TEAM = 385;
i.REQ_BINGO_INFO = 330;
i.REQ_BINGO_SPIN = 331;
i.REQ_BINGO_RANK = 332;
i.NOTIFY_BINGO_BUFF_BUYED = 1066;
i.NOTIFY_BINGO_GIFT_BUYED = 1067;
i.REQ_EXPLORE_INFO = 366;
i.REQ_EXPLORE_SPIN = 367;
i.REQ_EXPLORE_OPENBOX = 368;
i.JOURNEY_CNT_GIFT_BUYED = 1072;
i.JOURNEY_COIN_GIFT_BUYED = 1073;
i.JOURNEY_STEP_GIFT_BUYED = 1074;
i.REQ_FRIEND_CHATRANK_BETINFO = 265;
i.REQ_FRIEND_CHATRANK_DOBET = 266;
i.FRIEND_COLLECTALL_DOUBLE = 360;
i.DOUBLE_WIN_COINS = 51;
i.PULL_MODIFY_LOCALVAL = 1021;
i.REQ_GIFT_SEND = 661;
i.REQ_GIFT_SENDLIST = 662;
i.REQ_GIFT_RECEIVELIST = 663;
i.PULL_GIFT_INFO = 1042;
i.REQ_LUCKYCARD_INFO = 350;
i.REQ_LUCKYCARD_ACTION = 351;
i.REQ_LUCKYCARD_TAKE = 352;
i.REQ_LUCKYCARD_RELIFE = 353;
i.REQ_LUCKYCARD_BUYLIST = 354;
i.PULL_LUCKYCARD_BUYSUCCESS = 1065;
i.PULL_LUCKYCARD_RESET = 1069;
i.REQ_GUIDETASK_REWARD = 341;
i.PULL_GUIDETASK_UPDATEINFO = 1068;
i.REQ_GUIDETASK_ADD_HEROCARD = 333;
i.REQ_SERVICES_INFO = 514;
i.REQ_GET_SHARE_WHEEL = 342;
i.REQ_SPIN_WHEEL = 343;
i.REQ_HEROPALACE = 358;
i.REQ_HEROPALACE_COLLECT = 359;
i.REQ_HEROPALACE_TICKET = 372;
i.REQ_BONUS_LISTINFO = 373;
i.REQ_GET_SIGN_INFO = 418;
i.REQ_GET_SIGN_ACTION = 419;
i.REQ_GET_SIGN_GIFT = 420;
i.REQ_SEND_FIRSTGIFT_COLLECT = 425;
i.REQ_SET_CARD_ACHIEVE = 335;
i.REQ_SET_CARD_REWARD = 337;
i.REQ_CARD_TASK_INFO = 334;
i.REQ_CARD_TASK_STATUS = 336;
i.REQ_CARD_TASK_REWARD = 338;
i.REQ_CARD_GET_WHEEL_INFO = 370;
i.REQ_CARD_PLAY_WHEEL = 371;
i.REQ_SYNC_HALLINFO = 349;
i.REQ_GET_MISSION_INFO = 344;
i.REQ_GET_MISSION_REWARDS = 345;
i.REQ_USE_MISSION_DIAMOND = 346;
i.REQ_GET_MISSION_LIVE = 347;
i.REQ_SET_MISSION_PROCESS = 1071;
i.REQ_NOTICE_REWARD_COLLECT = 348;
i.REQ_GET_CASHBACK_REWARDS = 365;
i.REQ_GET_TURNTABLE_TYPE = 207;
i.REQ_PRIVATE_GETCARD = 455;
i.REQ_PRIVATE_SENDCARD = 454;
i.REQ_PRIVATE_CHAT = 453;
i.REQ_PRIVATE_LIST = 452;
i.REQ_PRIVATE_SEND = 451;
i.REQ_PRIVATE_GET = 100203;
i.REQ_PRIVATE_RECCARD = 100204;
i.REQ_CDKEY = 664;
i.REQ_BONUS_MAINLISTINFO = 380;
i.REQ_BONUS_MAINLISTREWARD = 381;
i.REQ_BONUS_REDDOT_REWARDS = 382;
i.REQ_HALL_RANKTOP3 = 369;
i.REQ_ENTER_SAFE = 100;
i.REQ_SAFE_INFO = 101;
i.REQ_SAFE_SAVE = 102;
i.REQ_SAFE_TAKE = 103;
i.REQ_SAFE_RECORD = 104;
i.PULL_FREE_STATUE = 128e3;
i.PULL_BETTING_STATUE = 128001;
i.PULL_RESULT_STATUE = 128002;
i.PULL_OTHER_BET = 128003;
i.PULL_OBSERVERS_NUM = 128004;
i.PULL_CRASH_TAKEREWARD = 128005;
i.PULL_CRASH_FLY = 128006;
i.MSG_Cash_Out = 81;
i.PLACE_BET = 44;
i.REQ_LABAGAME_TOTAL_RANK = 1122;
i.REQ_LABAGAME_LIST = 1120;
i.PULL_TABLE_PLAYER = 126001;
i.LEFT_TABLE_PLAYER = 126011;
i.TABLE_BET_REQ = 37;
i.REQ_OBSER_LIST = 1121;
i.GAME_SWITCH_TABLE = 52;
i.PULL_SWITCH_TABLE = 1083;
cc._RF.pop();
}, {} ],
NavigationPageItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0634diSxS5AvZa8iFBkK5ho", "NavigationPageItem");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.NavigationPageItemType = void 0;
var n, a = cc._decorator, o = a.ccclass, c = a.property, s = a.menu;
a.requireComponent;
(function(e) {
e[e.NODE = 1] = "NODE";
e[e.PREFAB = 2] = "PREFAB";
})(n = i.NavigationPageItemType || (i.NavigationPageItemType = {}));
var r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.headNode = null;
t.bgNode = null;
t.cType = n.NODE;
t.pageNode = null;
t.pagePrefab = null;
t.pageOnLoad = !1;
t.btnSwtich = null;
t.isOpen = !1;
t.changeEvent = null;
return t;
}
t.prototype.onInit = function() {
this.btnSwtich.node.on("click", this.onSwitch, this);
if (this.cType == n.PREFAB && this.pagePrefab) {
this.pageNode = cc.instantiate(this.pagePrefab);
this.pageNode.active = this.pageOnLoad;
this.node.addChild(this.pageNode);
this.pageNode.x = 0;
}
this.pageNode && this.pageNode.on(cc.Node.EventType.SIZE_CHANGED, this.onPageNodeSizeChange, this);
this.reset();
};
t.prototype.reset = function() {
if (this.pageNode) {
this.pageNode.y = -1 * (this.pageNode.height * (1 - this.pageNode.anchorY) + this.headNode.height);
this.pageNode.active = !1;
}
this.node.height = this.headNode.height;
if (this.bgNode) {
this.bgNode.y = -this.headNode.height;
this.bgNode.height = 0;
this.bgNode.active = !1;
}
this.setSwitch(!1, 0);
};
t.prototype.onSwitch = function() {
this.isOpen = !this.isOpen;
this.setSwitch(this.isOpen);
};
t.prototype.setSwitch = function(e, t) {
void 0 === t && (t = .1);
this.isOpen = e;
this.pageNode && (e ? this.onOpenPage(t) : this.onClosePage(t));
cc.Component.EventHandler.emitEvents([ this.changeEvent ], this);
};
t.prototype.onOpenPage = function(e) {
var t = this;
if (this.bgNode) {
this.bgNode.active = !0;
this.bgNode.stopAllActions();
}
this.node.stopAllActions();
if (e <= 0) {
this.pageNode.active = !0;
this.bgNode && (this.bgNode.height = this.pageNode.height);
this.node.height = this.headNode.height + this.pageNode.height;
} else {
this.bgNode && cc.tween(this.bgNode).to(e, {
height: this.pageNode.height
}).start();
cc.tween(this.node).to(e, {
height: this.headNode.height + this.pageNode.height
}).call(function() {
t.pageNode && (t.pageNode.active = !0);
}).start();
}
};
t.prototype.onClosePage = function(e) {
var t = this;
this.pageNode && (this.pageNode.active = !1);
this.bgNode && this.bgNode.stopAllActions();
this.node.stopAllActions();
if (e <= 0) {
this.bgNode && (this.bgNode.height = 0);
this.node.height = this.headNode.height;
} else {
this.bgNode && cc.tween(this.bgNode).to(e, {
height: 0
}).call(function() {
t.bgNode.active = !0;
}).start();
cc.tween(this.node).to(e, {
height: this.headNode.height
}).start();
}
};
t.prototype.onPageNodeSizeChange = function() {
this.updateSize();
};
t.prototype.updateSize = function() {
this.isOpen && (this.node.height = this.headNode.height + this.pageNode.height);
};
__decorate([ c(cc.Node) ], t.prototype, "headNode", void 0);
__decorate([ c(cc.Node) ], t.prototype, "bgNode", void 0);
__decorate([ c({
type: cc.Enum(n)
}) ], t.prototype, "cType", void 0);
__decorate([ c({
type: cc.Node,
visible: function() {
return this.cType == n.NODE;
}
}) ], t.prototype, "pageNode", void 0);
__decorate([ c({
type: cc.Prefab,
visible: function() {
return this.cType == n.PREFAB;
}
}) ], t.prototype, "pagePrefab", void 0);
__decorate([ c({
visible: function() {
return this.cType == n.PREFAB;
}
}) ], t.prototype, "pageOnLoad", void 0);
__decorate([ c(cc.Button) ], t.prototype, "btnSwtich", void 0);
__decorate([ c(cc.Component.EventHandler) ], t.prototype, "changeEvent", void 0);
return __decorate([ o, s("UI/NavigationPageView") ], t);
}(cc.Component);
i.default = r;
cc._RF.pop();
}, {} ],
NavigationPageView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bc0f8dy90BEBagsmnTgutlD", "NavigationPageView");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./NavigationPageItem"), a = cc._decorator, o = a.ccclass, c = a.property, s = a.menu, r = a.requireComponent, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.openPages = "";
return t;
}
t.prototype.addNavPage = function(e) {
var t = e.getComponent(n.default);
if (t) {
t.onInit();
t.reset();
e.parent = this.getComponent(cc.ScrollView).content;
}
};
t.prototype.onLoad = function() {
var e = this;
cc.log("NavigationPageView", "onLoad");
for (var t = this.getComponentsInChildren(n.default), i = 0, a = t; i < a.length; i++) a[i].onInit();
this.scheduleOnce(function() {
for (var i = 0, n = e.openPages.split(","); i < n.length; i++) {
var a = n[i], o = t[parseInt(a)];
o && o.setSwitch(!0, 0);
}
});
};
t.prototype.showPage = function(e) {
void 0 === e && (e = -1);
var t = this.getComponentsInChildren(n.default);
if (t[e]) {
var i = this.getComponent(cc.ScrollView);
i.content.getComponent(cc.Layout).updateLayout();
i.stopAutoScroll();
i.scrollToOffset(cc.v2(0, 0), .1);
}
for (var a = 0; a < t.length; a++) a == e ? t[a].setSwitch(!0, 0) : t[a].setSwitch(!1, 0);
};
__decorate([ c ], t.prototype, "openPages", void 0);
return __decorate([ o, r(cc.ScrollView), s("UI/NavigationPageView") ], t);
}(cc.Component);
i.default = l;
cc._RF.pop();
}, {
"./NavigationPageItem": "NavigationPageItem"
} ],
NetCacheMgr: [ function(e, t) {
"use strict";
cc._RF.push(t, "a74a6pPiYpKzqFFhsL+mE6J", "NetCacheMgr");
cc.Class({
extends: cc.Component,
properties: {
_nStepInter: 0,
_cacheNormalList: [],
_bCacheHall: !1,
_sendNormalIdx: 0,
_popList: []
},
init: function() {
this._initPopListMsg();
},
isCacheHall: function() {
return this._bCacheHall;
},
setCacheHall: function(e) {
this._bCacheHall = e;
},
isPlayingGame: function() {},
isMsgIdInCacheList: function() {},
_initPopListMsg: function() {},
isMsgIdNeedPop: function(e) {
var t = !1;
if (e && this._popList) for (var i = 0; i < this._popList.length; i++) if (this._popList[i] == e) {
t = !0;
break;
}
return t;
},
onNetBack: function() {},
sendCacheMsg: function(e) {
var t = e.sendType;
e.cache = 1;
delete e.sendType;
1 == t ? cc.vv.NetManager.send(e, !0) : cc.vv.NetManager.sendAndCache(e);
},
update: function(e) {
if (this.isCacheHall() && this._cacheNormalList && this._cacheNormalList.length && !this._bSendNormalFinish) {
this._nStepInter += e;
if (this._nStepInter > .1) {
this._nStepInter = 0;
var t = this._cacheNormalList[this._sendNormalIdx];
this._sendNormalIdx++;
t ? this.sendCacheMsg(t) : this._bSendNormalFinish = !0;
}
}
}
});
cc._RF.pop();
}, {} ],
NetErrorCode: [ function(e, t) {
"use strict";
cc._RF.push(t, "f89ecZOFulJJq94nw9XQp0U", "NetErrorCode");
e("GlobalVar").code = {
201: "You are already registered.",
202: "You are not registered.",
203: "err_id_psw",
204: "The account has been registered by another player.",
205: "The two passwords are inconsistent.",
206: "Account contains sensitive words.",
207: "Name contains sensitive words.",
213: "err_psw",
208: "login_fail_again",
400: "call_back_error",
401: "Database error.",
402: "permission_denied",
403: "Authentication failed.",
404: "Reconnection expired.",
405: "login_fail_again",
406: "login_frequently",
407: "acc_online",
408: "Parsing protocbuf error.",
409: "user_already_exists",
410: "Operation error.",
411: "Role already exists.",
412: "Login restricted!Contact customer service for further assistance.",
422: "account_forbid",
450: "Sorry, not yet collectable.",
452: "aready_sign",
494: "You gave it today",
495: "You already received it today",
496: "Daily rewards have been collected.",
500: "login_fail_again",
501: "Material insufficient.",
502: "该用户已准备",
503: "游戏未开始",
504: "跟注错误",
505: "比牌失败",
506: "已经加入",
507: "已经加入",
508: "不能跟自己比牌",
509: "用户已退出",
510: "口令错误",
511: "游戏已经开始",
512: "游戏已经结束",
513: "房间人数已满",
514: "未设置底注",
515: "未在桌子上",
516: "看牌错误",
517: "加入错误",
518: "离开",
519: "the game is in progres",
520: "创建游戏信息有误",
606: "error_operate",
610: "coins_lack",
611: "您已经是庄家了",
612: "coins_lack",
613: "band_aren",
650: "Send too frequently",
710: "enter_game",
720: "房卡不足",
803: "system_maintenance_tips",
804: "金币不足",
805: "已经弃牌",
806: "跟注失败",
807: "下注金额错误",
811: "您金币足够多的，请进入更高级别的房间",
899: "庄家不能下注",
900: "庄已存在",
901: "没选庄",
902: "没下注",
903: "没准备",
904: "牌数据错误",
905: "出牌不在手牌中",
906: "不能执行此操作",
907: "没开启中途加入不能准备",
908: "没坐下",
909: "请等下一回合",
910: "下注方位错误",
911: "龙虎方位不能同时下注",
912: "超过允许的最大押注总额",
913: "房间不允许中途加入",
914: "用户未准备",
915: "未找到该座位用户",
916: "倍数超范围",
917: "底注超范围",
918: "离场金币错误",
919: "入场金币错误",
920: "类型错误",
921: "player not in room",
922: "Already sit down",
923: "房间人数已满",
924: "此座位已经有人",
925: "不是房主",
926: "有人没准备",
927: "Not enough players",
928: "服务器房间数不够",
929: "体验币不足",
930: "权限不足，无法创建!",
933: "暂未购买",
936: "金币不足，无法创建房间!",
940: "Failed to login Wechat.",
945: "Level insufficient, cannot unlock the game.",
964: "cant_reward_eventoffer",
965: "aready_reward_eventoffer",
8928: "出牌操作错误",
9929: "玩家已退出",
9930: "摊牌异常",
9931: "非房主不能执行该操作",
1e3: "房间数据异常",
1403: "You have already purchased！",
1404: "未找到该商品",
1405: "下单失败，请稍后再试",
1406: "您不能同时下注2个方位",
1407: "自己不能举报自己哟",
1408: "请补充完资料后再提交",
1409: "操作过于频繁，请歇一会再来",
1450: "操作失败，请稍后再试",
1051: "本轮投注额已满",
1052: "请勿重复提交",
1057: "您是庄家，不能下注哟",
1060: "Purchase failed",
1065: "只能在空闲时间内下庄哦",
1066: "当前档位金币不足",
1067: "此房间不允许中途加入哦",
1068: "Account verification failed!",
1069: "绑定账号获取用户信息失败",
1070: "This account is already bound.",
1071: "This Facebook account already exists.",
1072: "This task has not been completed.",
1073: "Illegal characters,please modify.",
1074: "Name already exists.",
1075: "Sending too frequently, please wait.",
1076: "No sending permission.",
1077: "金币不足，无法上庄，请充值！",
1080: "剩余金币须大于50万才能下注",
1081: "wait_next_round",
1082: "This account has already been bound Wechat,can not bind repeatedly.",
1083: "Failed to bound Wechat.",
1084: "Failed to bound Wechat,can not getting information.",
1085: "This Wechat account already exists.",
1387: "剩余金币须大于50万才能下注",
1089: "The task has been closed.",
1090: "只能在空闲时间内下庄哦",
1091: "庄家只能在空闲时间内退出",
10005: "Loading...",
10001: "subgame_is_over",
209: "param_nil",
210: "illegal_parameter",
211: "invalid_token",
416: "lock_5_second",
417: "lock_10_second",
418: "lock_20_second",
419: "lock_600_second",
420: "system_maintenance_tips",
421: "sub_account_prohibits",
950: "account_exist",
951: "email_exist",
952: "invalid_promoter_code",
953: "email_failed_to_send",
954: "invalid_pin",
955: "account_not_exits",
956: "commission_not_enough",
957: "password_error",
958: "transfer_failure",
959: "available_to_upline_and_downline",
960: "account_too_short",
961: "account_must_filled",
962: "password_must_filled",
963: "promoter_code_error",
214: "need_update",
490: "Friend not found",
946: "Please purchase first",
947: "You need to purchase first",
948: "Already collected!",
949: "Level insufficient",
2001: "Daily Facebook sharing rewards has been completed",
10000100: "No club.",
10000101: "Club doesn't exist.",
10000102: "Name is already taken.",
10000103: " Member reached maximum.",
10000104: "Player joined other club.",
10000105: "Member doesn't exist.",
10000106: " Already a member.",
10000107: "Club name cannot be empty."
};
cc._RF.pop();
}, {
GlobalVar: "GlobalVar"
} ],
NetHeadImg: [ function(e, t) {
"use strict";
cc._RF.push(t, "e4e75KpFGFELZ0fdYNZwUkQ", "NetHeadImg");
cc.Class({
extends: cc.Component,
properties: {
_url: null
},
onDestroy: function() {
cc.vv.HeadManager.removeObserver(this);
},
load: function(e, t, i, n) {
this._loadHeadImageLocal(e, t, i, n);
},
checkHeadFileExist: function(e) {
var t = jsb.fileUtils.getWritablePath() + "headimgs/" + e + ".jpg";
return jsb.fileUtils.isFileExist(t);
},
onDownloaded: function(e, t, i) {
cc.log("onDownloaded", e, t, i);
if (e) {
var n = jsb.fileUtils.getWritablePath() + "headimgs/" + md5(i) + ".jpg";
cc.loader.removeItem(n);
this._loadHeadImageFromFile(n, this._callback);
} else {
this._callback && this._callback(!1);
this._callback = null;
}
},
_loadHeadImageWeb: function(e, t, i) {
var n = this.node.getComponent(cc.Sprite);
n._reqHandle && n._reqHandle.rejectFunc();
n._reqHandle = cc.vv.ResManager.loadImage(t, function(e, t) {
if (t) {
cc.isValid(n) && (n.spriteFrame = new cc.SpriteFrame(t));
i && i(!0);
} else i && i(!1);
n._reqHandle = null;
});
},
_loadFromFile: function(e, t) {
var i = {
url: e
};
new Promise(function(t, n) {
i.rejectFunc = function() {
n(0, "主动取消加载");
};
cc.loader.load(e, function(e, i) {
e ? n(-1, e) : t(i);
});
}).then(function(e) {
t(null, e);
}).catch(function(e, n) {
if (e < 0) {
cc.warn(n, i.url);
t(n);
}
});
return i;
},
_loadHeadImageFromFile: function(e, t) {
var i = this;
if (cc.isValid(this.node)) {
var n = this.node.getComponent(cc.Sprite);
n._reqHandle && n._reqHandle.rejectFunc();
n._reqHandle = this._loadFromFile(e, function(e, a) {
if (a) {
cc.isValid(n) && a && (n.spriteFrame = new cc.SpriteFrame(a));
t && t(!0);
} else t && t(!1);
i._callback = null;
n._reqHandle = null;
});
}
},
_loadHeadImageLocal: function(e, t, i, n) {
var a = jsb.fileUtils.getWritablePath() + "headimgs/" + md5(t) + ".jpg", o = !1;
if (jsb.fileUtils.isFileExist(a)) {
this._loadHeadImageFromFile(a, i);
cc.log("load image from file succ", a);
o = !0;
}
if (!o || n) {
this._url && cc.vv.HeadManager.removeObserver(this, this._url);
this._url = t;
o || (this._callback = i);
cc.vv.HeadManager.download(this, e, t);
} else cc.log("no need download: " + e);
}
});
cc._RF.pop();
}, {} ],
NetImg: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e7804PQnhxBOaquJihou6Nv", "NetImg");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.NetImgType = void 0;
var n, a = e("./NetResLoader"), o = cc._decorator, c = o.ccclass, s = o.property, r = o.executeInEditMode, l = o.disallowMultiple, d = o.requireComponent, h = o.menu;
(function(e) {
e[e.net = 1] = "net";
e[e.local = 2] = "local";
e[e.atlas = 3] = "atlas";
})(n = i.NetImgType || (i.NetImgType = {}));
var _ = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.imgType = n.net;
t.localPath = "";
t.imgAtlas = null;
t.imgSprite = null;
t.autoVisible = !0;
t._url = "";
t._netResLoader = null;
return t;
}
Object.defineProperty(t.prototype, "url", {
get: function() {
return this._url;
},
set: function(e) {
if (this._url != e) {
this._url = e;
this.autoVisible && this.imgType == n.net && this._checkValid(this.imgSprite) && (this.imgSprite.node.active = !1);
if (this._netResLoader) {
this._netResLoader.break();
this._netResLoader = null;
}
this._loadImg();
}
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
this.imgSprite || (this.imgSprite = this.node.getComponent(cc.Sprite));
this.imgSprite ? this.autoVisible && (this.imgSprite.node.active = this._checkValid(this.imgSprite)) : console.log("#error# NetImg 找不到cc.Sprite");
};
t.prototype.onDestroy = function() {
if (this._netResLoader) {
this._netResLoader.break();
this._netResLoader = null;
}
};
t.prototype._loadLocalImg = function(e, t) {
var i = this;
void 0 === t && (t = null);
this.localPath.endsWith("");
e = this.localPath + (this.localPath.endsWith("/") ? "" : "/") + e;
cc.loader.loadRes(e, cc.SpriteFrame, function(n, a) {
if (n) {
cc.log("加载本地图片失败:", e);
t && t(!1);
} else if (i._checkValid(i.imgSprite) && a) {
i.autoVisible && (i.imgSprite.node.active = !0);
i.imgSprite.spriteFrame = a;
t && t(!0);
} else cc.log("#图片节点失效#");
});
};
t.prototype._loadImg = function(e) {
var t = this;
void 0 === e && (e = null);
if (this._checkValid(this.imgSprite)) if (this.url) switch (this.imgType) {
case n.net:
var i = this.url, o = i.split("/"), c = {
url: i,
ignoreMaxConcurrency: !0
};
o[o.length - 1].indexOf(".") < 0 && (c.type = "jpg");
this._netResLoader && this._netResLoader.break();
this._netResLoader = new a.NetResLoader();
this._netResLoader.request(c, function(i, n) {
if (i) {
cc.log("图像加载失败出错");
cc.log(i);
t.autoVisible && t._checkValid(t.imgSprite) && (t.imgSprite.node.active = !1);
e && e(!1);
} else if (t._checkValid(t.imgSprite) && n) {
t.autoVisible && (t.imgSprite.node.active = !0);
var a = new cc.SpriteFrame(n);
t.imgSprite.spriteFrame = a;
e && e(!0);
} else cc.log("#图片节点失效#");
}, 2);
break;

case n.local:
this._loadLocalImg(this.url, e);
break;

case n.atlas:
if (this._checkValid(this.imgSprite) && this.imgAtlas) {
this.autoVisible && (this.imgSprite.node.active = !0);
this.imgSprite.spriteFrame = this.imgAtlas.getSpriteFrame(this.url);
}
} else this.autoVisible && (this.imgSprite.node.active = !1);
};
t.prototype._checkValid = function(e) {
return e instanceof cc.Sprite ? cc.isValid(e) && cc.isValid(e.node) : cc.isValid(e);
};
t.prototype.loadUrl = function(e, t) {
void 0 === t && (t = null);
if (e != this._url) {
this._url = e;
this.autoVisible && this.imgType == n.net && this._checkValid(this.imgSprite) && (this.imgSprite.node.active = !1);
if (this._netResLoader) {
this._netResLoader.break();
this._netResLoader = null;
}
this._url && this._loadImg(t);
} else t && t(!0);
};
t.prototype.setUrlValue = function(e) {
this._url = e;
};
__decorate([ s({
type: cc.Enum(n)
}) ], t.prototype, "imgType", void 0);
__decorate([ s({
displayName: "本地路径",
visible: function() {
return this.imgType == n.local;
}
}) ], t.prototype, "localPath", void 0);
__decorate([ s({
type: cc.SpriteAtlas,
visible: function() {
return this.imgType == n.atlas;
}
}) ], t.prototype, "imgAtlas", void 0);
__decorate([ s({
type: cc.Sprite,
displayName: "默认图片"
}) ], t.prototype, "imgSprite", void 0);
__decorate([ s({
displayName: "是否自动显示隐藏图片"
}) ], t.prototype, "autoVisible", void 0);
__decorate([ s({
type: cc.String,
displayName: "url地址",
tooltip: "net:网络图片地址 local:本地图片名字 atlas:图集中的图片名字"
}) ], t.prototype, "url", null);
return __decorate([ c, r, d(cc.Sprite), l, h("通用/NetImg") ], t);
}(cc.Component);
i.default = _;
cc._RF.pop();
}, {
"./NetResLoader": "NetResLoader"
} ],
NetListenerCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "b40f4UhvgZE7YKG/xxMAtSV", "NetListenerCmp");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.listenerList = [];
},
registerMsg: function(e, t, i, n) {
var a = {
cmd: e,
fn: t,
target: i,
bHighpriority: n
};
cc.vv.NetManager.registerMsg(a.cmd, a.fn, a.target, a.bHighpriority);
this.listenerList.push(a);
},
onDestroy: function() {
this.clear();
},
clear: function() {
for (var e, t = i(this.listenerList); !(e = t()).done; ) {
var n = e.value;
cc.vv.NetManager.unregisterMsg(n.cmd, n.fn, n.bHighpriority, n.target);
}
this.listenerList = [];
}
});
cc._RF.pop();
}, {} ],
NetManagerEx: [ function(e, t) {
"use strict";
cc._RF.push(t, "26934JrPedK6Y54gVZEhkNw", "NetManagerEx");
cc.Class({
extends: e("NetManager"),
statics: {
getProjectLan: function() {
var e;
cc.vv.i18nManager && (e = cc.vv.i18nManager.getConfig().id);
return e;
},
printNetLog: function(e, t) {
if (Global.localVersion && 11 != t.c) {
if (245 == t.c) {
"Send" == e && cc.log("%c %s %o", "background: rgb(153,102,255);color:#fff;font-weight:bold;", "report >> " + t.act, t.ext);
return;
}
var i = "background: rgb(50,154,207);color:#fff;font-weight:bold;";
"Receive" == e && (i = "background: rgb(0,99,0);color:#fff;font-weight:bold;");
var n = JSON.stringify(t);
if (Global.isNative()) cc.log(e + ": ", n); else if (t.c_idx >= 0) cc.log("%c %s(%d): %o", i, "[" + t.c + "] " + e, t.c_idx, t); else if (null == t.c_idx) {
i = "background: rgb(255,102,255);color:#fff;font-weight:bold;";
e = "Notification";
cc.log("%c %s: %o", i, "[" + t.c + "] " + e, t);
}
}
},
showNetTipType: function(e) {
var t = this;
if (1 == e) {
if (cc.vv.SceneMgr) {
var i = cc.vv.SceneMgr.GetCurSceneName();
i != Global.SCENE_NAME.LAUNCH && i != Global.SCENE_NAME.HALL_PRELOAD && cc.vv.LoadingTip && cc.vv.LoadingTip.showNetErrorTip();
}
} else 2 == e && cc.loader.loadRes("BalootClient/BaseRes/prefabs/network_error", cc.Prefab, function(e, i) {
if (!e) {
cc.vv.LoadingTip.hide();
var n = cc.director.getScene();
if (!n.getChildByName("network_error")) {
var a = cc.instantiate(i);
a.parent = n;
a.getComponent("NetworkTip").showUI(function() {
t.reconnect();
});
}
}
});
},
handleCommonErrorCode: function(e, t) {
var i = this;
switch (e) {
case 415:
cc.vv.FloatTip.show(___("重连中..."));
cc.vv.GameManager.reqReLogin();
break;

case 500:
cc.vv.FloatTip.show(___("网络错误"));
break;

case 538:
var n = t.minsvip, a = cc.js.formatStr("Upgrade your VIP level to VIP%s to enjoy the game", n);
cc.vv.AlertView.show(___(a), function() {
Global.dispatchEvent("OpenCharge");
}, function() {}, !1, null, null, null, "Upgrade Now");
break;

case 559:
case 425:
var o = ___("The game is under maintenance, please wait patiently!");
cc.vv.AlertView.showTips(o, function() {});
break;

case 560:
t.c == MsgId.GET_NEWER_GIFT_REWARDS || t.c == MsgId.EVENT_VIP_SIGN_REWARD ? cc.vv.AlertView.show(___("One more step to enjoy the game:Mobile number verify"), function() {
cc.vv.UserManager.kycUrl && cc.vv.PopupManager.addPopup("YD_Pro/prefab/Register", {
noTouchClose: !0
});
}, null, !1, null, null, null, ___("Verify Now")) : cc.vv.AlertView.show(___("One more step to enjoy the game:Mobile number verify"), function() {
cc.vv.UserManager.kycUrl && cc.vv.PopupManager.addPopup("YD_Pro/prefab/Register");
}, function() {}, !1, null, null, ___("Verify Later"), ___("Verify Now"));
break;

case 561:
cc.vv.AlertView.show(___("One more step to enjoy the game: Bank verify"), function() {
var e = cc.vv.UserManager.kycUrl;
e && cc.vv.PopupManager.showTopWin("YD_Pro/prefab/yd_charge", {
onShow: function(t) {
t.getComponent("yd_charge").setURL(e);
}
});
}, function() {}, !1, null, null, ___("Verify Later"), ___("Verify Now"));
break;

case 801:
cc.vv.AlertView.showTips(___("发现新版本，请点击更新按钮将游戏更新到最新的版本"), function() {
cc.audioEngine.stopAll();
cc.game.restart();
});
break;

case 802:
break;

case 803:
this.no_need_reconnect = !0;
Global.dispatchEvent(EventId.STOP_ACTION);
if (cc.director.getScene().name != Global.SCENE_NAME.LOGIN) cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.LOGIN, function() {
i.close();
cc.vv.AlertView.showTips(___("系统维护期间无法登录"));
}); else {
this.close();
cc.vv.AlertView.showTips(___("系统维护期间无法登录"));
}
break;

case 804:
cc.vv.FloatTip.show(___("金币不足"));
t.gameChangeDesk && 1 == t.gameChangeDesk || cc.vv.EventManager.emit(EventId.NOT_ENOUGH_COINS);
break;

case 211:
Global.dispatchEvent(EventId.RELOGIN);
cc.vv.AlertView.showTips(___("自动登录已过期，请重新登录"), function() {
cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.LOGIN, function() {
i.close();
});
});
break;

case 931:
cc.vv.GameManager.reqReLogin();
break;

case 4005:
cc.vv.EventManager.emit(EventId.ENTER_HALL);
break;

default:
return !1;
}
return !0;
},
asyncSend: function(e) {
var t = this;
return new Promise(function(i) {
cc.vv.NetManager.registerMsg(e.c, function t(n) {
i(n);
cc.vv.NetManager.unregisterMsg(e.c, t);
});
t.send(e);
});
}
}
});
cc._RF.pop();
}, {
NetManager: "NetManager"
} ],
NetManager: [ function(e, t) {
"use strict";
cc._RF.push(t, "cf88bwpkb1Blb7NwHCu7Dl2", "NetManager");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
cc.Class({
extends: cc.Component,
statics: {
_address: "",
_hearBeatTimeout: 3e3,
_hearBeatInterval: 7e3,
_lastReplyInterval: 50,
_curReplyInterval: 0,
_ws: null,
_hearBeatIntervalIdx: null,
_lastHearBeatTime: 0,
_nextAutoConnectDelay: 0,
_autoConnectCount: 0,
_autoConnectCountMax: 2,
_curtime: 0,
_fnDisconnect: null,
_handlers: {},
_handlersHigh: {},
_Http: e("Http"),
_msgPack: e("msgpack.min"),
_idx: 0,
cacheList: [],
cacheIdxList: [],
notifyHandler: [],
init: function() {
var e = new Date();
this._curtime = e.getTime();
this._lastHearBeatTime = this._curtime;
},
registerMsg: function(e, t, i, n) {
if (null != e && null != e) if (null != t && null != t) {
var a = {
_fn: t,
_tgt: i
}, o = String(e);
if (n && "boolean" == typeof n) {
this._handlersHigh[o] = this._handlersHigh[o] || [];
for (var c = 0; c < this._handlersHigh[o].length; c++) {
var s = this._handlersHigh[o][c]._tgt;
if (this._handlersHigh[o][c]._fn === t && i === s) {
cc.warn("The Highcmd:" + e + "==>fn has registered!");
return;
}
}
this._handlersHigh[o].push(a);
} else {
this._handlers[o] = this._handlers[o] || [];
for (var r = 0; r < this._handlers[o].length; r++) {
var l = this._handlers[o][r]._fn, d = this._handlers[o][r]._tgt;
if (l === t && i === d) {
cc.warn("The cmd:" + e + "==>fn has registered!");
return;
}
}
this._handlers[o].push(a);
}
} else AppLog.warn("fn must be not null and not undefined"); else AppLog.warn("cmd must be not null and not undefined");
},
findSameFuncAdrr: function(e, t) {
for (var i = 0, n = 0; n < e.length; ++n) t === e[n]._fn && ++i;
return i;
},
unregisterMsg: function(e, t, i, n) {
void 0 === i && (i = !1);
if (null != e && null != e) {
var a = String(e);
if (i && "boolean" == typeof i) if (t && "function" == typeof t && this._handlersHigh[a]) {
for (var o = this.findSameFuncAdrr(this._handlersHigh[a], t), c = 0; c < this._handlersHigh[a].length; c++) if (this._handlersHigh[a][c]._fn === t) {
if (!(o > 1)) {
AppLog.log("unregisterHighMsg: ", e, "=>function");
this._handlersHigh[a].splice(c, 1);
break;
}
if (null == n) AppLog.err("请传入需要注销的消息的target"); else if (this._handlersHigh[a][c]._tgt === n) {
AppLog.log("unregisterHighMsg: ", e, "=>function");
this._handlersHigh[a].splice(c, 1);
break;
}
}
} else {
AppLog.log("unregisterMsg: ", e);
delete this._handlersHigh[a];
} else if (t && "function" == typeof t && this._handlers[a]) {
var s = this.findSameFuncAdrr(this._handlers[a], t);
for (c = 0; c < this._handlers[a].length; c++) if (this._handlers[a][c]._fn === t) {
if (!(s > 1)) {
AppLog.log("unregisterHighMsg: ", e, "=>function");
this._handlers[a].splice(c, 1);
break;
}
if (null == n) AppLog.err("请传入需要注销的消息的target"); else if (this._handlers[a][c]._tgt === n) {
AppLog.log("unregisterHighMsg: ", e, "=>function");
this._handlers[a].splice(c, 1);
break;
}
}
} else {
AppLog.log("unregisterMsg: ", e);
delete this._handlers[a];
}
}
},
dispatchNetMsg: function(e) {
"string" == typeof e && (e = JSON.parse(e));
this.handleMsg(e);
Global.isNative() ? AppLog.log("客户端主动分发网络消息", JSON.stringify(e)) : cc.log("%c 客户端主动分发网络消息(%d): %o", "background: rgb(254,189,1);color:#9932cd;font-weight:bold;", 0, e);
},
handleMsg: function(e) {
if (e) {
this.cacheIdxList.indexOf(e.c_idx) < 0 && this.printNetLog("Receive", e);
var t = e.c;
cc.log("lookcmd---", t);
this.printNetLog("lookcmd--", e);
if (t) {
var i = String(t);
this._notifyMsgBack(i);
e.c != MsgId.HEARTBEAT && cc.vv.LoadingTip && this.hideNetTip();
var n = this._handlersHigh[i];
if (n) for (var a = n.length - 1; a >= 0; a--) if ((c = n[a])._tgt) {
if (1 == c._fn.bind(c._tgt)(Global.copy(e))) break;
} else if (1 == c._fn(Global.copy(e))) break;
var o = this._handlers[i];
if (!o) {
n || AppLog.warn("Received msg cmd:" + t + " has no handlers");
return;
}
for (a = o.length - 1; a >= 0; a--) {
var c;
if ((c = o[a])._tgt) {
if (1 == c._fn.bind(c._tgt)(Global.copy(e))) break;
} else if (1 == c._fn(Global.copy(e))) break;
}
if (200 != e.code && 2e4 != e.code && !this.handleCommonErrorCode(e.code, e)) {
203 === e.code && Global.dispatchEvent(EventId.RELOGIN);
var s = Global.code[e.code.toString()], r = s ? cc.vv.Language[s] : "error code:" + e.code.toString();
214 === e.code && cc.vv.AlertView.showTips(r || s, function() {
Global.dispatchEvent(EventId.STOP_ACTION);
cc.vv.NetManager.close();
Global.isNative() && cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.HOTUPDATE);
}.bind(this));
if ([ 399, 934, 710 ].includes(e.code)) ; else {
cc.vv.FloatTip.show(r || s);
cc.log(r);
}
}
51 == t && e.coin && cc.vv.gameData.setCoins(e.coin, !0);
} else AppLog.warn("Received msg is has not the cmd！");
}
},
registerNotify: function(e) {
for (var t = !1, i = 0; i < this.notifyHandler.length; i++) if (this.notifyHandler[i] == e) {
t = !0;
break;
}
t || this.notifyHandler.push(e);
},
unregisterNotify: function(e) {
for (var t = 0; t < this.notifyHandler.length; t++) if (this.notifyHandler[t] == e) {
this.notifyHandler.splice(t, 1);
break;
}
},
_notifyMsgBack: function(e) {
for (var t = 0; t < this.notifyHandler.length; t++) {
var i = this.notifyHandler[t];
i && i(e);
}
},
handleCommonErrorCode: function(e) {
var t = this;
switch (e) {
case 415:
cc.vv.FloatTip.show(cc.vv.Language.reconnect);
cc.vv.GameManager.reqReLogin();
break;

case 500:
cc.vv.AlertView.show(cc.vv.Language.login_fail_again, function() {
cc.vv.GameManager.reqReLogin();
}, function() {
Global.dispatchEvent(EventId.STOP_ACTION);
cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.LOGIN, function() {
t.close();
});
});
break;

case 801:
cc.vv.AlertView.showTips(cc.vv.Language.new_ver, function() {
cc.audioEngine.stopAll();
cc.game.restart();
});
break;

case 803:
this.no_need_reconnect = !0;
Global.dispatchEvent(EventId.STOP_ACTION);
if (cc.director.getScene().name != Global.SCENE_NAME.LOGIN) cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.LOGIN, function() {
t.close();
cc.vv.AlertView.showTips(cc.vv.Language.system_maintenance_tips);
}); else {
this.close();
cc.vv.AlertView.showTips(cc.vv.Language.system_maintenance_tips);
}
break;

case 804:
cc.vv.FloatTip.show(cc.vv.Language.not_enough_coins);
Global.dispatchEvent(EventId.NOT_ENOUGH_COINS);
break;

case 211:
Global.dispatchEvent(EventId.RELOGIN);
cc.vv.AlertView.showTips(cc.vv.Language.invalid_token, function() {
cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.LOGIN, function() {
t.close();
});
});
break;

case 931:
cc.vv.GameManager.reqReLogin();
break;

default:
return !1;
}
return !0;
},
handleResponeData: function(e) {
var t = this;
this._bReconnecting = null;
var i = function(e) {
for (var i = new DataView(e), n = (i.getUint8(0), i.getUint8(1), new Uint8Array(e.byteLength - 8)), a = 0; a < n.length; a++) n[a] = i.getUint8(8 + a);
var o = t._msgPack.decode(n);
t._lastHearBeatTime = t._curtime;
t.handleMsg(JSON.parse(o));
i = null;
n = null;
};
if (window.FileReader && e instanceof Blob) {
var n = new FileReader();
n.addEventListener("loadend", function() {
i(n.result);
});
n.readAsArrayBuffer(e);
} else {
AppLog.log("Not supported FileReader by your browser or devices");
i(e);
}
},
connect: function(e, t) {
var i = this;
this.no_need_reconnect = null;
this._address = e;
this._ws && this.close();
var n = "ws://", a = Global.isUserWSS(e);
a && (n = "wss://");
Global.isAndroid() && a ? this._ws = new WebSocket(n + this._address + "/ws", [], cc.url.raw("resources/common/cert.pem")) : this._ws = new WebSocket(n + this._address + "/ws");
this._ws.onopen = function(e) {
AppLog.log("socket " + i._address + " connect succeed");
i._autoConnectCount = 0;
t && !this.no_need_reconnect && t();
var n = !1;
e.target.url.indexOf(Global.loginServerAddress + "/ws") > -1 && (n = !0);
if (!n) {
AppLog.log("节点服，发心跳！");
i.hearBeat();
this._lastReplyInterval = 100;
}
};
this._ws.onmessage = function(e) {
i.handleResponeData(e.data);
};
this._ws.onerror = function() {
AppLog.err("socket connect error!");
AppLog.log("链接错误，5s后重连");
i._nextAutoConnectDelay = 5e3;
};
this._ws.onclose = function(e) {
AppLog.log(cc.js.formatStr("socket connect closed! url=%s,code=%s", e.target.url, e.code));
cc.log("close url" + e.target.url);
var t = !1;
e.target.url.indexOf(Global.loginServerAddress) > -1 ? t = !0 : i.stopHearBeat();
if (i._ws && !t && i._nextAutoConnectDelay <= 0) {
i._nextAutoConnectDelay = 1e3;
Global.dispatchEvent("SOCKET_BE_CLOSE");
AppLog.log("1秒后自动重连");
} else AppLog.log("链接断开，无任何处理！:" + i._nextAutoConnectDelay);
};
AppLog.log("连接服务" + this._address + "中...");
cc.vv.LoadingTip && cc.vv.LoadingTip.show();
},
close: function(e) {
AppLog.log("主动 close socket!");
if (this._ws) {
this._ws.close();
this.clearTimeoutReconnect();
}
e && e();
this._ws = null;
this.stopHearBeat();
},
reconnect: function() {
AppLog.log("发起重连!");
if (this.isConnect() && null != Global.playerData.uid) {
AppLog.log("连接没断开，直接发协议3");
cc.vv.GameManager.reqReloginUser();
this._hearBeatIntervalIdx || this.hearBeat();
} else cc.vv.GameManager.reqReLogin();
},
isConnect: function() {
var e = this._ws && this._ws.readyState == WebSocket.OPEN;
Global.localVersion && !e && this._ws && cc.log("连接状态:", this._ws.readyState);
return e;
},
isNetAvailable: function() {
return !(!this.isConnect() || this._bReconnecting);
},
clearTimeoutReconnect: function() {
this._nextAutoConnectDelay = 0;
},
send: function(e, t) {
void 0 === t && (t = !1);
if (this.isConnect()) {
if (this._bReconnecting && cc.vv.NetCacheMgr && e && cc.vv.NetCacheMgr.isMsgIdNeedPop(e.c)) {
this.showNetErrorUI(e.c);
return;
}
if (null != e && "string" == typeof e && null == (e = JSON.parse(e)).c) {
AppLog.warn("The msg msgDic is lost cmd");
return !1;
}
e.c_ts = new Date().getTime();
e.c == MsgId.LOGIN && Global.isNative() && (e.x = md5(e.c_ts.toString() + "hero888"));
e.c_idx = this._idx++;
Global.playerData.uid && (e.uid = Global.playerData.uid);
var i = this.getProjectLan();
i && (e.language = i);
e.cache || this.printNetLog("Send", e);
var n = this.pack(JSON.stringify(e)), a = this.generateHead(n), o = this.linkHeadBody(a, n);
this._ws.send(o);
o = null;
!t && cc.vv.LoadingTip && cc.vv.LoadingTip.showNetErrorTip(!0);
return !0;
}
this.showNetErrorUI(e.c);
return !1;
},
getProjectLan: function() {
return Global.language;
},
printNetLog: function(e, t) {
if (Global.localVersion && 11 != t.c) {
var i = JSON.stringify(t);
cc.log(e + ": ", i);
}
},
requestHttp: function(e, t, i, n, a, o, c) {
void 0 === a && (a = "GET");
void 0 === o && (o = !0);
void 0 === c && (c = 1e4);
this._Http.sendReq(e, t, i, n, a, o, c);
},
requestHttpPost: function(e, t, i, n, a, o, c) {
void 0 === a && (a = "POST");
void 0 === o && (o = !0);
void 0 === c && (c = 1e4);
this._Http.sendReqPost(e, t, i, n, a, o, c);
},
pack: function(e) {
return this._msgPack.encode(e);
},
generateHead: function(e) {
var t = e.length, i = Global.jsToCByShort(t), n = Global.jsToCByInt(Math.floor(this._curtime / 1e3));
return "" + i + this.getCheckSum(e, t) + n;
},
linkHeadBody: function(e, t) {
for (var i = e.length, n = t.length, a = new Uint8Array(i + n), o = 0; o < i; o++) a[o] = e.charCodeAt(o);
for (o = 0; o < n; o++) a[i + o] = t[o];
return a;
},
getCheckSum: function(e, t) {
var i, n = t;
i = n < 128 ? Global.srcSum(e, n) : Global.srcSum(e, 128);
return Global.jsToCByShort(i);
},
updateTimer: function(e) {
if (this._address) {
this._curtime += e;
if (this._address.length > 0 && this._hearBeatIntervalIdx && this._curtime - this._lastHearBeatTime > this._hearBeatInterval + this._hearBeatTimeout) {
AppLog.log("【超时重连】当前时间:" + this._curtime + "上次时间:" + this._lastHearBeatTime);
this._bReconnecting || StatisticsMgr.httpReport(StatisticsMgr.HTTP_NET_TIMEOUT);
this._bReconnecting = !0;
this.reconnect();
this._lastHearBeatTime = this._curtime;
} else {
this._nextAutoConnectDelay -= e;
if (0 == this._nextAutoConnectDelay) {
this._autoConnectCount++;
AppLog.log("【自动重连次数】次数:" + this._autoConnectCount + "总次数:" + this._autoConnectCountMax);
if (this._autoConnectCount >= this._autoConnectCountMax) this.showNetErrorUI(); else {
AppLog.log("【自动重连】剩余时间:" + this._nextAutoConnectDelay);
this.reconnect();
}
} else this._curReplyInterval += e;
}
}
},
showNetErrorUI: function(e) {
var t = !1;
cc.vv.NetCacheMgr && (t = cc.vv.NetCacheMgr.isPlayingGame());
t ? this.showNetTipType(2) : cc.vv.NetCacheMgr.isMsgIdNeedPop(e) ? this.showNetTipType(2) : null != cc.vv.UserManager.uid && 0 != cc.vv.UserManager.uid || this.showNetTipType(2);
},
showNetTipType: function(e) {
var t = this;
1 == e ? cc.vv.LoadingTip && cc.vv.LoadingTip.showNetErrorTip() : 2 == e && cc.loader.loadRes("CashHero/prefab/network_error", cc.Prefab, function(e, i) {
if (!e) {
cc.vv.LoadingTip.hide();
var n = cc.director.getScene();
if (!n.getChildByName("network_error")) {
var a = cc.instantiate(i);
a.parent = n;
a.getComponent("NetworkTip").showUI(function() {
t.reconnect();
});
}
}
});
},
hideNetTip: function() {
cc.vv.LoadingTip.hide();
var e = cc.director.getScene().getChildByName("network_error");
e && e.destroy();
},
kickToHall: function() {
cc.vv.AlertView.show(cc.vv.Language.login_fail_again, function() {
cc.vv.EventManager.emit(EventId.ENTER_HALL);
});
},
checkNeedGoLoginUI: function() {
var e = !1;
cc.director.getScene().name == Global.SCENE_NAME.LOGIN && (e = !0);
e && cc.vv.GameManager.goBackLoginScene();
},
hearBeat: function() {
if (this.isConnect()) {
this.stopHearBeat();
this.registerMsg(MsgId.HEARTBEAT, this.pong.bind(this));
this._lastHearBeatTime = this._curtime;
this._hearBeatIntervalIdx = setInterval(this.ping.bind(this), this._hearBeatInterval);
} else AppLog.warn("未连接到websocket，无需发心跳！");
},
stopHearBeat: function() {
if (this._hearBeatIntervalIdx) {
clearInterval(this._hearBeatIntervalIdx);
this._hearBeatIntervalIdx = null;
this.unregisterMsg(MsgId.HEARTBEAT);
this._curReplyInterval = 0;
this._lastReplyInterval = 520;
}
},
ping: function() {
this._curReplyInterval = 0;
this.send({
c: MsgId.HEARTBEAT
}, !0);
},
pong: function() {
this._lastHearBeatTime = this._curtime;
this._lastReplyInterval = .2 * this._lastReplyInterval + .8 * this._curReplyInterval;
this._curReplyInterval > 500 && setTimeout(this.ping.bind(this), 2e3);
},
getNetworkInterval: function() {
return this._lastReplyInterval;
},
getNetworkLevel: function() {
var e = 0;
this._lastReplyInterval <= 100 ? e = 3 : this._lastReplyInterval <= 500 ? e = 2 : this._lastReplyInterval <= 1e3 && (e = 1);
return e;
},
sendAndCache: function(e, t, i) {
void 0 === t && (t = !0);
void 0 === i && (i = !1);
var n = this.getCacheObj(e);
if (!n) {
n = {
parm: Global.copy(e)
};
this.cacheList.push(n);
n.callback = function(e) {
200 == e.code && (e.spcode && e.spcode > 0 || n.c_idx == e.c_idx && (n.msg = Global.copy(e)));
};
this.registerMsg(n.parm.c, n.callback, this, !0);
}
n.c_idx = this._idx;
if (i) {
e.cache = 1;
this.cacheIdxList.push(n.c_idx);
}
this.send(e, t);
if (n.msg) {
Global.isNative() || cc.log("%c cache(%d): %o", "background: rgb(51, 255, 102);color:#9932cd;font-weight:bold;", n.c_idx, n.msg);
n.msg.c_idx = -1;
this.handleMsg(n.msg);
}
},
getMsgInCache: function() {},
getCacheObj: function(e) {
for (var t, n = i(this.cacheList); !(t = n()).done; ) {
var a = t.value;
if (this.isObjectValueEqual(e, a.parm)) return a;
}
return null;
},
isObjectValueEqual: function(e, t) {
var i = Object.getOwnPropertyNames(e), n = Object.getOwnPropertyNames(t);
if (i.length != n.length) return !1;
for (var a = 0; a < i.length; a++) {
var o = i[a], c = e[o], s = t[o];
if ("object" == typeof c) return !!this.isObjectValueEqual(c, s);
if (c !== s) return !1;
}
return !0;
},
hasCache: function(e) {
var t = this.getCacheObj(e);
return !(!t || !t.msg);
},
cache: function(e) {
this.hasCache(e) || this.sendAndCache(e, !0, !0);
}
}
});
cc._RF.pop();
}, {
Http: "Http",
"msgpack.min": "msgpack.min"
} ],
NetQueueSystem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "090eeLiPg5FEp2K2Ilo4i3M", "NetQueueSystem");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../System"), a = cc._decorator, o = a.ccclass, c = (a.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.callFuncMap = {};
t.noCacheCallFuncMap = {};
t.queue = [];
t.running = !0;
t.isInit = !1;
t.isBackground = !1;
return t;
}
t.prototype.onInit = function() {
this.netListener = this.node.addComponent("NetListenerCmp");
cc.game.on(cc.game.EVENT_HIDE, this.onGameHide, this);
cc.game.on(cc.game.EVENT_SHOW, this.onGameShow, this);
};
t.prototype.run = function() {
this.clearQueue();
this.isInit = !0;
};
t.prototype.register = function(e, t) {
this.callFuncMap[e] = t;
this.netListener.registerMsg(e, this.onHandle, this);
};
t.prototype.registerNoQueue = function(e, t) {
this.noCacheCallFuncMap[e] = t;
this.netListener.registerMsg(e, this.onHandleImmediate, this);
};
t.prototype.onHandle = function(e) {
this.isBackground || this.isInit && this.queue.push(e);
};
t.prototype.onHandleImmediate = function(e) {
if (!this.isBackground && this.isInit) {
var t = this.noCacheCallFuncMap[e.c];
t && t(e);
}
};
t.prototype.onUpdate = function() {
if (this.running && this.queue.length > 0) {
var e = this.queue.shift(), t = this.callFuncMap[e.c];
t && t(e);
}
};
t.prototype.clearQueue = function() {
this.queue = [];
};
t.prototype.onGameHide = function() {
this.clearQueue();
this.isBackground = !0;
};
t.prototype.onGameShow = function() {
this.isBackground = !1;
};
return __decorate([ o ], t);
}(n.default));
i.default = c;
cc._RF.pop();
}, {
"../System": "System"
} ],
NetResLoader: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "cb0a8WZDBlIa6UttsnSF8UF", "NetResLoader");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.NetResLoader = void 0;
var n = function() {
function e() {
this._reqParam = null;
this._cmpHandler = null;
this._retryCnt = 1;
}
e.prototype.request = function(e, t, i) {
void 0 === i && (i = 1);
this._reqParam = e;
this._cmpHandler = t;
this._retryCnt = i;
this._startLoad();
};
e.prototype._startLoad = function() {
var e = this;
cc.loader.load(this._reqParam, function(t, i) {
if (t) {
cc.log("图像加载失败出错");
cc.log(t);
if (e._retryCnt > 0) {
e._retryCnt--;
cc.log("开始重试");
e._startLoad();
} else {
cc.isValid(e._cmpHandler) ? e._cmpHandler(t, i) : cc.log("#资源加载失败---请求已经被停止#");
e.clear();
}
} else {
cc.isValid(e._cmpHandler) ? e._cmpHandler(t, i) : cc.log("#资源加载成功--请求已经被停止#");
e.clear();
}
});
};
e.prototype.break = function() {
this.clear();
};
e.prototype.clear = function() {
this._retryCnt = 0;
this._reqParam = null;
this._cmpHandler = null;
};
return e;
}();
i.NetResLoader = n;
cc._RF.pop();
}, {} ],
NetworkTip: [ function(e, t) {
"use strict";
cc._RF.push(t, "89f0aaHUmNP+5HzbbRp3h1Y", "NetworkTip");
cc.Class({
extends: e("UI_popwin_interface"),
properties: {
_clickCall: null
},
onLoad: function() {
cc.find("btn_connect", this.node).on("click", this.onClickReconnect, this);
},
start: function() {},
showUI: function(e) {
this._clickCall = e;
},
onClickReconnect: function() {
this._clickCall && this._clickCall();
this.node.destroy();
}
});
cc._RF.pop();
}, {
UI_popwin_interface: "UI_popwin_interface"
} ],
NewAppHintView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c25dcRks45CGb8qfuZ32Luz", "NewAppHintView");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.contentLabel = null;
t.buttonLabel = null;
t.okButton = null;
return t;
}
t.prototype.onLoad = function() {
this.okButton.node.on("click", this.onOkButtonClick, this);
};
t.prototype.onInit = function(e) {
this.data = e;
this.contentLabel.string = ___("For a better experience, the game has prepared the latest version!");
this.buttonLabel.string = ___("下载");
};
t.prototype.onOkButtonClick = function() {
var e = this.data;
cc.vv.PlatformApiMgr.openURL(e);
cc.vv.PopupManager.removePopup(this.node);
};
__decorate([ o(cc.Label) ], t.prototype, "contentLabel", void 0);
__decorate([ o(cc.Label) ], t.prototype, "buttonLabel", void 0);
__decorate([ o(cc.Button) ], t.prototype, "okButton", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
NewGuideHintCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "891ce3BZXJBg4aIl49VCKB5", "NewGuideHintCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.key = "";
t.step = 0;
t.buttons = [];
return t;
}
Object.defineProperty(t.prototype, "localKet", {
get: function() {
return "LOCAL_GUIDE_" + this.key;
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
var e = this;
this.node.addComponent("EventListenerCmp").registerEvent("EVENT_CHANGE_NEW_GUIDE", this.updateView, this);
for (var t = 0, i = this.buttons; t < i.length; t++) {
var n = i[t];
n && n.node.on("click", function() {
if (e.node.activeInHierarchy && Global.getLocal(e.localKet, 0) == e.step) {
Global.saveLocal(e.localKet, e.step + 1);
Global.dispatchEvent("EVENT_CHANGE_NEW_GUIDE");
}
});
}
};
t.prototype.onEnable = function() {
this.updateView();
};
t.prototype.updateView = function() {
var e = Global.getLocal(this.localKet, 0);
this.node.active = e == this.step;
};
__decorate([ o ], t.prototype, "key", void 0);
__decorate([ o ], t.prototype, "step", void 0);
__decorate([ o([ cc.Button ]) ], t.prototype, "buttons", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
NewerGiftView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7836bdkDo5AAZyv7JhqyJuM", "NewerGiftView");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.btn_get = null;
t.btn_rule = null;
return t;
}
t.prototype.onLoad = function() {
this.node.addComponent("NetListenerCmp").registerMsg(MsgId.GET_NEWER_GIFT_REWARDS, this.GET_NEWER_GIFT_REWARDS, this);
this.btn_get.node.on("click", this.onGetRewards, this);
this.btn_rule.node.on("click", this.onClickRule, this);
};
t.prototype.setCoin = function(e) {
this.coin = e;
cc.find("bg_newer_gift/lbl", this.node).getComponent(cc.Label).string = e;
};
t.prototype.onGetRewards = function() {
cc.vv.PopupManager.removePopup(this.node);
0 === cc.vv.UserManager.isbindphone && cc.vv.PopupManager.addPopup("YD_Pro/prefab/Register", {
onShow: function() {}
});
};
t.prototype.GET_NEWER_GIFT_REWARDS = function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0); else {
cc.vv.UserManager.charmpack = 0;
Global.RewardFly(e.rewards, this.btn_get.node.convertToWorldSpaceAR(cc.v2(0, 0)));
cc.vv.PopupManager.removePopup(this.node);
}
};
t.prototype.onClickRule = function() {
var e = this;
cc.vv.PopupManager.addPopup("YD_Pro/newergift/newergift_rule", {
onShow: function(t) {
t.getComponent("newergift_rule").init(e.coin);
}
});
};
__decorate([ o(cc.Button) ], t.prototype, "btn_get", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btn_rule", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
NodeLifeCallBack: [ function(e, t) {
"use strict";
cc._RF.push(t, "8e0d1TLORNGJLTD2Kd4B5Jl", "NodeLifeCallBack");
cc.Class({
extends: cc.Component,
properties: {
_destroyCall: null,
_startCall: null,
_disableCall: null
},
onLoad: function() {},
start: function() {
cc.isValid(this._startCall) && this._startCall();
},
onDestroy: function() {
cc.isValid(this._destroyCall) && this._destroyCall();
},
onDisable: function() {
cc.isValid(this._disableCall) && this._disableCall();
},
setStartCall: function(e) {
this._startCall = e;
},
setDestroyCall: function(e) {
this._destroyCall = e;
},
setDisableCall: function(e) {
this._disableCall = e;
}
});
cc._RF.pop();
}, {} ],
Number_Tuning: [ function(e, t) {
"use strict";
cc._RF.push(t, "f6d3bvTzTtMTrEwY01bgSZi", "Number_Tuning");
cc.Class({
extends: cc.Component,
properties: {
value: {
default: 1,
type: cc.Float,
tooltip: !1
},
minVal: {
default: 1,
type: cc.Float,
tooltip: !1
},
maxVal: {
default: 1e3,
type: cc.Float,
tooltip: !1
},
decimals: {
default: 2,
type: cc.Integer,
tooltip: !1
},
showPrefix: {
default: "",
type: cc.String,
tooltip: !1
},
showSuffix: {
default: "",
type: cc.String,
tooltip: !1
},
stepSize: {
default: 1,
type: cc.Float,
tooltip: !1
},
betmodel: {
default: !1,
type: cc.Boolean,
tooltip: !1
}
},
onLoad: function() {
this.lblVal = cc.find("lbl_val", this.node).getComponent(cc.Label);
this.node.on("click", this.onClick, this);
Global.onClick("btn_min", this.node, this.onClickMin, this);
Global.onClick("btn_max", this.node, this.onClickMax, this);
Global.onClick("btn_minus", this.node, this.onClickMinus, this);
Global.onClick("btn_add", this.node, this.onClickAdd, this);
},
start: function() {
this._checkBetModel();
this.setValue(this.value);
},
getValue: function() {
return this.value;
},
setValue: function(e) {
var t = Math.min(this.maxVal, Math.max(this.minVal, e));
this.value = t;
this.lblVal.string = this.showPrefix + t.toFixed(this.decimals) + this.showSuffix;
this._changeCall && this._changeCall(t);
},
setValChangeCall: function(e) {
this._changeCall = e;
},
onClick: function() {
var e = this;
cc.loader.loadRes("Table_Common/TableRes/prefab/node_input", cc.Prefab, function(t, i) {
if (!t) {
var n = cc.find("Canvas");
if (!cc.find("node_input", n)) {
var a = cc.instantiate(i);
a.parent = n;
a.active = !0;
a.getComponent("Input_Nums").init(e.minVal, e.maxVal, function(t) {
e.setValue(t);
});
}
}
});
Global.TableSoundMgr.playCommonEff("com_click");
},
onClickMin: function() {
this.setValue(this.minVal);
var e = cc.vv.gameData.getGameCfg();
e && e.NumberTuning_Min_Eff ? Global.TableSoundMgr.playEffect(e.NumberTuning_Min_Eff) : Global.TableSoundMgr.playCommonEff("com_click");
},
onClickMax: function() {
this.setValue(this.maxVal);
var e = cc.vv.gameData.getGameCfg();
e && e.NumberTuning_Max_Eff ? Global.TableSoundMgr.playEffect(e.NumberTuning_Max_Eff) : Global.TableSoundMgr.playCommonEff("com_click");
},
calcSuitableStep: function() {
var e = this.value;
return e < this.minVal + 10 * this.stepSize ? this.stepSize : e < this.minVal + 100 * this.stepSize ? 10 * this.stepSize : e < this.minVal + 1e3 * this.stepSize ? 100 * this.stepSize : 100;
},
onClickMinus: function() {
var e = this.calcSuitableStep();
this.setValue(this.value - e);
var t = cc.vv.gameData.getGameCfg();
t && t.NumberTuning_Minus_Eff ? Global.TableSoundMgr.playEffect(t.NumberTuning_Minus_Eff) : Global.TableSoundMgr.playCommonEff("com_click");
},
onClickAdd: function() {
var e = this.calcSuitableStep();
this.setValue(this.value + e);
var t = cc.vv.gameData.getGameCfg();
t && t.NumberTuning_Add_Eff ? Global.TableSoundMgr.playEffect(t.NumberTuning_Add_Eff) : Global.TableSoundMgr.playCommonEff("com_click");
},
_checkBetModel: function() {
if (this.betmodel) {
var e = cc.vv.gameData.getDeskInfo();
if (e && e.config) {
this.maxVal = e.config.maxbet;
this.minVal = e.config.minbet;
}
}
}
});
cc._RF.pop();
}, {} ],
PBAutoHost: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "68e39uUO3JGG6ufl5gtDfk5", "PBAutoHost");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBAutoHost = void 0;
var n = cc._decorator, a = n.ccclass, o = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.show = function() {
var e = this;
if (1 !== facade.dm.tableInfo.isViewer) {
this.node.active = !0;
this.node.on(cc.Node.EventType.TOUCH_END, function() {
e.hide();
});
cc.find("robot", this.node).getComponent(sp.Skeleton).setAnimation(0, "idle", !0);
facade.playersCtrl.getPlayerByPosition(0).userInfoCmp.showAutoHost(!0);
}
};
t.prototype.hide = function() {
if (this.node.active) {
this.node.active = !1;
this.node.off(cc.Node.EventType.TOUCH_END);
facade.dm.msgWriter.sendCancleAutoHost();
}
facade.playersCtrl.getPlayerByPosition(0).userInfoCmp.showAutoHost(!1);
};
return __decorate([ a ], t);
}(cc.Component));
i.PBAutoHost = o;
cc._RF.pop();
}, {} ],
PBBgCtrl: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "eb725rkM45Gbpr+qfjgho8u", "PBBgCtrl");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBBgCtrl = void 0;
var n = cc._decorator, a = n.ccclass, o = (n.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._bgName = "";
return t;
}
t.prototype.onLoad = function() {
this._bgNode = this.node.getChildByName("bg");
var e = this.node.getChildByName("logo");
e && (e.active = !1);
this.updateBg();
};
t.prototype.changeSkin = function(e) {
void 0 === e && (e = "");
this._bgName = e;
this.updateBg();
};
t.prototype.updateBg = function() {
if (this._bgNode && this._bgName) {
var e = cc.director.getScene().getComponentInChildren("DeskFrameMap");
e && e[this._bgName] ? this._bgNode.getComponent(cc.Sprite).spriteFrame = e[this._bgName] : Global.comloadsprite("BalootClient/BaseRes/images/poker_desk/" + this._bgName, this._bgNode);
}
};
return __decorate([ a ], t);
}(cc.Component));
i.PBBgCtrl = o;
cc._RF.pop();
}, {} ],
PBCardData: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1d839xIyW1NaKQn5UsEQrZ6", "PBCardData");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBCardVo = i.cardsToString = i.PBCardNameMap = i.PBCardSuitType = i.getPBCardRow = i.getPBCardVal = i.getPBCardSuit = void 0;
function n(e) {
return e >> 4;
}
i.getPBCardSuit = n;
function a(e) {
return 15 & e;
}
i.getPBCardVal = a;
function o(e, t) {
return e << 4 | t;
}
i.getPBCardRow = o;
var c;
(function(e) {
e[e.none = 0] = "none";
e[e.diamond = 1] = "diamond";
e[e.club = 2] = "club";
e[e.heart = 3] = "heart";
e[e.spade = 4] = "spade";
e[e.king = 5] = "king";
})(c = i.PBCardSuitType || (i.PBCardSuitType = {}));
i.PBCardNameMap = {
1: "A",
2: "2",
3: "3",
4: "4",
5: "5",
6: "6",
7: "7",
8: "8",
9: "9",
10: "10",
11: "J",
12: "Q",
13: "K",
14: "A"
};
i.cardsToString = function(e, t) {
void 0 === t && (t = !0);
e = e.concat();
t && e.sort(function(e, t) {
var i = a(e), o = a(t);
return i > o ? -1 : i == o ? n(t) - n(e) : 1;
});
var o = [];
e.forEach(function(e) {
o.push(i.PBCardNameMap[a(e)]);
});
return o.join("");
};
var s = function() {
function e() {
this.suit = 0;
this.value = 0;
this.raw = 0;
this.wildAs = null;
this.aceAsOne = !1;
}
e.prototype.initByRawValue = function(e) {
this.suit = n(e);
this.value = a(e);
this.raw = e;
return this;
};
e.prototype.initBySuitAndValue = function(e, t) {
this.suit = e;
this.value = t;
this.raw = o(e, t);
return this;
};
e.prototype.isRed = function() {
return this.suit == c.diamond || this.suit == c.heart;
};
e.prototype.getResultVal = function() {
return this.aceAsOne ? 1 : this.wildAs ? this.wildAs.value : this.value;
};
e.prototype.getResultSuit = function() {
return this.wildAs ? this.wildAs.suit : this.suit;
};
return e;
}();
i.PBCardVo = s;
cc._RF.pop();
}, {} ],
PBCardItemSimple: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "140305tsOZLoJ5Bpr3hMmrP", "PBCardItemSimple");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBCardItemSimple = void 0;
var n = e("./PBCardData"), a = e("./PBCardItem"), o = cc._decorator, c = o.ccclass, s = (o.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.refreshView = function() {
if (this.isLoaded && this.cardVo) if (this.cardVo.suit == n.PBCardSuitType.king) {
this.iconVal && (this.iconVal.node.active = !1);
this.iconSuitSmall && (this.iconSuitSmall.node.active = !1);
if (this.special_suit) {
this.special_suit.node.active = !0;
this.special_suit.url = "joker_" + this.cardVo.value;
}
} else {
this.special_suit && (this.special_suit.node.active = !1);
if (this.iconVal) {
this.iconVal.node.active = !0;
this.iconVal.url = (this.cardVo.isRed() ? "num_red_" : "num_black_") + this.cardVo.value;
}
if (this.iconSuitSmall) {
this.iconSuitSmall.node.active = !0;
this.iconSuitSmall.url = "suit_" + this.cardVo.suit;
}
}
};
return __decorate([ c ], t);
}(a.PBCardItem));
i.PBCardItemSimple = s;
cc._RF.pop();
}, {
"./PBCardData": "PBCardData",
"./PBCardItem": "PBCardItem"
} ],
PBCardItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6640eaFWGVLUZXdHDzSlg0G", "PBCardItem");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBCardItem = void 0;
var n = e("../../../BalootClient/game_common/common_cmp/ImgSwitchCmpTS"), a = e("../../../BalootClient/game_common/common_cmp/NetImg"), o = e("./PBCardData"), c = cc._decorator, s = c.ccclass, r = (c.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.holder = null;
t.iconVal = null;
t.iconSuitSmall = null;
t.iconSuitBig = null;
t.special_suit = null;
t.bg_front = null;
t.mask = null;
t.mask_selected = null;
t.fullCard = null;
t.group_falg = null;
t.effect_pos = null;
t.cardBack = null;
t.isLoaded = !1;
t.selected = !1;
t.cardVo = null;
t.selectSpace = 40;
t.holderY = 0;
t._skin = "poker_face_0";
t._touchOffsetX = 0;
t._touchOffsetY = 0;
return t;
}
Object.defineProperty(t.prototype, "touchOffsetX", {
get: function() {
return this._touchOffsetX;
},
set: function(e) {
this._touchOffsetX = e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "touchOffsetY", {
get: function() {
return this._touchOffsetY;
},
set: function(e) {
this._touchOffsetY = e;
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
this.initView();
this.refreshView();
};
t.prototype.initView = function() {
this.holder = this.node.getChildByName("holder");
this.holderY = this.holder.y;
this.bg_front = this.holder.getChildByName("bg_front");
var e = this.holder.getChildByName("icon_number");
this.iconVal = e && e.getComponent(a.default);
var t = this.holder.getChildByName("icon_suit_small");
this.iconSuitSmall = t && t.getComponent(a.default);
var i = this.holder.getChildByName("icon_suit_big");
this.iconSuitBig = i && i.getComponent(a.default);
var n = this.holder.getChildByName("special_suit");
this.special_suit = n && n.getComponent(a.default);
this.mask = this.holder.getChildByName("mask");
this.mask_selected = this.holder.getChildByName("mask_selected");
var o = this.holder.getChildByName("full_card");
this.fullCard = o && o.getComponent(a.default);
this.group_falg = this.holder.getChildByName("group_falg");
this.effect_pos = this.node.getChildByName("effect_pos");
var c = this.node.getChildByName("card_back");
this.cardBack = c && c.getComponent(a.default);
this.isLoaded = !0;
};
t.prototype.showMask = function(e) {
this.isLoaded && (this.mask.active = e);
};
t.prototype.showCardBack = function(e) {
var t = this.node.getChildByName("card_back");
t && (t.active = e);
};
t.prototype.bind = function(e) {
this.cardVo = this.genCardVo(e);
this.refreshView();
};
t.prototype.genCardVo = function(e) {
return new o.PBCardVo().initByRawValue(e);
};
t.prototype.refreshView = function() {
if (this.isLoaded && this.cardVo) {
this.cardBack && (this.cardBack.node.active = !1);
if (this.fullCard) this.cardVo.value > 10 && this.cardVo.value < 14 || this.cardVo.suit == o.PBCardSuitType.king ? this.fullCard.url = this.cardVo.raw + this.skin : this.fullCard.url = this.cardVo.raw + ""; else if (this.cardVo.suit == o.PBCardSuitType.king) {
this.iconVal && (this.iconVal.node.active = !1);
this.iconSuitSmall && (this.iconSuitSmall.node.active = !1);
this.iconSuitBig && (this.iconSuitBig.node.active = !1);
if (this.special_suit) {
this.special_suit.node.active = !0;
this.special_suit.url = "" + this.cardVo.raw + this.skin;
}
} else {
if (this.iconVal) {
this.iconVal.node.active = !0;
this.iconVal.url = (this.cardVo.isRed() ? "num_red_" : "num_black_") + (1 === this.cardVo.value ? 14 : this.cardVo.value);
}
if (this.iconSuitSmall) {
this.iconSuitSmall.node.active = !0;
this.iconSuitSmall.url = "suit_small_" + this.cardVo.suit;
}
if (cc.vv && cc.vv.gameData && [ 255, 291, 293 ].indexOf(cc.vv.gameData.getGameId()) >= 0) {
this.special_suit && (this.special_suit.node.active = !1);
if (this.iconSuitBig) {
this.iconSuitBig.node.active = !0;
this.iconSuitBig.url = "suit_big_" + this.cardVo.suit;
}
} else if (this.cardVo.value > 10 && this.cardVo.value < 14) {
this.iconSuitBig && (this.iconSuitBig.node.active = !1);
if (this.special_suit) {
this.special_suit.node.active = !0;
this.special_suit.url = "" + this.cardVo.raw + this.skin;
}
} else {
this.special_suit && (this.special_suit.node.active = !1);
if (this.iconSuitBig) {
this.iconSuitBig.node.active = !0;
this.iconSuitBig.url = "suit_big_" + this.cardVo.suit;
}
}
}
}
};
t.prototype.setSelect = function(e, t, i) {
var n = this;
void 0 === t && (t = !0);
void 0 === i && (i = !0);
if (i) {
this.selected = e;
this.mask_selected && (this.mask_selected.active = e);
}
var a = this.holder.selectTw, o = this.holder.unSelectTw;
if (e) if (t) {
o && o.stop();
a = cc.tween(this.holder).to(.2, {
y: this.holderY + this.selectSpace
}, {
easing: "quartOut"
}).call(function() {
n.holder.selectTw = null;
}).start();
this.holder.selectTw = a;
} else a || (this.holder.y = this.holderY + this.selectSpace); else {
a && a.stop();
if (t) {
o = cc.tween(this.holder).to(.2, {
y: this.holderY
}, {
easing: "quartOut"
}).call(function() {
n.holder.unSelectTw = null;
}).start();
this.holder.unSelectTw = o;
} else o || (this.holder.y = this.holderY);
}
};
t.prototype.showGroupFlag = function(e, t) {
void 0 === t && (t = 0);
if (this.group_falg) if (e) {
this.group_falg.active = !0;
this.group_falg.getComponent(n.default).setIndex(t % 2);
} else this.group_falg.active = !1;
};
t.prototype.showEffectPos = function(e) {
this.effect_pos && (this.effect_pos.active = e);
};
t.prototype.getEffectPosGlobalPos = function() {
return this.effect_pos.convertToWorldSpaceAR(cc.v2(0, 0));
};
Object.defineProperty(t.prototype, "skin", {
get: function() {
return this._skin;
},
set: function(e) {
if (e) {
"poker_face_000" == e && (e = "poker_face_0");
if (this._skin != e) {
this._skin = e;
this.isLoaded && this.refreshView();
}
}
},
enumerable: !1,
configurable: !0
});
t.prototype.toTouchState = function(e, t, i) {
var n = this;
void 0 === e && (e = !0);
void 0 === t && (t = 1.2);
void 0 === i && (i = .2);
this.node.disableAutoOut && (i += .35);
var a = this.holder.touchStateTw, o = this.holder.untouchStateTw;
if (e) {
o && o.stop();
a = cc.tween(this.holder).to(i, {
scaleX: t,
scaleY: t
}, {
easing: "quartOut"
}).call(function() {
n.holder.touchStateTw = null;
}).start();
this.holder.touchStateTw = a;
} else {
a && a.stop();
o = cc.tween(this.holder).to(i, {
scaleX: 1,
scaleY: 1
}, {
easing: "quartOut"
}).call(function() {
n.holder.untouchStateTw = null;
}).start();
this.holder.untouchStateTw = o;
}
};
return __decorate([ s ], t);
}(cc.Component));
i.PBCardItem = r;
cc._RF.pop();
}, {
"../../../BalootClient/game_common/common_cmp/ImgSwitchCmpTS": "ImgSwitchCmpTS",
"../../../BalootClient/game_common/common_cmp/NetImg": "NetImg",
"./PBCardData": "PBCardData"
} ],
PBChatData: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6b749dYwJlBdKJkXiFUhL63", "PBChatData");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBChatMsgVo = i.PBChatFastWordCfg = i.PBChatMsgType = void 0;
var n;
(function(e) {
e[e.text = 1] = "text";
e[e.emotion = 2] = "emotion";
e[e.fast_word = 3] = "fast_word";
e[e.diy = 4] = "diy";
})(n = i.PBChatMsgType || (i.PBChatMsgType = {}));
i.PBChatFastWordCfg = new Map([ [ 0, {
get words() {
return ___("谢谢！");
},
sound: "chat/game_phrase1"
} ], [ 1, {
get words() {
return ___("快点吧");
},
sound: "chat/game_phrase2"
} ], [ 2, {
get words() {
return ___("对的就这样");
},
sound: "chat/game_phrase3"
} ], [ 3, {
get words() {
return ___("放轻松，我后面好好打");
},
sound: "chat/game_phrase4"
} ], [ 4, {
get words() {
return ___("啊呦~");
},
sound: "chat/game_phrase5"
} ], [ 5, {
get words() {
return ___("我说了算");
},
sound: "chat/game_phrase6"
} ], [ 6, {
get words() {
return ___("棒棒的，你值得拥有！");
},
sound: "chat/game_phrase7"
} ], [ 7, {
get words() {
return ___("对不起");
},
sound: "chat/game_phrase8"
} ], [ 8, {
get words() {
return ___("再见");
},
sound: "chat/game_phrase9"
} ], [ 9, {
get words() {
return ___("你太欺负人了");
},
sound: "chat/game_phrase10"
} ], [ 10, {
get words() {
return ___("兄弟，耐心一点！");
},
sound: "chat/game_phrase11"
} ] ]);
var a = function() {
function e() {}
e.prototype.parse = function(e) {
this.rawStr = e;
e = JSON.parse(e);
this.uid = e.uid;
this.nick = e.nick;
this.gender = e.gender || 0;
this.icon = e.icon;
this.avatar = e.avatar || 0;
this.chatSkin = e.chatSkin || "chat_000";
this.fontSkin = e.fontSkin || "font_color_0";
this.msgType = e.msgType;
this.sendTime = e.sendTime;
this.content = e.content;
this.fcoin = e.fcoin || 0;
return this;
};
e.prototype.getMsg = function() {
var e = {};
e.uid = this.uid;
e.nick = this.nick;
e.gender = this.gender;
e.icon = this.icon;
e.avatar = this.avatar;
e.chatSkin = this.chatSkin;
e.fontSkin = this.fontSkin;
e.msgType = this.msgType;
e.sendTime = this.sendTime;
e.content = this.content;
e.fcoin = this.fcoin || 0;
return JSON.stringify(e);
};
e.prototype.getContentText = function() {
return this.msgType == n.fast_word ? i.PBChatFastWordCfg.get(this.content).words || "" : this.content;
};
return e;
}();
i.PBChatMsgVo = a;
cc._RF.pop();
}, {} ],
PBChatRecordItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "05b80jwkqdOSoz6fWCk+y/V", "PBChatRecordItem");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../../../BalootClient/game_common/common_cmp/NetImg"), a = e("../../../BalootClient/game_common/common_cmp/UserAvatar"), o = e("./PBChatData"), c = cc._decorator, s = c.ccclass, r = (c.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.vo = null;
return t;
}
t.prototype.bind = function(e) {
var t = this;
this.vo = e;
var i = cc.find("head_icon", this.node).getComponent(a.default), c = cc.find("label_nick", this.node).getComponent(cc.Label), s = cc.find("label_content", this.node).getComponent(cc.Label), r = cc.find("icon_emotion", this.node);
i.updataAvatar({
uid: e.uid,
icon: e.icon,
avatarFrame: e.avatar
});
c.string = e.nick || "";
if (e.msgType == o.PBChatMsgType.emotion) {
s.node.active = !1;
r.active = !0;
r.getChildByName("icon").getComponent(n.default).url = e.content;
this.scheduleOnce(function() {
t.node.height = Math.abs(r.y) + r.height / 2 + 10;
});
} else {
s.node.active = !0;
r.active = !1;
s.string = e.getContentText();
this.scheduleOnce(function() {
t.node.height = Math.abs(s.node.y) + s.node.height + 10;
});
}
};
return __decorate([ s ], t);
}(cc.Component));
i.default = r;
cc._RF.pop();
}, {
"../../../BalootClient/game_common/common_cmp/NetImg": "NetImg",
"../../../BalootClient/game_common/common_cmp/UserAvatar": "UserAvatar",
"./PBChatData": "PBChatData"
} ],
PBChat: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a18e8at3A1OVoSTUjmwD3rz", "PBChat");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBChat = void 0;
var n = e("../../../BalootClient/game_common/CommonStyle"), a = e("../../../BalootClient/game_common/common_cmp/NetImg"), o = e("../DebugPanel"), c = e("../PBEvent"), s = e("../PBLogic"), r = e("./PBChatData"), l = e("./PBChatRecordItem"), d = cc._decorator, h = d.ccclass, _ = d.property, p = [ "emoji_0", "emoji_2", "emoji_3" ], u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.btn_interactive = null;
t.panel_interactive = null;
t.panel_chat = null;
t.touch_close_chat_area = null;
t.touch_close_interactive_area = null;
t.panel_emotion = null;
t.emotionItemTemplate = null;
t.emotionTab = null;
t._emotionItems = [];
t._currEmotionTabIndex = -1;
t.panel_fast_word = null;
t.panel_fast_word_sv = null;
t.panel_record = null;
t.panel_record_sv = null;
t.record_item_template = null;
t.tab = null;
t.btn_chat_switch = null;
t.redHintNode = null;
t.editBox = null;
t.sendBtn = null;
t.labelInputCharCnt = null;
t._currIndex = -1;
t._data = {
initEmotion: !1,
initFastWord: !1,
initRecord: !1
};
t._recordItems = [];
t._cacheMsg = null;
t.lastSendTime = null;
t._proxy = null;
t._emotionSkin = [ "emoji_0" ];
return t;
}
i = t;
t.prototype.onLoad = function() {
var e = this, t = this.node.addComponent("EventListenerCmp");
t.registerEvent("EVENT_GAME_CHAT_SWITCH", function() {
e.onChatSwitchBtn();
var t = e.node.getComponentInChildren("Tabbar");
if (t) {
t.setPage(1);
var i = e.node.getComponentInChildren("SocialFriendViewCmp");
i.isInviteModel = !0;
var n = e.getTablePlayerIds();
i.inviteUids = n;
i.updateView();
}
}, this);
t.registerEvent("EVENT_GAME_INVITE_SWITCH", function() {
e.onChatSwitchBtn();
var t = e.node.getComponentInChildren("Tabbar");
if (t) {
t.setPage(2);
var i = e.node.getComponentInChildren("PageChatView");
e.scheduleOnce(function() {
i && i.req();
});
}
}, this);
this.btn_interactive.node.on("click", function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
e.openInteractive();
}, this);
this.btn_chat_switch.node.on("click", function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
e.onChatSwitchBtn();
}, this);
this.touch_close_chat_area.on(cc.Node.EventType.TOUCH_END, function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
e.closeChat();
}, this);
this.touch_close_interactive_area.on(cc.Node.EventType.TOUCH_END, function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
e.closeInteractive();
}, this);
this.tab.toggleItems.forEach(function(t, i) {
t.node.on("toggle", function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
e.onTab(i);
});
});
this.emotionTab.toggleItems.forEach(function(t, i) {
t.node.on("toggle", function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
e.onEmotionTab(i);
});
});
this.sendBtn.node.on("click", function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
e.sendBtn.interactable = !1;
var t = e.editBox.string.trim();
if ("#9you#000917#" == t) {
cc.vv.PopupManager.addPopup(o.default.PREFAB_PATH);
e.editBox.string = "";
e.closeInteractive();
} else if (t = cc.vv.FilterWordConfig.filter(t || "")) {
e.sendMsg(r.PBChatMsgType.text, t);
e.editBox.string = "";
e._updateInputCntLabel(0);
e.closeInteractive();
} else e.sendBtn.interactable = !0;
}, this);
this.editBox.node.on("text-changed", this.onEditBoxChange, this);
this.emotionItemTemplate.active = !1;
this.record_item_template.active = !1;
this.panel_chat.x = -this.panel_chat.width;
this.redHintNode.active = !0;
};
t.prototype.init = function(e) {
var t = this;
this._proxy = e;
this.scheduleOnce(function() {
for (var e = 0, i = cc.director.getScene().getComponentsInChildren("KeyCpt"); e < i.length; e++) {
var n = i[e];
"chat_btn" == n.key ? t.btn_interactive.node.y = t.btn_interactive.node.parent.convertToNodeSpaceAR(n.node.convertToWorldSpaceAR(cc.v2(0, 0))).y : "social_btn" == n.key && (t.btn_chat_switch.node.y = t.btn_chat_switch.node.parent.convertToNodeSpaceAR(n.node.convertToWorldSpaceAR(cc.v2(0, 0))).y);
}
});
};
t.prototype.showWorldChat = function(e) {
cc.find("chat_node", this.node).active = e;
};
t.prototype._updateInputCntLabel = function(e) {
void 0 === e && (e = 0);
this.labelInputCharCnt.string = e + "/" + this.editBox.maxLength;
};
t.prototype.onEditBoxChange = function(e) {
if (Global.isYDApp()) {
for (var t = e.string.trim(), i = t.split(""), n = [], a = 0; a < i.length; a++) {
var o = i[a].charCodeAt(0);
o > 127 && o < 2304 || o > 2431 || n.push(i[a]);
}
t = n.join("");
this.editBox.string = t;
}
this._updateInputCntLabel(this.editBox.string.length);
};
t.prototype.sendMsg = function(e, t, i) {
void 0 === i && (i = !0);
if (this._isSeated()) if (!i || this.checkFrequency()) {
if (this._proxy) {
i && (this.lastSendTime = new Date());
this._proxy.sendMsg(e, t);
}
} else cc.vv.FloatTip.show(___("聊天消息需要间隔{1}秒", 5)); else cc.vv.FloatTip.show(___("您还没有坐下不能发送"));
};
t.prototype.onTab = function(e) {
console.log("#toggle#:", e);
this._currIndex = e;
this.panel_emotion.active = 0 == e;
this.panel_fast_word.active = 1 == e;
this.panel_record.active = 2 == e;
switch (e) {
case 0:
this._showEmotionPanel();
break;

case 1:
this._showFastWord();
break;

case 2:
this._showRecord();
}
};
t.prototype.openInteractive = function() {
this.sendBtn.interactable = !0;
this.touch_close_interactive_area.active = !0;
n.CommonStyle.fastShow(this.panel_interactive);
this.onTab(-1 == this._currIndex ? 0 : this._currIndex);
Global.dispatchEvent(c.PBEvent.CLOSE_MINIGAME_777);
};
t.prototype.onChatSwitchBtn = function() {
var e = this, t = this.panel_chat.tw;
t && t.stop();
if (this.panel_chat.isOpen) {
this.touch_close_chat_area.active = !1;
this.panel_chat.isOpen = !1;
cc.find("arrow", this.btn_chat_switch.node).scale = 1;
cc.tween(this.panel_chat).to(.2, {
x: -this.panel_chat.width
}).call(function() {
var t = cc.find("chat_node/panel/content", e.node);
t && (t.active = !1);
e.redHintNode.active = !0;
}).start();
} else {
var i = this.node.getComponentInChildren("SocialFriendViewCmp");
if (i) {
i.isInviteModel = !1;
i.updateView();
}
var n = cc.find("chat_node/panel/content", this.node);
n && (n.active = !0);
this.redHintNode.active = !1;
this.touch_close_chat_area.active = !0;
this.panel_chat.isOpen = !0;
cc.find("arrow", this.btn_chat_switch.node).scale = -1;
cc.tween(this.panel_chat).to(.2, {
x: 0
}).start();
Global.dispatchEvent(c.PBEvent.CLOSE_MINIGAME_777);
}
};
t.prototype.closeChat = function() {
this.touch_close_chat_area.active = !1;
if (this.panel_chat.isOpen) {
var e = this.panel_chat.tw;
e && e.stop();
this.panel_chat.isOpen = !1;
cc.find("arrow", this.btn_chat_switch.node).scale = 1;
cc.tween(this.panel_chat).to(.2, {
x: -this.panel_chat.width
}).start();
}
};
t.prototype.closeInteractive = function() {
this.touch_close_interactive_area.active = !1;
n.CommonStyle.fastHide(this.panel_interactive);
};
t.prototype._showEmotionPanel = function() {
this.panel_emotion.opacity = 1;
cc.tween(this.panel_emotion).to(.1, {
opacity: 255
}).start();
if (!this._data.initEmotion) {
this._data.initEmotion = !0;
for (var e = 2; e <= 3; e++) if (Global.isYDApp()) {
cc.find("toggle" + e, this.emotionTab.node).active = !1;
this.emotionTab.node.getComponent(cc.Layout).updateLayout();
} else cc.find("toggle" + e + "/icon_lock", this.emotionTab.node).active = !this._emotionSkin.includes(p[e - 1]);
this._showCurrEmotion(0);
}
};
t.prototype.onEmotionTab = function(e) {
console.log("#toggle#:", e);
this._showCurrEmotion(e);
};
t.prototype._showCurrEmotion = function(e) {
var t = this;
void 0 === e && (e = 0);
this._currEmotionTabIndex = e;
var i = p[e] || "emoji_0", n = cc.find("scrollview/view/content", this.panel_emotion);
n.removeAllChildren();
for (var o = function(e) {
var o = cc.instantiate(c.emotionItemTemplate);
o.active = !0;
o.parent = n;
o.id = e + 1;
o.icon = cc.find("icon", o).getComponent(a.default);
var s = i + "_" + o.id;
o.emotionName = s;
o.icon.url = s;
o.on(cc.Node.EventType.TOUCH_END, function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
t._emotionSkin.includes(i) ? t._isSeated() ? t.sendMsg(r.PBChatMsgType.emotion, o.emotionName) : cc.vv.FloatTip.show(___("您还没有坐下不能发送")) : cc.vv.FloatTip.show(___("您还未获得此表情"));
t.closeInteractive();
});
c._emotionItems.push(o);
}, c = this, s = 0; s < 6; s++) o(s);
};
t.prototype._checkHasEmotion = function() {
var e = p[this._currEmotionTabIndex];
return this.emotionSkin.includes(e);
};
t.prototype._showFastWord = function() {
var e = this;
this.panel_fast_word.opacity = 1;
cc.tween(this.panel_fast_word).to(.1, {
opacity: 255
}).start();
if (!this._data.initFastWord) {
this._data.initFastWord = !0;
var t = this.panel_fast_word_sv.content, i = cc.find("fast_word_item_template", this.panel_fast_word);
r.PBChatFastWordCfg.forEach(function(n, a) {
var o = cc.instantiate(i);
o.active = !0;
o.parent = t;
o.x = 0;
o.id = a;
cc.find("label", o).getComponent(cc.Label).string = n.words;
o.on(cc.Node.EventType.TOUCH_END, function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
e._isSeated() ? e.sendMsg(r.PBChatMsgType.fast_word, a) : cc.vv.FloatTip.show(___("您还没有坐下不能发送"));
e.closeInteractive();
});
});
}
};
t.prototype._showRecord = function() {
var e = this;
!this._cacheMsg && this._recordItems.length < 1 && (this._cacheMsg = this.revoverChatMsg());
if (this._cacheMsg) {
this._cacheMsg.forEach(function(t) {
e._addARecord(t);
});
this._cacheMsg = null;
}
this.panel_record_sv.scrollToBottom(.2);
};
t.prototype._addARecord = function(e) {
var t = cc.instantiate(this.record_item_template);
t.active = !0;
t.parent = this.panel_record_sv.content;
t.x = 0;
t.addComponent(l.default).bind(e);
this._recordItems.push(t);
var n = i.MAX_MSG_LEN + i.MAX_MSG_OVER_FLOW_LEN;
this._recordItems.length > n && this._recordItems.splice(0, this._recordItems.length - n).forEach(function(e) {
e.destroy();
});
};
t.prototype.onMsg = function(e) {
this._cacheMsg || (this._cacheMsg = []);
this._cacheMsg.push(e);
if (e.msgType == r.PBChatMsgType.fast_word) {
var t = r.PBChatFastWordCfg.get(e.content).sound;
t += 1 == e.gender ? "_male" : "_female";
t += "_ar";
Global.isYDApp() || (s.facade ? s.facade.soundMgr.playBaseEffect(t) : window.facade.soundMgr.playBaseEffect(t));
}
this.panel_interactive.active && 2 == this._currIndex && this._showRecord();
};
t.prototype.checkFrequency = function() {
return !(this.lastSendTime && new Date().getTime() - this.lastSendTime.getTime() < 5e3);
};
Object.defineProperty(t.prototype, "emotionSkin", {
get: function() {
return this._emotionSkin;
},
set: function(e) {
this._emotionSkin = e;
this._data.initEmotion = !1;
},
enumerable: !1,
configurable: !0
});
t.prototype.saveChatMsg = function() {
try {
var e = {
tableId: this.getGameTableid(),
msgList: []
};
if (this._recordItems) for (var t = 0; t < this._recordItems.length; t++) {
var i = this._recordItems[t];
if (cc.isValid(i)) {
var n = i.getComponent(l.default);
n && cc.isValid(n) && n.vo && e.msgList.push(n.vo.rawStr);
}
}
this._cacheMsg && this._cacheMsg.forEach(function(t) {
e.msgList.push(t.rawStr);
});
Global.saveLocal("DATA_CHAT_MSG", JSON.stringify(e));
} catch (e) {
cc.log("保存聊天消息出错");
}
};
t.prototype.revoverChatMsg = function() {
var e = [];
try {
var t = Global.getLocal("DATA_CHAT_MSG", "");
if (t) {
var i = JSON.parse(t);
if (i.tableId == s.facade.dm.tableInfo.tableId) for (var n = 0; n < i.msgList.length; n++) {
var a = new r.PBChatMsgVo().parse(i.msgList[n]);
e.push(a);
}
}
} catch (e) {
cc.log("保存聊天消息出错");
}
return e;
};
t.prototype._isSeated = function() {
return !s.facade || !s.facade.dm || s.facade.dm.playersDm.selfAbsInfo.isSeated;
};
t.prototype.getTablePlayerIds = function() {
return s.facade && s.facade.dm ? s.facade.commonProxy.getAllPlayerIdsInTable() : cc.vv.gameData.getAllPlayerIdsInTable();
};
t.prototype.getGameTableid = function() {
return s.facade && s.facade.dm ? s.facade.dm.tableInfo.tableId : cc.vv.gameData.getTableId();
};
var i;
t.MAX_MSG_LEN = 40;
t.MAX_MSG_OVER_FLOW_LEN = 10;
__decorate([ _(cc.Button) ], t.prototype, "btn_interactive", void 0);
__decorate([ _(cc.Node) ], t.prototype, "panel_interactive", void 0);
__decorate([ _(cc.Node) ], t.prototype, "panel_chat", void 0);
__decorate([ _(cc.Node) ], t.prototype, "touch_close_chat_area", void 0);
__decorate([ _(cc.Node) ], t.prototype, "touch_close_interactive_area", void 0);
__decorate([ _(cc.Node) ], t.prototype, "panel_emotion", void 0);
__decorate([ _(cc.Node) ], t.prototype, "emotionItemTemplate", void 0);
__decorate([ _(cc.ToggleContainer) ], t.prototype, "emotionTab", void 0);
__decorate([ _(cc.Node) ], t.prototype, "panel_fast_word", void 0);
__decorate([ _(cc.ScrollView) ], t.prototype, "panel_fast_word_sv", void 0);
__decorate([ _(cc.Node) ], t.prototype, "panel_record", void 0);
__decorate([ _(cc.ScrollView) ], t.prototype, "panel_record_sv", void 0);
__decorate([ _(cc.Node) ], t.prototype, "record_item_template", void 0);
__decorate([ _(cc.ToggleContainer) ], t.prototype, "tab", void 0);
__decorate([ _(cc.Button) ], t.prototype, "btn_chat_switch", void 0);
__decorate([ _(cc.Node) ], t.prototype, "redHintNode", void 0);
__decorate([ _(cc.EditBox) ], t.prototype, "editBox", void 0);
__decorate([ _(cc.Button) ], t.prototype, "sendBtn", void 0);
__decorate([ _(cc.Label) ], t.prototype, "labelInputCharCnt", void 0);
return i = __decorate([ h ], t);
}(cc.Component);
i.PBChat = u;
cc._RF.pop();
}, {
"../../../BalootClient/game_common/CommonStyle": "CommonStyle",
"../../../BalootClient/game_common/common_cmp/NetImg": "NetImg",
"../DebugPanel": "DebugPanel",
"../PBEvent": "PBEvent",
"../PBLogic": "PBLogic",
"./PBChatData": "PBChatData",
"./PBChatRecordItem": "PBChatRecordItem"
} ],
PBClickEffect: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0cf8fXG8n1E0JoXBxzhBZgY", "PBClickEffect");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../../scripts/PBLogic"), a = cc._decorator, o = a.ccclass, c = a.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.effect_prefab = null;
return t;
}
t.prototype.onLoad = function() {
var e = this;
this.node.on(cc.Node.EventType.TOUCH_START, function(t) {
var i = cc.find("Canvas"), a = cc.instantiate(e.effect_prefab);
a.parent = i;
a.setPosition(i.convertToNodeSpaceAR(t.getLocation()));
n.facade.soundMgr.playBaseEffect("click_effect");
cc.tween(a).delay(.5).call(function() {
a.destroy();
}).start();
}, this);
};
__decorate([ c(cc.Prefab) ], t.prototype, "effect_prefab", void 0);
return __decorate([ o ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {
"../../scripts/PBLogic": "PBLogic"
} ],
PBClock: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7d9b5XFbh5OgIC8m+81Waya", "PBClock");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBClock = void 0;
var n = cc._decorator, a = n.ccclass, o = (n.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._label = null;
t._time = 15;
return t;
}
t.prototype.onLoad = function() {
this._label = this.node.getChildByName("label").getComponent(cc.Label);
this.hide();
};
t.prototype.hide = function() {
this.stop();
this.node.active = !1;
};
t.prototype.stop = function() {
this.unscheduleAllCallbacks();
this.node.stopAllActions();
};
t.prototype.show = function(e, t, i) {
void 0 === i && (i = !1);
this.stop();
this._time = e;
this._label.string = "" + this._time;
this.node.active = !0;
var n = this.node.parent.convertToNodeSpaceAR(t);
if (i) {
this.node.stopAllActions();
this.node.scale = 1;
cc.tween(this.node).to(.3, {
x: n.x,
y: n.y
}).start();
} else {
this.node.stopAllActions();
this.node.scale = .7;
this.node.x = n.x;
this.node.y = n.y;
cc.tween(this.node).to(.5, {
scale: 1
}, {
easing: "backOut"
}).start();
}
this._tick();
};
t.prototype._tick = function() {
var e = this;
this.scheduleOnce(function() {
e._time--;
e._time > 0 ? e._tick() : e._time = 0;
e._label.string = "" + e._time;
}, 1);
};
return __decorate([ a ], t);
}(cc.Component));
i.PBClock = o;
cc._RF.pop();
}, {} ],
PBCommonData: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "13be536PfZGbZwbKgXAoH1Q", "PBCommonData");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBTableStatus = i.PBTableInfo = i.PBFlowState = i.PBUserState = i.PBTableState = i.PBRoomType = void 0;
var n, a;
(function(e) {
e[e.normal = 1] = "normal";
e[e.vip = 2] = "vip";
e[e.league = 3] = "league";
e[e.club = 4] = "club";
e[e.friend = 5] = "friend";
e[e.match = 6] = "match";
})(n = i.PBRoomType || (i.PBRoomType = {}));
(function(e) {
e[e.OTHER = 0] = "OTHER";
e[e.MATCH = 1] = "MATCH";
e[e.READY = 2] = "READY";
e[e.PLAY = 3] = "PLAY";
e[e.SETTLE = 4] = "SETTLE";
e[e.GAMEOVER = 5] = "GAMEOVER";
e[e.BIDDING = 6] = "BIDDING";
e[e.SHOWCARD = 7] = "SHOWCARD";
e[e.ChooseGameRule = 8] = "ChooseGameRule";
e[e.SWITCH_CARD = 9] = "SWITCH_CARD";
e[e.CHOOSE_INIT_SCORE = 10] = "CHOOSE_INIT_SCORE";
})(i.PBTableState || (i.PBTableState = {}));
(function(e) {
e[e.Wait = 1] = "Wait";
e[e.Ready = 2] = "Ready";
e[e.Bidding = 3] = "Bidding";
e[e.Discard = 4] = "Discard";
e[e.ChooseSuit = 5] = "ChooseSuit";
e[e.Draw = 6] = "Draw";
e[e.ChooseMethod = 7] = "ChooseMethod";
e[e.ChooseShowCard = 8] = "ChooseShowCard";
e[e.DashCall = 9] = "DashCall";
e[e.ChooseScore = 10] = "ChooseScore";
e[e.ChooseRule = 11] = "ChooseRule";
e[e.SwitchCard = 12] = "SwitchCard";
e[e.ChooseInitScore = 13] = "ChooseInitScore";
e[e.GoDown = 14] = "GoDown";
e[e.ConCan = 15] = "ConCan";
e[e.Response = 19] = "Response";
e[e.ChooseCard = 20] = "ChooseCard";
e[e.ChooseUser = 21] = "ChooseUser";
})(i.PBUserState || (i.PBUserState = {}));
(function(e) {
e[e.init = 0] = "init";
e[e.match = 1] = "match";
e[e.ready = 2] = "ready";
e[e.playing = 3] = "playing";
e[e.round_settlement = 4] = "round_settlement";
e[e.total_settlement = 5] = "total_settlement";
e[e.countdown = 6] = "countdown";
})(a = i.PBFlowState || (i.PBFlowState = {}));
var o = function() {
function e() {
this.gameId = 0;
this.tableId = 0;
this.entryCoin = 500;
this.prize = 900;
this.roomType = 3;
this.createTime = 0;
this.maxRound = 1;
this.isOpenVoice = !1;
this.turnTime = 10;
this.pwd = "";
this.isViewer = 0;
this.maxScore = 0;
}
e.prototype.needSelfReady = function() {
return this.roomType == n.club || this.roomType == n.friend;
};
e.prototype.needMatchInGame = function() {
return !this.needSelfReady();
};
return e;
}();
i.PBTableInfo = o;
var c = function() {
function e() {
this.dealerUid = 0;
this.isReconnect = !1;
this.isStart = !1;
this.isCmp = !1;
this.currRound = 0;
this.canDrawCard = !1;
this.canOutCard = !1;
this.currStatus = 0;
this.activeSeat = 0;
this._flowState = 0;
this.isDismiss = !1;
}
e.prototype.reset = function() {
this.dealerUid = 0;
this.isReconnect = !1;
this.currStatus = 0;
this.currRound = 0;
this.canDrawCard = !1;
this.canOutCard = !1;
this.isStart = !1;
this._flowState = a.init;
};
Object.defineProperty(e.prototype, "isPlaying", {
get: function() {
return this._flowState == a.playing || this._flowState === a.round_settlement || this._flowState == a.countdown;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "flowState", {
get: function() {
return this._flowState;
},
set: function(e) {
if (this._flowState != e) {
this._flowState = e;
Global.dispatchEvent("EVENT_FLOW_STATE_CHANGE", this._flowState);
}
},
enumerable: !1,
configurable: !0
});
e.prototype.resetRound = function() {
this.canOutCard = !1;
this.canDrawCard = !1;
};
return e;
}();
i.PBTableStatus = c;
cc._RF.pop();
}, {} ],
PBCommonProxy: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d6f7ef6t1FFHKMoScRrqVIN", "PBCommonProxy");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBCommonProxy = void 0;
var n = e("./PBCommonData"), a = e("./PBLogic"), o = cc._decorator, c = o.ccclass, s = (o.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._shop = null;
return t;
}
t.prototype.onLoad = function() {};
t.prototype.start = function() {
var e = this;
this._initEventListener();
this.scheduleOnce(function() {
e._preLoadShop();
});
};
t.prototype._initEventListener = function() {
var e = this.node.addComponent("EventListenerCmp");
e.registerEvent("EVENT_GLOBAL_CHAT_JOIN_TABLE", this.EVENT_GLOBAL_CHAT_JOIN_TABLE, this);
e.registerEvent("EVENT_FLOW_STATE_CHANGE", this.EVENT_FLOW_STATE_CHANGE, this);
};
t.prototype._preLoadShop = function() {
return __awaiter(this, void 0, void 0, function() {
return __generator(this, function() {
return [ 2 ];
});
});
};
t.prototype.openShop = function() {
cc.vv.PopupManager.addPopup("BalootClient/SkinShop/SkinShop", {
opacityIn: !0,
onShow: function() {}
});
};
t.prototype.openCoinCharge = function() {
Global.isYDApp() ? cc.vv.AlertView.show(___("金币不足"), function() {}, function() {}, !1, function() {}, ___("提示"), ___("取消"), ___("Charge")) : cc.vv.EventManager.emit(EventId.NOT_ENOUGH_COINS);
};
t.prototype.getPageChat = function() {
return cc.find("Canvas/safe_node/PageChat");
};
t.prototype.EVENT_GLOBAL_CHAT_JOIN_TABLE = function(e) {
var t = this.getPageChat();
if (t || cc) {
e.detail == a.facade.dm.tableInfo.tableId ? t && (t.active = !1) : cc.vv.FloatTip.show(___("您已经在您的房间里了"));
cc.log(e.detail);
}
};
t.prototype.EVENT_FLOW_STATE_CHANGE = function(e) {
var t = e.detail;
if (t != n.PBFlowState.init && t != n.PBFlowState.ready) {
var i = this.getPageChat();
i && (i.active = !1);
}
};
t.prototype.checkPlayerInTable = function(e) {
if (e && a.facade) return a.facade.dm.playersDm.checkPlayerInTable(e);
};
t.prototype.getAllPlayerIdsInTable = function() {
if (a.facade) return a.facade.dm.playersDm.getAllPlayerIdsInTable();
};
return __decorate([ c ], t);
}(cc.Component));
i.PBCommonProxy = s;
cc._RF.pop();
}, {
"./PBCommonData": "PBCommonData",
"./PBLogic": "PBLogic"
} ],
PBCountdown: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "227fdQMjcBM/6QLNADXmHqc", "PBCountdown");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBCountdown = void 0;
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t._cb = null;
t._time = 5;
return t;
}
t.prototype.onLoad = function() {
this.node.active = !1;
};
t.prototype.hide = function() {
this.stop();
this.node.active = !1;
};
t.prototype.stop = function() {
this._cb = null;
this.unscheduleAllCallbacks();
this.node.stopAllActions();
};
t.prototype.show = function(e, t) {
void 0 === t && (t = null);
this.stop();
this._cb = t;
this._time = e;
this.label.string = "" + this._time;
this.node.active = !0;
this._tick();
};
t.prototype._tick = function() {
var e = this;
this.scheduleOnce(function() {
e._time--;
if (e._time > 0) {
facade.soundMgr.playBaseEffect("clock_warning");
e._tick();
} else {
e._time = 0;
e._cb && e._cb();
e.hide();
}
e.label.string = "" + e._time;
}, 1);
};
__decorate([ o(cc.Label) ], t.prototype, "label", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.PBCountdown = c;
cc._RF.pop();
}, {} ],
PBEmotionPlayer: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ed2738iZrxOaJWbY2lP4DXO", "PBEmotionPlayer");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBEmotionPlayer = void 0;
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.spine = null;
return t;
}
t.prototype.onLoad = function() {
this.spine.node.active = !1;
};
t.prototype.playAni = function(e) {
var t = this;
if (e) {
this.node.active = !0;
var i = e.split("_");
if (3 == i.length) {
var n;
n = "BalootClient/BaseRes/spines/emoji_" + i[1] + "/" + e;
this.spine.node.active = !0;
cc.resources.load(n, sp.SkeletonData, function(e, i) {
if (!e && t.spine && cc.isValid(t.spine.node)) {
t.spine.skeletonData = i;
t.spine.setCompleteListener(function() {
t.spine.setCompleteListener(null);
t.spine.node.active = !1;
});
t.spine.setAnimation(0, "animation", !1);
t.spine.node.scale = .5;
} else console.log(e);
});
}
}
};
__decorate([ o(sp.Skeleton) ], t.prototype, "spine", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.PBEmotionPlayer = c;
cc._RF.pop();
}, {} ],
PBEvent: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "01e290ADkJBc7Gnj/XKz+aI", "PBEvent");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBEvent = void 0;
var n = function() {
function e() {}
e.USER_EXP_CHANGE = "PBEvent.USER_EXP_CHANGE";
e.USER_COIN_CHANGE = "PBEvent.USER_COIN_CHANGE";
e.USER_LEAGUE_CHANGE = "PBEvent.USER_LEAGUE_CHANGE";
e.CLOSE_MINIGAME_777 = "PBEvent.CLOSE_MINIGAME_777";
return e;
}();
i.PBEvent = n;
cc._RF.pop();
}, {} ],
PBExitWarning: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "11c35sItIVOE63IjnrncWQB", "PBExitWarning");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBExitWarning = void 0;
var n = cc._decorator, a = n.ccclass, o = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.start = function() {
var e = this;
this.scheduleOnce(function() {
e.close();
}, 3);
};
t.prototype.close = function() {
cc.vv.PopupManager.removePopup(this.node);
};
t.PREFAB_PATH = "games/PokerBase/prefabs/pb_exit_warning";
return __decorate([ a ], t);
}(cc.Component));
i.PBExitWarning = o;
cc._RF.pop();
}, {} ],
PBFingerTip: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8de75CiaLFOkb7ShdT0rCWP", "PBFingerTip");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBFingerTip = void 0;
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.fingerSpine = null;
return t;
}
t.prototype.onLoad = function() {
this.hide();
};
t.prototype.hide = function() {
this.unscheduleAllCallbacks();
this.fingerSpine.node.active = !1;
};
t.prototype.show = function(e, t) {
var i = this;
void 0 === t && (t = 4);
if (e) {
var n = e;
e instanceof cc.Node && (n = e.convertToWorldSpaceAR(cc.v2(0, 0)));
n = this.node.parent.convertToNodeSpaceAR(n);
this.node.x = n.x;
this.node.y = n.y;
this.fingerSpine.node.active = !0;
this.fingerSpine.setAnimation(0, "animation4", !0);
this.unscheduleAllCallbacks();
this.scheduleOnce(function() {
i.hide();
}, t);
} else this.hide();
};
__decorate([ o(sp.Skeleton) ], t.prototype, "fingerSpine", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.PBFingerTip = c;
cc._RF.pop();
}, {} ],
PBGameData: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "79a67ppYfdGRoK4aVMebX0L", "PBGameData");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBGameData = void 0;
var n = e("../../BalootClient/game_common/PromiseLock"), a = e("./net/PBMsgHandler"), o = e("./net/PBMsgWriter"), c = e("./PBCommonData"), s = e("./net/PBMsgCmd"), r = e("./player/PBPlayerData"), l = function() {
function e() {
this.deskInfo = null;
this.tableInfo = null;
this.tableStatus = null;
this.playersDm = null;
this.msgCmd = null;
this.msgHandler = null;
this.msgWriter = null;
this.tempData = {};
this.initDataCtrl();
}
e.prototype.initDataCtrl = function() {
this.tableInfo = this.loadTableInfo();
this.tableStatus = this.loadTableStatus();
this.playersDm = this.loadPlayerDm();
this.msgCmd = this.loadMsgCmd();
this.msgHandler = this.loadMsgHandler();
this.msgHandler.dm = this;
this.msgHandler.reset();
this.msgHandler.bindHandler();
this.msgWriter = this.loadMsgWriter();
};
e.prototype.loadTableInfo = function() {
return new c.PBTableInfo();
};
e.prototype.loadTableStatus = function() {
return new c.PBTableStatus();
};
e.prototype.loadPlayerDm = function() {
return new r.PBPlayersDm();
};
e.prototype.loadMsgCmd = function() {
return new s.PBMsgCmd();
};
e.prototype.loadMsgHandler = function() {
return new a.PBMsgHandler();
};
e.prototype.loadMsgWriter = function() {
return new o.PBMsgWriter();
};
e.prototype.init = function(e) {
n.PromiseLock.resetLock();
window.facade && facade.reconnectInGameReset();
this.deskInfo = e;
this.parseTableInfo(e);
this.playersDm.chair = e.seat;
this.parsePlayersData(e.users);
this.parseViewerList(e.views);
1 == e.deskFlag && (e.isReconnect = !0);
e.isReconnect ? this.reconnectLogin() : this.normalLogin();
if (window.facade) {
facade.enterTable();
facade.enterTableLater();
}
};
e.prototype.parseTableInfo = function(e) {
this.tableInfo.gameId = e.gameid;
this.tableInfo.tableId = e.deskid;
this.tableInfo.roomType = e.conf.roomtype;
this.tableInfo.turnTime = e.conf.turntime || 10;
this.tableInfo.entryCoin = e.bet;
this.tableInfo.createTime = e.conf.create_time;
this.tableInfo.prize = e.panel && e.panel.prize || 0;
this.tableInfo.maxRound = e.maxRound || 1;
this.tableInfo.isOpenVoice = 1 == e.conf.voice;
this.tableInfo.pwd = e.conf.pwd || "";
this.tableInfo.maxScore = e.maxScore || 0;
this.tableInfo.roomType == c.PBRoomType.normal && (this.tableInfo.isOpenVoice = !0);
this.tableInfo.isViewer = e.isViewer || 0;
};
e.prototype.parsePlayersData = function(e) {
for (var t = 0; t < e.length; t++) this.playersDm.seat(this.parseAPlayer(e[t]));
};
e.prototype.parseViewerList = function(e) {
var t = this;
this.playersDm.viewerList = [];
e && e.forEach(function(e) {
if (e) {
var i = t.parseAPlayer(e);
t.playersDm.viewerList.push(i);
}
});
};
e.prototype.parseAPlayer = function(e) {
return this.genAPlayerInfoVo(r.PBPlayerInfoVo, r.PBUserInfoVo, e);
};
e.prototype.genAPlayerInfoVo = function(e, t, i) {
var n = new e();
n.uid = i.uid;
n.seatId = i.seatid;
n.isOnline = 0 == i.offline;
n.coin = i.coin;
n.rpScore = i.rp || 0;
n.winCoinShow = i.wincoinshow || 0;
n.leagueLevel = i.leaguelevel || 0;
n.leaguePoints = i.leagueexp || 0;
n.autoHost = 1 == i.auto;
n.currLevel = i.level;
n.currExp = i.levelexp;
n.avatarFrame = i.avatarframe || "avatarframe_0";
n.chatSkin = i.chatskin || "chat_free";
n.token = i.token || "";
n.svip = i.svip || 0;
null != i.state && (n.isReady = 2 == i.state);
null != i.mic && (n.mic = i.mic);
null != i.joinChat && (n.joinChat = i.joinChat);
n.race_id = i.race_id || 0;
n.uinfo = new t();
n.uinfo.uname = i.playername || i.nick;
n.uinfo.icon = i.usericon || i.icon;
n.uinfo.gender = i.sex || 0;
return n;
};
e.prototype.reconnectLogin = function() {};
e.prototype.normalLogin = function() {};
e.prototype.reset = function() {
this.tableStatus.reset();
this.playersDm.reset();
};
e.prototype.clearRound = function() {
this.tableStatus.resetRound();
this.playersDm.getPlayesInfo().forEach(function(e) {
e && e.clearRound();
});
};
Object.defineProperty(e.prototype, "countdownTime", {
get: function() {
return this.deskInfo.autoStart && this.deskInfo.autoStart.delayTime ? this.deskInfo.autoStart.delayTime : 0;
},
enumerable: !1,
configurable: !0
});
e.prototype.update = function() {};
e.prototype.onExit = function() {
this.msgHandler && this.msgHandler.clear();
this.tableStatus = null;
this.playersDm = null;
this.msgHandler = null;
this.msgWriter = null;
this.tempData = null;
};
e.prototype.clear = function() {
cc.vv.gameData = null;
};
e.prototype.getGameId = function() {
return this.tableInfo.gameId;
};
e.prototype.SetBreakGrant = function() {};
e.prototype.isBackgroundReConn = function() {
return !0;
};
e.prototype.getUserInDeskinfo = function(e) {
for (var t = 0, i = this.deskInfo.users; t < i.length; t++) {
var n = i[t];
if (n.uid === e) return n;
}
return null;
};
return e;
}();
i.PBGameData = l;
cc._RF.pop();
}, {
"../../BalootClient/game_common/PromiseLock": "PromiseLock",
"./PBCommonData": "PBCommonData",
"./net/PBMsgCmd": "PBMsgCmd",
"./net/PBMsgHandler": "PBMsgHandler",
"./net/PBMsgWriter": "PBMsgWriter",
"./player/PBPlayerData": "PBPlayerData"
} ],
PBHandCard: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7bd6cMhatxJW7MvfiFFWXvW", "PBHandCard");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBHandCard = i.PBHandCardActionEvt = i.PBHandCardActionType = void 0;
var n, a = e("../../../PokerBase/scripts/card/PBCardItem"), o = cc._decorator, c = o.ccclass;
o.property;
(function(e) {
e[e.select_end = 1] = "select_end";
e[e.card_count_change = 2] = "card_count_change";
e[e.out_card = 3] = "out_card";
})(n = i.PBHandCardActionType || (i.PBHandCardActionType = {}));
var s = function() {
function e() {}
e.prototype.setAction = function(e) {
this.action = e;
return this;
};
e.prototype.setData = function(e) {
this.data = e;
return this;
};
return e;
}();
i.PBHandCardActionEvt = s;
var r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._maxWidth = 720;
t._scale = 1;
t._canMove = !1;
t._moveFlowDiffPos = null;
return t;
}
t.prototype.onLoad = function() {
this.node.anchorX = 0;
this.node.anchorY = 1;
this.clearContainer();
};
t.prototype.init = function(e, t, i) {
void 0 === i && (i = 720);
this._evtHandler = e;
this._cardItemTemplate = t;
this._maxWidth = i - 20;
this._cardSize = this._cardItemTemplate.getContentSize();
this._cards = [];
this._currSelectCard = null;
this._canOperate = !1;
this._canOutCard = !1;
};
t.prototype._dispacher = function(e) {
this._evtHandler && this._evtHandler(e);
};
t.prototype.chooseCardByPos = function(e) {
for (var t = this._cards.length - 1; t >= 0; t--) {
var i = this._cards[t], n = i.node, a = n.angle, o = Math.sin(-a / 180 * Math.PI), c = Math.cos(-a / 180 * Math.PI), s = (e.x - n.x) * c - (e.y - n.y) * o + n.x, r = (e.x - n.x) * o + (e.y - n.y) * c + n.y;
n.angle = 0;
if (n.getBoundingBox().contains(cc.v2(s, r))) {
n.angle = a;
return i;
}
var l = n.convertToNodeSpaceAR(this.node.convertToWorldSpaceAR(cc.v2(s, r)));
if (i.holder.getBoundingBox().contains(l)) {
n.angle = a;
return i;
}
n.angle = a;
}
return null;
};
Object.defineProperty(t.prototype, "touchOffsetDistance", {
get: function() {
return 0;
},
enumerable: !1,
configurable: !0
});
t.prototype.touchDown = function(e) {
if (this._canOperate && !(this._cards.length < 1)) {
var t = this.node.convertToNodeSpaceAR(e.getLocation()), i = this.chooseCardByPos(t);
if (i) {
this._currSelectCard && this._currSelectCard != i && this.cancelSelect();
this._canMove = !1;
if (!i.mask.active) {
this._currSelectCard = i;
i.toTouchState(!0);
i.setSelect(!0, !0, !1);
}
} else this.cancelSelect();
}
};
t.prototype.touchMove = function(e) {
if (!this._canOperate) return !1;
if (this._currSelectCard) {
var t = this.node.convertToNodeSpaceAR(e.getStartLocation()), i = this.node.convertToNodeSpaceAR(e.getLocation());
if (this._canMove) {
this._currSelectCard.node.x = i.x - this._moveFlowDiffPos.x + this._currSelectCard.touchOffsetX;
this._currSelectCard.node.y = i.y - this._moveFlowDiffPos.y + this._currSelectCard.touchOffsetY;
var n = this.mapingCardByPos(cc.v2(this._currSelectCard.node.x, i.y));
if (n && n != this._currSelectCard) {
this._swapCard(n, this._currSelectCard);
this.layoutCards(!0);
}
if (this._currSelectCard) {
if (this._currSelectCard.node.inHand) {
if (this._currSelectCard.node.y > this._cardSize.height) {
(a = this._currSelectCard.node.angleTw) && a.stop();
this._currSelectCard.node.inHand = !1;
a = cc.tween(this._currSelectCard.node).to(.2, {
angle: 0
}).start();
this._currSelectCard.node.angleTw = a;
}
} else if (this._currSelectCard.node.y < this._cardSize.height / 2) {
var a;
(a = this._currSelectCard.node.angleTw) && a.stop();
this._currSelectCard.node.inHand = !0;
var o = this._currSelectCard.node.originPos;
a = cc.tween(this._currSelectCard.node).to(.2, {
angle: o.angle
}).start();
this._currSelectCard.node.angleTw = a;
}
this._swapClosestCardIndex();
}
} else if (Math.sqrt(Math.pow(i.x - t.x, 2) + Math.pow(i.y - t.y, 2)) >= 5) {
this._canMove = !0;
this._moveFlowDiffPos = this._currSelectCard.node.convertToNodeSpaceAR(e.getLocation());
this._currSelectCard.node.stopAllActions();
this._currSelectCard.touchOffsetX = 0;
this._currSelectCard.touchOffsetY = 0;
cc.tween(this._currSelectCard).to(.1, {
touchOffsetX: this._moveFlowDiffPos.x,
touchOffsetY: this._moveFlowDiffPos.y + this.touchOffsetDistance
}).start();
}
}
};
t.prototype.touchEnd = function(e) {
if (!this._canOperate) return !1;
if (this._currSelectCard) {
var t = this.node.convertToNodeSpaceAR(e.getLocation());
if (this._canOutCard) if (t.y > this._cardSize.height / 2 || this._currSelectCard.selected && !this._canMove) {
var i = new s();
i.action = n.out_card;
i.data = this._currSelectCard.cardVo.raw;
this._dispacher(i);
} else if (this._currSelectCard.selected || this._canMove) this.cancelSelect(); else {
this._currSelectCard.setSelect(!0, !1, !0);
var a = this._currSelectCard.node.originPos;
cc.tween(this._currSelectCard.node).to(.2, {
y: a.y
}).start();
} else if (this._currSelectCard.selected || this._canMove) this.cancelSelect(); else {
this._currSelectCard.setSelect(!0, !1, !0);
a = this._currSelectCard.node.originPos;
cc.tween(this._currSelectCard.node).to(.2, {
y: a.y
}).start();
}
facade.soundMgr.playBaseEffect("select");
var o = new s();
o.action = n.select_end;
this._dispacher(o);
}
};
t.prototype._swapCard = function(e, t) {
var i = this._cards.indexOf(e), n = this._cards.indexOf(t);
this._cards.splice(n, 1);
this._cards.splice(i, 0, t);
facade.soundMgr.playBaseEffect("card_swap");
};
t.prototype._swapClosestCardIndex = function() {
if (this._currSelectCard) {
var e = 180 * -Math.atan2(this._maxWidth / 2 - this.cardSize.width / 2, 2100 + this.cardSize.height / 2) / Math.PI, t = -e, i = this._cards.length, n = t - e, a = 0;
i > 1 && (a = Math.min(n / (i - 1), 5));
var o = {
x: this._currSelectCard.node.x,
y: this._currSelectCard.node.y + 2100
}, c = 180 * -Math.atan2(o.x, o.y) / Math.PI;
if (Math.abs(Math.abs(c) - Math.abs(this._currSelectCard.node.originPos.angle)) < a / 4) {
var s = this._cards.indexOf(this._currSelectCard);
this._currSelectCard.node.zIndex = 10 * (s + 1);
var r = this._cards[s + 1];
r && (r.node.zIndex = 10 * (s + 2));
} else {
for (var l = null, d = 0, h = 0; h < this._cards.length; h++) {
var _ = this._cards[h];
if (_ != this._currSelectCard) {
var p = Math.abs(c - _.node.originPos.angle);
if (l) {
if (p < d) {
l = _;
d = p;
}
} else {
l = _;
d = p;
}
}
}
l && l.node.zIndex > this._currSelectCard.node.zIndex && (this._currSelectCard.node.zIndex = l.node.zIndex + 1);
}
}
};
t.prototype.getOutCard = function(e) {
var t = null;
cc.log(this.cards);
if (this._currSelectCard && this._currSelectCard.cardVo.raw === e) {
t = this._currSelectCard;
this._cards.splice(this._cards.indexOf(t), 1);
} else for (var i = 0; i < this.cards.length; i++) if (e == this.cards[i].cardVo.raw) {
t = this.cards[i];
this._cards.splice(i, 1);
break;
}
if (this._currSelectCard) if (this._currSelectCard == t) {
this._currSelectCard.setSelect(!1);
this._currSelectCard = null;
} else this.cancelSelect();
cc.log(this.cards);
return t;
};
t.prototype.getCard = function(e) {
for (var t = null, i = 0; i < this.cards.length; i++) if (e == this.cards[i].cardVo.raw) {
t = this.cards[i];
this._cards.splice(i, 1);
break;
}
return t;
};
t.prototype.cancelSelect = function(e) {
void 0 === e && (e = !0);
if (this._currSelectCard) {
this._currSelectCard.toTouchState(!1);
this._currSelectCard.setSelect(!1);
var t = this._currSelectCard.node.originPos;
if (t) {
if (e) cc.tween(this._currSelectCard.node).to(.2, {
x: t.x,
y: t.y,
angle: t.angle
}, {
easing: "quartIn"
}).start(); else {
this._currSelectCard.node.x = t.x;
this._currSelectCard.node.y = t.y;
this._currSelectCard.node.angle = t.angle;
}
this._currSelectCard = null;
}
}
this.updateCardZIndex();
};
t.prototype.updateCardZIndex = function() {
if (this._cards) for (var e = 0; e < this._cards.length; e++) {
var t = this._cards[e];
t && (t.node.zIndex = 10 * (e + 1));
}
};
t.prototype.getSelectedVal = function() {
return this._currSelectCard ? this._currSelectCard.cardVo.raw : 0;
};
t.prototype.mask = function(e) {
e = e || [];
for (var t = this._cards.length, i = 0; i < t; i++) {
var n = this._cards[i];
n.showMask(e.includes(n.cardVo.raw));
}
this._currSelectCard && e.includes(this._currSelectCard.cardVo.raw) && this.cancelSelect();
};
t.prototype.removeCards = function(e, t) {
var i = this;
cc.log(this._cards);
this.cancelSelect();
for (var a = e.concat(), o = [], c = 0; c < this._cards.length; c++) {
var r = this._cards[c], l = a.indexOf(r.cardVo.raw);
if (-1 != l) {
a.splice(l, 1);
o.push(this._cards[c]);
this._cards.splice(c, 1);
c--;
}
}
if (o.length > 0) {
var d = function() {
o.forEach(function(e) {
e.node.destroy();
});
i.layoutCards();
i._dispacher(new s().setAction(n.card_count_change));
};
t ? t(o, d) : d();
}
cc.log(this._cards);
};
t.prototype.getCardsRawValue = function(e) {
for (var t = [], i = 0; i < e.length; i++) t.push(e[i].cardVo.raw);
return t;
};
t.prototype.fillCards = function(e, t, i) {
void 0 === i && (i = null);
for (var n = [], o = e.length, c = 0; c < o; c++) {
var s = cc.instantiate(this._cardItemTemplate);
s.active = !0;
s.parent = this.node;
s.inHand = !0;
var r = s.getComponent(a.PBCardItem);
r.skin = this._cardItemTemplate.getComponent(a.PBCardItem).skin;
r.bind(e[c]);
t && (r.holder.scale = 0);
n.push(r);
}
this._cards = this._cards.concat(n);
this.sortCard(this._cards, i);
this.layoutCards(t);
return n;
};
t.prototype.sortCard = function(e, t) {
void 0 === t && (t = null);
e.sort(function(e, t) {
return e.cardVo.suit > t.cardVo.suit ? -1 : e.cardVo.suit == t.cardVo.suit ? e.cardVo.value - t.cardVo.value : 1;
});
};
t.prototype.mapingCardByPos = function(e) {
var t = 180 * -Math.atan2(this._maxWidth / 2 - this.cardSize.width / 2, 2100 + this.cardSize.height / 2) / Math.PI, i = -t, n = this._cards.length, a = i - t, o = 0, c = 0, s = 0;
n > 1 && (c = (o = Math.min(a / (n - 1), 5)) * (n - 1));
c < a && (s = (a - c) / 2);
var r = {
x: e.x,
y: e.y + 2100
}, l = 180 * -Math.atan2(r.x, r.y) / Math.PI;
cc.log("#点击角度#", l);
var d = Math.sqrt(Math.pow(r.x, 2) + Math.pow(r.y, 2));
if (d < 2100 + this.cardSize.height / 2 && d > 2100 - this.cardSize.height / 2) {
var h = t + s;
if (l > i - s + o / 2) {
cc.log("#0#");
return this._cards[0];
}
if (l <= h - o / 2) {
cc.log("#" + (this._cards.length - 1) + "#");
return this._cards[this._cards.length - 1];
}
cc.log("#" + Math.floor(l / o) + "#");
for (var _ = 0; _ < n; _++) {
var p = i - s - o * _;
if (l <= p + o / 2 && l > p - o / 2) return this._cards[_];
}
} else cc.log("#不在有效区域#");
return null;
};
t.prototype.layoutCards = function(e) {
void 0 === e && (e = !1);
var t = this._cards.length;
if (!(t < 1)) {
var i = 180 * -Math.atan2(this._maxWidth / 2 - this.cardSize.width / 2, 2100 + this.cardSize.height / 2) / Math.PI, n = -i, a = n - i, o = 0, c = 0, s = 0;
t > 1 && (c = (o = Math.min(a / (t - 1), 5)) * (t - 1));
c < a && (s = (a - c) / 2);
for (var r = 0; r < this.cards.length; r++) {
var l = this.cards[r], d = l.node;
d.zIndex = 10 * (r + 1);
var h = n - s - o * r, _ = Math.sin(h / 180 * Math.PI), p = Math.cos(h / 180 * Math.PI), u = 0 * p - 2100 * _ + 0, f = 0 * _ + 2100 * p + 0;
f -= 2100;
var g = l.node.originPos || {
x: 0,
y: 0,
angle: 0
};
g.x = u;
g.y = f;
g.angle = h;
l.node.originPos = g;
var m = d.angleTw;
m && m.stop();
if (l != this._currSelectCard) if (d.active && e) cc.tween(d).to(.3, {
x: u,
y: f,
angle: h
}, {
easing: "cubicOut"
}).start(); else {
d.x = u;
d.y = f;
d.angle = h;
} else {
var v = cc.tween(d).to(.3, {
angle: h
}, {
easing: "cubicOut"
}).start();
d.angleTw = v;
}
}
}
};
t.prototype.hint = function(e) {
if (e && this._cards) {
this.cancelSelect(!1);
this._cards.concat().forEach(function(t) {
t && e.includes(t.cardVo.raw) && (t.holder.y += 2 * t.selectSpace);
});
}
};
t.prototype.clearHint = function() {
this.cards.forEach(function(e) {
e.setSelect(!1);
});
};
t.prototype.clearContainer = function() {
this._cards = [];
this._currSelectCard = null;
this.node.removeAllChildren();
};
Object.defineProperty(t.prototype, "cards", {
get: function() {
return this._cards;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "canOperate", {
get: function() {
return this._canOperate;
},
set: function(e) {
this._canOperate = e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "cardSize", {
get: function() {
return this._cardSize;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "scale", {
get: function() {
return this._scale;
},
set: function(e) {
this._scale = e;
this.node.scale = this._scale;
this._maxWidth = this._maxWidth / this._scale;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "canOutCard", {
get: function() {
return this._canOutCard;
},
set: function(e) {
this._canOutCard = e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "currSelectCard", {
get: function() {
return this._currSelectCard;
},
set: function(e) {
this._currSelectCard = e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "canMove", {
get: function() {
return this._canMove;
},
set: function(e) {
this._canMove = e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "moveFlowDiffPos", {
get: function() {
return this._moveFlowDiffPos;
},
set: function(e) {
this._moveFlowDiffPos = e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "evtHandler", {
get: function() {
return this._evtHandler;
},
set: function(e) {
this._evtHandler = e;
},
enumerable: !1,
configurable: !0
});
return __decorate([ c ], t);
}(cc.Component);
i.PBHandCard = r;
cc._RF.pop();
}, {
"../../../PokerBase/scripts/card/PBCardItem": "PBCardItem"
} ],
PBHideHandCard: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6e5a4YiCgZHV7VgCLFvY1Hm", "PBHideHandCard");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBHideHandCard = void 0;
var n = e("../../../BalootClient/game_common/common_cmp/NetImg"), a = cc._decorator, o = a.ccclass, c = a.property, s = a.executeInEditMode, r = a.disallowMultiple, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._angle = 5;
t._radius = 300;
t.totalCnt = 15;
t.rest_cnt = null;
t.cards = [];
t._currShowCards = [];
t._skin = "";
t._cardItemTemplate = null;
return t;
}
Object.defineProperty(t.prototype, "angle", {
get: function() {
return this._angle;
},
set: function(e) {
if (this.angle != e) {
this._angle = e;
this.layoutCards(!1);
}
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "radius", {
get: function() {
return this._radius;
},
set: function(e) {
if (this.radius != e) {
this._radius = e;
this.layoutCards(!1);
}
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
this._init();
};
t.prototype._init = function() {
var e = this;
this.rest_cnt && (this.rest_cnt.active = !1);
this._currShowCards = [];
for (var t = 0; t < this.totalCnt; t++) {
var i = cc.find("card" + t, this.node);
if (i) {
i.active = !1;
i.scale = 0;
this.cards.push(i);
}
}
this._cardItemTemplate = cc.instantiate(this.cards[0]);
this._cardItemTemplate.name = "cardItemTemplate";
this._cardItemTemplate.parent = this.node;
this._cardItemTemplate.x = 0;
this._cardItemTemplate.y = 0;
this._cardItemTemplate.scale = 0;
this._cardItemTemplate.active = !1;
this._skin && this.getAllCards().forEach(function(t) {
t.getComponent(n.default).url = e._skin;
});
};
t.prototype.reset = function() {
this.cards = this.getAllCards();
var e = this.totalCnt || 10;
this.cards.forEach(function(e) {
e.active = !1;
e.scale = 0;
});
this.cards.length > e && this.cards.splice(e).forEach(function(e) {
e.destroy();
});
this._currShowCards = [];
this.updateRestCnt();
};
t.prototype.gendACard = function() {
var e = cc.instantiate(this._cardItemTemplate);
e.parent = this.node;
this._skin && (e.getComponent(n.default).url = this._skin);
return e;
};
t.prototype.getAllCards = function() {
return this.cards.concat(this._currShowCards);
};
t.prototype.addACard = function() {
var e = this.cards.pop();
e || (e = this.gendACard());
var t = Math.floor(Math.random() * this._currShowCards.length);
this._currShowCards.splice(t, 0, e);
this.layoutCards();
return e;
};
t.prototype.removeACard = function() {
if (!this._currShowCards || this._currShowCards.length < 1) return null;
var e = this._currShowCards.splice(Math.floor(Math.random() * this._currShowCards.length), 1)[0];
e.active = !1;
this.cards.push(e);
this.layoutCards();
return e;
};
t.prototype.showCardCnt = function(e, t) {
void 0 === t && (t = !0);
this.reset();
this._currShowCards = this.cards.splice(0, e);
this._currShowCards.forEach(function(e) {
e.active = !0;
e.scale = 1;
});
if (this._currShowCards.length < e) for (var i = this._currShowCards.length; i < e; i++) {
var n = this.gendACard();
n.active = !0;
n.scale = 1;
this._currShowCards.push(n);
}
this.layoutCards(t);
};
t.prototype.layoutCards = function(e) {
void 0 === e && (e = !0);
var t = this._currShowCards.length, i = this.angle, n = this.radius, a = (t - 1) * i / 2, o = n;
this._currShowCards.forEach(function(t, c) {
t.zIndex = c;
var s = i * c - a, r = Math.sin(s / 180 * Math.PI), l = Math.cos(s / 180 * Math.PI), d = 0 * l - (o - 0) * r + 0, h = 0 * r + (o - 0) * l + 0;
h -= n;
var _ = s;
if (t.active && e) cc.tween(t).to(.3, {
x: d,
y: h,
angle: _
}).start(); else {
t.x = d;
t.y = h;
t.angle = _;
}
});
this.updateRestCnt();
};
t.prototype.updateRestCnt = function() {
if (this.rest_cnt) {
this.rest_cnt.getChildByName("label").getComponent(cc.Label).string = this._currShowCards.length + "";
this.rest_cnt.active = this._currShowCards.length > 0;
}
};
t.prototype.showCnt = function() {
cc.log("show cnt = " + this._currShowCards.length);
return this._currShowCards.length;
};
Object.defineProperty(t.prototype, "skin", {
set: function(e) {
this._skin != e && (this._skin = e);
},
enumerable: !1,
configurable: !0
});
__decorate([ c() ], t.prototype, "_angle", void 0);
__decorate([ c({
type: cc.Integer,
displayName: "牌间夹角"
}) ], t.prototype, "angle", null);
__decorate([ c() ], t.prototype, "_radius", void 0);
__decorate([ c({
type: cc.Integer,
displayName: "半径"
}) ], t.prototype, "radius", null);
__decorate([ c({
type: cc.Integer,
displayName: "牌数量"
}) ], t.prototype, "totalCnt", void 0);
__decorate([ c(cc.Node) ], t.prototype, "rest_cnt", void 0);
return __decorate([ o, s, r ], t);
}(cc.Component);
i.PBHideHandCard = l;
cc._RF.pop();
}, {
"../../../BalootClient/game_common/common_cmp/NetImg": "NetImg"
} ],
PBInteractiveCtrl: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fa252nbOg1Fsb042Vjd7MXC", "PBInteractiveCtrl");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBInteractiveCtrl = i.InteractiveEmotionCfg = void 0;
var n = e("../../../BalootClient/game_common/common_cmp/NetImg"), a = e("../PBLogic"), o = e("./PBInteractiveEmotionPanel"), c = cc._decorator, s = c.ccclass, r = c.property;
i.InteractiveEmotionCfg = new Map([ [ "1", {
icon: "icon_1",
canTimes: !0,
diamond: 0,
coin: 1e3,
isVipEmoj: !1,
cd: 15,
flyAni: {
node: "fly",
type: "img",
icon: "icon_1",
flyTime: 1,
angle: -720
},
endAni: {
node: "normal_1",
animation: "1_rtx"
},
sound: "interactive/ani_slipper"
} ], [ "2", {
icon: "icon_2",
canTimes: !0,
diamond: 0,
coin: 1e3,
isVipEmoj: !1,
cd: 15,
flyAni: {
node: "fly",
type: "img",
icon: "icon_2",
flyTime: .7,
angle: 0
},
endAni: {
node: "normal_1",
animation: "4_sh"
},
sound: "interactive/ani_rose"
} ], [ "3", {
icon: "icon_3",
canTimes: !0,
diamond: 0,
coin: 1e3,
isVipEmoj: !1,
cd: 15,
flyAni: {
node: "fly",
type: "img",
icon: "icon_3",
flyTime: .6,
angle: -360
},
endAni: {
node: "normal_1",
animation: "3_rll"
},
sound: "interactive/ani_durian"
} ], [ "4", {
icon: "icon_4",
canTimes: !0,
diamond: 0,
coin: 2e3,
isVipEmoj: !1,
cd: 15,
flyAni: {
node: "fly",
type: "img",
icon: "icon_4",
flyTime: 1,
angle: -720
},
endAni: {
node: "normal_1",
animation: "5_rjd"
},
sound: "interactive/ani_egg"
} ], [ "5", {
icon: "icon_5",
canTimes: !0,
diamond: 0,
coin: 2e3,
isVipEmoj: !1,
cd: 15,
flyAni: {
node: "fly",
type: "img",
icon: "icon_5",
flyTime: .8,
angle: 0
},
endAni: {
node: "normal_1",
animation: "7_KISS"
},
sound: "interactive/ani_kiss"
} ], [ "6", {
icon: "icon_6",
canTimes: !0,
diamond: 0,
coin: 2e3,
isVipEmoj: !1,
cd: 15,
flyAni: {
node: "fly",
type: "img",
icon: "icon_6",
flyTime: .15,
cnt: 7,
angle: 0
},
endAni: {
node: "normal_1",
animation: "6_sq"
},
sound: "interactive/ani_money"
} ], [ "7", {
icon: "icon_7",
canTimes: !1,
diamond: 0,
coin: 0,
isVipEmoj: !0,
vipLevel: 0,
cd: 15,
flyAni: {
node: "fly",
type: "img",
icon: "icon_7",
flyTime: .5,
angle: 0
},
endAni: {
node: "normal_2",
animation: "1_sz"
},
sound: "interactive/ani_brush"
} ], [ "8", {
icon: "icon_8",
canTimes: !1,
diamond: 0,
coin: 0,
isVipEmoj: !0,
vipLevel: 5,
cd: 15,
flyAni: {
node: "fly",
type: "img",
icon: "icon_8",
flyTime: 1,
angle: 0
},
endAni: {
node: "normal_2",
animation: "2_gp"
},
sound: "interactive/ani_rose"
} ], [ "9", {
icon: "icon_9",
canTimes: !1,
diamond: 0,
coin: 0,
isVipEmoj: !0,
vipLevel: 7,
cd: 15,
flyAni: {
node: "fly",
type: "img",
icon: "icon_9",
flyTime: .8,
angle: -720
},
endAni: {
node: "normal_2",
animation: "3_zd"
},
sound: "interactive/ani_bomb"
} ], [ "10", {
icon: "icon_10",
canTimes: !1,
diamond: 0,
coin: 0,
isVipEmoj: !0,
vipLevel: 9,
cd: 15,
flyAni: {
node: "fly",
type: "img",
icon: "icon_10",
flyTime: .6,
angle: 0
},
endAni: {
node: "normal_2",
animation: "5_st"
},
sound: "interactive/ani_labber",
needChangeDirection: !0
} ], [ "11", {
icon: "icon_11",
canTimes: !1,
diamond: 0,
coin: 0,
isVipEmoj: !0,
vipLevel: 11,
cd: 15,
flyAni: {
node: "fly",
type: "img",
icon: "icon_11",
flyTime: .6,
angle: 0
},
endAni: {
node: "normal_2",
animation: "6_ax"
},
sound: "interactive/ani_love"
} ], [ "12", {
icon: "icon_12",
canTimes: !1,
diamond: 0,
coin: 0,
isVipEmoj: !0,
vipLevel: 12,
cd: 15,
flyAni: {
node: "fly",
type: "img",
icon: "icon_12",
flyTime: .2,
cnt: 3,
angle: 0
},
endAni: {
node: "normal_2",
animation: "4_zj"
},
sound: "interactive/ani_gold"
} ], [ "16", {
icon: "icon_16",
canTimes: !0,
hasCharm: 1,
diamond: 0,
coin: 25e3,
isVipEmoj: !1,
cd: 15,
flyAni: {
node: "fly",
type: "img",
icon: "icon_16",
flyTime: .7,
angle: 0
},
endAni: {
node: "vip_dianxin",
animation: "chuxian"
},
sound: "interactive/gaodian"
} ], [ "17", {
icon: "icon_17",
canTimes: !0,
hasCharm: 1,
diamond: 0,
coin: 3e4,
isVipEmoj: !1,
cd: 15,
flyAni: {
node: "fly",
type: "img",
icon: "icon_17",
flyTime: .7,
angle: 0
},
endAni: {
node: "vip_shuiyan",
animation: "animation"
},
sound: "interactive/shuiyan"
} ], [ "18", {
icon: "icon_18",
canTimes: !0,
hasCharm: 1,
diamond: 0,
coin: 5e4,
isVipEmoj: !1,
cd: 15,
flyAni: {
node: "fly",
type: "img",
icon: "icon_18",
flyTime: .7,
angle: 0
},
endAni: {
node: "vip_hongcha",
animation: "ruchang"
},
sound: "interactive/hongcha"
} ], [ "14", {
icon: "icon_14",
canTimes: !0,
hasCharm: 1,
diamond: 0,
coin: 1e5,
isVipEmoj: !1,
cd: 15,
flyAni: {
node: "fly",
type: "img",
icon: "icon_14",
flyTime: .7,
angle: 0
},
endAni: {
node: "kiss",
animation: "feiwen",
scale: .5
},
sound: "interactive/gift_kiss"
} ], [ "15", {
icon: "icon_15",
canTimes: !0,
hasCharm: 1,
diamond: 0,
coin: 25e4,
isVipEmoj: !1,
cd: 15,
flyAni: {
node: "fly",
type: "img",
icon: "icon_15",
flyTime: .7,
angle: 0
},
endAni: {
node: "ring",
animation: "shouzhuo",
scale: .5
},
sound: "interactive/gift_ring"
} ], [ "13", {
icon: "icon_13",
canTimes: !0,
hasCharm: 1,
diamond: 0,
coin: 5e5,
isVipEmoj: !1,
cd: 15,
flyAni: {
node: "fly",
type: "img",
icon: "icon_13",
flyTime: .7,
angle: 0
},
endAni: {
node: "card",
animation: "animation",
scale: .5
},
sound: "interactive/gift_car"
} ] ]);
var l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.emotion_item = null;
t.emotionPanel = null;
return t;
}
t.prototype.playerEmotion = function(e, t, a) {
var o = this.getPlayer(a);
if (o) {
var c = this.getPlayerPos(t, "interactive_emotion_pos"), s = cc.instantiate(this.emotion_item);
s.active = !0;
s.parent = this.node;
s.setPosition(this.node.convertToNodeSpaceAR(c));
var r = this.getPlayerPos(a, "interactive_emotion_pos");
r = s.convertToNodeSpaceAR(r);
var l = i.InteractiveEmotionCfg.get("" + e), d = s.getChildByName(l.flyAni.node);
d.active = !0;
d.getComponent(n.default).url = l.flyAni.icon;
this.playEmotionSound(l.sound);
cc.tween(d).to(l.flyAni.flyTime, {
x: r.x,
y: r.y,
angle: l.flyAni.angle
}, {
easing: "quadIn"
}).call(function() {
d.active = !1;
var e = s.getChildByName(l.endAni.node).getComponent(sp.Skeleton);
e.node.active = !0;
l.endAni.scale && (e.node.scale = l.endAni.scale);
e.node.setPosition(r);
e.setAnimation(0, l.endAni.animation, !1);
l.needChangeDirection && o.getNeedChangeInteractiveUIIndex && o.getNeedChangeInteractiveUIIndex().includes(o.uiIndex) && (e.node.scaleX = -1);
e.setCompleteListener(function() {
e.setCompleteListener(null);
s.removeFromParent();
});
}).start();
if (l.flyAni.cnt) for (var h = function(e) {
var t = cc.instantiate(d);
t.parent = d.parent;
t.active = !0;
t.x = t.y = 0;
cc.tween(t).delay(l.flyAni.flyTime * (e + 1)).to(l.flyAni.flyTime, {
x: r.x,
y: r.y,
angle: l.flyAni.angle
}, {
easing: "quadIn"
}).call(function() {
t.active = !1;
}).start();
}, _ = 0; _ < l.flyAni.cnt - 1; _++) h(_);
}
};
t.prototype.openEmotionPanel = function(e) {
if (this.emotionPanel) {
var t = this.getPlayerPos(e, "interactive_panel_pos");
this.emotionPanel.open(e, t);
}
};
t.prototype.getPlayerPos = function(e, t) {
return this.getPlayer(e).getGlobalPos(t);
};
t.prototype.getPlayer = function(e) {
return a.facade.playersCtrl.getPlayerByUid(e);
};
t.prototype.playEmotionSound = function(e) {
a.facade.soundMgr.playBaseEffect(e);
};
__decorate([ r(cc.Node) ], t.prototype, "emotion_item", void 0);
__decorate([ r(o.PBInteractiveEmotionPanel) ], t.prototype, "emotionPanel", void 0);
return __decorate([ s ], t);
}(cc.Component);
i.PBInteractiveCtrl = l;
cc._RF.pop();
}, {
"../../../BalootClient/game_common/common_cmp/NetImg": "NetImg",
"../PBLogic": "PBLogic",
"./PBInteractiveEmotionPanel": "PBInteractiveEmotionPanel"
} ],
PBInteractiveEmotionPanel_ex: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "dd32ezDQGRJpbRjuNF7IIRi", "PBInteractiveEmotionPanel_ex");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../../../PokerBase/scripts/interactive_emoticons/PBInteractiveEmotionPanel"), a = e("../../../PokerBase/scripts/net/PBMsgCmd"), o = cc._decorator, c = o.ccclass, s = (o.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype._reqCharmInfo = function() {
cc.vv.NetManager.send({
c: a.PBPostCmd.QUERY_TIMES_EMOTION_INFO,
uid: cc.vv.UserManager.uid
}, !0);
};
t.prototype.getPlayerInfo = function(e) {
var t = cc.vv.gameData.getPlayByUid(e);
if (t) {
t.uinfo = t.uinfo || {};
t.uinfo.icon = t.usericon;
t.uinfo.gender = 1;
t.uinfo.uname = t.playername;
}
return t;
};
t.prototype.getTableInfo = function() {
return cc.vv.gameData.getDeskInfo();
};
t.prototype.getMyInfo = function() {
var e = cc.vv.gameData.getMyInfo();
e.isSeated = !0;
return e;
};
t.prototype.sendChatMsg = function(e, t) {
cc.find("Canvas").getComponent("Table_Logic_Base").sendRetransmissionMsg(e, JSON.stringify(t));
};
return __decorate([ c ], t);
}(n.PBInteractiveEmotionPanel));
i.default = s;
cc._RF.pop();
}, {
"../../../PokerBase/scripts/interactive_emoticons/PBInteractiveEmotionPanel": "PBInteractiveEmotionPanel",
"../../../PokerBase/scripts/net/PBMsgCmd": "PBMsgCmd"
} ],
PBInteractiveEmotionPanel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "53ff8oFzyJCJqr+A3vU5ngz", "PBInteractiveEmotionPanel");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBInteractiveEmotionPanel = void 0;
var n = e("../../../BalootClient/game_common/CommonStyle"), a = e("../../../BalootClient/game_common/common_cmp/ImgSwitchCmpTS"), o = e("../../../BalootClient/game_common/common_cmp/NetImg"), c = e("../../../BalootClient/game_common/common_cmp/UserAvatar"), s = e("../../../BalootClient/game_common/net/WSReqest"), r = e("../chat/PBChatData"), l = e("../net/PBMsgCmd"), d = e("../PBCommonData"), h = e("../PBEvent"), _ = e("../PBLogic"), p = e("../PBUtils"), u = e("./PBInteractiveCtrl"), f = cc._decorator, g = f.ccclass, m = f.property, v = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.panel = null;
t.block_node = null;
t.btn_profire = null;
t.item_template = null;
t.emotion_container = null;
t.uid = 0;
t._emotions = null;
t._timesEmotions = null;
t._timesEmotionData = null;
return t;
}
t.prototype.onLoad = function() {
this.panel.active = !1;
};
t.prototype.start = function() {
var e = this;
this.block_node && this.block_node.on(cc.Node.EventType.TOUCH_END, function() {
e.close();
}, this);
this._emotions = [];
this._timesEmotions = [];
var t = Array.from(u.InteractiveEmotionCfg.keys()), i = Global.isSingle() || Global.isYDApp();
i && (t = t.filter(function(e) {
return Number(e) <= 12;
}));
cc.find("panel/bg", this.node).height = i ? 540 : 700;
cc.find("panel/bg", this.node).y += i ? 80 : 0;
for (var n = function(t) {
var i = Number(t), n = u.InteractiveEmotionCfg.get("" + i);
if (!n) return "continue";
var s = cc.instantiate(c.item_template);
s.active = !0;
s.parent = c.emotion_container;
cc.find("icon", s).getComponent(o.default).url = n.icon;
var r = cc.find("coin", s), l = cc.find("vip", s), d = cc.find("diamond", s);
cc.find("times", s).active = !1;
if (n.coin) {
r.active = !0;
l.active = !1;
d.active = !1;
var h = c.getItemPrice(i);
null == h && (h = n.coin);
if (h > 0) {
cc.find("icon_gold", r).active = !0;
cc.find("label", r).x = 17;
cc.find("label", r).getComponent(cc.Label).string = "" + Global.formatNumShort(h);
} else {
cc.find("icon_gold", r).active = !1;
cc.find("label", r).x = 0;
cc.find("label", r).getComponent(cc.Label).string = ___("free");
}
} else if (n.isVipEmoj) {
r.active = !1;
l.active = !0;
d.active = !1;
l.getComponent(a.default).showSpriteByName("vip" + n.vipLevel);
l.getChildByName("lock_mask").active = cc.vv.UserManager.svip <= n.vipLevel;
} else if (n.diamond) {
r.active = !1;
l.active = !1;
d.active = !0;
cc.find("label", d).getComponent(cc.Label).string = "" + n.diamond;
}
var _ = cc.find("cd", s);
_.active = !1;
var p = cc.find("progress", _).getComponent(cc.ProgressBar);
p.progress = 1;
s.id = i;
s.cd = _;
s.cdProgress = p;
s.on(cc.Node.EventType.TOUCH_END, function() {
if (!s.cd.active) {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
e.close();
e.sendEmotion(s.id);
}
}, c);
c._emotions.push(s);
n.canTimes && c._timesEmotions.push(s);
}, c = this, s = 0, r = t; s < r.length; s++) n(r[s]);
Global.isYDApp() && (this.btn_profire.node.active = !1);
this.btn_profire.node.on("click", function() {
e.close();
cc.vv.PopupManager.addPopup("BalootClient/UserInfo/PopupPersonalInfo", {
opacityIn: !0,
onShow: function(t) {
var i = t.getComponent("PersonalInfo");
i && i.init(e.uid);
}
});
}, this);
var d = this.node.addComponent("NetListenerCmp");
d.registerMsg(MsgId.PERSIONAL_INFO, this.PERSIONAL_INFO, this);
d.registerMsg(l.PBPostCmd.QUERY_TIMES_EMOTION_INFO, this.QUERY_TIMES_EMOTION_INFO, this);
this._reqCharmInfo();
};
t.prototype._reqCharmInfo = function() {
_.facade.dm.playersDm && _.facade.dm.playersDm.selfAbsInfo && cc.vv.NetManager.send({
c: l.PBPostCmd.QUERY_TIMES_EMOTION_INFO,
uid: _.facade.dm.playersDm && _.facade.dm.playersDm.selfAbsInfo.uid
}, !0);
};
t.prototype.QUERY_TIMES_EMOTION_INFO = function(e) {
var t = this;
if (200 == e.code && e.data) {
this._timesEmotionData = new Map();
e.data.forEach(function(e) {
t._timesEmotionData.set(e.id, e.times);
});
} else cc.log("次数道具数据出错", e);
};
t.prototype.PERSIONAL_INFO = function(e) {
if (200 == e.code) {
cc.log(e);
try {
var t = this.getPlayerInfo(e.playerInfo.uid);
if (t) {
t.statisticsWinPlayCnt = e.stat.online.total;
t.statisticsWinRate = e.stat.online.win_rate;
t.uinfo.gender = e.playerInfo.sex;
}
this.panel.active && this._showUserInfo();
} catch (e) {
cc.log(e);
}
}
};
t.prototype._reqPlayerInfo = function() {
var e = this.getPlayerInfo(this.uid);
if (e && !(e.statisticsWinPlayCnt > 0)) {
var t = {
c: MsgId.PERSIONAL_INFO,
otheruid: this.uid
}, i = cc.vv.NetManager.getCacheObj(t);
if (i && i.msg) {
var n = i.msg;
e.uinfo.gender = n.playerInfo.sex;
e.statisticsWinPlayCnt = n.stat.online.total;
e.statisticsWinRate = n.stat.online.win_rate;
this.panel.active && this._showUserInfo();
} else cc.vv.NetManager.cache(t);
}
};
t.prototype.sendEmotion = function(e) {
return __awaiter(this, void 0, void 0, function() {
var t, i, n, a, o, c, _, f;
return __generator(this, function(g) {
switch (g.label) {
case 0:
t = u.InteractiveEmotionCfg.get("" + e);
if (!(i = this.getMyInfo()).isSeated && !t.hasCharm) {
cc.vv.FloatTip.show(___("您还没有坐下不能发送"));
return [ 2 ];
}
if (t.isVipEmoj && i.svip <= t.vipLevel) {
cc.vv.FloatTip.show(___("VIP等级不够"));
return [ 2 ];
}
if (t.diamond && !(_ = this._timesEmotionData && this._timesEmotionData.get(e)) && cc.vv.UserManager.getDiamond() < t.diamond) {
cc.vv.FloatTip.show(___("您的钻石不足"));
return [ 2 ];
}
if (t.coin) {
c = this._timesEmotionData && this._timesEmotionData.get(e);
null == (n = this.getItemPrice(e)) && (n = t.coin);
if (!c && cc.vv.UserManager.coin < n) {
cc.vv.FloatTip.show(___("您的金币不足"));
return [ 2 ];
}
}
a = {
c: l.PBPostCmd.USER_INTERACTIVE,
uid: i.uid,
id: e,
min_coin: this.getDeskMinCoin(),
frienduid: this.uid
};
return [ 4, new s.SyncReqest().post(a) ];

case 1:
if (!(o = g.sent())) return [ 2 ];
if (o.spcode) {
p.showErrorInfo(o.spcode);
return [ 2 ];
}
if (t.coin) if ((c = this._timesEmotionData && this._timesEmotionData.get(e)) && c > 0) this._timesEmotionData.set(e, c - 1); else {
i.coin = o.coin;
this.getRoomType() != d.PBRoomType.match && Global.dispatchEvent(h.PBEvent.USER_COIN_CHANGE, {
uid: i.uid
});
} else t.hasCharm && ((_ = this._timesEmotionData && this._timesEmotionData.get(e)) && _ > 0 ? this._timesEmotionData.set(e, _ - 1) : cc.vv.UserManager.setDiamond(o.diamond));
if (t.hasCharm) return [ 2 ];
this._emotions[e - 1].lastSendTime = new Date().getTime();
f = {
cmd: "interactive_emotion",
emotionId: e,
fromUid: i.uid,
toUid: this.uid
};
this.sendChatMsg(r.PBChatMsgType.diy, f);
return [ 2 ];
}
});
});
};
t.prototype._showUserInfo = function() {
var e = cc.find("uinfo", this.panel), t = this.getPlayerInfo(this.uid);
if (t) {
cc.find("head_icon", e).getComponent(c.default).updataAvatar({
uid: t.uid,
icon: t.uinfo && t.uinfo.icon,
avatarFrame: t.avatarFrame
});
var i = cc.find("id/label", e).getComponent(cc.Label), n = ___("ID");
i.string = __(n, ":", t.uid);
var o = cc.find("name/gender_icon", e).getComponent(a.default);
o.setIndex(1 == t.uinfo.gender ? 1 : 0);
var s = cc.find("name/label", e).getComponent(cc.Label);
s.string = t.uinfo.uname;
var r = cc.find("coin", e);
this.getTableInfo().roomType == d.PBRoomType.friend ? cc.find("coin/label", e).getComponent(cc.Label).string = "" + Global.convertNumToShort(t.coin) : r.active = !1;
if (Global.isYDApp()) {
cc.find("id", e).active = !1;
cc.find("name", e).active = !0;
cc.find("name", e).position = cc.v3(-280, 32);
r.active = !1;
o.node.active = !1;
s.node.x = 0;
s.node.color = new cc.Color(255, 255, 255, 255);
s.fontSize = 40;
}
cc.find("play_cnt/label", e).getComponent(cc.Label).string = "" + t.statisticsWinPlayCnt;
cc.find("win_rate/label", e).getComponent(cc.Label).string = t.statisticsWinRate + "%";
} else this.close();
};
t.prototype._updateEmojiCDState = function() {
var e = new Date().getTime();
this._emotions && this._emotions.forEach(function(t) {
var i = u.InteractiveEmotionCfg.get("" + t.id).cd, n = t.lastSendTime;
if (n && e - n < 1e3 * i) {
var a = i - (e - n) / 1e3;
t.cd.active = !0;
var o = t.cdProgress;
o.node.tw && o.node.tw.stop();
o.progress = a / i;
var c = cc.tween(o).to(a, {
progress: 0
}).call(function() {
t.cd.active = !1;
}).start();
o.node.tw = c;
} else t.cd.active = !1;
});
};
t.prototype._updateCharmEmotion = function() {
var e = this;
this._timesEmotionData ? this._timesEmotions && this._timesEmotions.forEach(function(t) {
var i = t.id, n = u.InteractiveEmotionCfg.get("" + i);
cc.log(i, e._timesEmotionData);
var a = e._timesEmotionData.get(i), o = cc.find("coin", t), c = cc.find("vip", t), s = cc.find("diamond", t), r = cc.find("times", t);
if (a) {
o.active = !1;
c.active = !1;
s.active = !1;
r.active = !0;
cc.find("label", r).getComponent(cc.Label).string = "X" + a;
} else {
o.active = !1;
c.active = !1;
r.active = !1;
if (n.coin) {
o.active = !0;
var l = e.getItemPrice(i);
null == l && (l = n.coin);
if (l > 0) {
cc.find("icon_gold", o).active = !0;
cc.find("label", o).x = 17;
cc.find("label", o).getComponent(cc.Label).string = "" + Global.formatNumShort(l);
} else {
cc.find("icon_gold", o).active = !1;
cc.find("label", o).x = 0;
cc.find("label", o).getComponent(cc.Label).string = ___("free");
}
} else if (n.hasCharm) {
s.active = !0;
cc.find("label", s).getComponent(cc.Label).string = "" + n.diamond;
}
}
}) : this._reqCharmInfo();
};
t.prototype.open = function(e) {
var t = this;
this.uid = e;
this._showUserInfo();
this._updateEmojiCDState();
this._updateCharmEmotion();
n.CommonStyle.fastShow(this.panel);
this.unscheduleAllCallbacks();
this.scheduleOnce(function() {
t.close();
}, 5);
this._reqPlayerInfo();
};
t.prototype.close = function() {
this.panel && n.CommonStyle.fastHide(this.panel);
};
t.prototype.getPlayerInfo = function(e) {
return _.facade.dm.playersDm.getPlayerByUid(e);
};
t.prototype.getTableInfo = function() {
return _.facade.dm.tableInfo;
};
t.prototype.getMyInfo = function() {
return _.facade.dm.playersDm.selfAbsInfo;
};
t.prototype.sendChatMsg = function(e, t) {
_.facade.sendRetransmissionMsg(e, JSON.stringify(t));
};
t.prototype.getItemPrice = function(e) {
var t = null, i = cc.vv.UserManager.emotionProplist;
if (i) for (var n = 0; n < i.length; n++) if (e == i[n].id) {
t = i[n].coin;
break;
}
return t;
};
t.prototype.getDeskMinCoin = function() {
return cc.vv.gameData.deskInfo.conf.mincoin;
};
t.prototype.getRoomType = function() {
return cc.vv.gameData.deskInfo.conf.roomtype;
};
__decorate([ m(cc.Node) ], t.prototype, "panel", void 0);
__decorate([ m(cc.Node) ], t.prototype, "block_node", void 0);
__decorate([ m(cc.Button) ], t.prototype, "btn_profire", void 0);
__decorate([ m(cc.Node) ], t.prototype, "item_template", void 0);
__decorate([ m(cc.Node) ], t.prototype, "emotion_container", void 0);
return __decorate([ g ], t);
}(cc.Component);
i.PBInteractiveEmotionPanel = v;
cc._RF.pop();
}, {
"../../../BalootClient/game_common/CommonStyle": "CommonStyle",
"../../../BalootClient/game_common/common_cmp/ImgSwitchCmpTS": "ImgSwitchCmpTS",
"../../../BalootClient/game_common/common_cmp/NetImg": "NetImg",
"../../../BalootClient/game_common/common_cmp/UserAvatar": "UserAvatar",
"../../../BalootClient/game_common/net/WSReqest": "WSReqest",
"../PBCommonData": "PBCommonData",
"../PBEvent": "PBEvent",
"../PBLogic": "PBLogic",
"../PBUtils": "PBUtils",
"../chat/PBChatData": "PBChatData",
"../net/PBMsgCmd": "PBMsgCmd",
"./PBInteractiveCtrl": "PBInteractiveCtrl"
} ],
PBInviteFriends: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e10036HSCJFmbIPu4Co2TQq", "PBInviteFriends");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBInviteFriends = void 0;
var n = e("../../../PokerBase/scripts/PBUtils"), a = e("../PBCommonData"), o = e("../PBLogic"), c = cc._decorator, s = c.ccclass, r = c.property, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.listNode = null;
t.tabContainer = null;
t._menberListData = null;
t._randListData = null;
t._roomType = 1;
t._entryCoin = 0;
t._roomId = 0;
t._tabs = null;
return t;
}
t.prototype.onLoad = function() {
var e = this, t = this.node.addComponent("NetListenerCmp");
t.registerMsg(MsgId.FRIEND_LIST, this.FRIEND_LIST, this, !1);
t.registerMsg(MsgId.CLUB_LIST_USER, this.FRIEND_LIST, this, !1);
t.registerMsg(MsgId.GET_RAND_USERS, this.GET_RAND_USERS, this, !1);
t.registerMsg(MsgId.INVITATION_RESULT, this.INVITATION_RESULT, this, !1);
t.registerMsg(MsgId.INVITE_FRIEND_JOIN_TEAM, this.INVITE_FRIEND_JOIN_TEAM, this, !1);
this._tabs = this.tabContainer.toggleItems;
this._tabs.forEach(function(t, i) {
t.node.on("toggle", function() {
e.onTab(i);
});
});
};
t.prototype.onDestroy = function() {
this._menberListData = null;
this._randListData = null;
this._listData = null;
};
t.prototype.start = function() {
this.tabContainer.node.active = this._roomType == a.PBRoomType.friend;
this.onTab(0);
};
t.prototype.onTab = function(e) {
if (1 == e) if (this._randListData) this.showData(this._randListData); else {
var t = {
c: MsgId.GET_RAND_USERS,
limit: 5
};
cc.vv.NetManager.send(t, !0);
} else if (this._menberListData) this.showData(this._menberListData); else {
t = {
c: MsgId.FRIEND_LIST
};
if (this._roomType == a.PBRoomType.club) {
t.c = MsgId.CLUB_LIST_USER;
t.cid = cc.vv.UserManager.club && cc.vv.UserManager.club.cid || 0;
t.page = 1;
t.limit = 500;
}
cc.vv.NetManager.send(t, !0);
}
};
t.prototype.FRIEND_LIST = function(e) {
if (200 == e.code) {
this._menberListData = e.items || e.members;
this._listData = this._menberListData;
this.showData(this._menberListData);
}
};
t.prototype.GET_RAND_USERS = function(e) {
this._randListData = e.users;
this.showData(this._randListData);
};
t.prototype.showData = function(e) {
this._listData = e;
for (var t = 0; t < this._listData.length; t++) {
var i = this._listData[t].uid;
if (o.facade.dm.playersDm.getPlayerByUid(i)) {
this._listData.splice(t, 1);
t--;
}
}
this.listNode.getComponent("ListView").numItems = this._listData.length;
};
t.prototype.INVITATION_RESULT = function() {
cc.vv.PopupManager.removePopup(this.node);
};
t.prototype.onPopup = function(e) {
this._roomType = e.moduleType;
this._entryCoin = e.entryCoin || 0;
this._roomId = e.roomId || 0;
this._curGameId = e.gameid;
};
t.prototype.onUpdateItem = function(e, t) {
var i = this._listData[t];
cc.find("node_head", e).getComponent("HeadCmp").setHead(i.uid, i.usericon || i.avatar);
cc.find("node_head", e).getComponent("HeadCmp").setAvatarFrame(i.avatarframe);
cc.find("label_nick", e).getComponent(cc.Label).string = i.playername || i.name;
cc.find("label_offline", e).active = !1;
cc.find("label_has", e).active = !1;
cc.find("btn_invite", e).active = !1;
if (0 == i.isonline) cc.find("label_offline", e).active = !0; else if (1 == i.gstatus) cc.find("label_has", e).active = !0; else {
cc.find("btn_invite", e).active = !0;
cc.find("btn_invite", e).getComponent("ButtonGrayCmp").interactable = !i.isInvite;
}
};
t.prototype.onClickItem = function(e) {
e.currentTarget.getComponent("ButtonGrayCmp").interactable = !1;
var t = this._listData[e.currentTarget.parent._listId];
t.isInvite = !0;
var i = {
c: MsgId.FRIEND_ROOM_INVITE,
frienduid: t.uid,
roomtype: this._roomType,
entry: this._entryCoin || 0,
deskid: this._roomId || 0,
gameid: this._curGameId
};
if (this._roomType == a.PBRoomType.club) {
i.c = MsgId.CLUB_ROOMT_INVITE;
i.cid = cc.vv.UserManager.club && cc.vv.UserManager.club.cid || 0;
}
cc.vv.NetManager.send(i, !0);
};
t.prototype.INVITE_FRIEND_JOIN_TEAM = function(e) {
e.spcode && n.showErrorInfo(e.spcode);
};
t.PREFAB_PATH = "games/PokerBase/prefabs/InviteFriendsToGame";
__decorate([ r(cc.Node) ], t.prototype, "listNode", void 0);
__decorate([ r(cc.ToggleContainer) ], t.prototype, "tabContainer", void 0);
return __decorate([ s ], t);
}(cc.Component);
i.PBInviteFriends = l;
cc._RF.pop();
}, {
"../../../PokerBase/scripts/PBUtils": "PBUtils",
"../PBCommonData": "PBCommonData",
"../PBLogic": "PBLogic"
} ],
PBLayerMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "76dd7m+24NKU4JBq6ms/eia", "PBLayerMgr");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBLayerMgr = void 0;
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.top_layer = null;
t.common_ani_layer = null;
return t;
}
t.prototype.onLoad = function() {
this.top_layer || (this.top_layer = cc.find("Canvas"));
this.common_ani_layer || (this.common_ani_layer = this.node);
};
__decorate([ o(cc.Node) ], t.prototype, "top_layer", void 0);
__decorate([ o(cc.Node) ], t.prototype, "common_ani_layer", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.PBLayerMgr = c;
cc._RF.pop();
}, {} ],
PBLightCtrl: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9f96aJ73G1DY5Lyvc/LygeZ", "PBLightCtrl");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBLightCtrl = void 0;
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.light = null;
t.lightEndPosNode = [];
t._position = -1;
return t;
}
t.prototype.onLoad = function() {
this.light.active = !1;
this.light.height = 0;
this.lightToPosition(this._position);
};
t.prototype.lightToPosition = function(e) {
if (-1 != e && this.light && (!this.light.active || this._position != e)) {
this._position = e;
var t = this.lightEndPosNode[e], i = this.node.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.v2(0, 0)));
this.light.angle = this.light.angle % 360;
var n = 180 * Math.atan2(i.y, i.x) / Math.PI - 90, a = n - this.light.angle;
Math.abs(a) > 180 && (a > 0 ? n -= 360 : n += 360);
var o = this._getDistance(e);
this.light.parent = t;
this.light.setPosition(t.convertToNodeSpaceAR(this.node.convertToWorldSpaceAR(cc.v2(0, 0))));
facade.soundMgr.playBaseEffect("card_take_2");
if (this.light.active) cc.tween(this.light).to(.3, {
angle: n,
height: o
}, {
easing: "cubicOut"
}).start(); else {
this.light.active = !0;
this.light.height = 0;
this.light.angle = n;
cc.tween(this.light).to(.3, {
height: o
}, {
easing: "cubicOut"
}).start();
}
}
};
t.prototype._getDistance = function(e) {
var t = 0, i = this.lightEndPosNode[e];
if (i) {
var n = this.node.convertToNodeSpaceAR(i.convertToWorldSpaceAR(cc.v2(0, 0)));
t = Math.sqrt(n.x * n.x + n.y * n.y);
}
return t;
};
t.prototype.closeLight = function() {
var e = this;
this.light.active && cc.tween(this.light).to(.3, {
height: 0
}, {
easing: "cubicOut"
}).call(function() {
e.light.active = !1;
}).start();
};
__decorate([ o(cc.Node) ], t.prototype, "light", void 0);
__decorate([ o([ cc.Node ]) ], t.prototype, "lightEndPosNode", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.PBLightCtrl = c;
cc._RF.pop();
}, {} ],
PBLogic: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b2937ZV4jNOlYuKngsaoSQR", "PBLogic");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.facade = void 0;
var n = e("../../BalootClient/game_common/PromiseLock"), a = e("../../_FWExpand/Ecs/World"), o = e("../module/Settlement/RoomSettlementCpt"), c = e("./autohost/PBAutoHost"), s = e("./bg/PBBgCtrl"), r = e("./chat/PBChat"), l = e("./chat/PBChatData"), d = e("./interactive_emoticons/PBInteractiveCtrl"), h = e("./operate/PBLightCtrl"), _ = e("./operate/PBOperate"), p = e("./PBCommonData"), u = e("./PBCommonProxy"), f = e("./PBEvent"), g = e("./PBLayerMgr"), m = e("./PBRule"), v = e("./PBSkinMgr"), S = e("./PBVoiceCtrl"), C = e("./player/PBPlayersCtrl"), b = e("./sound/PBSoundCtrl"), E = e("./widgetplus/PBClock"), y = e("./widgetplus/PBCountdown"), L = e("./widgetplus/PBFingerTip"), T = e("./widgetplus/PBPopupDismiss"), I = e("./widgetplus/PBViewerList"), A = cc._decorator, N = A.ccclass;
A.property;
i.facade = null;
var R = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
return __awaiter(this, void 0, void 0, function() {
return __generator(this, function() {
e.prototype.onLoad.call(this);
Global.autoAdaptDevices(!1);
this.beforeInit();
this.init();
this.loadCtrlAsync();
this.afterInit();
return [ 2 ];
});
});
};
t.prototype.start = function() {
this.dm.msgHandler.run();
this.enterTable();
this.enterTableLater();
};
t.prototype.loadDm = function() {
return cc.vv.gameData;
};
t.prototype.onDestroy = function() {
window.facade = null;
i.facade = null;
this.dm.msgHandler && this.dm.msgHandler.clear();
this.dm = null;
cc.game.off(cc.game.EVENT_HIDE, this.onGameHide, this);
cc.game.off(cc.game.EVENT_SHOW, this.onGameShow, this);
};
t.prototype.beforeInit = function() {
cc.vv.AudioManager.stopBgm();
window.facade = this;
i.facade = this;
this.panel = this.node.getChildByName("safe_node");
this.dm = this.loadDm();
this.dm.msgHandler.gameCtrl = this;
};
t.prototype.afterInit = function() {
var e = this;
Global.saveLocal("SAVE_FROM_SUBGAME_ID", this.dm.tableInfo.gameId);
Global.saveLocal("SAVE_FROM_SUBGAME_ROOM_TYPE", this.dm.tableInfo.roomType);
cc.game.on(cc.game.EVENT_HIDE, this.onGameHide, this);
cc.game.on(cc.game.EVENT_SHOW, this.onGameShow, this);
this.scheduleOnce(function() {
e.soundMgr.playBgm();
}, 1);
this.bgCtrl && this.bgCtrl.changeSkin(cc.vv.UserManager.tableskin || "table_free");
cc.vv.BroadcastManager && cc.vv.BroadcastManager.run();
this.tips_coin_recharge = cc.find("tips_coin_recharge", this.panel);
this.tips_coin_recharge && (this.tips_coin_recharge.active = !1);
};
t.prototype.onGameHide = function() {
cc.log("# game hide#");
this.chat && this.chat.saveChatMsg();
};
t.prototype.onGameShow = function() {
cc.log("# game show#");
};
t.prototype.init = function() {
this.loadCtrl();
this.addEventListener();
};
t.prototype.addEventListener = function() {
var e = this;
Global.registerEvent("USER_INFO_CHANGE", this.changeSkin, this);
var t = this.panel.getChildByName("btn_skin");
t && t.on("click", function() {
e.commonProxy.openShop();
}, this);
};
t.prototype.loadCtrl = function() {
this.soundMgr = this.loadSoundCtrl();
this.layerMgr = this.loadLayerMgr();
this.bgCtrl = this.loadBgCtrl();
this.playersCtrl = this.loadPlayersCtrl();
this.skinMgr = this.loadSkinMgr();
Global.isYDApp() ? this.loadChat() : this.settlementCpt = this.panel.addComponent(o.default);
this.autoHost = this.loadAutoHost();
this.voiceCtrl = this.loadVoiceCtrl();
this.clock = this.loadClock();
this.interactiveEmotionCtrl = this.loadInterActiveEmotionsCtrl();
this.operate = this.loadOperate();
this.commonProxy = this.panel.addComponent(u.PBCommonProxy);
this.lightCtrl = this.loadLightCtrl();
this.countdown = this.loadCountdown();
this.rule = this.loadRule();
this.viewerList = this.loadViewerList();
this.fingerTip = this.loadFingerTip();
};
t.prototype.loadCtrlAsync = function() {
return __awaiter(this, void 0, void 0, function() {
var e;
return __generator(this, function(t) {
switch (t.label) {
case 0:
if (Global.isYDApp()) return [ 2 ];
(e = []).push(this.loadMenu());
e.push(this.loadGameName(-2));
e.push(this.loadDeskId(-1));
e.push(this.loadChargeUI());
e.push(this.loadRightBtnUI());
return [ 4, Promise.all(e) ];

case 1:
t.sent();
return [ 2 ];
}
});
});
};
t.prototype.loadRightBtnUI = function() {
return __awaiter(this, void 0, void 0, function() {
var e, t, i, n, a, o, c, s, r, l;
return __generator(this, function(d) {
switch (d.label) {
case 0:
if (Global.isYDApp()) return [ 2 ];
if (Global.isSingle()) return [ 2 ];
e = [];
[ 255, 291, 292, 293, 294, 295 ].indexOf(this.dm.deskInfo.gameid) < 0 && e.push(cc.vv.ResManager.loadPrefab("PokerBase/module/SkinShop/BtnGameSkin"));
[ 294, 295 ].indexOf(this.dm.deskInfo.gameid) < 0 && e.push(cc.vv.ResManager.loadPrefab("PokerBase/module/Chat/BtnChat"));
[ 294, 295 ].indexOf(this.dm.deskInfo.gameid) < 0 && this.dm.deskInfo.conf.roomtype != p.PBRoomType.match && e.push(cc.vv.ResManager.loadPrefab("PokerBase/module/League/BtnGameLeague"));
t = cc.v3(0, 0);
[ 291, 255 ].indexOf(this.dm.deskInfo.gameid) >= 0 ? t = cc.v3(0, -100) : [ 266 ].indexOf(this.dm.deskInfo.gameid) >= 0 ? t = cc.v3(0, -180) : [ 293 ].indexOf(this.dm.deskInfo.gameid) >= 0 && (t = cc.v3(0, -420));
return [ 4, Promise.all(e) ];

case 1:
i = d.sent();
n = [];
for (a = 0, o = i; a < o.length; a++) {
c = o[a];
(l = cc.instantiate(c)).parent = this.panel;
l.zIndex = 100;
n.push(l);
}
s = cc.v3(468, -166).add(t);
for (r = 0; r < n.length; r++) (l = n[r]).position = s.add(cc.v3(0, -120 * r));
this.loadChat();
return [ 2 ];
}
});
});
};
t.prototype.loadMenu = function() {
return __awaiter(this, void 0, void 0, function() {
var e, t;
return __generator(this, function(i) {
switch (i.label) {
case 0:
return Global.isYDApp() ? [ 2 ] : [ 4, cc.vv.ResManager.loadPrefab("PokerBase/module/Menu/RoomMenu") ];

case 1:
e = i.sent();
(t = cc.instantiate(e)).parent = this.panel;
t.zIndex = 10;
cc.find("yd_float_service", t).active = !Global.isSingle();
return [ 2 ];
}
});
});
};
t.prototype.loadChargeUI = function() {
return __awaiter(this, void 0, void 0, function() {
var e, t, i, n;
return __generator(this, function(a) {
switch (a.label) {
case 0:
return Global.isYDApp() ? [ 2 ] : Global.isSingle() ? [ 2 ] : this.dm.deskInfo.conf.roomtype == p.PBRoomType.match ? [ 2 ] : [ 4, Promise.all([ cc.vv.ResManager.loadPrefab("BalootClient/PiggyBank/prefabs/PiggyBankBtn"), cc.vv.ResManager.loadPrefab("PokerBase/prefabs/tips_coin_recharge") ]) ];

case 1:
e = a.sent();
(t = cc.instantiate(e[0])).parent = this.panel;
t.zIndex = 5;
(i = cc.instantiate(e[1])).parent = this.panel;
i.zIndex = 5;
n = cc.v3(cc.winSize.width / 2, cc.winSize.height / 2 - this.panel.getComponent(cc.Widget).top);
if ([ 269, 290, 292, 293, 294 ].indexOf(this.dm.deskInfo.gameid) >= 0) {
t.position = n.add(cc.v3(-320, -80));
i.position = n.add(cc.v3(-470, -80));
} else {
t.position = n.add(cc.v3(-100, -360));
i.position = n.add(cc.v3(-100, -500));
}
return [ 2 ];
}
});
});
};
t.prototype.loadDeskId = function(e) {
return __awaiter(this, void 0, void 0, function() {
var t, i;
return __generator(this, function(n) {
switch (n.label) {
case 0:
return Global.isYDApp() ? [ 2 ] : this.dm.deskInfo.conf.roomtype == p.PBRoomType.match ? [ 2 ] : [ 4, cc.vv.ResManager.loadPrefab("PokerBase/module/RoomId/room_id") ];

case 1:
t = n.sent();
i = cc.instantiate(t);
cc.find("top_left_layout", this.panel).addChild(i, e);
cc.find("label", i).getComponent(cc.Label).string = this.dm.deskInfo.deskid;
return [ 2 ];
}
});
});
};
t.prototype.loadGameName = function(e) {
return __awaiter(this, void 0, void 0, function() {
var t, i;
return __generator(this, function(n) {
switch (n.label) {
case 0:
return Global.isYDApp() ? [ 2 ] : this.dm.deskInfo.conf.roomtype == p.PBRoomType.match ? [ 2 ] : !cc.find("top_left_layout/score_board", this.panel) || 279 == this.dm.deskInfo.gameid && this.dm.deskInfo.conf.roomtype == p.PBRoomType.normal ? [ 4, cc.vv.ResManager.loadPrefab("PokerBase/module/RoomTitle/room_title") ] : [ 3, 2 ];

case 1:
t = n.sent();
i = cc.instantiate(t);
cc.find("top_left_layout", this.panel).addChild(i, e);
cc.find("label", i).getComponent(cc.Label).string = cc.vv.UserConfig.getGameName(this.dm.deskInfo.gameid);
n.label = 2;

case 2:
return [ 2 ];
}
});
});
};
t.prototype.loadChat = function() {
return __awaiter(this, void 0, void 0, function() {
var e, t, i = this;
return __generator(this, function(n) {
switch (n.label) {
case 0:
return Global.isSingle() ? [ 2 ] : Global.isIOSAndroidReview() ? [ 2 ] : (e = cc.find("chat", this.panel)) ? [ 3, 2 ] : [ 4, cc.vv.ResManager.loadPrefab("PokerBase/prefabs/chat") ];

case 1:
if (t = n.sent()) {
(e = cc.instantiate(t)).name = "chat";
e.parent = this.panel;
e.zIndex = 1100;
}
n.label = 2;

case 2:
if (e) {
this.chat = e.getComponent(r.PBChat);
this.chat && this.chat.init({
sendMsg: function(e, t) {
i.sendRetransmissionMsg(e, t);
}
});
this.chat && Global.isYDApp() && this.chat.showWorldChat(!1);
this.skinMgr.updateEmotionSkin();
}
return [ 2 ];
}
});
});
};
t.prototype.loadFingerTip = function() {
var e = cc.find("finger_tip", this.panel);
return e ? e.getComponent(L.PBFingerTip) : null;
};
t.prototype.loadLayerMgr = function() {
var e = this.panel.getComponent(g.PBLayerMgr);
e || (e = this.panel.addComponent(g.PBLayerMgr));
return e;
};
t.prototype.loadViewerList = function() {
var e = cc.find("viewer_list", this.panel);
return e ? e.getComponent(I.PBViewerList) : null;
};
t.prototype.loadRule = function() {
var e = cc.find("game_rule", this.panel);
if (e) return e.getComponent(m.PBRule);
};
t.prototype.loadMathPlayer = function() {};
t.prototype.loadCountdown = function() {
var e = cc.find("countdown", this.panel);
return e ? e.getComponent(y.PBCountdown) : null;
};
t.prototype.loadLightCtrl = function() {
var e = cc.find("light_ctrl", this.panel);
return e ? e.getComponent(h.PBLightCtrl) : null;
};
t.prototype.loadSoundCtrl = function() {
return this.panel.addComponent(b.PBSoundCtrl);
};
t.prototype.loadBgCtrl = function() {
return cc.find("bg_node", this.panel).getComponent(s.PBBgCtrl);
};
t.prototype.loadPlayersCtrl = function() {
return this.panel.addComponent(C.PBPlayersCtrl);
};
t.prototype.loadSkinMgr = function() {
return this.panel.getComponent(v.PBSkinMgr);
};
t.prototype.sendRetransmissionMsg = function(e, t) {
var i = this.dm.playersDm.selfInfo, n = new l.PBChatMsgVo();
n.uid = i.uid;
n.nick = i.uinfo.uname;
n.gender = cc.vv.UserManager.sex || 0;
n.icon = i.uinfo.icon;
n.avatar = i.avatarFrame;
n.chatSkin = i.chatSkin;
n.fontSkin = this.skinMgr.fontSkin;
n.msgType = e;
n.sendTime = new Date().getTime();
n.content = t;
n.fcoin = i.coin;
this.dm.msgWriter.sendChatMsg(n.getMsg());
};
t.prototype.loadAutoHost = function() {
var e = cc.find("auto_host", this.panel);
if (e) {
e.zIndex = 500;
return e.getComponent(c.PBAutoHost);
}
return null;
};
t.prototype.loadVoiceCtrl = function() {
if (!Global.isYDApp()) return this.panel.addComponent(S.PBVoiceCtrl);
};
t.prototype.loadClock = function() {
var e = cc.find("clock", this.panel);
return e ? e.getComponent(E.PBClock) : null;
};
t.prototype.loadInterActiveEmotionsCtrl = function() {
var e = cc.find("interactive_emotion", this.panel);
if (e) {
e.zIndex = 1e3;
return e.getComponent(d.PBInteractiveCtrl);
}
return null;
};
t.prototype.loadOperate = function() {
var e = cc.find("operate", this.panel);
return e ? e.getComponent(_.PBOperate) : null;
};
t.prototype.enterTable = function() {};
t.prototype.enterTableLater = function() {
var e = this, t = this.getCpt(s.PBBgCtrl);
t && (t.node.zIndex = -10);
this.voiceCtrl && this.scheduleOnce(function() {
e.voiceCtrl.updateAll();
});
};
t.prototype.changeSkin = function() {
this.skinMgr.updateSkin();
};
t.prototype.onChatMsg = function(e) {
return __awaiter(this, void 0, void 0, function() {
var t, i, n;
return __generator(this, function() {
if (!(t = this.dm.playersDm.getPlayerByUid(e.uid))) return [ 2 ];
if (!this.playersCtrl) return [ 2 ];
i = this.playersCtrl.getPlayerByPosition(t.position);
switch (e.msgType) {
case l.PBChatMsgType.text:
i.showBubbleMsg(e.content);
break;

case l.PBChatMsgType.emotion:
i.showEmotion(e.content);
break;

case l.PBChatMsgType.fast_word:
(n = e.getContentText()) && i.showBubbleMsg(n);
break;

case l.PBChatMsgType.diy:
this.diyChatMsgHandler(e);
}
e.msgType != l.PBChatMsgType.diy && this.chat && this.chat.onMsg(e);
return [ 2 ];
});
});
};
t.prototype.diyChatMsgHandler = function(e) {
try {
var t = JSON.parse(e.content);
if ("change_avatar" == t.cmd) {
if (e.uid != this.dm.playersDm.selfAbsInfo.uid && (n = this.playersCtrl.getPlayerByUid(e.uid))) {
n.playerInfoVo.avatarFrame = e.avatar;
n.userInfoCmp.userAvatar.updateFrame(e.avatar);
}
} else if ("change_chat_skin" == t.cmd) {
if (e.uid != this.dm.playersDm.selfAbsInfo.uid) {
var n;
if (n = this.playersCtrl.getPlayerByUid(e.uid)) {
n.playerInfoVo.chatSkin = e.chatSkin;
n.userInfoCmp.userAvatar.updateFrame(e.avatar);
}
}
} else if ("interactive_emotion" == t.cmd) {
this.interactiveEmotionCtrl.playerEmotion(t.emotionId, t.fromUid, t.toUid);
if (e.fcoin) {
var a = this.dm.playersDm.getPlayerByUid(e.uid);
if (a) {
a.coin = e.fcoin;
i.facade.dm.deskInfo.conf.roomtype != p.PBRoomType.match && Global.dispatchEvent(f.PBEvent.USER_COIN_CHANGE, {
uid: a.uid
});
}
}
}
} catch (t) {
console.log("#err#diy消息错误", e);
}
};
t.prototype.autoHostChange = function(e) {
if (this.autoHost && e && this.dm && this.dm.playersDm) {
var t = this.dm.playersDm.getPlayerByUid(e.uid);
if (t) {
t.autoHost = 1 == e.auto;
t == this.dm.playersDm.selfInfo && (t.autoHost ? this.autoHost.show() : this.autoHost.hide());
}
}
};
t.prototype.reconnectInGameReset = function() {
this.dm.msgHandler.clearMsgQueue();
this.dm.reset();
};
t.prototype.openRule = function() {
var e = this;
this.rule ? this.rule.open() : this.loadPrefab(this.url_rule, function(t) {
if (!cc.find("game_rule", e.panel)) {
var i = cc.instantiate(t);
i.parent = e.panel;
i.name = "game_rule";
i.zIndex = 1001;
e.rule = i.getComponent(m.PBRule);
e.rule.open();
}
});
};
t.prototype.playerReady = function(e) {
var t = this.dm.playersDm.getPlayerByUid(e.uid);
if (t) {
this.playersCtrl.ready(t.position);
t.uid == this.dm.playersDm.selfAbsInfo.uid && this.operate && this.operate.showReady(!1);
}
this.dm.playersDm.isSelf(e.uid) && this._showMathUIAni(!1);
};
t.prototype.onSitDown = function(e) {
if (e.uid === cc.vv.UserManager.uid) cc.vv.NetManager.reconnect(); else {
this.dm.playersDm.sitdown(e.uid, e.seatid);
this.playersCtrl.onSitDown(e.uid);
this.playersCtrl.showViewerWatingStartTips();
}
};
t.prototype.onEnterViewer = function() {};
t.prototype.otherPlayerEnter = function(e) {
return __awaiter(this, void 0, void 0, function() {
var t, i, n, a;
return __generator(this, function() {
if (e.deskinfo && e.deskinfo.users) {
t = e.deskinfo.users;
for (i = 0; i < t.length; i++) {
n = t[i];
if (!this.dm.playersDm.getPlayerByUid(n.uid)) {
a = this.dm.parseAPlayer(n);
this.dm.playersDm.seat(a);
this.playersCtrl.seat(a);
}
}
} else if (e.user) {
n = e.user;
if (!this.dm.playersDm.getPlayerByUid(n.uid)) {
a = this.dm.parseAPlayer(n);
this.dm.playersDm.seat(a);
this.playersCtrl.seat(a);
}
}
this.dm.tableInfo.needSelfReady() && this.operate && this.operate.showInvite(!this.dm.playersDm.seatIsFull());
this.dm.msgHandler.resumeCmd();
return [ 2 ];
});
});
};
t.prototype.exitTable = function() {
this.gotoHall();
};
t.prototype.removeViewer = function(e) {
var t = this.dm.playersDm.viewerList.findIndex(function(t) {
return t.uid === e ? t : null;
});
t >= 0 && this.dm.playersDm.viewerList.splice(t, 1);
};
t.prototype.playerExit = function(e, t) {
void 0 === t && (t = !0);
var n = e.uid, a = e.spcode, o = this.dm.playersDm.getPlayerByUid(n);
if (o) if (804 == a || 1097 == a) if (o == this.dm.playersDm.selfInfo) if (Global.isYDApp()) cc.vv.AlertView.showTips(___("Cash balance is lower than the room minimum balance!"), function() {
i.facade.gotoHall();
}); else {
Global.saveLocal("SUBGAME_GOLD_SHORTAGE", 1);
i.facade.gotoHall();
} else {
this.dm.playersDm.removeAUser(o.uid);
this.playersCtrl.standUp(o.position);
this.dm.tableInfo.roomType == p.PBRoomType.friend && t && this.operate.showInvite(!this.dm.playersDm.seatIsFull());
} else if (975 === a) if (o == this.dm.playersDm.selfInfo) cc.vv.AlertView.showTips(___("超时未准备"), function() {
i.facade.gotoHall();
}); else {
this.dm.playersDm.removeAUser(o.uid);
this.playersCtrl.standUp(o.position);
this.dm.tableInfo.roomType == p.PBRoomType.friend && t && this.operate.showInvite(!this.dm.playersDm.seatIsFull());
} else if (536 === a) if (o == this.dm.playersDm.selfInfo) ; else {
this.dm.playersDm.removeAUser(o.uid);
this.playersCtrl.standUp(o.position);
this.dm.tableInfo.roomType == p.PBRoomType.friend && t && this.operate.showInvite(!this.dm.playersDm.seatIsFull());
} else if (1103 === a) if (o == this.dm.playersDm.selfInfo) cc.vv.AlertView.show(___("Automatically exit room without operation in rule time"), null, null, !1, null, null, null, null, 2, function() {
i.facade.gotoHall();
}); else {
this.dm.playersDm.removeAUser(o.uid);
this.playersCtrl.standUp(o.position);
this.dm.tableInfo.roomType == p.PBRoomType.friend && t && this.operate.showInvite(!this.dm.playersDm.seatIsFull());
} else {
this.dm.playersDm.removeAUser(o.uid);
this.playersCtrl.standUp(o.position);
this.dm.tableInfo.roomType == p.PBRoomType.friend && (Global.isYDApp() || this.operate.showInvite(!this.dm.playersDm.seatIsFull() && t));
}
};
t.prototype.reset = function() {};
t.prototype.gotoHall = function() {
if (cc.vv.LoginData) window.toBack && window.toBack(); else {
cc.vv.gameData = null;
this.reset();
if (Global.isSingle()) {
n.PromiseLock.resetLock();
cc.director.preloadScene(Global.SCENE_NAME.HALL, function() {
cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.HALL, function() {});
});
} else {
n.PromiseLock.resetLock();
var e = cc.director.getScene().getComponentInChildren("PBSettlementInfoChange");
e && e.clear();
cc.vv.PopupManager.addPopup("BalootClient/BaseRes/prefabs/SceneTranslate", {
noMask: !0,
noCloseHit: !0,
onShow: function(e) {
e.getComponent("SceneTranslate").toHall();
}
});
}
}
};
t.prototype.roomDismiss = function() {
var e = this;
if (this.dm.tableStatus.isDismiss) cc.vv.AlertView.show(___("房间已经解散"), function() {
e.gotoHall();
}); else {
if (this.dm.tableStatus.flowState == p.PBFlowState.total_settlement) {
this.dm.tableStatus.isDismiss = !0;
Global.dispatchEvent("EVENT_ROOM_DISMISS");
}
cc.vv.AlertView.show(___("房间已经解散"), function() {
e.gotoHall();
});
}
};
t.prototype.playerApplyDismiss = function(e) {
var t = cc.vv.PopupManager.getPopupByName(T.PBPopupDismiss.POPUP_NAME);
t ? t.getComponent(T.PBPopupDismiss).onPopup(e) : cc.vv.PopupManager.addPopup(T.PBPopupDismiss.PREFAB_PATH, {
onShow: function(t) {
t.getComponent(T.PBPopupDismiss).onPopup(e);
}
});
};
t.prototype.dismissCancel = function() {
var e = cc.vv.PopupManager.getPopupByName(T.PBPopupDismiss.POPUP_NAME);
e && cc.vv.PopupManager.removePopup(e);
};
t.prototype.playerReplyDismiss = function(e) {
var t = this;
cc.log(e);
Global.dispatchEvent("EVNT_PLAYER_REPLY_DISMISS", e);
this.scheduleOnce(function() {
t.dm.msgHandler.resumeCmd();
}, .3);
};
t.prototype.countdownStart = function(e) {
if (this.countdown) {
var t = e && e.delayTime || 5;
if (t) {
cc.log("count down show");
this.countdown.show(t);
}
}
if (this.operate) {
this.operate.showReady(!1);
this.operate.showInvite(!1);
}
this.dm.tableStatus.flowState = p.PBFlowState.countdown;
};
t.prototype.countdownStop = function() {
this.countdown && this.countdown.hide();
};
t.prototype._showMathUIAni = function(e, t) {
var i = cc.find("node_match", this.panel);
if (i) {
i.active = e && t;
if (e && t) {
var n = cc.find("node_matching", i).getComponent("Table_Matching");
n && n.show(t);
}
}
};
t.prototype.onUpdatePlayerInfo = function(e) {
var t = this.dm.playersDm.getPlayerByUid(e.uid);
if (t) {
t.chatSkin = e.chatskin;
t.coin = e.coin;
t.avatarFrame = e.avatarframe;
t.uinfo.uname = e.playername;
t.uinfo.icon = e.usericon;
t.currLevel = e.level ? e.level : t.currLevel;
this.playersCtrl.getPlayerByUid(e.uid).userInfoCmp.show(t);
}
};
t.prototype.minusEntryCoin = function() {
var e = this.dm.tableInfo.entryCoin;
if (e) {
this.dm.playersDm.getPlayesInfo().forEach(function(t) {
if (t) {
t.coin -= e;
t.coin < 0 && (t.coin = 0);
}
});
Global.dispatchEvent(f.PBEvent.USER_COIN_CHANGE, {
uid: -1
});
}
};
t.prototype.showCoinChargeTip = function(e) {
void 0 === e && (e = !0);
var t = this.tips_coin_recharge;
if (t) if (e) {
if (!t.active) {
t.active = !0;
t.getChildByName("spine").getComponent(sp.Skeleton).setAnimation(0, "animation", !0);
}
cc.vv.FloatTip.show(___("You are about to run out of gold coins!"));
} else t.active = !1;
};
t.prototype.showFingerTip = function(e) {
var t = this;
if (this.fingerTip) {
var n = this.dm.playersDm.selfAbsInfo;
if (e) try {
var a = "FingerTipTimes" + i.facade.dm.tableInfo.gameId, o = parseInt(cc.sys.localStorage.getItem(a) || 0);
o < 5 && this.playersCtrl.getPlayerByUid(n.uid).userInfoCmp.setWarningCallback(function() {
var e = t.getFingerRefPos();
t.fingerTip.show(e);
o++;
cc.sys.localStorage.setItem(a, o);
});
} catch (e) {
cc.log(e);
}
this.fingerTip.hide();
}
};
t.prototype.getFingerRefPos = function() {
return this.handCardCtrl && this.handCardCtrl.getLastCanOutCard ? this.handCardCtrl.getLastCanOutCard() : null;
};
t.prototype.delayTime = function(e) {
var t = this;
return new Promise(function(i) {
t.scheduleOnce(function() {
i(!0);
}, e);
});
};
t.prototype.loadPrefab = function(e, t) {
cc.resources.load(e, cc.Prefab, function(i, n) {
i ? cc.log("加载预制出错" + e) : t(n);
});
};
t.prototype.confirmBtnClick = function() {};
return __decorate([ N ], t);
}(a.default);
i.default = R;
cc._RF.pop();
}, {
"../../BalootClient/game_common/PromiseLock": "PromiseLock",
"../../_FWExpand/Ecs/World": "World",
"../module/Settlement/RoomSettlementCpt": "RoomSettlementCpt",
"./PBCommonData": "PBCommonData",
"./PBCommonProxy": "PBCommonProxy",
"./PBEvent": "PBEvent",
"./PBLayerMgr": "PBLayerMgr",
"./PBRule": "PBRule",
"./PBSkinMgr": "PBSkinMgr",
"./PBVoiceCtrl": "PBVoiceCtrl",
"./autohost/PBAutoHost": "PBAutoHost",
"./bg/PBBgCtrl": "PBBgCtrl",
"./chat/PBChat": "PBChat",
"./chat/PBChatData": "PBChatData",
"./interactive_emoticons/PBInteractiveCtrl": "PBInteractiveCtrl",
"./operate/PBLightCtrl": "PBLightCtrl",
"./operate/PBOperate": "PBOperate",
"./player/PBPlayersCtrl": "PBPlayersCtrl",
"./sound/PBSoundCtrl": "PBSoundCtrl",
"./widgetplus/PBClock": "PBClock",
"./widgetplus/PBCountdown": "PBCountdown",
"./widgetplus/PBFingerTip": "PBFingerTip",
"./widgetplus/PBPopupDismiss": "PBPopupDismiss",
"./widgetplus/PBViewerList": "PBViewerList"
} ],
PBMenu: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4d5c2wqwMhKHaEMu8vAFgHy", "PBMenu");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBMenu = void 0;
var n = e("../../../BalootClient/game_common/CommonStyle"), a = e("../../../BalootClient/game_common/common_cmp/CDButtonProxy"), o = e("../PBCommonData"), c = cc._decorator, s = c.ccclass, r = c.property, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.close_layer = null;
t.menu_btns_node = null;
t.btnMenuOpen = null;
t.btnMenuClose = null;
t.btnHelp = null;
t.btnSoundSwitch = null;
t.btnMusicSwitch = null;
t.btnRp = null;
t.btnBackHall = null;
t.btnDissolve = null;
return t;
}
t.prototype.onLoad = function() {
var e = this;
this.menu_btns_node = this.node.getChildByName("menu_btns_node");
this.btnMenuOpen.node.on("click", function() {
e.open();
}, this);
this.btnMenuClose.node.on("click", function() {
e.close();
}, this);
this.close_layer && this.close_layer.on(cc.Node.EventType.TOUCH_START, function() {
e.close();
}, !1);
this.btnHelp.node.on("click", function() {
[ 255, 291, 292, 293, 294, 295 ].indexOf(facade.dm.deskInfo.gameid) >= 0 ? e.onMenuHelpClicked() : facade.openRule();
}, this);
this.btnRp && this.btnRp.node.on("click", function() {
cc.vv.PopupManager.addPopup("BalootClient/RP/PopupRPGameView", {
opacityIn: !0
});
}, this);
this.btnSoundSwitch.isChecked = cc.vv.AudioManager.getEffVolume() > 0;
this.btnSoundSwitch.node.getChildByName("sprite_off").active = !this.btnSoundSwitch.isChecked;
this.btnSoundSwitch.node.on("toggle", function() {
e.btnSoundSwitch.isChecked ? cc.vv.AudioManager.setEffVolume(1) : cc.vv.AudioManager.setEffVolume(0);
e.btnSoundSwitch.node.getChildByName("sprite_off").active = !e.btnSoundSwitch.isChecked;
e.close();
}, this);
this.btnMusicSwitch.isChecked = cc.vv.AudioManager.bgmVolume > 0;
this.btnMusicSwitch.node.on("toggle", function() {
if (e.btnMusicSwitch.isChecked) {
cc.vv.AudioManager.setBgmVolume(1);
facade.soundMgr.playBgm();
} else {
cc.vv.AudioManager.setBgmVolume(0);
facade.soundMgr.stopBgm();
}
e.close();
}, this);
this.btnBackHall.addClickHandler(function() {
e.close();
e.askExit();
});
this.btnDissolve.node.active = facade.dm.tableInfo && facade.dm.tableInfo.roomType === o.PBRoomType.friend && !facade.dm.tableInfo.isViewer && facade.dm.tableStatus.isPlaying;
this.btnDissolve.node.on("click", function() {
facade.dm.msgWriter.sendApplyDismiss();
});
cc.find("BtnGameRoundCards", this.menu_btns_node).active = [ 256, 259, 262, 263, 264, 266, 270, 271, 272, 273, 279, 280, 281, 282, 284, 285, 289 ].indexOf(facade.dm.deskInfo.gameid) >= 0;
cc.find("BtnGameChangeCardSize", this.menu_btns_node).active = [ 257, 258, 261, 283 ].indexOf(facade.dm.deskInfo.gameid) >= 0;
this.close();
};
t.prototype.askExit = function() {
return __awaiter(this, void 0, void 0, function() {
var e, t = this;
return __generator(this, function(i) {
switch (i.label) {
case 0:
if (facade.dm.deskInfo.conf.roomtype == o.PBRoomType.match) {
11 == facade.dm.deskInfo.state ? this.ReqBackLobby() : cc.vv.AlertView.show(___("如果退出,将会失去比赛机会?"), function() {
t.ReqBackLobby();
}, function() {}, !1, null, ___("退出"), null, ___("继续"));
return [ 2 ];
}
if (Global.isYDApp()) {
this.ReqBackLobby();
return [ 2 ];
}
return [ 4, cc.vv.NetManager.asyncSend({
c: MsgId.REGET_DESKINFO_2
}) ];

case 1:
e = i.sent();
[ 1, 2, 5 ].indexOf(e.deskInfo.state) >= 0 ? this.ReqBackLobby() : cc.vv.AlertView.show(___("如果现在退出,机器人会帮您代打,可能会造成金币损失?"), function() {
t.ReqBackLobby();
}, function() {}, !1, null, ___("退出"), null, ___("继续"));
return [ 2 ];
}
});
});
};
t.prototype.ReqBackLobby = function() {
facade.dm.msgWriter ? facade.dm.msgWriter.sendExit() : cc.vv.gameData.ReqBackLobby();
};
t.prototype.onMenuHelpClicked = function() {
if (cc.vv.gameData) {
var e, t, i = void 0;
(i = (e = cc.vv.gameData.getGameCfg()).help_prefab) || (i = "Table_Common/TableRes/prefab/Table_Help_prefab");
(t = e.help_prefab_cfg) || (t = "Table_Help_prefab");
if (!i) {
console.log("未在cfg中配置help预制的路径");
return;
}
cc.resources.load(i, cc.Prefab, function(e, i) {
if (!e) {
var n = cc.find("Canvas/help_node");
if (n) n.active = !0; else {
(n = cc.instantiate(i)).getComponent(t) || n.addComponent(t);
n.name = "help_node";
n.parent = cc.find("Canvas");
n.active = !0;
}
}
});
}
};
t.prototype.close = function() {
this.close_layer && (this.close_layer.active = !1);
n.CommonStyle.fastHide(this.menu_btns_node);
this.btnBackHall.node.active = !0;
};
t.prototype.open = function() {
this.close_layer && (this.close_layer.active = !0);
n.CommonStyle.fastShow(this.menu_btns_node);
this.btnBackHall.node.active = !1;
this.btnDissolve.node.active = facade.dm.tableInfo && facade.dm.tableInfo.roomType === o.PBRoomType.friend && !facade.dm.tableInfo.isViewer && facade.dm.tableStatus.isPlaying;
};
__decorate([ r(cc.Node) ], t.prototype, "close_layer", void 0);
__decorate([ r(cc.Node) ], t.prototype, "menu_btns_node", void 0);
__decorate([ r(cc.Button) ], t.prototype, "btnMenuOpen", void 0);
__decorate([ r(cc.Button) ], t.prototype, "btnMenuClose", void 0);
__decorate([ r(cc.Button) ], t.prototype, "btnHelp", void 0);
__decorate([ r(cc.Button) ], t.prototype, "btnSoundSwitch", void 0);
__decorate([ r(cc.Button) ], t.prototype, "btnMusicSwitch", void 0);
__decorate([ r(cc.Button) ], t.prototype, "btnRp", void 0);
__decorate([ r(a.CDButtonProxy) ], t.prototype, "btnBackHall", void 0);
__decorate([ r(cc.Button) ], t.prototype, "btnDissolve", void 0);
return __decorate([ s ], t);
}(cc.Component);
i.PBMenu = l;
cc._RF.pop();
}, {
"../../../BalootClient/game_common/CommonStyle": "CommonStyle",
"../../../BalootClient/game_common/common_cmp/CDButtonProxy": "CDButtonProxy",
"../PBCommonData": "PBCommonData"
} ],
PBMiniGame777_reel: [ function(e, t) {
"use strict";
cc._RF.push(t, "7af49qz0cJNCLN0ClCJOLPf", "PBMiniGame777_reel");
var i = "LMSlots_Subgame777_item";
cc.Class({
extends: e("LMSlots_PauseUI_Base"),
properties: {
prefab_item: {
default: null,
type: cc.Prefab,
tooltip: "物品的预制"
},
reelIdx: 0,
_num: 3,
_allItems: [],
_curInterv: 0,
_gamecfg: null
},
start: function() {},
createItems: function(e) {
this._gamecfg = e;
for (var t = 0; t < this._num + 1; t++) {
var n = cc.instantiate(this.prefab_item);
n.position = this.getItemPosition(t);
this.node.addChild(n);
var a = n.getComponent(i);
if (a) {
a.resetItem(t, this.reelIdx, this._gamecfg);
a.showRandSprite();
}
this._allItems.push(n);
}
},
getItemPosition: function(e) {
var t = this.node.height / (this._num - 1) * e;
return cc.v2(0, t);
},
startMove: function(e) {
this._resultReel = e;
for (var t = this._allItems, n = 0; n < t.length; n++) {
var a = t[n].getComponent(i);
if (a) {
a.setMoveState("moveing");
a.clrearItemData();
}
}
this._bStartMove = !0;
this._curInterv = 0;
this._moveIntervCfg = 1 / 60;
this._moveSpeed = 40;
this._roundMax = 5;
this._stopNum = 0;
},
stopMove: function() {
var e = this._allItems;
this._moveSpeed = 10 * this._moveSpeed;
for (var t = 0; t < e.length; t++) {
var n = e[t].getComponent(i);
n && n.setRound(this._roundMax - 1);
}
},
addStopItemNum: function() {
this._stopNum += 1;
this._stopNum == this._allItems.length && this.doReelStopAction();
},
doReelStopAction: function() {
Global.dispatchEvent("REEL_STOP");
},
update: function(e) {
var t = this, n = this;
if (this._bStartMove) {
this._curInterv += e;
if (this._curInterv >= this._moveIntervCfg) {
this._curInterv = 0;
for (var a = this.getBottomPosY(), o = this._allItems, c = function(e) {
var c = o[e], s = c.getComponent(i);
if (s && "moveing" == s.getMoveState()) if (s.getRound() < t._roundMax + t.reelIdx) {
c.y -= t._moveSpeed;
if (c.y <= a) {
c.y = t.getTopPosY();
s.addRound();
s.showRandSprite();
}
} else {
s.showResultSprite(t._resultReel[e]);
var r = t.getItemPosition(s.getItemIdx()), l = (c.y - r.y) / (1 / t._moveIntervCfg * t._moveSpeed);
s.setMoveState("easing");
cc.tween(c).to(l, {
position: r
}, {
easing: "elasticIn"
}).call(function() {
s.setMoveState("idle");
n.addStopItemNum();
}).start();
}
}, s = 0; s < o.length; s++) c(s);
}
}
},
getBottomPosY: function() {
return -this.getItemPosition(1).y;
},
getTopPosY: function() {
return this.getItemPosition(this._num).y;
}
});
cc._RF.pop();
}, {
LMSlots_PauseUI_Base: "LMSlots_PauseUI_Base"
} ],
PBMiniGame777: [ function(e, t) {
"use strict";
cc._RF.push(t, "caa5dSyh8tJiaE0JHIEkgxI", "PBMiniGame777");
var i, n, a = ((i = {})[1] = {
normal: "theme160_s_104",
win_node: "s104"
}, i[2] = {
normal: "theme160_s_103",
win_node: "s103"
}, i[3] = {
normal: "theme160_s_102",
win_node: "s102"
}, i[4] = {
normal: "theme160_s_105",
win_node: "s105"
}, i[5] = {
normal: "theme160_s_106",
win_node: "s106"
}, i[6] = {
normal: "theme160_s_107",
win_node: "s107"
}, i[7] = {
normal: "theme160_s_108",
win_node: "s108"
}, i[8] = {
normal: "theme160_s_109",
win_node: "s109"
}, i);
(n = {})[1] = 3117, n[2] = 25, n[3] = 9, n[4] = 7.5, n[5] = 9.4, n[6] = 7.5, n[7] = 5, 
n[8] = 2.5;
cc.Class({
extends: e("LMSlots_PauseUI_Base"),
properties: {
stopBtn: cc.Node,
startBtn: cc.Node,
title: cc.Node,
winLabel: cc.Node,
ruleBtn: cc.Node,
closeBtn: cc.Node,
betLabel: cc.Node,
machine: cc.Node,
entryBtn: cc.Node,
dropCoin: cc.Node,
dropCoinInBtn: cc.Node,
addCoinInBtn: cc.Node,
_offset: 800,
_bet: 0
},
onLoad: function() {
var e = this;
this.node.addComponent("EventListenerCmp").registerEvent("PBEvent.CLOSE_MINIGAME_777", this.CLOSE_MINIGAME_777, this);
Global.btnClickEvent(this.startBtn, function() {
StatisticsMgr.reqReportNow(ReportConfig.MINIGAME_777_SPIN);
this.onClickStart();
}, this);
this.stopBtn.on("click", this.stop777Call, this);
this.stopBtn.active = !1;
this.machine.x = this.node.parent.x < 0 ? -this._offset : this._offset;
this.entryBtn.on("click", function() {
StatisticsMgr.reqReportNow(ReportConfig.MINIGAME_777_OPEN);
e.node.parent.zIndex = 101;
e.entryBtn.active = !1;
var t = e.node.parent.x < 0 ? -e.entryBtn.width / 2 + e.machine.width / 2 : e.entryBtn.width / 2 - e.machine.width / 2;
cc.tween(e.machine).to(.3, {
x: t
}, {
easing: "backOut"
}).start();
});
this.closeBtn.on("click", function() {
StatisticsMgr.reqReportNow(ReportConfig.MINIGAME_777_CLOSE);
e.node.parent.zIndex = 99;
cc.tween(e.machine).to(.3, {
x: e.node.parent.x < 0 ? -e._offset : e._offset
}, {
easing: "backIn"
}).call(function() {
e.entryBtn.active = !0;
}).start();
});
this.ruleBtn.on("click", function() {
StatisticsMgr.reqReportNow(ReportConfig.MINIGAME_777_RULE);
cc.vv.PopupManager.addPopup("games/PokerBase/prefabs/MiniGame_777/MiniGame_777_rule", {
opacityIn: !0
});
});
this.winLabel.active = !1;
this.title.active = !0;
this.showInitReel();
Global.registerEvent("REEL_STOP", this.recvReelStop, this);
this.node.active = 1 === facade.dm.deskInfo.open777;
},
CLOSE_MINIGAME_777: function() {
var e = this;
this.node.parent.zIndex = 99;
cc.tween(this.machine).to(.3, {
x: this.node.parent.x < 0 ? -this._offset : this._offset
}, {
easing: "backIn"
}).call(function() {
e.entryBtn.active = !0;
}).start();
},
onEnable: function() {
cc.vv.NetManager.registerMsg(MsgId.PB_MINIGAME_777, this.onRcvSubGameAction, this);
},
onDisable: function() {
cc.vv.NetManager.unregisterMsg(MsgId.PB_MINIGAME_777, this.onRcvSubGameAction, !1, this);
},
start: function() {
var e = this;
this.scheduleOnce(function() {
e.showEnter(facade.dm.deskInfo.conf.entry);
});
},
showEnter: function(e) {
this._bet = e;
this.betLabel.getComponent(cc.Label).string = e;
this._bSendReq = !1;
this._subGameData = null;
this._startRound = 0;
this.hideAllSubNode();
},
onClickStart: function() {
if (!this._bSendReq) if (cc.vv.UserManager.coin < this._bet) cc.vv.EventManager.emit(EventId.NOT_ENOUGH_COINS); else {
this._bSendReq = !0;
var e = {
c: MsgId.PB_MINIGAME_777
};
e.bet = this._bet;
cc.vv.NetManager.send(e, !0);
this.startBtn.active = !1;
}
},
onRcvSubGameAction: function(e) {
var t = this;
AppLog.log("接收游戏动作数据");
if (200 == e.code) {
this._subGameData = e;
this.scheduleOnce(function() {
t.startMoveReel();
});
}
},
showInitReel: function() {
for (var e = 0; e < 3; e++) cc.find("spr_machine/node_content/reel" + (e + 1), this.machine).getComponent("PBMiniGame777_reel").createItems(a);
},
startMoveReel: function() {
this.hideAllSubNode();
this.title.active = !0;
this.winLabel.active = !1;
this._stopReelNum = 0;
if (this._subGameData) for (var e = 0; e < 3; e++) {
var t = [ 0, 0, 0 ], i = this._subGameData.cards;
t[1] = i[e];
cc.find("spr_machine/node_content/reel" + (e + 1), this.machine).getComponent("PBMiniGame777_reel").startMove(t);
}
this.stopBtn.active = !0;
},
stop777Call: function() {
for (var e = 0; e < 3; e++) cc.find("spr_machine/node_content/reel" + (e + 1), this.machine).getComponent("PBMiniGame777_reel").stopMove();
this.stopBtn.active = !1;
},
recvReelStop: function() {
var e = this;
this._stopReelNum += 1;
if (3 == this._stopReelNum) {
this.stopBtn.active = !1;
this._subGameData.mult > 0 && this.showResultAnimation(this._subGameData.cards);
this.scheduleOnce(function() {
e.showEnd();
e._bSendReq = !1;
}, 1.5);
}
},
showEnd: function() {
var e = this, t = this._subGameData.mult * facade.dm.deskInfo.conf.entry, i = this.dropCoin.getComponent("DropCoins");
if (t > 0) {
this.title.active = !1;
this.winLabel.active = !0;
i.setPlay();
if (this.entryBtn.active) {
this.dropCoinInBtn.getComponent("DropCoins").setPlay();
this.addCoinInBtn.active = !0;
this.addCoinInBtn.getComponent(cc.Label).string = __("+", Global.formatNumShort(t, 0));
cc.tween(this.addCoinInBtn).by(.5, {
y: 100
}).call(function() {
e.addCoinInBtn.active = !1;
e.addCoinInBtn.y -= 100;
}).start();
}
}
var n = this.winLabel;
Global.doRoallNumEff(n, 0, t, 1.5, function() {
e.startBtn.active = !0;
i.stopPlay();
e.entryBtn.active && e.dropCoinInBtn.getComponent("DropCoins").stopPlay();
}, null, 0, !0);
var a = facade.dm.playersDm.getPlayerByUid(this._subGameData.uid);
if (a) {
a.coin = this._subGameData.coin;
Global.dispatchEvent("PBEvent.USER_COIN_CHANGE", {
uid: a.uid
});
}
},
showResultAnimation: function(e) {
this.ShowResultNode(!0);
for (var t = 0; t < e.length; t++) {
var i = this.getSpineAnimationName(e[t]), n = cc.find("spr_machine/node_content/winmask/Sp_Game777_Symbol" + t + "/" + i, this.machine);
n.active = !0;
n.getComponent(sp.Skeleton).setAnimation(0, "animation", !0);
cc.tween(n).repeat(10, cc.sequence(cc.fadeIn(.1), cc.delayTime(.2), cc.fadeOut(.1), cc.delayTime(.2))).start();
}
},
ShowResultNode: function(e) {
cc.find("spr_machine/node_content/winmask", this.machine).active = e;
},
getSpineAnimationName: function(e) {
var t = a;
for (var i in t) {
var n = t[i];
if (i == e) return n.win_node;
}
},
hideAllSubNode: function() {
this.ShowResultNode(!1);
for (var e = 0; e < 3; e++) for (var t = cc.find("spr_machine/node_content/winmask/Sp_Game777_Symbol" + e, this.machine).children, i = 0; i < t.length; i++) t[i].active = !1;
}
});
cc._RF.pop();
}, {
LMSlots_PauseUI_Base: "LMSlots_PauseUI_Base"
} ],
PBMsgCmd: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a7085rsawdGa7PuN2pQKods", "PBMsgCmd");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBPostCmd = i.PBMsgCmd = void 0;
var n = function() {
function e() {
this._R_ENTER_ROOM = 43;
this._R_ROOM_DISMISS = 126012;
this._S_APPLY_DISMISS = 25712;
this._R_PLAYER_APPLY_DISMISS = 126015;
this._S_REPLY_DISMISS = 25713;
this._R_PLAYER_REPLY_DISMISS = 126016;
this._R_PLAYER_ENTER_ROOM = 126001;
this._R_PLAYER_EXIT_ROOM = 126011;
this._S_AUTO_HOST = 25718;
this._R_AUTO_HOST = 126004;
this._S_CANCLE_AUTO_HOST = 25707;
this._S_CHAT_MSG = 25705;
this._R_CHAT_MSG = 100202;
this._S_EXIT = 25706;
this._R_PLAYER_READY = 126002;
this._S_READY = 25708;
this._R_COUNTDOWN_START = 126020;
this._R_COUNTDOWN_STOP = 126021;
this._S_VOICE_CHANGE = 25734;
this._R_VOICE_CHANGE = 126043;
this._S_SITDOWN = 25719;
this._R_PLAYER_SITDOWN = 126026;
this._R_ENTER_VIEWER = 126028;
this._R_PLAYER_EXIT = 126029;
this._R_UPDATE_PLAYER_INFO = 126030;
this._R_TIPS_COIN_RECHARDGE = 126032;
this._R_GAME_DISMISS_CANCEL = 126042;
this.send_change = 52;
this.rec_change = 1083;
}
Object.defineProperty(e.prototype, "R_ENTER_ROOM", {
get: function() {
return this._R_ENTER_ROOM;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "R_ROOM_DISMISS", {
get: function() {
return this._R_ROOM_DISMISS;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "S_APPLY_DISMISS", {
get: function() {
return this._S_APPLY_DISMISS;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "R_PLAYER_APPLY_DISMISS", {
get: function() {
return this._R_PLAYER_APPLY_DISMISS;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "S_REPLY_DISMISS", {
get: function() {
return this._S_REPLY_DISMISS;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "R_PLAYER_REPLY_DISMISS", {
get: function() {
return this._R_PLAYER_REPLY_DISMISS;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "R_PLAYER_ENTER_ROOM", {
get: function() {
return this._R_PLAYER_ENTER_ROOM;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "R_PLAYER_EXIT_ROOM", {
get: function() {
return this._R_PLAYER_EXIT_ROOM;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "S_AUTO_HOST", {
get: function() {
return this._S_AUTO_HOST;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "R_AUTO_HOST", {
get: function() {
return this._R_AUTO_HOST;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "S_CANCLE_AUTO_HOST", {
get: function() {
return this._S_CANCLE_AUTO_HOST;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "S_CHAT_MSG", {
get: function() {
return this._S_CHAT_MSG;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "R_CHAT_MSG", {
get: function() {
return this._R_CHAT_MSG;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "S_EXIT", {
get: function() {
return this._S_EXIT;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "R_PLAYER_READY", {
get: function() {
return this._R_PLAYER_READY;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "S_READY", {
get: function() {
return this._S_READY;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "R_COUNTDOWN_START", {
get: function() {
return this._R_COUNTDOWN_START;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "R_COUNTDOWN_STOP", {
get: function() {
return this._R_COUNTDOWN_STOP;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "S_VOICE_CHANGE", {
get: function() {
return this._S_VOICE_CHANGE;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "R_VOICE_CHANGE", {
get: function() {
return this._R_VOICE_CHANGE;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "S_SITDOWN", {
get: function() {
return this._S_SITDOWN;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "R_PLAYER_SITDOWN", {
get: function() {
return this._R_PLAYER_SITDOWN;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "R_ENTER_VIEWER", {
get: function() {
return this._R_ENTER_VIEWER;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "R_PLAYER_EXIT", {
get: function() {
return this._R_PLAYER_EXIT;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "R_UPDATE_PLAYER_INFO", {
get: function() {
return this._R_UPDATE_PLAYER_INFO;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "R_TIPS_COIN_RECHARDGE", {
get: function() {
return this._R_TIPS_COIN_RECHARDGE;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "R_GAME_DISMISS_CANCEL", {
get: function() {
return this._R_GAME_DISMISS_CANCEL;
},
enumerable: !1,
configurable: !0
});
return e;
}();
i.PBMsgCmd = n;
i.PBPostCmd = {
USER_INTERACTIVE: 361,
QUERY_TIMES_EMOTION_INFO: 414
};
cc._RF.pop();
}, {} ],
PBMsgHandlerEx: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ffc489xTTZMD7X/8NEeS4dK", "PBMsgHandlerEx");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBMsgHandlerEx = void 0;
var n = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.bindHandler = function() {
this.bindNoCacheHandler();
this.registerHandler(this.dm.msgCmd.R_PLAYER_READY, this.playerReady.bind(this), 0);
this.registerHandler(this.dm.msgCmd.S_APPLY_DISMISS, this.S_APPLY_DISMISS.bind(this), 0);
this.registerHandler(this.dm.msgCmd.R_PLAYER_APPLY_DISMISS, this.R_PLAYER_APPLY_DISMISS.bind(this), 0);
this.registerHandler(this.dm.msgCmd.R_PLAYER_REPLY_DISMISS, this.R_PLAYER_REPLY_DISMISS.bind(this), 0);
this.registerHandler(this.dm.msgCmd.R_COUNTDOWN_START, this.R_COUNTDOWN_START.bind(this), 0);
this.registerHandler(this.dm.msgCmd.R_COUNTDOWN_STOP, this.R_COUNTDOWN_STOP.bind(this), 0);
this.registerHandler(this.dm.msgCmd.R_VOICE_CHANGE, this.onVoiceChanged.bind(this), 0);
this.registerHandler(this.dm.msgCmd.R_PLAYER_SITDOWN, this.R_PLAYER_SITDOWN.bind(this), 0);
this.registerHandler(this.dm.msgCmd.S_SITDOWN, this.S_SITDOWN.bind(this), 0);
};
t.prototype.R_ENTER_VIEWER = function(e) {
console.log("R_ENTER_VIEWER", e);
if (200 === e.code && !e.spcode) {
var t = this.dm.parseAPlayer(e.user);
this.dm.playersDm.viewerList.push(t);
this.gameCtrl && this.gameCtrl.onEnterViewer(e);
this.dm.tableInfo.isViewer && this.dm.playersDm.selfAbsInfo.seatId < 1 && this.gameCtrl.viewerList && this.gameCtrl.viewerList.updateList(this.dm.playersDm.viewerList);
}
};
t.prototype.onData = function(e) {
if (this._noCacheHandlerMap) {
var t = e.c;
if (this._noCacheHandlerMap.has(t)) this._noCacheHandlerMap.get(t)(e); else try {
if (this._canPlayCmd) {
this._msgQueue.push(e);
this.playCmd();
} else this._msgQueue.push(e);
} catch (e) {
cc.log(e);
}
}
};
return t;
}(e("./PBMsgHandler").PBMsgHandler);
i.PBMsgHandlerEx = n;
cc._RF.pop();
}, {
"./PBMsgHandler": "PBMsgHandler"
} ],
PBMsgHandler: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a959erkEYNK5JL7ncNaH2a5", "PBMsgHandler");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBMsgHandler = void 0;
var n = e("../../../BalootClient/game_common/net/BaseHandler"), a = e("../PBLogic"), o = e("../chat/PBChatData"), c = function(e) {
__extends(t, e);
function t() {
var t = e.call(this) || this;
t.dm = null;
t.gameCtrl = null;
return t;
}
t.prototype.clear = function() {
e.prototype.clear.call(this);
this.dm = null;
this.gameCtrl = null;
};
t.prototype.bindHandler = function() {
this.bindNoCacheHandler();
this.registerHandler(this.dm.msgCmd.R_PLAYER_READY, this.playerReady.bind(this), 0);
this.registerHandler(this.dm.msgCmd.R_PLAYER_ENTER_ROOM, this.playerEnterRoom.bind(this), 0);
this.registerHandler(this.dm.msgCmd.R_PLAYER_EXIT_ROOM, this.playerExit.bind(this), 0);
this.registerHandler(this.dm.msgCmd.S_APPLY_DISMISS, this.S_APPLY_DISMISS.bind(this), 0);
this.registerHandler(this.dm.msgCmd.R_PLAYER_APPLY_DISMISS, this.R_PLAYER_APPLY_DISMISS.bind(this), 0);
this.registerHandler(this.dm.msgCmd.R_PLAYER_REPLY_DISMISS, this.R_PLAYER_REPLY_DISMISS.bind(this), 0);
this.registerHandler(this.dm.msgCmd.R_COUNTDOWN_START, this.R_COUNTDOWN_START.bind(this), 0);
this.registerHandler(this.dm.msgCmd.R_COUNTDOWN_STOP, this.R_COUNTDOWN_STOP.bind(this), 0);
this.registerHandler(this.dm.msgCmd.R_PLAYER_EXIT, this.R_PLAYER_EXIT.bind(this), 0);
this.registerHandler(this.dm.msgCmd.R_VOICE_CHANGE, this.onVoiceChanged.bind(this), 0);
this.registerHandler(this.dm.msgCmd.R_PLAYER_SITDOWN, this.R_PLAYER_SITDOWN.bind(this), 0);
this.registerHandler(this.dm.msgCmd.R_ENTER_VIEWER, this.R_ENTER_VIEWER.bind(this), 0);
this.registerHandler(this.dm.msgCmd.S_SITDOWN, this.S_SITDOWN.bind(this), 0);
};
t.prototype.bindNoCacheHandler = function() {
this.registerNoCacheHandler(this.dm.msgCmd.R_ROOM_DISMISS, this.roomDismiss.bind(this));
this.registerNoCacheHandler(this.dm.msgCmd.S_EXIT, this.selfExit.bind(this));
this.registerNoCacheHandler(this.dm.msgCmd.R_CHAT_MSG, this.onChatMsg.bind(this));
this.registerNoCacheHandler(this.dm.msgCmd.R_AUTO_HOST, this.autoHostChange.bind(this));
this.registerNoCacheHandler(this.dm.msgCmd.S_CANCLE_AUTO_HOST, this.selfCancleAutoHost.bind(this));
this.registerNoCacheHandler(this.dm.msgCmd.R_UPDATE_PLAYER_INFO, this.R_UPDATE_PLAYER_INFO.bind(this));
this.registerNoCacheHandler(this.dm.msgCmd.R_TIPS_COIN_RECHARDGE, this.R_TIPS_COIN_RECHARDGE.bind(this));
this.registerNoCacheHandler(this.dm.msgCmd.R_GAME_DISMISS_CANCEL, this.R_GAME_DISMISS_CANCEL.bind(this));
};
t.prototype.R_COUNTDOWN_START = function(e) {
this.gameCtrl.countdownStart(e);
};
t.prototype.R_COUNTDOWN_STOP = function(e) {
this.gameCtrl.countdownStop(e);
};
t.prototype.playerEnterRoom = function(e) {
this.pauseCmd();
this.gameCtrl.otherPlayerEnter(e);
};
t.prototype.R_PLAYER_EXIT = function(e) {
console.log("R_PLAYER_EXIT", e);
if (e.seatid > 0) {
this.gameCtrl.removeViewer(e.uid);
this.gameCtrl.playerExit(e, !1);
} else {
this.gameCtrl.removeViewer(e.uid);
this.dm.tableInfo.isViewer && this.gameCtrl.viewerList && this.gameCtrl.viewerList.updateList(this.dm.playersDm.viewerList);
}
};
t.prototype.S_SITDOWN = function(e) {
if (e.spcode) switch (e.spcode) {
case 804:
cc.vv.FloatTip.show(___("您的金币不足"));
Global.isYDApp() || cc.vv.EventManager.emit(EventId.NOT_ENOUGH_COINS);
}
};
t.prototype.playerExit = function(e) {
console.log("玩家退出", e);
this.gameCtrl.playerExit(e);
};
t.prototype.playerReady = function(e) {
console.log("玩家准备", e);
this.gameCtrl.playerReady(e);
};
t.prototype.roomDismiss = function(e) {
console.log("房间解散", e);
this.gameCtrl.roomDismiss();
};
t.prototype.S_APPLY_DISMISS = function(e) {
cc.log("自己发起解散", e);
e.spcode || this.gameCtrl.playerApplyDismiss(e.dismiss);
};
t.prototype.R_PLAYER_APPLY_DISMISS = function(e) {
cc.log("玩家发起解散", e);
e.spcode || this.gameCtrl.playerApplyDismiss(e.dismiss);
};
t.prototype.R_PLAYER_REPLY_DISMISS = function(e) {
cc.log("玩家选择(拒绝/同意)解散房间", e);
if (!e.spcode) {
this.pauseCmd();
this.gameCtrl.playerReplyDismiss(e);
}
};
t.prototype.selfExit = function(e) {
console.log("自己中途退出房间", e);
if (200 == e.code) {
if (101015 == e.spcode) {
cc.vv.FloatTip.show(___("Please complete the game before leaving the room"));
return;
}
this.gameCtrl.exitTable();
}
};
t.prototype.autoHostChange = function(e) {
console.log("托管状态改变", e);
this.gameCtrl && this.gameCtrl.autoHostChange(e);
};
t.prototype.selfCancleAutoHost = function(e) {
console.log("自己取消托管账户", e);
!e.spcode && this.dm && this.dm.playersDm && this.dm.playersDm.selfInfo && this.gameCtrl && this.gameCtrl.autoHostChange({
uid: this.dm.playersDm.selfInfo.uid,
auto: 0
});
};
t.prototype.onChatMsg = function(e) {
console.log("聊天消息", e);
if (this.gameCtrl) {
var t = new o.PBChatMsgVo().parse(e.msg), i = e.coin || 0;
i && (t.fcoin = i);
this.gameCtrl.onChatMsg(t);
}
};
t.prototype.onVoiceChanged = function(e) {
console.log("onVoiceChanged", e);
this.gameCtrl.voiceCtrl && this.gameCtrl.voiceCtrl.R_VOICE_CHANGE(e);
};
t.prototype.R_PLAYER_SITDOWN = function(e) {
console.log("R_PLAYER_SITDOWN", e);
if (this.gameCtrl && 200 === e.code) {
this.gameCtrl.onSitDown(e);
this.dm.tableInfo.isViewer && this.dm.playersDm.selfAbsInfo.seatId < 1 && this.gameCtrl.viewerList && this.gameCtrl.viewerList.updateList(this.dm.playersDm.viewerList);
}
};
t.prototype.R_ENTER_VIEWER = function(e) {
console.log("R_ENTER_VIEWER", e);
if (200 === e.code && !e.spcode) {
var t = this.dm.parseAPlayer(e.user);
this.dm.playersDm.viewerList.push(t);
this.gameCtrl && this.gameCtrl.onEnterViewer(e);
this.dm.tableInfo.isViewer && this.dm.playersDm.selfAbsInfo.seatId < 1 && this.gameCtrl.viewerList && this.gameCtrl.viewerList.updateList(this.dm.playersDm.viewerList);
if (t.seatId > 0) {
this.dm.playersDm.seat(t);
a.facade.playersCtrl.seat(t);
}
}
};
t.prototype.R_UPDATE_PLAYER_INFO = function(e) {
console.log("R_ENTER_VIEWER", e);
this.gameCtrl && 200 === e.code && this.gameCtrl.onUpdatePlayerInfo(e);
};
t.prototype.R_TIPS_COIN_RECHARDGE = function(e) {
this.dm.tempData && (this.dm.tempData.R_TIPS_COIN_RECHARDGE_MSG = e);
};
t.prototype.R_GAME_DISMISS_CANCEL = function(e) {
e.spcode || this.gameCtrl.dismissCancel();
};
return t;
}(n.BaseHandler);
i.PBMsgHandler = c;
cc._RF.pop();
}, {
"../../../BalootClient/game_common/net/BaseHandler": "BaseHandler",
"../PBLogic": "PBLogic",
"../chat/PBChatData": "PBChatData"
} ],
PBMsgWriter: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "302ccUQi6xLxZ8eJtlXE5Zx", "PBMsgWriter");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBMsgWriter = void 0;
var n = e("../PBLogic"), a = function() {
function e() {}
e.prototype.sendData = function(e) {
cc.vv.NetManager.send(e, !0);
};
e.prototype.sendExit = function() {
cc.log(">sendExit");
var e = {
c: n.facade.dm.msgCmd.S_EXIT
};
this.sendData(e);
};
e.prototype.sendApplyDismiss = function() {
cc.log(">sendApplyDismiss");
var e = {
c: n.facade.dm.msgCmd.S_APPLY_DISMISS
};
this.sendData(e);
};
e.prototype.sendReplyDismiss = function(e) {
cc.log(">sendReplyDismiss");
var t = {
c: n.facade.dm.msgCmd.S_REPLY_DISMISS,
rtype: e
};
this.sendData(t);
};
e.prototype.sendCancleAutoHost = function() {
cc.log(">sendCancleAutoHost");
var e = {
c: n.facade.dm.msgCmd.S_CANCLE_AUTO_HOST
};
this.sendData(e);
};
e.prototype.sendChatMsg = function(e) {
cc.log(">sendChatMsg", e);
var t = {
c: n.facade.dm.msgCmd.S_CHAT_MSG,
msg: e
};
this.sendData(t);
};
e.prototype.sendReady = function() {
cc.log(">sendReady");
var e = {
c: n.facade.dm.msgCmd.S_READY
};
this.sendData(e);
};
e.prototype.sendVoiceChanged = function(e) {
cc.log(">sendVoiceChanged", e);
this.sendData({
c: n.facade.dm.msgCmd.S_VOICE_CHANGE,
mic: e
});
};
e.prototype.sendAutoHost = function() {
cc.log(">sendAutoHost");
var e = {
c: n.facade.dm.msgCmd.S_AUTO_HOST
};
this.sendData(e);
};
e.prototype.sendSitDown = function(e) {
cc.log(">sendSitDown");
var t = {
c: n.facade.dm.msgCmd.S_SITDOWN,
seatid: e
};
this.sendData(t);
};
e.prototype.sendChange = function() {
cc.log(">sendCharge");
var e = {
c: n.facade.dm.msgCmd.send_change,
uid: cc.vv.UserManager.uid
};
this.sendData(e);
};
return e;
}();
i.PBMsgWriter = a;
cc._RF.pop();
}, {
"../PBLogic": "PBLogic"
} ],
PBNetDelay: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8c43bTEPwNJgqws73BHfgip", "PBNetDelay");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.icon = null;
t.iconAtlas = null;
t.valueLabel = null;
return t;
}
t.prototype.onLoad = function() {
this.onUpdateNetDelay();
};
t.prototype.onEnable = function() {
this.schedule(this.onUpdateNetDelay, 2);
};
t.prototype.onDestroy = function() {
this.unschedule(this.onUpdateNetDelay);
};
t.prototype.onUpdateNetDelay = function() {
var e = Math.max(Math.floor(cc.vv.NetManager.getNetworkInterval()), 1);
this.valueLabel.string = e + "ms";
var t = cc.vv.NetManager.getNetworkLevel();
t = Math.max(t, 1);
t = Math.min(t, 3);
cc.log("NET DELAY:", e, t);
e >= 300 && StatisticsMgr.reqReportNow(ReportConfig.NET_DELAY, e);
this.icon.spriteFrame = this.iconAtlas.getSpriteFrame(t.toString());
1 == t ? this.valueLabel.node.color = new cc.Color(255, 0, 0) : 2 == t ? this.valueLabel.node.color = new cc.Color(255, 198, 0) : 3 == t && (this.valueLabel.node.color = new cc.Color(12, 255, 0));
};
__decorate([ o(cc.Sprite) ], t.prototype, "icon", void 0);
__decorate([ o(cc.SpriteAtlas) ], t.prototype, "iconAtlas", void 0);
__decorate([ o(cc.Label) ], t.prototype, "valueLabel", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
PBOperate: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8c49cRAV71DwIDrRiv2LfYQ", "PBOperate");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBOperate = void 0;
var n = e("../PBCommonData"), a = e("../PBLogic"), o = cc._decorator, c = o.ccclass, s = o.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.btnReady = null;
t.btnInvite = null;
t.changeBtn = null;
t.tableCode = null;
t.leaveBtn = null;
t.confirmBtn = null;
t.watchTipNode = null;
return t;
}
t.prototype.onLoad = function() {
var e = this;
if (this.btnReady) {
this.btnReady.node.active = !1;
this.btnReady.node.on("click", function() {
e.showReady(!1);
e.sendReadyReq();
}, this);
}
this.changeBtn && this.changeBtn.node.on("click", function() {
e.changeBtn.interactable = !1;
e.sendChangeReq();
}, this);
if (this.btnInvite) {
this.btnInvite.node.active = !1;
this.btnInvite.node.on("click", function() {
e.showInviteNode();
}, this);
cc.resources.load("BalootClient/NewerGuide/NewGuideHint", function(t, i) {
if (!t) {
var n = cc.instantiate(i);
n.position = cc.v3(100, 0, 0);
var a = n.getComponent("NewGuideHintCpt");
if (a) {
a.key = "salon";
a.step = 3;
a.buttons.push(e.btnInvite);
}
n.parent = e.btnInvite.node;
}
});
}
this.tableCode && (this.tableCode.getComponent("Desk_Table_code").deskid = this.getTableid());
this.leaveBtn && this.leaveBtn.on("click", function() {
if (!e._bClickBack) {
e._bClickBack = !0;
e.scheduleOnce(function() {
e._bClickBack = null;
}, 1);
cc.vv.gameData && cc.vv.gameData.ReqBackLobby();
}
}, this);
this.confirmBtn && this.confirmBtn.on("click", function() {
a.facade && a.facade.confirmBtnClick();
}, this);
};
t.prototype.showReady = function(e) {
if (this.btnReady) {
if (this.isWatcher()) {
this.btnReady.node.active = !1;
return;
}
this.btnReady.node.active = e;
}
};
t.prototype.showTableCode = function(e) {
if (this.tableCode) {
if (this.isWatcher()) {
this.tableCode.active = !1;
return;
}
this.tableCode.active = e;
}
};
t.prototype.showInvite = function(e) {
if (this.btnInvite) {
if (this.isWatcher()) {
this.btnInvite.node.active = !1;
return;
}
if (Global.isSingle()) {
this.btnInvite.node.active = !1;
return;
}
this.btnInvite.node.active = e;
}
};
t.prototype.reset = function() {
this.btnReady && (this.btnReady.node.active = !1);
this.btnInvite && (this.btnInvite.node.active = !1);
this.changeBtn && (this.changeBtn.node.active = !1);
this.tableCode && (this.tableCode.active = !1);
this.leaveBtn && (this.leaveBtn.active = !1);
this.confirmBtn && (this.confirmBtn.active = !1);
this.watchTipNode && (this.watchTipNode.active = !1);
};
t.prototype.showChangeBtn = function(e) {
if (Global.isYDApp() && a.facade.dm.deskInfo.conf.roomtype != n.PBRoomType.friend) {
if (this.changeBtn) {
this.changeBtn.node.active = e;
this.changeBtn.interactable = e;
}
} else {
this.changeBtn.node.active = !1;
this.changeBtn.interactable = !1;
}
};
t.prototype.showLeaveBtn = function(e) {
this.leaveBtn && (this.leaveBtn.active = e);
};
t.prototype.showConfirmBtn = function(e, t) {
if (this.confirmBtn) {
this.confirmBtn.active = e;
t ? cc.find("Background/label", this.confirmBtn).getComponent("ReTimer").setReTimer(t, 1, null, "Confirm(%ss)") : cc.find("Background/label", this.confirmBtn).getComponent(cc.Label).string = "Confirm";
}
};
t.prototype.sendReadyReq = function() {
StatisticsMgr.reqReportNow(ReportConfig.new_salon_click_ready);
a.facade.dm.msgWriter.sendReady();
};
t.prototype.sendChangeReq = function() {
a.facade.dm.msgWriter.sendChange();
};
t.prototype.isWatcher = function() {
return 1 === a.facade.dm.tableInfo.isViewer;
};
t.prototype.showWatchTips = function(e) {
this.watchTipNode && (this.watchTipNode.active = e);
};
t.prototype.showInviteNode = function() {
StatisticsMgr.reqReportNow(ReportConfig.new_salon_click_share);
cc.vv.PopupManager.addPopup("BalootClient/GameInvite/CafeGameInvite", {
noMask: !0,
opacityIn: !0,
noCloseHit: !0
});
};
t.prototype.getTableid = function() {
return cc.vv.gameData.deskInfo ? cc.vv.gameData.deskInfo.deskid : cc.vv.gameData.getDeskInfo().deskid;
};
__decorate([ s(cc.Button) ], t.prototype, "btnReady", void 0);
__decorate([ s(cc.Button) ], t.prototype, "btnInvite", void 0);
__decorate([ s(cc.Button) ], t.prototype, "changeBtn", void 0);
__decorate([ s(cc.Node) ], t.prototype, "tableCode", void 0);
__decorate([ s(cc.Node) ], t.prototype, "leaveBtn", void 0);
__decorate([ s(cc.Node) ], t.prototype, "confirmBtn", void 0);
__decorate([ s(cc.Node) ], t.prototype, "watchTipNode", void 0);
return __decorate([ c ], t);
}(cc.Component);
i.PBOperate = r;
cc._RF.pop();
}, {
"../PBCommonData": "PBCommonData",
"../PBLogic": "PBLogic"
} ],
PBPlayerData: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "20eb0U7TxBOlqcJvNok2wJJ", "PBPlayerData");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBPlayersDm = i.PBPlayerInfoVo = i.PBUserInfoVo = void 0;
var n = e("../PBLogic");
i.PBUserInfoVo = function() {
this.uname = "";
this.gender = 0;
this.icon = "";
};
var a = function() {
function e() {
this.uid = 0;
this.uinfo = null;
this.coin = 0;
this.winCoinShow = 0;
this.leagueLevel = 0;
this.leaguePoints = 0;
this.handCards = [];
this.restCardLen = 0;
this.seatId = -1;
this.position = -1;
this.isReady = !1;
this.isOnline = !0;
this.autoHost = !1;
this.restTime = 0;
this.currLevel = 0;
this.currExp = 0;
this.avatarFrame = "avatarframe_0";
this.chatSkin = "chat_free";
this.token = "";
this.svip = 0;
this.rpScore = 0;
this.race_id = 0;
this.mic = -1;
this.joinChat = 0;
this.statisticsWinRate = 0;
this.statisticsWinPlayCnt = 0;
}
Object.defineProperty(e.prototype, "isRobot", {
get: function() {
return "" == this.token;
},
enumerable: !1,
configurable: !0
});
e.prototype.clearRound = function() {
this.restCardLen = 0;
this.handCards = [];
};
Object.defineProperty(e.prototype, "isSeated", {
get: function() {
return this.seatId >= 0;
},
enumerable: !1,
configurable: !0
});
return e;
}();
i.PBPlayerInfoVo = a;
var o = function() {
function e() {
this.seatedPlayersInfo = [];
this.allUserMap = null;
this.viewerList = [];
this._chair = 4;
this.reset();
}
e.prototype.reset = function() {
this.seatedPlayersInfo = [];
this.allUserMap = new Map();
this.viewerList = [];
};
Object.defineProperty(e.prototype, "chair", {
get: function() {
return this._chair;
},
set: function(e) {
this._chair = e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "selfAbsInfo", {
get: function() {
var e = this.selfInfo;
if (!e) for (var t = 0; t < this.viewerList.length; t++) {
var i = this.viewerList[t];
i.uid == cc.vv.UserManager.uid && (e = i);
}
return e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "selfInfo", {
get: function() {
return this.allUserMap.get(cc.vv.UserManager.uid);
},
set: function(e) {
this.seatedPlayersInfo[0] = e;
},
enumerable: !1,
configurable: !0
});
e.prototype.isSelf = function(e) {
return !!this.selfInfo && this.selfInfo.uid == e;
};
e.prototype.getPlayesInfo = function() {
return this.seatedPlayersInfo;
};
e.prototype.getPlayerCount = function() {
for (var e = 0, t = 0; t < this.seatedPlayersInfo.length; t++) this.seatedPlayersInfo[t] && !this.getPlayerInViewerList(this.seatedPlayersInfo[t].uid) && e++;
return e;
};
e.prototype.getPlayerByUid = function(e) {
return this.allUserMap.get(e);
};
e.prototype.getPlayerByPosition = function(e) {
return this.seatedPlayersInfo[e];
};
e.prototype.getPlayerBySeatId = function(e) {
for (var t = 0; t < this.seatedPlayersInfo.length; t++) {
var i = this.seatedPlayersInfo[t];
if (i && i.seatId == e) return i;
}
return null;
};
e.prototype.getPlayerInViewerList = function(e) {
for (var t = 0, i = this.viewerList; t < i.length; t++) {
var n = i[t];
if (n.uid === e) return n;
}
return null;
};
e.prototype.removeSeatedPlayerInViewers = function() {
for (var e = 0, t = this.seatedPlayersInfo; e < t.length; e++) {
var i = t[e];
i && i.seatId > 0 && this.getPlayerInViewerList(i.uid) && this.viewerList.splice(n.facade.dm.playersDm.viewerList.indexOf(this.getPlayerInViewerList(i.uid)), 1);
}
};
e.prototype.addAUser = function(e) {
if (e) {
var t = this.allUserMap;
t.has(e.uid) ? cc.log("Error, addAUser, but the user is in uMap..") : t.set(e.uid, e);
}
};
e.prototype.sitdown = function(e, t) {
var i = this, n = this.viewerList.find(function(t) {
return t.uid === e ? t : null;
});
if (n) {
n.seatId = t;
this.addAUser(n);
if (this.selfInfo) {
this.selfInfo.position = 0;
this.allUserMap.forEach(function(e) {
var t = e.seatId - i.selfInfo.seatId;
t < 0 && (t = i.chair + t);
e.position = t;
i.seatedPlayersInfo[e.position] = e;
});
} else {
n.position = n.seatId - 1;
this.seatedPlayersInfo[n.position] = n;
}
this.cacheUinfo(e);
}
};
e.prototype.seat = function(e) {
var t = this;
this.addAUser(e);
this.seatedPlayersInfo = [];
if (this.selfInfo) {
this.selfInfo.position = 0;
this.allUserMap.forEach(function(e) {
var i = e.seatId - t.selfInfo.seatId;
i < 0 && (i = t.chair + i);
e.position = i;
t.seatedPlayersInfo[e.position] = e;
});
} else this.allUserMap.forEach(function(e) {
e.position = e.seatId - 1;
t.seatedPlayersInfo[e.position] = e;
});
this.cacheUinfo(e.uid);
};
e.prototype.cacheUinfo = function(e) {
return __awaiter(this, void 0, void 0, function() {
return __generator(this, function() {
if (cc.vv.LoginData) return [ 2 ];
try {
cc.vv.NetManager.cache({
c: MsgId.PERSIONAL_INFO,
otheruid: e
}, !0);
} catch (e) {
cc.log("#请求用户缓存信息错误#");
}
return [ 2 ];
});
});
};
e.prototype.seatIsFull = function() {
return this.allUserMap.size == this.chair;
};
e.prototype.removeAUser = function(e) {
this.allUserMap.delete(e);
for (var t = 0; t < this.seatedPlayersInfo.length; t++) {
var i = this.seatedPlayersInfo[t];
if (i && i.uid == e) {
this.seatedPlayersInfo[t] = null;
break;
}
}
};
e.prototype.getPlayerHandCardsCnt = function(e) {
return this.getPlayerByPosition(e).restCardLen;
};
e.prototype.getPlayerHandCards = function(e) {
return this.getPlayerByPosition(e).handCards;
};
e.prototype.userReady = function(e) {
this.getPlayerByUid(e).isReady = !0;
};
e.prototype.fillCards = function(e, t, i) {
var n;
void 0 === i && (i = !1);
var a = this.seatedPlayersInfo[e];
if (i) {
a.handCards = [];
a.restCardLen = 0;
}
(n = a.handCards).push.apply(n, t);
this.seatedPlayersInfo[e].restCardLen += t.length;
};
e.prototype.removeCards = function(e, t) {
var i = this.getPlayerByPosition(e);
if (0 == e) for (var n = i.handCards, a = 0; a < t.length; a++) {
var o = n.indexOf(t[a]);
-1 !== o && n.splice(o, 1);
}
t && (i.restCardLen -= t.length);
};
e.prototype.checkPlayerInTable = function(e) {
if (e) {
if (this.allUserMap.has(e)) return !0;
if (this.viewerList) for (var t = 0; t < this.viewerList.length; t++) {
var i = this.viewerList[t];
if (i && i.uid == e) return !0;
}
return !1;
}
};
e.prototype.getAllPlayerIdsInTable = function() {
var e = [];
this.seatedPlayersInfo.forEach(function(t) {
t && !e.includes(t.uid) && e.push(t.uid);
});
this.viewerList && this.viewerList.forEach(function(t) {
t && !e.includes(t.uid) && e.push(t.uid);
});
return e;
};
e.prototype.checkPlayerIsViewer = function(e) {
if (!this.viewerList) return !1;
for (var t = 0; t < this.viewerList.length; t++) if (this.viewerList[t].uid == e) return !0;
return !1;
};
e.prototype.clearSeatedFromViewer = function() {
for (var e = 0; e < this.viewerList.length; e++) if (this.viewerList[e].isSeated) {
this.viewerList.splice(e, 1);
e--;
}
};
e.prototype.caculateSeatIdByPosition = function(e) {
for (var t = -1, i = 0; i < this.seatedPlayersInfo.length; i++) {
var n = this.seatedPlayersInfo[i];
if (n) {
n.seatId, n.position;
var a = e - n.position;
(t = n.seatId + a) > this.chair ? t -= this.chair : t < 0 && (t += this.chair);
break;
}
}
return t;
};
return e;
}();
i.PBPlayersDm = o;
cc._RF.pop();
}, {
"../PBLogic": "PBLogic"
} ],
PBPlayersCtrl: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a3fc3Po+lhPnLlURUrYPjkO", "PBPlayersCtrl");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBPlayersCtrl = void 0;
var n = e("../card/PBHideHandCard"), a = e("../PBCommonData"), o = e("../PBEvent"), c = e("../PBLogic"), s = e("../settlement/PBSettlementInfoChange"), r = e("../settlement/PBSettlementInfoChangeInPlayer"), l = e("./PBPlayer"), d = e("./PBUserInfoCmp"), h = cc._decorator, _ = h.ccclass, p = (h.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.allPlayers = null;
t.activePlayers = null;
t.emptySeats = null;
t.coin_fly_ani_template = null;
t.settlement_info_change = null;
t.info_change_in_player = null;
return t;
}
t.prototype.onLoad = function() {
this.allPlayers = [];
this.emptySeats = [];
for (var e = function(e) {
var i = t.node.getChildByName("player_" + e), o = i.addComponent(t.getPlayerCmp());
o.uiIndex = e;
o.userInfoCmp = i.getChildByName("user_info_node").addComponent(d.PBUserInfoCmp);
o.userInfoCmp.isSelf = 0 == e;
var s = i.getChildByName("hide_hand_card");
s && (o.hideCardCtrl = s.getComponent(n.PBHideHandCard));
o.show();
t.allPlayers.push(o);
var r = t.node.getChildByName("empty_seat_" + e);
if (r) {
var l = cc.find("ani_match_friend", r), h = cc.find("ani_match_normal", r);
if (l && h) {
l.active = c.facade.dm.tableInfo.roomType == a.PBRoomType.friend;
h.active = !l.active;
}
r.on(cc.Node.EventType.TOUCH_END, function() {
var t = e + 1;
cc.log("caculateSeatIdByPosition = ", t);
c.facade.dm.msgWriter.sendSitDown(t);
});
r.active = !1;
}
t.emptySeats.push(r);
}, t = this, i = 0; i < c.facade.dm.playersDm.chair; i++) e(i);
this.activePlayers = this.allPlayers;
this.coin_fly_ani_template = cc.find("coin_fly_ani_template", this.node);
this.settlement_info_change = cc.find("settlement_info_change", this.node);
this.info_change_in_player = cc.find("player_0/info_change", this.node);
this.info_change_in_player && (this.info_change_in_player.active = !1);
this.addEventListener();
};
t.prototype.addEventListener = function() {
var e = this.node.addComponent("EventListenerCmp");
e.registerEvent(o.PBEvent.USER_EXP_CHANGE, this.SELF_EXP_CHANGE, this);
e.registerEvent(o.PBEvent.USER_COIN_CHANGE, this.SELF_COIN_CHANGE, this);
e.registerEvent(o.PBEvent.USER_LEAGUE_CHANGE, this.SELF_LEAGUE_CHANGE, this);
Global.registerEvent(EventId.UPATE_COINS, this.updateSelfCoin, this);
};
t.prototype.SELF_EXP_CHANGE = function() {
var e = this.getPlayerByPosition(0);
e && e.userInfoCmp && e.playerInfoVo && e.userInfoCmp.updateExp(e.playerInfoVo);
};
t.prototype.updateSelfCoin = function() {
var e = c.facade.dm.playersDm.selfAbsInfo;
if (e) {
e.coin = cc.vv.UserManager.coin;
c.facade.dm.deskInfo.conf.roomtype != a.PBRoomType.match && Global.dispatchEvent(o.PBEvent.USER_COIN_CHANGE, {
uid: e.uid
});
}
};
t.prototype.SELF_COIN_CHANGE = function(e) {
if (e && e.detail && e.detail.uid) {
var t = e.detail.uid;
if (-1 == t) this.activePlayers.forEach(function(e) {
e && e.userInfoCmp && e.playerInfoVo && e.userInfoCmp.updateCoin(e.playerInfoVo);
}); else {
var i = this.getPlayerByUid(t);
i && i.userInfoCmp && i.playerInfoVo && i.userInfoCmp.updateCoin(i.playerInfoVo);
}
}
};
t.prototype.SELF_LEAGUE_CHANGE = function() {
var e = this.getPlayerByPosition(0);
e && e.userInfoCmp && e.playerInfoVo && e.userInfoCmp.feature(e.playerInfoVo);
};
t.prototype.getPlayerCmp = function() {
return l.PBPlayer;
};
t.prototype.setChair = function(e) {
void 0 === e && (e = 4);
this.activePlayers = 2 == e ? [ this.allPlayers[0], this.allPlayers[2] ] : 3 == e ? [ this.allPlayers[0], this.allPlayers[1], this.allPlayers[3] ] : this.allPlayers;
};
t.prototype.getPlayerByPosition = function(e) {
return this.activePlayers[e];
};
t.prototype.getPlayerByUid = function(e) {
for (var t, i = 0; i < this.activePlayers.length; i++) {
var n = this.activePlayers[i];
if (n && n.playerInfoVo && n.playerInfoVo.uid == e) {
t = n;
break;
}
}
t || cc.log("未找到玩家:" + e);
return t;
};
t.prototype.seat = function(e) {
var t = this.getPlayerByPosition(e.position);
if (t) {
t.playerInfoVo = e;
t.setPlayerStandup(!1);
t.show();
this.showEmptySeat(t.uiIndex, !e);
} else cc.log("未找到坐下的位置：" + e.position);
};
t.prototype.onSitDown = function(e) {
var t = c.facade.dm.playersDm.getPlayerByUid(e);
t ? this.seat(t) : (t = c.facade.dm.playersDm.getPlayerInViewerList(e)) && this.seat(t);
var i = this.getPlayerByPosition(0);
i && i._userInfoCmp.stopTimeTip();
};
t.prototype.standUp = function(e) {
var t = this.getPlayerByPosition(e);
if (t) {
t.playerInfoVo = null;
t.show();
this.showEmptySeat(t.uiIndex, !0);
}
};
t.prototype.initPlayers = function(e) {
for (var t = this, i = [], n = 0; n < e.length; n++) {
var a = e[n];
a && i.push(a.position);
}
this.activePlayers.forEach(function(e) {
if (i.includes(e.uiIndex)) t.showEmptySeat(e.uiIndex, !1); else {
e.playerInfoVo = null;
e.show();
t.showEmptySeat(e.uiIndex, !0);
}
});
e.forEach(function(e) {
t.seat(e);
});
};
t.prototype.showEmptySeat = function(e, t) {
var i = this.emptySeats[e];
if (i) {
i.active = t;
t && c.facade.dm.tableInfo.roomType === a.PBRoomType.friend && c.facade.dm.tableStatus.flowState === a.PBFlowState.playing && c.facade.dm.playersDm.selfInfo && (i.active = !1);
}
};
t.prototype.hideAllEmptySeat = function() {
var e = this;
this.activePlayers.forEach(function(t) {
t && (t.playerInfoVo || e.showEmptySeat(t.uiIndex, !1));
});
};
t.prototype.hideTimer = function() {
this.activePlayers.forEach(function(e) {
e.userInfoCmp.stopTimeTip();
});
};
t.prototype.hideTimerByPosition = function(e) {
var t = this.getPlayerByPosition(e);
t && t.userInfoCmp.stopTimeTip();
};
t.prototype.showTimer = function(e, t, i, n) {
void 0 === t && (t = 8);
void 0 === i && (i = !0);
void 0 === n && (n = !0);
return __awaiter(this, void 0, void 0, function() {
return __generator(this, function(a) {
switch (a.label) {
case 0:
i && this.hideTimer();
this.activePlayers[e].showTimer(t, n);
return [ 4, c.facade.delayTime(.2) ];

case 1:
a.sent();
return [ 2 ];
}
});
});
};
t.prototype.showClock = function(e, t, i) {
void 0 === i && (i = 15);
return __awaiter(this, void 0, void 0, function() {
return __generator(this, function() {
this.activePlayers[e].showClock(t, i);
return [ 2 ];
});
});
};
t.prototype.ready = function(e, t, i) {
void 0 === t && (t = !0);
void 0 === i && (i = !0);
if (-1 == e) this.activePlayers.forEach(function(e) {
e.userInfoCmp && e.userInfoCmp.showReadyTip(!1);
}); else {
var n = this.activePlayers[e];
i && Global.isYDApp() && c.facade.dm.deskInfo.conf.roomtype == a.PBRoomType.normal || n.userInfoCmp.showReadyTip(i, t);
n.playerInfoVo.isReady = !0;
}
};
t.prototype.hideAllReady = function() {
this.activePlayers.forEach(function(e) {
e.userInfoCmp && e.userInfoCmp.showReadyTip(!1);
});
};
t.prototype.updateCoin = function() {
this.players.forEach(function(e) {
e && e.userInfoCmp.updateCoin(e.playerInfoVo);
});
};
Object.defineProperty(t.prototype, "players", {
get: function() {
return this.activePlayers;
},
enumerable: !1,
configurable: !0
});
t.prototype.cleanRound = function() {
this.hideTimer();
this.activePlayers.forEach(function(e) {
e.dealedCardLen = 0;
e.hideCardCtrl && e.hideCardCtrl.reset();
e.userInfoCmp && e.userInfoCmp.showReadyTip(!1);
});
};
t.prototype.formatTeams = function(e) {
for (var t = [], i = e.coins || [], n = 0; n < i.length; n++) {
var a = n + 1, o = c.facade.dm.playersDm.getPlayerBySeatId(a);
if (o) {
var s = {
uid: o.uid,
addcoin: i[n]
};
t.push(s);
}
}
return t;
};
t.prototype.playInfoChange = function(e, t, i) {
var n = this;
void 0 === t && (t = 0);
void 0 === i && (i = 0);
if (1 !== c.facade.dm.tableInfo.isViewer && this.settlement_info_change) {
var a = 0, o = 0, l = 1;
if (e > 0 && t > 0 && i > 0) {
a = .1;
o = .2;
l = 3;
} else if (e > 0 && t > 0) {
a = .1;
l = 2;
}
var d = this.settlement_info_change.getComponent(s.PBSettlementInfoChange), h = this.info_change_in_player.getComponent(r.PBSettlementInfoChangeInPlayer);
e > 0 && d.playExpChange(e, 0, function() {
n.info_change_in_player.active = !0;
h.showDialogue(l);
}, function() {
h.addInfo(e, t, i);
var a = n.getPlayerByPosition(0);
a && a.playRpChange(t);
});
t > 0 && d.playRpChange(t, a);
i > 0 && d.playLeagueChange(i, o);
}
};
t.prototype.flyCoinByTeams = function(e) {
return __awaiter(this, void 0, void 0, function() {
var t, i, n, a, o, s, r, l, d, h, _, p, u, f, g, m, v, S, C, b, E, y;
return __generator(this, function(L) {
switch (L.label) {
case 0:
t = [];
i = [];
for (n = 0, a = e; n < a.length; n++) {
o = a[n];
s = this.getPlayerByUid(o.uid);
if ((r = o.addcoin) < 0) {
s._userInfoCmp.updateCoin(c.facade.dm.playersDm.getPlayerByUid(o.uid));
l = s.getGlobalPos("interactive_emotion_pos");
l = this.node.convertToNodeSpaceAR(l);
c.facade.soundMgr.playBaseEffect("coinfly");
for (d = 0; d < 6; d++) {
y = cc.instantiate(this.coin_fly_ani_template);
Global.isYDApp() && [ 265, 269, 287 ].indexOf(cc.vv.gameData.getGameId()) >= 0 ? y.scale = 1 : y.scale = .3;
y.active = !0;
y.parent = this.node;
h = 200 * Math.random() - 100;
_ = 200 * Math.random();
g = cc.v2(h, _);
y.x = l.x;
y.y = l.y;
cc.tween(y).delay(.05 * d).to(.3, {
position: g
}).start();
i.push(y);
}
} else r > 0 && t.push(o);
}
return [ 4, c.facade.delayTime(.9) ];

case 1:
L.sent();
if (!(t.length > 0)) return [ 3, 3 ];
p = 0;
for (u = 0, f = i; u < f.length; u++) {
y = f[u];
S = t[p];
if (C = this.getPlayerByUid(S.uid)) {
g = C.getGlobalPos("interactive_emotion_pos");
g = this.node.convertToNodeSpaceAR(g);
cc.tween(y).delay(.2 * Math.random()).to(.5, {
position: g
}).removeSelf().start();
++p >= t.length && (p = 0);
} else y.removeFromParent();
}
return [ 4, c.facade.delayTime(.5) ];

case 2:
L.sent();
for (m = 0, v = t; m < v.length; m++) {
S = v[m];
(C = this.getPlayerByUid(S.uid)) && C.playCoinChange(S.addcoin, !0);
}
return [ 3, 4 ];

case 3:
for (b = 0, E = i; b < E.length; b++) (y = E[b]).removeFromParent();
L.label = 4;

case 4:
return [ 4, c.facade.delayTime(.5) ];

case 5:
L.sent();
return [ 2 ];
}
});
});
};
t.prototype.flyCoinByUid = function(e, t, i, n, a) {
void 0 === i && (i = 0);
void 0 === n && (n = 0);
void 0 === a && (a = !1);
return __awaiter(this, void 0, void 0, function() {
var o, s, r, l, d, h;
return __generator(this, function(_) {
switch (_.label) {
case 0:
o = this.getPlayerByUid(e);
s = this.getPlayerByUid(t);
if (!o || !s) return [ 2 ];
i && o.playCoinChange(i);
r = o.getGlobalPos("interactive_emotion_pos");
r = this.node.convertToNodeSpaceAR(r);
l = s.getGlobalPos("interactive_emotion_pos");
l = this.node.convertToNodeSpaceAR(l);
c.facade.soundMgr.playBaseEffect("coinfly");
for (d = 0; d < 6; d++) {
(h = cc.instantiate(this.coin_fly_ani_template)).scale = .5;
h.active = !0;
h.parent = this.node;
h.x = r.x;
h.y = r.y;
h.getComponent(cc.Animation).play();
cc.tween(h).delay(.1 * d).to(1, {
position: l
}).removeSelf().start();
}
return [ 4, c.facade.delayTime(1) ];

case 1:
_.sent();
n && s.playCoinChange(n, a);
return [ 2 ];
}
});
});
};
t.prototype.showViewerWatingStartTips = function() {
this.activePlayers.forEach(function(e) {
if (e && e.playerInfoVo) {
var t = c.facade.dm.playersDm.checkPlayerIsViewer(e.playerInfoVo.uid);
e.showWatingStartTip(t);
}
});
};
t.prototype.cancelPlayerReady = function() {
c.facade.dm.tableInfo.needSelfReady() && this.activePlayers.forEach(function(e) {
if (e.playerInfoVo) {
e.playerInfoVo.isReady = !1;
e.userInfoCmp.showReadyTip(!1, !1);
}
});
};
return __decorate([ _ ], t);
}(cc.Component));
i.PBPlayersCtrl = p;
cc._RF.pop();
}, {
"../PBCommonData": "PBCommonData",
"../PBEvent": "PBEvent",
"../PBLogic": "PBLogic",
"../card/PBHideHandCard": "PBHideHandCard",
"../settlement/PBSettlementInfoChange": "PBSettlementInfoChange",
"../settlement/PBSettlementInfoChangeInPlayer": "PBSettlementInfoChangeInPlayer",
"./PBPlayer": "PBPlayer",
"./PBUserInfoCmp": "PBUserInfoCmp"
} ],
PBPlayer: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6192bHLZ/VEf7F1jY0PpxcN", "PBPlayer");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBPlayer = void 0;
var n = e("../../../BalootClient/game_common/CommonStyle"), a = e("../../../BalootClient/game_common/common_cmp/NetImg"), o = e("../chat/PBEmotionPlayer"), c = e("../PBCommonData"), s = e("../PBLogic"), r = e("./PBToggleVoice"), l = cc._decorator, d = l.ccclass, h = (l.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._userInfoCmp = null;
t.uiIndex = 0;
t.hideCardCtrl = null;
t.voiceToggle = null;
t.dealedCardLen = 0;
t.bidBubbleSpine = null;
t._playWinAni = !1;
t._bStandUp = !1;
t.exNodeList = [];
return t;
}
t.prototype.onLoad = function() {
var e = cc.find("bid_bubble", this.node);
if (e) {
this.bidBubbleSpine = e.getComponent(sp.Skeleton);
this.bidBubbleSpine.node.active = !1;
}
this.addCoin = cc.find("add_coin", this.node);
if (this.addCoin) {
this.addCoin.originPos = {
x: this.addCoin.x,
y: this.addCoin.y
};
this.addCoin.active = !1;
}
this.addScore = cc.find("score_show", this.node);
this.addScore && (this.addScore.active = !1);
var t = cc.find("baodian", this.node);
if (t) {
this.baodian = t.getComponent(sp.Skeleton);
this.baodian.node.active = !1;
}
if (cc.find("win", this.node)) {
this.winSpine = cc.find("win", this.node).getComponent(sp.Skeleton);
this.winSpine.node.active = !1;
}
this.addRp = cc.find("addRp", this.node);
if (this.addRp) {
this.addRp.originPos = {
x: this.addRp.x,
y: this.addRp.y
};
this.addRp.active = !1;
}
this.tips_wating_start = cc.find("tips_wating_start", this.node);
this.tips_wating_start && (this.tips_wating_start.active = !1);
this.loadVoiceToggle();
this.addEvent();
};
t.prototype.showWatingStartTip = function(e) {
void 0 === e && (e = !0);
this.tips_wating_start && (this.tips_wating_start.active = e);
};
t.prototype.playRpChange = function(e) {
if (e && this.addRp && this.playerInfoVo) {
this.playerInfoVo.rpScore += e;
this._userInfoCmp.updateRp(this.playerInfoVo);
}
};
t.prototype.playScoreChange = function(e, t, i) {
var n = this;
void 0 === t && (t = !1);
void 0 === i && (i = !1);
if (this.addScore && e) {
t || (i = e > 0);
this.addScore.active = !0;
this.addScore.scale = 0;
var a = cc.find("icon", this.addScore), o = cc.find("add_score", this.addScore);
if (i) {
a.getComponent("ImgSwitchCmpTS").setIndex(0);
o.scale = 1;
o.getComponent("LabelSwitchCmp").setIndex(0);
o.getComponent(cc.Label).string = (e > 0 ? "+" : "") + Global.formatNumShort(e, 0);
} else {
a.getComponent("ImgSwitchCmpTS").setIndex(1);
o.scale = .8;
o.getComponent("LabelSwitchCmp").setIndex(1);
o.getComponent(cc.Label).string = (e > 0 ? "+" : "") + Global.formatNumShort(e, 0);
}
cc.tween(this.addScore).to(.3, {
scale: 1
}, {
easing: "backOut"
}).delay(2).call(function() {
n.addScore.active = !1;
}).start();
}
};
t.prototype.hideAddScore = function() {
this.addScore && (this.addScore.active = !1);
};
t.prototype.playCoinChange = function(e, t, i) {
var n = this;
void 0 === t && (t = !1);
void 0 === i && (i = !0);
if (this.baodian && this.addCoin && e) {
this.addCoin.stopAllActions();
this._playWinAni = t;
this.baodian.node.active = !1;
var a = cc.instantiate(this.baodian.node), o = s.facade.panel.convertToNodeSpaceAR(this.baodian.node.convertToWorldSpaceAR(cc.v3(0, 0)));
a.parent = s.facade.panel;
a.active = !0;
a.position = o;
a.zIndex = 300;
a.getComponent(sp.Skeleton).setAnimation(0, "baodian", !1);
if (i && e > 0) {
var r = this.playerInfoVo.coin - e, l = this.playerInfoVo.coin;
if (!Global.isYDApp() && s.facade.dm.tableInfo.roomType !== c.PBRoomType.friend && s.facade.dm.tableInfo.roomType !== c.PBRoomType.match) {
r = this.playerInfoVo.winCoinShow - e;
l = this.playerInfoVo.winCoinShow;
}
this._userInfoCmp.addCoin(r, l);
}
this.addCoin.active = !1;
this.addCoin.opacity = 0;
var d = this.addCoin.originPos;
this.addCoin.x = d.x;
this.addCoin.y = d.y;
var h = cc.instantiate(this.addCoin), _ = s.facade.panel.convertToNodeSpaceAR(this.addCoin.convertToWorldSpaceAR(cc.v3(d.x, d.y)));
h.parent = s.facade.panel;
h.position = _;
h.zIndex = 300;
h.active = !0;
if (e > 0) {
h.getComponent("LabelSwitchCmp").setIndex(0);
h.getComponent(cc.Label).string = "+" + Global.FormatNumToComma(e);
} else {
h.getComponent("LabelSwitchCmp").setIndex(1);
h.getComponent(cc.Label).string = Global.FormatNumToComma(e);
}
cc.tween(h).parallel(cc.tween().to(.3, {
opacity: 255
}), cc.tween().by(1, {
y: 100
})).call(function() {
n._playWinAni && n.playerWinAni();
}).to(.5, {
opacity: 0
}).call(function() {
h.destroy();
a.destroy();
}).start();
}
};
t.prototype.playerWinAni = function() {
this.winSpine.node.active = !1;
var e = cc.instantiate(this.winSpine.node), t = s.facade.panel.convertToNodeSpaceAR(this.winSpine.node.convertToWorldSpaceAR(cc.v3(0, 0)));
e.parent = s.facade.panel;
e.active = !0;
e.position = t;
e.zIndex = 150;
var i = e.getComponent(sp.Skeleton);
i.setAnimation(0, "winner", !1);
i.setCompleteListener(function() {
i.setCompleteListener(null);
e.destroy();
});
this._playWinAni = !1;
};
t.prototype.playBidBubble = function(e) {
return __awaiter(this, void 0, void 0, function() {
var t, i = this;
return __generator(this, function() {
if (!this.bidBubbleSpine || !e) return [ 2 ];
t = "eff_" + e + "_";
this.bidBubbleSpine.node.active = !0;
if (1 == this.uiIndex) {
t += "y";
this.bidBubbleSpine.setAnimation(0, t, !1);
} else {
t += "z";
this.bidBubbleSpine.setAnimation(0, t, !1);
}
this.bidBubbleSpine.setCompleteListener(function() {
i.bidBubbleSpine.setCompleteListener(null);
i.bidBubbleSpine.node.active = !1;
});
return [ 2 ];
});
});
};
t.prototype.hideBidBubble = function() {
this.bidBubbleSpine && (this.bidBubbleSpine.node.active = !1);
};
t.prototype.loadVoiceToggle = function() {
if (Global.isYDApp()) cc.find("toggle_voice", this.node).active = !1; else {
this.voiceToggle = cc.find("toggle_voice", this.node).getComponent(r.PBToggleVoice);
this.voiceToggle.forceInit();
this.voiceToggle.node.active = cc.vv.UserManager.voice > 0;
}
};
t.prototype.addEvent = function() {
var e = this;
cc.find("user_info_node/head_icon", this.node).on(cc.Node.EventType.TOUCH_END, function() {
if (e.playerInfoVo != s.facade.dm.playersDm.selfInfo) {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
s.facade.interactiveEmotionCtrl.openEmotionPanel(e.playerInfoVo.uid);
}
}, this);
};
t.prototype.onDestroy = function() {
this.playerInfoVo = null;
this.hideCardCtrl = null;
};
t.prototype.show = function() {
if (this.playerInfoVo) {
this.node.active = !0;
this._userInfoCmp.show(this.playerInfoVo);
if (this.voiceToggle) {
this.voiceToggle.init(this.playerInfoVo.uid);
this.voiceToggle.updateView();
}
} else {
this.node.active = !1;
this._userInfoCmp.showReadyTip(!1);
}
for (var e = 0, t = this.exNodeList; e < t.length; e++) t[e].active = this.node.active;
};
t.prototype.drawCards = function(e) {
return __awaiter(this, void 0, void 0, function() {
return __generator(this, function() {
this.dealARoundCard(e);
return [ 2 ];
});
});
};
t.prototype.dealARoundCard = function(e) {
return __awaiter(this, void 0, void 0, function() {
var t, i, n, a;
return __generator(this, function(o) {
switch (o.label) {
case 0:
if (!this.playerInfoVo) return [ 2 ];
this.dealedCardLen += e.length;
t = 90 * -this.playerInfoVo.position;
i = [];
for (a = 0; a < e.length; a++) i.push(this.hideCardCtrl.addACard());
n = function(n) {
var a = e[n], o = i[n], c = o.convertToWorldSpaceAR(cc.v2(0, 0));
c = a.parent.convertToNodeSpaceAR(c);
cc.tween(a).delay(.02).to(.3, {
x: c.x,
y: c.y,
scale: 1,
angle: t
}).call(function() {
a.destroy();
o.active = !0;
cc.tween(o).to(.2, {
scale: 1
}, {
easing: "backOut"
}).start();
}).start();
};
for (a = 0; a < e.length; a++) n(a);
return [ 4, s.facade.delayTime(.1) ];

case 1:
o.sent();
return [ 2 ];
}
});
});
};
t.prototype.showTimer = function(e, t) {
void 0 === e && (e = 8);
void 0 === t && (t = !0);
this.userInfoCmp.startTimeTip(e);
t && s.facade.lightCtrl && s.facade.lightCtrl.lightToPosition(this.uiIndex);
};
t.prototype.showBubbleMsg = function(e) {
return __awaiter(this, void 0, void 0, function() {
var t, i, o, c, r, l, d, h, _ = this;
return __generator(this, function() {
if (t = cc.find("bubble", this.node)) {
i = s.facade.panel.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.v3(0, 0)));
(o = cc.instantiate(t)).position = i;
o.parent = s.facade.panel;
o.active = !0;
o.zIndex = 300;
o.opacity = 1;
c = o.getChildByName("bg");
r = this.playerInfoVo.chatSkin;
c.getComponent(a.default).url = r;
if (r && r.startsWith("chat_vip")) {
(l = c.getChildByName("vip_icon")).active = !0;
l && (l.getComponent(a.default).url = "text_" + r);
}
o.getChildByName("arrow").color = cc.vv.UserConfig.getChatBoxColor(this.playerInfoVo.chatSkin);
(d = o.getChildByName("label").getComponent(cc.Label)).string = e;
(h = cc.vv.UserConfig.getColor(s.facade.skinMgr.fontSkin)) && (d.node.color = h);
d.node.width = 230;
d.scheduleOnce(function() {
d.node.height > 60 && (d.node.width = 368);
c.width = d.node.width + 100;
c.height = d.node.height + 80;
d.node.x = 0;
_.getNeedChangeChatBubbleUIIndex().includes(_.uiIndex) ? d.node.y = -c.height / 2 + 6 : d.node.y = c.height / 2 + 6;
o.scale = 0;
cc.tween(_.node).call(function() {
n.CommonStyle.fastShow(o);
}).delay(2).call(function() {
n.CommonStyle.fastHide(o, function() {
o.removeFromParent(!0);
});
}).start();
});
}
return [ 2 ];
});
});
};
t.prototype.getNeedChangeChatBubbleUIIndex = function() {
return [ 2 ];
};
t.prototype.getNeedChangeInteractiveUIIndex = function() {
return [ 3 ];
};
t.prototype.showEmotion = function(e) {
var t = cc.find("emotion", this.node), i = s.facade.panel.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.v3(0, 0))), n = cc.instantiate(t);
n.position = i;
n.parent = s.facade.panel;
n.active = !0;
n.zIndex = 300;
n.getComponent(o.PBEmotionPlayer).playAni(e);
};
t.prototype.showClock = function(e, t) {
void 0 === t && (t = 15);
var i = this.node.getChildByName("clock_pos").convertToWorldSpaceAR(cc.v2(0, 0));
e.show(t, i);
};
t.prototype.getGlobalPos = function(e) {
void 0 === e && (e = null);
var t = null;
e && (t = cc.find(e, this.node));
return (t || this.node).convertToWorldSpaceAR(cc.v2(0, 0));
};
Object.defineProperty(t.prototype, "userInfoCmp", {
get: function() {
return this._userInfoCmp;
},
set: function(e) {
this._userInfoCmp = e;
},
enumerable: !1,
configurable: !0
});
t.prototype.onVoiceChanged = function() {};
t.prototype.setPlayerStandup = function(e) {
this._bStandUp = e;
};
t.prototype.getPlayerStandup = function() {
return this._bStandUp;
};
t.prototype.left = function() {
this.node.active = !1;
this._userInfoCmp.showReadyTip(!1);
for (var e = 0, t = this.exNodeList; e < t.length; e++) t[e].active = this.node.active;
};
return __decorate([ d ], t);
}(cc.Component));
i.PBPlayer = h;
cc._RF.pop();
}, {
"../../../BalootClient/game_common/CommonStyle": "CommonStyle",
"../../../BalootClient/game_common/common_cmp/NetImg": "NetImg",
"../PBCommonData": "PBCommonData",
"../PBLogic": "PBLogic",
"../chat/PBEmotionPlayer": "PBEmotionPlayer",
"./PBToggleVoice": "PBToggleVoice"
} ],
PBPopupDismiss: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8c468vX7HBHGJmDdWcDT7vo", "PBPopupDismiss");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBPopupDismiss = void 0;
var n = e("../../../BalootClient/game_common/CommonStyle"), a = e("../../../BalootClient/game_common/common_cmp/CDButtonProxy"), o = e("../../../BalootClient/game_common/common_cmp/UserAvatar"), c = e("../PBLogic"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bg = null;
t.panel = null;
t.btns_layout = null;
t.btn_agree = null;
t.btn_reject = null;
t.sponsor_info = null;
t.reply_layers_info = [];
t.label_tips = null;
t._dismissData = null;
t._time = 10;
t._isClosing = !1;
return t;
}
t.prototype.onDestroy = function() {
this._dismissData = null;
};
t.prototype.onLoad = function() {
var e = this;
this.btn_agree.addClickHandler(function() {
e.reply(1);
});
this.btn_reject.addClickHandler(function() {
e.reply(2);
});
var t = this.node.addComponent("EventListenerCmp");
t.registerEvent("EVNT_PLAYER_REPLY_DISMISS", this.EVNT_PLAYER_REPLY_DISMISS, this);
t.registerEvent("EVENT_ROOM_DISMISS", this.EVENT_ROOM_DISMISS, this);
};
t.prototype.EVNT_PLAYER_REPLY_DISMISS = function(e) {
var t = e.detail;
this._dismissData = t.dismiss;
this.updateView();
};
t.prototype.EVENT_ROOM_DISMISS = function() {
this.close();
};
t.prototype.reply = function(e) {
this.btns_layout.active = !1;
c.facade.dm.msgWriter.sendReplyDismiss(e);
};
t.prototype.start = function() {
this.open();
};
t.prototype.close = function() {
var e = this;
if (!this._isClosing) {
this._isClosing = !0;
n.CommonStyle.fastHide(this.node, function() {
cc.vv.PopupManager.removePopup(e.node);
});
}
};
t.prototype.open = function() {
return __awaiter(this, void 0, void 0, function() {
return __generator(this, function() {
this.bg.active = !0;
n.CommonStyle.fastShow(this.panel);
return [ 2 ];
});
});
};
t.prototype.onPopup = function(e) {
this._dismissData = e;
this._time = e.delayTime || 15;
this.updateView();
this._tick();
};
t.prototype._tick = function() {
var e = this;
if (this._time <= 0) this.close(); else {
this.label_tips.string = ___("({1}秒后自动拒绝解散)", this._time);
this.label_tips.unscheduleAllCallbacks();
this.label_tips.scheduleOnce(function() {
e._time--;
e._tick();
e.label_tips.string = ___("({1}秒后自动拒绝解散)", e._time);
}, 1);
}
};
t.prototype.updateView = function() {
var e = this;
if (this._dismissData) {
var t = this._dismissData.uid, i = "";
if (c.facade.dm.playersDm.isSelf(t)) {
var n = ___("您");
i = ___("{1} 发起了解散房间请求", n);
} else {
var a = c.facade.dm.playersDm.getPlayerByUid(this._dismissData.uid);
i = ___("{1} 发起了解散房间请求", a.uinfo.uname);
}
this.sponsor_info.getChildByName("label").getComponent(cc.Label).string = i;
for (var s = c.facade.dm.playersDm.isSelf(t), r = 0, l = 1, d = !1, h = 0; h < this._dismissData.users.length; h++) {
var _ = this._dismissData.users[h];
if (t != _.uid) {
(a = c.facade.dm.playersDm.getPlayerByUid(_.uid)).uinfo.uname;
cc.find("head_icon", this.reply_layers_info[r]).getComponent(o.default).updataAvatar({
uid: a.uid,
icon: a.uinfo.icon,
avatarFrame: a.avatarFrame
});
if (c.facade.dm.playersDm.isSelf(a.uid)) {
___("您");
s = _.status > 0;
}
cc.find("ani_match_normal", this.reply_layers_info[r]).active = !0;
cc.find("confirm", this.reply_layers_info[r]).active = !1;
cc.find("refuse", this.reply_layers_info[r]).active = !1;
if (1 == _.status) {
l++;
cc.find("ani_match_normal", this.reply_layers_info[r]).active = !1;
cc.find("confirm", this.reply_layers_info[r]).active = !0;
cc.find("refuse", this.reply_layers_info[r]).active = !1;
} else if (2 == _.status) {
l++;
d = !0;
cc.find("ani_match_normal", this.reply_layers_info[r]).active = !1;
cc.find("confirm", this.reply_layers_info[r]).active = !1;
cc.find("refuse", this.reply_layers_info[r]).active = !0;
}
r++;
}
}
for (h = r; h < this.reply_layers_info.length; h++) this.reply_layers_info[h].active = !1;
this.btns_layout.active = !s;
c.facade.dm.tableInfo.isViewer && (this.btns_layout.active = !1);
(l == this._dismissData.users.length || d) && this.scheduleOnce(function() {
e.close();
}, 1);
}
};
t.PREFAB_PATH = "games/PokerBase/prefabs/popup_dismiss";
t.POPUP_NAME = "popup_dismiss";
__decorate([ l(cc.Node) ], t.prototype, "bg", void 0);
__decorate([ l(cc.Node) ], t.prototype, "panel", void 0);
__decorate([ l(cc.Node) ], t.prototype, "btns_layout", void 0);
__decorate([ l(a.CDButtonProxy) ], t.prototype, "btn_agree", void 0);
__decorate([ l(a.CDButtonProxy) ], t.prototype, "btn_reject", void 0);
__decorate([ l(cc.Node) ], t.prototype, "sponsor_info", void 0);
__decorate([ l([ cc.Node ]) ], t.prototype, "reply_layers_info", void 0);
__decorate([ l(cc.Label) ], t.prototype, "label_tips", void 0);
return __decorate([ r ], t);
}(cc.Component);
i.PBPopupDismiss = d;
cc._RF.pop();
}, {
"../../../BalootClient/game_common/CommonStyle": "CommonStyle",
"../../../BalootClient/game_common/common_cmp/CDButtonProxy": "CDButtonProxy",
"../../../BalootClient/game_common/common_cmp/UserAvatar": "UserAvatar",
"../PBLogic": "PBLogic"
} ],
PBPopupInvite: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "601c0dVkMlN6LwctafhzvYP", "PBPopupInvite");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBPopupInvite = void 0;
var n = e("../../../BalootClient/game_common/CommonStyle"), a = e("../../../BalootClient/game_common/common_cmp/CDButtonProxy"), o = e("../PBCommonData"), c = e("../PBLogic"), s = e("./PBInviteFriends"), r = cc._decorator, l = r.ccclass, d = r.property, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bg = null;
t.panel = null;
t.btn_close = null;
t.btn_invite_in_friend = null;
t.btn_invite_in_chat = null;
return t;
}
t.prototype.onLoad = function() {
var e = this;
this.btn_close.addClickHandler(function() {
e.close();
});
this.btn_invite_in_friend.addClickHandler(function() {
cc.log("邀请好友");
cc.vv.PopupManager.addPopup(s.PBInviteFriends.PREFAB_PATH, {
opacityIn: !0,
onShow: function(e) {
var t = {
moduleType: c.facade.dm.tableInfo.roomType,
entryCoin: c.facade.dm.tableInfo.entryCoin || 0,
roomId: c.facade.dm.tableInfo.tableId || 0,
gameid: c.facade.dm.tableInfo.gameId
};
e.getComponent(s.PBInviteFriends).onPopup(t);
}
});
e.close();
});
this.btn_invite_in_chat.addClickHandler(function() {
if (e._checkInviteCnt()) {
cc.log("发送邀请到聊天");
var t = {
c: MsgId.CHAT_SEND_MSG,
content: c.facade.dm.tableInfo.gameId + ";" + c.facade.dm.tableInfo.tableId,
stype: c.facade.dm.tableInfo.roomType,
deskid: c.facade.dm.tableInfo.tableId,
gameid: c.facade.dm.tableInfo.gameId
};
c.facade.dm.tableInfo.roomType == o.PBRoomType.club && (t.cid = cc.vv.UserManager.club && cc.vv.UserManager.club.cid || 0);
cc.vv.NetManager.send(t);
e._recordInviteInChat();
var i = null, n = "";
if (c.facade.dm.tableInfo.roomType == o.PBRoomType.friend) {
i = c.facade.commonProxy.getPageChat();
n = ___("邀请已成功发送至全球聊天，去看看？");
}
i ? cc.vv.AlertView.show(n, function() {
i.active = !0;
}, function() {}) : cc.vv.FloatTip.show(___("邀请已经发送成功"));
} else cc.vv.AlertView.show(___("这个房间的{1}次分享次数已经使用完成，试试别的邀请吧", 3), function() {});
e.close();
});
var t = cc.find("Background/Label", this.btn_invite_in_friend.node).getComponent(cc.Label), i = cc.find("layout_tips/label_title", this.btn_invite_in_chat.node).getComponent(cc.Label);
if (c.facade.dm.tableInfo.roomType == o.PBRoomType.club) {
t.string = ___("邀请俱乐部成员");
i.string = ___("在俱乐部聊天频道邀请");
} else {
t.string = ___("邀请游戏好友");
i.string = ___("在公共聊天频道邀请");
}
this._checkBtnInviteInChat();
};
t.prototype._checkInviteCnt = function() {
var e = !0;
try {
var t = Global.getLocal("DATA_INVITE_IN_CHAT", "");
if (t) for (var i = JSON.parse(t), n = 0; n < i.cntInfo.length; n++) {
var a = i.cntInfo[n];
if (a.tableId == c.facade.dm.tableInfo.tableId && a.cnt >= 3) {
e = !1;
break;
}
}
} catch (e) {
cc.log(e);
}
return e;
};
t.prototype._checkBtnInviteInChat = function() {
try {
var e = Global.getLocal("DATA_INVITE_IN_CHAT", "");
if (e) {
var t = JSON.parse(e), i = this.btn_invite_in_chat.node.getComponent("ButtonGrayCmp"), n = cc.find("layout_tips/label_tip", this.btn_invite_in_chat.node).getComponent(cc.Label), a = !0;
if (t) {
var o = Math.floor((new Date().getTime() - t.time) / 1e3);
if (o < 100) {
a = !1;
this._startTipTick(100 - o);
}
}
n.node.active = !a;
i.interactable = a;
}
} catch (e) {
cc.log(e);
}
};
t.prototype._startTipTick = function(e) {
var t = this, i = cc.find("layout_tips/label_tip", this.btn_invite_in_chat.node).getComponent(cc.Label);
i && (i.getComponent(cc.Label).string = ___("{1}秒后可分享", e));
this.scheduleOnce(function() {
if (--e > 0) t._startTipTick(e); else {
i.node.active = !1;
t.btn_invite_in_chat.node.getComponent("ButtonGrayCmp").interactable = !0;
}
}, 1);
};
t.prototype._recordInviteInChat = function() {
try {
var e = {
cntInfo: [],
time: new Date().getTime()
}, t = Global.getLocal("DATA_INVITE_IN_CHAT", ""), i = !0;
if (t) {
var n = JSON.parse(t);
if (n.cntInfo) {
e.cntInfo = n.cntInfo;
for (var a = 0; a < e.cntInfo.length; a++) {
var o = e.cntInfo[a];
if (o.tableId == c.facade.dm.tableInfo.tableId) {
o.cnt += 1;
i = !1;
break;
}
}
}
}
if (i) {
e.cntInfo.push({
tableId: c.facade.dm.tableInfo.tableId,
cnt: 1
});
e.cntInfo.length > 6 && e.cntInfo.splice(0, e.cntInfo.length - 6);
}
Global.saveLocal("DATA_INVITE_IN_CHAT", JSON.stringify(e));
} catch (e) {
cc.log(e);
Global.saveLocal("DATA_INVITE_IN_CHAT", JSON.stringify({}));
}
};
t.prototype.start = function() {
this.open();
};
t.prototype.onDestroy = function() {
this._removeEventListener();
};
t.prototype._addEventListener = function() {
var e = this;
this.btn_close.node.on("click", function() {
e.close();
}, this);
};
t.prototype._removeEventListener = function() {};
t.prototype.close = function() {
var e = this;
n.CommonStyle.fastHide(this.node, function() {
cc.vv.PopupManager.removePopup(e.node);
});
};
t.prototype.open = function() {
return __awaiter(this, void 0, void 0, function() {
return __generator(this, function() {
this.bg.active = !0;
n.CommonStyle.fastShow(this.panel);
return [ 2 ];
});
});
};
t.PREFAB_PATH = "games/PokerBase/prefabs/popup_invite";
__decorate([ d(cc.Node) ], t.prototype, "bg", void 0);
__decorate([ d(cc.Node) ], t.prototype, "panel", void 0);
__decorate([ d(a.CDButtonProxy) ], t.prototype, "btn_close", void 0);
__decorate([ d(a.CDButtonProxy) ], t.prototype, "btn_invite_in_friend", void 0);
__decorate([ d(a.CDButtonProxy) ], t.prototype, "btn_invite_in_chat", void 0);
return __decorate([ l ], t);
}(cc.Component);
i.PBPopupInvite = h;
cc._RF.pop();
}, {
"../../../BalootClient/game_common/CommonStyle": "CommonStyle",
"../../../BalootClient/game_common/common_cmp/CDButtonProxy": "CDButtonProxy",
"../PBCommonData": "PBCommonData",
"../PBLogic": "PBLogic",
"./PBInviteFriends": "PBInviteFriends"
} ],
PBQualifying: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8296aUtTrdMD5tQxiQ2K8Fw", "PBQualifying");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBQualifying = void 0;
var n = e("../../../BalootClient/game_common/common_cmp/ImgSwitchCmpTS"), a = e("../PBCommonData"), o = cc._decorator, c = o.ccclass, s = o.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.rest_time_label = null;
t.icon_switch = null;
t._isJoin = !1;
t._isOpen = !1;
t._restTime = 0;
t._isLoaded = !1;
return t;
}
t.prototype.onLoad = function() {
this._isLoaded = !0;
var e = this.node.addComponent("NetListenerCmp");
e.registerMsg(MsgId.LEAGUE_CHANGE_NOTIFY, this.LEAGUE_CHANGE_NOTIFY, this);
e.registerMsg(MsgId.LEAGUE_APPLY, this.LEAGUE_APPLY, this);
this.node.active = !1;
this._updateView();
};
t.prototype.LEAGUE_CHANGE_NOTIFY = function(e) {
if (facade.dm.tableInfo.roomType != a.PBRoomType.friend) {
this._isJoin = 1 == e.signed;
this._isOpen = 1 == e.isopen;
e.stopTime && (this._restTime = e.stopTime);
this._isLoaded && this._updateView();
}
};
t.prototype.LEAGUE_APPLY = function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0); else {
this._isJoin = !0;
this._updateView();
}
};
t.prototype.hide = function() {
this.stop();
this.node.active = !1;
};
t.prototype.stop = function() {
this.unscheduleAllCallbacks();
this.node.stopAllActions();
};
t.prototype.show = function(e, t, i) {
this._isJoin = e;
this._isOpen = t;
this._restTime = i;
this._isLoaded && this._updateView();
};
t.prototype._tick = function() {
var e = this;
this.scheduleOnce(function() {
e._restTime--;
if (e._restTime > 0) e._tick(); else {
e._restTime = 0;
e.hide();
}
e._showRestTime();
}, 1);
};
t.prototype._showRestTime = function() {
var e = Math.floor(this._restTime / 3600), t = e > 9 ? e : "0" + e, i = Math.floor(this._restTime % 3600 / 60), n = i > 9 ? i : "0" + i, a = Math.floor(this._restTime % 60), o = a > 9 ? a : "0" + a;
this.rest_time_label.string = t + ":" + n + ":" + o;
};
t.prototype._updateView = function() {
return __awaiter(this, void 0, void 0, function() {
var e;
return __generator(this, function(t) {
switch (t.label) {
case 0:
return this.btnLeagueNode ? [ 3, 2 ] : [ 4, cc.vv.ResManager.loadPrefab("games/PokerBase/prefabs/league_btn") ];

case 1:
e = t.sent();
this.btnLeagueNode && cc.isValid(this.btnLeagueNode) && this.btnLeagueNode.destroy();
this.btnLeagueNode = cc.instantiate(e);
this.btnLeagueNode.parent = this.node;
this.btnLeagueNode.position = cc.v3(0, -22);
this.btnLeagueNode.on("click", this.onClickLeagueApply, this);
t.label = 2;

case 2:
this.btnLeagueNode.active = this._isOpen && !this._isJoin;
cc.find("icon_clock", this.node).active = this._isOpen && this._isJoin;
cc.find("label", this.node).active = this._isOpen && this._isJoin;
if (!this._isOpen || this._restTime < 1) {
this.hide();
return [ 2 ];
}
this.stop();
this.node.active = !Global.isSingle();
this.icon_switch.setIndex(this._isJoin ? 1 : 0);
this._showRestTime();
this._tick();
return [ 2 ];
}
});
});
};
t.prototype.onClickLeagueApply = function() {
cc.vv.NetManager.send({
c: MsgId.LEAGUE_APPLY,
gameid: facade.dm.tableInfo.gameId
}, !0);
};
__decorate([ s(cc.Label) ], t.prototype, "rest_time_label", void 0);
__decorate([ s(n.default) ], t.prototype, "icon_switch", void 0);
return __decorate([ c ], t);
}(cc.Component);
i.PBQualifying = r;
cc._RF.pop();
}, {
"../../../BalootClient/game_common/common_cmp/ImgSwitchCmpTS": "ImgSwitchCmpTS",
"../PBCommonData": "PBCommonData"
} ],
PBRpFullScreenAni: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1cf9a+2R1BHeqVmPd/xy6n2", "PBRpFullScreenAni");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBRpFullScreenAni = void 0;
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.panel = null;
t.spine_bg = null;
t.spine_effct = null;
t.label = null;
t.rpIcon = null;
t._rpVal = 0;
return t;
}
t.prototype.onLoad = function() {
this.rpIcon.active = !1;
this.label.node.active = !1;
};
t.prototype.start = function() {
var e = this;
this.label.string = "Rp" + this._rpVal;
this.spine_bg.setAnimation(0, "baojiang_d", !1);
this.spine_bg.addAnimation(0, "baojiang_loop_d", !0);
this.spine_effct.setAnimation(0, "baojiang_t", !1);
this.spine_effct.addAnimation(0, "baojiang_loop_t", !0);
this.rpIcon.active = !0;
this.rpIcon.scale = 0;
cc.tween(this.rpIcon).delay(.3).to(.3, {
scale: 1
}, {
easing: "backOut"
}).delay(.5).call(function() {
e.label.node.active = !0;
e.label.node.opacity = 1;
cc.tween(e.label.node).to(.3, {
scale: 1,
opacity: 255
}, {
easing: "backOut"
}).start();
}).start();
this.scheduleOnce(function() {
e.close();
}, 2);
};
t.prototype.openParam = function(e) {
this._rpVal = e;
};
t.prototype.close = function() {
var e = this;
cc.tween(this.panel).to(.2, {
scale: 0
}).call(function() {
cc.vv.PopupManager.removePopup(e.node);
}).start();
};
t.PREFAB_PATH = "games/PokerBase/prefabs/rp_full_screen_ani";
__decorate([ o(cc.Node) ], t.prototype, "panel", void 0);
__decorate([ o(sp.Skeleton) ], t.prototype, "spine_bg", void 0);
__decorate([ o(sp.Skeleton) ], t.prototype, "spine_effct", void 0);
__decorate([ o(cc.Label) ], t.prototype, "label", void 0);
__decorate([ o(cc.Node) ], t.prototype, "rpIcon", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.PBRpFullScreenAni = c;
cc._RF.pop();
}, {} ],
PBRule: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8f029nTW4NG34aBe2a/BHVI", "PBRule");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBRule = void 0;
var n = e("../../BalootClient/game_common/CommonStyle"), a = cc._decorator, o = a.ccclass, c = a.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bg = null;
t.panel = null;
t.closeBtn = null;
t.tabContainer = null;
t.pages = [];
t._tabs = null;
return t;
}
t.prototype.onLoad = function() {
var e = this;
this.bg.active = !1;
this.bg.getComponent(cc.Button) || this.bg.addComponent(cc.Button);
this.bg.on("click", function() {
e.close();
});
this.panel.active = !1;
this.panel.getComponent(cc.BlockInputEvents) || this.panel.addComponent(cc.BlockInputEvents);
this._tabs = this.tabContainer.toggleItems;
this._tabs.forEach(function(t, i) {
t.node.on("toggle", function() {
e.onTab(i);
});
});
this.closeBtn.node.on("click", function() {
e.close();
});
};
t.prototype.onTab = function(e) {
this.pages.forEach(function(e) {
e.active = !1;
});
this.pages[e].active = !0;
};
t.prototype.open = function() {
this.bg.active = !0;
n.CommonStyle.fastShow(this.panel);
this.onTab(0);
this._tabs[0].check();
};
t.prototype.close = function() {
this.bg.active = !1;
n.CommonStyle.fastHide(this.panel);
};
__decorate([ c(cc.Node) ], t.prototype, "bg", void 0);
__decorate([ c(cc.Node) ], t.prototype, "panel", void 0);
__decorate([ c(cc.Button) ], t.prototype, "closeBtn", void 0);
__decorate([ c(cc.ToggleContainer) ], t.prototype, "tabContainer", void 0);
__decorate([ c([ cc.Node ]) ], t.prototype, "pages", void 0);
return __decorate([ o ], t);
}(cc.Component);
i.PBRule = s;
cc._RF.pop();
}, {
"../../BalootClient/game_common/CommonStyle": "CommonStyle"
} ],
PBSelfExpChange: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c18bfS9NrxKXozR+ykTUEnL", "PBSelfExpChange");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBSelfExpChange = void 0;
var n = e("../../../BalootClient/game_common/LevelCfg"), a = e("../PBEvent"), o = cc._decorator, c = o.ccclass, s = o.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.labelLevel = null;
t.progressBar = null;
t.progressLabel = null;
t.label_exp_add = null;
return t;
}
t.prototype.onLoad = function() {
this.node.active = !1;
};
t.prototype.hide = function() {
var e = this;
if (this.node.active) {
this.unscheduleAllCallbacks();
this.node.stopAllActions();
cc.tween(this.node).to(.2, {
opacity: 0
}).call(function() {
e.node.active = !1;
}).start();
}
};
t.prototype.show = function(e, t) {
void 0 === t && (t = 2);
return __awaiter(this, void 0, void 0, function() {
var i, o, c, s, r, l, d, h, _, p = this;
return __generator(this, function(u) {
switch (u.label) {
case 0:
this.unscheduleAllCallbacks();
if (!(i = this.getDm())) return [ 2 ];
if (!i.playersDm) return [ 2 ];
if (!i.playersDm.selfInfo) return [ 2 ];
o = i.playersDm.selfInfo;
this.node.active = !0;
this.node.opacity = 255;
c = o.currExp;
s = n.totalExp2Level(c);
this.labelLevel.string = "Lv." + s;
this.progressBar.progress = n.getLevelProgress(c);
r = n.getCmpLevelNeedExp(s);
if (!((l = n.getLevelRemainingExp(c)) + e >= r)) return [ 3, 2 ];
this.progressLabel.string = r + "/" + r;
return [ 4, new Promise(function(e) {
cc.tween(p.progressBar).to(.5, {
progress: 1
}).call(function() {
e(!0);
}).delay(.1).start();
}) ];

case 1:
u.sent();
this.labelLevel.string = "Lv." + (s + 1);
d = n.getLevelNeedExp(s + 1);
h = n.getCmpLevelNeedExp(s + 1);
_ = c + e - d;
r = h;
this.progressLabel.string = _ + "/" + r;
this.progressBar.progress = 0;
cc.tween(this.progressBar).to(.5, {
progress: _ / r
}).start();
return [ 3, 3 ];

case 2:
this.progressLabel.string = l + e + "/" + r;
cc.tween(this.progressBar).to(.5, {
progress: (l + e) / r
}).start();
u.label = 3;

case 3:
this.label_exp_add.string = "+" + e;
o.currExp = c + e;
o.currLevel = n.totalExp2Level(o.currExp);
Global.dispatchEvent(a.PBEvent.USER_EXP_CHANGE);
this.scheduleOnce(function() {
p.hide();
}, t);
return [ 2 ];
}
});
});
};
t.prototype.getDm = function() {
return facade.dm;
};
__decorate([ s(cc.Label) ], t.prototype, "labelLevel", void 0);
__decorate([ s(cc.ProgressBar) ], t.prototype, "progressBar", void 0);
__decorate([ s(cc.Label) ], t.prototype, "progressLabel", void 0);
__decorate([ s(cc.Label) ], t.prototype, "label_exp_add", void 0);
return __decorate([ c ], t);
}(cc.Component);
i.PBSelfExpChange = r;
cc._RF.pop();
}, {
"../../../BalootClient/game_common/LevelCfg": "LevelCfg",
"../PBEvent": "PBEvent"
} ],
PBSettlementInfoChangeInPlayer: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c0846TfAnRAPKla0719mXH4", "PBSettlementInfoChangeInPlayer");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBSettlementInfoChangeInPlayer = void 0;
var n = e("../../../BalootClient/game_common/LevelCfg"), a = e("../PBEvent"), o = cc._decorator, c = o.ccclass, s = o.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.rp = null;
t.exp = null;
t.league = null;
t.level = null;
t.expProgressbar = null;
t.expLabel = null;
t.leagueProgressbar = null;
t.addRp = null;
t.spine = null;
t.light_prefab = null;
t.reward_kind = 0;
return t;
}
t.prototype.showDialogue = function(e) {
var t = this.getDm();
if (t && t.playersDm && t.playersDm.selfInfo) {
var i = t.playersDm.selfInfo;
this.node.active = !0;
this.leagueProgressbar.node.opacity = 0;
this.addRp.node.scale = 0;
this.reward_kind = e;
var a = cc.vv.UserConfig.getRank(i.leaguePoints);
if (this.spine && cc.isValid(this.spine)) {
this.spine.setSkin("dw" + a.stage);
this.spine.setAnimation(0, "animation" + (4 - e) + "_1", !1);
this.spine.addAnimation(0, "animation" + (4 - e) + "_2", !1);
}
var o = i.currExp, c = n.totalExp2Level(o);
this.level.string = c.toString();
var s = n.getCmpLevelNeedExp(c), r = n.getLevelRemainingExp(o);
this.expLabel.string = r + "/" + s;
this.expProgressbar.progress = n.getLevelProgress(o);
this.expProgressbar.node.opacity = 0;
this.expProgressbar.node.stopAllActions();
cc.tween(this.expProgressbar.node).delay(.4).to(.2, {
opacity: 255
}).start();
if (3 === e) {
var l = cc.vv.UserConfig.getRank(i.leaguePoints);
this.leagueProgressbar.progress = 0;
this.leagueProgressbar.node.opacity = 255;
var d = 0;
d = l.next ? (i.leaguePoints - l.score) / (l.next.score - l.score) : 1;
this.leagueProgressbar.progress = d;
this.leagueProgressbar.node.opacity = 0;
this.leagueProgressbar.node.stopAllActions();
cc.tween(this.leagueProgressbar.node).delay(.4).to(.2, {
opacity: 255
}).start();
this.exp.y = 170;
} else this.exp.y = 2 === e ? 112 : 52;
}
};
t.prototype.addInfo = function(e, t, i) {
void 0 === t && (t = 0);
void 0 === i && (i = 0);
return __awaiter(this, void 0, void 0, function() {
var o, c, s, r, l, d, h, _, p, u, f, g, m, v, S, C, b, E, y, L = this;
return __generator(this, function(T) {
switch (T.label) {
case 0:
if (!(o = this.getDm())) return [ 2 ];
if (!o.playersDm) return [ 2 ];
if (!o.playersDm.selfInfo) return [ 2 ];
c = o.playersDm.selfInfo;
s = c.currExp;
r = n.totalExp2Level(s);
l = n.getCmpLevelNeedExp(r);
d = 0;
h = 0;
if (0 !== l) return [ 3, 1 ];
this.expProgressbar.progress = 1;
this.expLabel.string = "";
return [ 3, 7 ];

case 1:
_ = n.getLevelRemainingExp(s);
b = 0;
p = n.totalExp2Level(s + e);
this.expProgressbar.progress = _ / l;
if (!(p > r)) return [ 3, 6 ];
u = 0;
T.label = 2;

case 2:
if (!(u < p - r)) return [ 3, 5 ];
l = n.getCmpLevelNeedExp(r + u);
this.expLabel.string = l + "/" + l;
return [ 4, new Promise(function(e) {
cc.tween(L.expProgressbar).to(.5 / (p - r), {
progress: 1
}).call(function() {
e(!0);
}).start();
L.addLight(L.expProgressbar.node, _ / l, 1, .5 / (p - r));
}) ];

case 3:
T.sent();
_ = 0;
this.expProgressbar.progress = 0;
T.label = 4;

case 4:
u++;
return [ 3, 2 ];

case 5:
f = n.getLevelNeedExp(p);
g = n.getCmpLevelNeedExp(p);
(m = s + e - f) < 0 && (m = 0);
b = m / (l = g);
c.currLevel = p;
c.currExp = s + e;
this.level.string = p.toString();
this.expLabel.string = m + "/" + l;
if (b > 0) {
cc.tween(this.expProgressbar).to(.5, {
progress: b
}).call(function() {
Global.dispatchEvent(a.PBEvent.USER_EXP_CHANGE);
}).start();
this.addLight(this.expProgressbar.node, 0, b, .5);
} else Global.dispatchEvent(a.PBEvent.USER_EXP_CHANGE);
d = p;
v = {
$LevelId: p,
$RoleName: cc.vv.UserManager.getNickName(),
$LevelBefore: p - 1,
$IsTopLevel: 0,
$RoleCombat: "0"
};
cc.vv.PlatformApiMgr.KoSDKTrackEvent("$UpgradeLevel", JSON.stringify(v));
return [ 3, 7 ];

case 6:
this.expLabel.string = _ + e + "/" + l;
b = (_ + e) / l;
this.addLight(this.expProgressbar.node, _ / l, b, 1);
cc.tween(this.expProgressbar).to(1, {
progress: b
}).call(function() {
c.currExp = s + e;
c.currLevel = n.totalExp2Level(c.currExp);
Global.dispatchEvent(a.PBEvent.USER_EXP_CHANGE);
}).start();
T.label = 7;

case 7:
if (t > 0) {
this.addRp.string = "+" + t;
this.addRp.node.scale = 0;
this.addRp.node.stopAllActions();
cc.tween(this.addRp.node).to(.3, {
scale: 1
}, {
easing: "backOut"
}).start();
}
if (i > 0) {
S = cc.vv.UserConfig.getRank(c.leaguePoints);
C = cc.vv.UserConfig.getRank(c.leaguePoints + i);
b = 0;
E = c.leaguePoints - S.score;
if (S.next) {
y = S.next.score - S.score;
b = (E + i) / y;
this.addLight(this.leagueProgressbar.node, E / y, b, 1);
cc.tween(this.leagueProgressbar).to(1, {
progress: b
}).start();
} else b = 1;
c.leaguePoints += i;
Global.dispatchEvent(a.PBEvent.USER_LEAGUE_CHANGE);
C.stage > S.stage && (h = C.stage);
}
Global.isSingle() || this.handleUpgradeHint(d, h);
return [ 4, facade.delayTime(2) ];

case 8:
T.sent();
cc.tween(this.expProgressbar.node).to(.2, {
opacity: 0
}).start();
cc.tween(this.leagueProgressbar.node).to(.2, {
opacity: 0
}).start();
cc.tween(this.addRp.node).to(.2, {
scale: 0
}, {
easing: "backIn"
}).start();
this.spine.setAnimation(0, "animation" + (4 - this.reward_kind) + "_3", !1);
this.spine.setCompleteListener(function() {
L.spine.setCompleteListener(null);
L.node.active = !1;
});
return [ 2 ];
}
});
});
};
t.prototype.addLight = function(e, t, i, n) {
i >= 1 && (i = 1);
var a = cc.instantiate(this.light_prefab);
a.active = !0;
a.parent = e;
a.x = -e.width / 2 + t * e.width;
cc.tween(a).to(n, {
x: -e.width / 2 + i * e.width
}).removeSelf().start();
};
t.prototype.getDm = function() {
return facade.dm;
};
t.prototype.handleUpgradeHint = function(e, t) {
var i = cc.v2(0, 0), n = cc.v2(0, 0);
if (e && t) {
i = i.add(cc.v2(-170, -300));
n = n.add(cc.v2(170, -300));
}
e && cc.resources.load("BalootClient/UpgradeHint/LevelUpHint", cc.Prefab, function(t, n) {
if (!t) {
var a = cc.instantiate(n);
a.parent = cc.find("Canvas");
a.position = i;
a.scale = .3;
a.getComponent("LevelUpHint").run(e || 1);
}
});
t && cc.resources.load("BalootClient/UpgradeHint/LeagueUpHint", cc.Prefab, function(e, i) {
if (!e) {
var a = cc.instantiate(i);
a.parent = cc.find("Canvas");
a.position = n;
a.scale = .5;
a.getComponent("LeagueUpHint").run(t || 1);
}
});
};
t.prototype.clear = function() {
this.expProgressbar.node.stopAllActions();
this.leagueProgressbar.node.stopAllActions();
this.addRp.node.stopAllActions();
this.node.active = !1;
};
__decorate([ s(cc.Node) ], t.prototype, "rp", void 0);
__decorate([ s(cc.Node) ], t.prototype, "exp", void 0);
__decorate([ s(cc.Node) ], t.prototype, "league", void 0);
__decorate([ s(cc.Label) ], t.prototype, "level", void 0);
__decorate([ s(cc.ProgressBar) ], t.prototype, "expProgressbar", void 0);
__decorate([ s(cc.Label) ], t.prototype, "expLabel", void 0);
__decorate([ s(cc.ProgressBar) ], t.prototype, "leagueProgressbar", void 0);
__decorate([ s(cc.Label) ], t.prototype, "addRp", void 0);
__decorate([ s(sp.Skeleton) ], t.prototype, "spine", void 0);
__decorate([ s(cc.Prefab) ], t.prototype, "light_prefab", void 0);
return __decorate([ c ], t);
}(cc.Component);
i.PBSettlementInfoChangeInPlayer = r;
cc._RF.pop();
}, {
"../../../BalootClient/game_common/LevelCfg": "LevelCfg",
"../PBEvent": "PBEvent"
} ],
PBSettlementInfoChange: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "10437rAGyZP5bBqwBFo0qEs", "PBSettlementInfoChange");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBSettlementInfoChange = void 0;
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.rp = null;
t.exp = null;
t.league = null;
t.icon_rp = null;
t.icon_exp = null;
t.icon_league = null;
t.end_Rp = null;
t.end_Exp = null;
t.end_League = null;
return t;
}
t.prototype.playRpChange = function(e, t, i) {
var n = this;
void 0 === i && (i = null);
this.rp.active = !0;
var a = cc.find("spine", this.rp).getComponent(sp.Skeleton);
a.node.active = !1;
var o = cc.find("add_num", this.rp);
o.getComponent(cc.Label).string = "RP+" + Global.formatNumber(e, {
threshold: 1e4
});
o.scale = 0;
cc.tween(this.rp).delay(t).call(function() {
a.node.active = !0;
a.setAnimation(0, "animation", !1);
a.addAnimation(0, "animation3", !0);
}).delay(.3).call(function() {
cc.tween(o).to(.3, {
scale: 1
}, {
easing: "backOut"
}).start();
}).delay(2.5 - t - .3).call(function() {
a.setAnimation(0, "animation2", !1);
cc.tween(o).to(.3, {
scale: 0
}, {
easing: "backIn"
}).start();
}).delay(.1).call(function() {
var e = n.rp.convertToWorldSpaceAR(cc.v2(0, 0)), t = n.end_Rp.convertToWorldSpaceAR(cc.v2(0, 0));
Global.FlyAnimToPos(e, t, {
spriteFrame: n.icon_rp,
scale: 1,
count: 15,
boom: !0,
rangeX: 50,
rangeY: 50,
endScale: .8,
onEnd: function() {
n.rp.active = !1;
i && i();
}
});
}).start();
};
t.prototype.playExpChange = function(e, t, i, n) {
var a = this, o = this.getDm();
if (o && o.playersDm && o.playersDm.selfInfo) {
o.playersDm.selfInfo;
this.exp.active = !0;
var c = cc.find("spine", this.exp).getComponent(sp.Skeleton);
c.node.active = !1;
var s = cc.find("add_num", this.exp);
s.getComponent(cc.Label).string = "EXP+" + Global.formatNumber(e, {
threshold: 1e4
});
s.scale = 0;
cc.tween(this.exp).delay(t).call(function() {
c.node.active = !0;
c.setAnimation(0, "animation", !1);
c.addAnimation(0, "animation3", !0);
}).delay(.3).call(function() {
cc.tween(s).to(.3, {
scale: 1
}, {
easing: "backOut"
}).start();
}).delay(2.5 - t - .3).call(function() {
i && i();
c.setAnimation(0, "animation2", !1);
cc.tween(s).to(.3, {
scale: 0
}, {
easing: "backOut"
}).start();
}).delay(.1).call(function() {
var e = a.exp.convertToWorldSpaceAR(cc.v2(0, 0)), t = a.end_Exp.convertToWorldSpaceAR(cc.v2(0, 0));
Global.FlyAnimToPos(e, t, {
spriteFrame: a.icon_exp,
scale: .8,
count: 15,
boom: !0,
rangeX: 50,
rangeY: 50,
endScale: .8,
onEnd: function() {
a.exp.active = !1;
n && n();
}
});
}).start();
}
};
t.prototype.playLeagueChange = function(e, t) {
var i = this, n = this.getDm();
if (n && n.playersDm && n.playersDm.selfInfo) {
n.playersDm.selfInfo;
this.league.active = !0;
var a = cc.find("spine", this.league).getComponent(sp.Skeleton);
a.node.active = !1;
var o = cc.find("add_num", this.league);
o.getComponent(cc.Label).string = "EXP+" + Global.formatNumber(e, {
threshold: 1e4
});
o.scale = 0;
cc.tween(this.league).delay(t).call(function() {
a.node.active = !0;
var e = cc.vv.UserConfig.getRank(cc.vv.UserManager.leagueexp);
e && a.setSkin("league_" + e.stage);
a.setAnimation(0, "animation", !1);
a.addAnimation(0, "animation3", !0);
}).delay(.3).call(function() {
cc.tween(o).to(.3, {
scale: 1
}, {
easing: "backOut"
}).start();
}).delay(2.5 - t - .3).call(function() {
a.setAnimation(0, "animation2", !1);
cc.tween(o).to(.3, {
scale: 0
}, {
easing: "backOut"
}).start();
}).delay(.1).call(function() {
var e = i.league.convertToWorldSpaceAR(cc.v2(0, 0)), t = i.end_League.convertToWorldSpaceAR(cc.v2(0, 0));
Global.FlyAnimToPos(e, t, {
spriteFrame: i.icon_league,
scale: .8,
count: 15,
boom: !0,
rangeX: 50,
rangeY: 50,
endScale: .8,
onEnd: function() {
i.league.active = !1;
}
});
}).start();
}
};
t.prototype.getDm = function() {
return facade.dm;
};
t.prototype.clear = function() {
this.exp.stopAllActions();
this.rp.stopAllActions();
this.league.stopAllActions();
this.exp.active = !1;
this.rp.active = !1;
this.league.active = !1;
};
__decorate([ o(cc.Node) ], t.prototype, "rp", void 0);
__decorate([ o(cc.Node) ], t.prototype, "exp", void 0);
__decorate([ o(cc.Node) ], t.prototype, "league", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "icon_rp", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "icon_exp", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "icon_league", void 0);
__decorate([ o(cc.Node) ], t.prototype, "end_Rp", void 0);
__decorate([ o(cc.Node) ], t.prototype, "end_Exp", void 0);
__decorate([ o(cc.Node) ], t.prototype, "end_League", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.PBSettlementInfoChange = c;
cc._RF.pop();
}, {} ],
PBSkinMgr: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ea0f6xe8hNOh6exXJ0XQkA3", "PBSkinMgr");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBSkinMgr = void 0;
var n = e("../../BalootClient/game_common/common_cmp/NetImg"), a = e("../../BalootClient/game_common/common_cmp/UserAvatar"), o = e("./card/PBCardItem"), c = e("./chat/PBChatData"), s = cc._decorator, r = s.ccclass, l = s.property, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.pokerBacks = [];
t.pokerFaces = [];
t.userAvatar = null;
t._tableBgSkin = "";
t._chatSkin = "";
t._emotionSkin = [];
t._pokerBackSkin = "";
t._pokerFaceSkin = "";
t._avatarSkin = "";
t._fontSkin = "";
return t;
}
t.prototype.onLoad = function() {};
t.prototype.updateSkin = function() {
var e = cc.vv.UserManager.chatskin;
e && "0" != e || (e = "chat_000");
if (this._chatSkin != e) {
this._chatSkin = e;
this.updateChatSkin();
}
var t = cc.vv.UserManager.emojilist;
t = t && t.length ? t : [ "emoji_0" ];
if (this._emotionSkin.length != t.length) {
this._emotionSkin = t;
this.updateEmotionSkin();
}
var i = cc.vv.UserManager.tableskin;
i && "0" != i || (i = "desk_000");
if (this._tableBgSkin != i) {
this._tableBgSkin = i;
this.updateTableBg();
}
var n = cc.vv.UserManager.pokerskin;
n && "0" != n || (n = "poker_free");
Global.isYDApp() && (n = "poker_yd");
if (this._pokerBackSkin != n) {
this._pokerBackSkin = n;
this.updatePokerBack();
}
var a = cc.vv.UserManager.faceskin;
a && "0" != a || (a = "poker_face_0");
if (this._pokerFaceSkin != a) {
this._pokerFaceSkin = a;
this.updatePockerFace();
}
var o = cc.vv.UserManager.avatarframe;
o && "0" != o || (o = "avatarframe_1000");
if (this._avatarSkin != o) {
this._avatarSkin = o;
this.updateUserAvatar();
}
var c = cc.vv.UserManager.frontskin;
c && "0" != c || (c = "font_color_4");
this._fontSkin = c;
console.log("chatskin:", e);
console.log("tableskin:", i);
console.log("pokerBackSkin:", n);
console.log("pokerFaceSkin:", a);
console.log("avatarSkin:", o);
};
t.prototype.updateTableBg = function() {
facade.bgCtrl && facade.bgCtrl.changeSkin(this._tableBgSkin);
};
t.prototype.updatePokerBack = function() {
var e = this;
if (this.pokerBacks) {
this.pokerBacks.forEach(function(t) {
t && (t.url = e._pokerBackSkin);
});
facade.playersCtrl.players.forEach(function(t) {
t.hideCardCtrl && ((i = t.hideCardCtrl.getAllCards()).length > 0 ? i.forEach(function(t) {
t.getComponent(n.default).url = e._pokerBackSkin;
}) : t.hideCardCtrl.skin = e._pokerBackSkin);
if (t.cardCollector) {
var i;
(i = t.cardCollector.cards) && i.length > 0 ? i.forEach(function(t) {
t.getComponent(n.default).url = e._pokerBackSkin;
}) : t.cardCollector.skin = e._pokerBackSkin;
}
});
if (facade.trickRoundCards) {
var t = facade.trickRoundCards.getAllCards();
t && t.length > 0 && t.forEach(function(t) {
t.cardBack.getComponent(n.default).url = e._pokerBackSkin;
});
}
}
};
t.prototype.updatePockerFace = function() {
var e = this;
this.pokerFaces.forEach(function(t) {
t && (t.skin = e._pokerFaceSkin);
}, this);
facade.handCardCtrl && facade.handCardCtrl.handCard && (t = facade.handCardCtrl.handCard.cards) && t.forEach(function(t) {
t && (t.skin = e._pokerFaceSkin);
});
if (facade.trickRoundCards) {
var t;
(t = facade.trickRoundCards.getAllCards()) && t.length > 0 && t.forEach(function(t) {
t.skin = e._pokerFaceSkin;
});
}
};
t.prototype.updateChatSkin = function() {
var e = facade.dm.playersDm.selfAbsInfo;
if (this._chatSkin && e.isSeated) {
e.chatSkin = this._chatSkin;
facade.sendRetransmissionMsg(c.PBChatMsgType.diy, JSON.stringify({
cmd: "change_chat_skin"
}));
}
};
t.prototype.updateEmotionSkin = function() {
facade.chat && (facade.chat.emotionSkin = this._emotionSkin);
};
t.prototype.updateUserAvatar = function() {
if (this.userAvatar && facade.dm.playersDm.selfInfo && this._avatarSkin != facade.dm.playersDm.selfInfo.avatarFrame) {
facade.dm.playersDm.selfInfo.avatarFrame = this._avatarSkin;
this.userAvatar.updateFrame(this._avatarSkin);
facade.sendRetransmissionMsg(c.PBChatMsgType.diy, JSON.stringify({
cmd: "change_avatar"
}));
}
};
Object.defineProperty(t.prototype, "fontSkin", {
get: function() {
return this._fontSkin;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "pokerFaceSkin", {
get: function() {
return this._pokerFaceSkin || "poker_face_000";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "pokerBackSkin", {
get: function() {
return this._pokerBackSkin || "poker_free";
},
enumerable: !1,
configurable: !0
});
__decorate([ l([ n.default ]) ], t.prototype, "pokerBacks", void 0);
__decorate([ l([ o.PBCardItem ]) ], t.prototype, "pokerFaces", void 0);
__decorate([ l(a.default) ], t.prototype, "userAvatar", void 0);
return __decorate([ r ], t);
}(cc.Component);
i.PBSkinMgr = d;
cc._RF.pop();
}, {
"../../BalootClient/game_common/common_cmp/NetImg": "NetImg",
"../../BalootClient/game_common/common_cmp/UserAvatar": "UserAvatar",
"./card/PBCardItem": "PBCardItem",
"./chat/PBChatData": "PBChatData"
} ],
PBSoundCtrl: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "83baeusLFxBTJlySb54k5JK", "PBSoundCtrl");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBSoundCtrl = void 0;
var n = e("./SubGameClickSoundCmp"), a = cc._decorator, o = a.ccclass, c = (a.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
var e = this;
Global.registerEvent("SubgameClickSoundEvt", function(t) {
if (t && t.detail) {
var i = t.detail;
if (i) {
var a = "";
switch (i.soundName) {
case n.SubGameClickSoundName.CLICK:
a = "btn_click";
}
a && (i.soundType == n.SubGameClickSoundType.COMMON ? e.playBaseEffect(a) : e.playEffect(a));
}
}
}, this);
};
Object.defineProperty(t.prototype, "basePath", {
get: function() {
return "PokerBase/";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "soundPath", {
get: function() {
return "PokerBase/";
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "countDownEff", {
get: function() {
return "";
},
enumerable: !1,
configurable: !0
});
t.prototype.getGenderStr = function(e) {
return 1 == e ? "male" : "female";
};
t.prototype.playEffect = function(e, t, i) {
void 0 === t && (t = !1);
if (!cc.vv.LoginData) return cc.vv.AudioManager.playEff(this.soundPath, e, !0, t, null, 0, null, i);
var n = "https://inter.sekiengame.com/fb/cardsgame/audio/" + cc.vv.LoginData.gameid + "/" + e + ".mp3";
cc.loader.load({
url: n
}, function(e, t) {
e ? cc.log(e) : cc.vv.AudioManager.playAudioClip(t, !1);
});
};
t.prototype.playBaseEffect = function(e, t) {
void 0 === t && (t = !1);
if (!cc.vv.LoginData) return cc.vv.AudioManager.playEff(this.basePath, e, !0, t, null, 0, null);
var i = "https://inter.sekiengame.com/fb/cardsgame/audio/" + e + ".mp3";
cc.loader.load({
url: i
}, function(e, t) {
e ? cc.log(e) : cc.vv.AudioManager.playAudioClip(t, !1);
});
};
t.prototype.stopEffectByName = function(e) {
cc.vv.AudioManager.stopEffectByName(e);
};
t.prototype.playEffectByGender = function() {};
t.prototype.playBgm = function(e, t) {
void 0 === e && (e = "bgm");
void 0 === t && (t = !0);
if (cc.vv.LoginData) {
var i = "https://inter.sekiengame.com/fb/cardsgame/audio/" + e + ".mp3";
cc.loader.load({
url: i
}, function(e, t) {
e ? cc.log(e) : cc.vv.AudioManager.playBGMClip(t, !0, null, null);
});
} else e && cc.vv.AudioManager.playBgm(this.basePath, e, !0, 0, null, t);
};
t.prototype.stopBgm = function() {
cc.vv.AudioManager.stopBgm();
};
return __decorate([ o ], t);
}(cc.Component));
i.PBSoundCtrl = c;
cc._RF.pop();
}, {
"./SubGameClickSoundCmp": "SubGameClickSoundCmp"
} ],
PBTipsCoinRecharge: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "241b94aqe5JZrqpPeoEcmxz", "PBTipsCoinRecharge");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBTipsCoinRecharge = void 0;
var n = cc._decorator, a = n.ccclass, o = (n.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
var e = this;
this.tempData = {};
this.node.addComponent("NetListenerCmp").registerMsg(MsgId.R_TIPS_COIN_RECHARDGE, this.R_TIPS_COIN_RECHARDGE, this);
this.show(!1);
this.scheduleOnce(function() {
var t = e.tempData.R_TIPS_COIN_RECHARDGE_MSG;
if (t) {
e.R_TIPS_COIN_RECHARDGE(t);
e.tempData.R_TIPS_COIN_RECHARDGE_MSG = null;
}
});
};
t.prototype.R_TIPS_COIN_RECHARDGE = function(e) {
var t = this, i = e.dangerUids;
if (i && i.includes(cc.vv.UserManager.uid)) {
this.show();
this.unscheduleAllCallbacks();
this.scheduleOnce(function() {
t.show(!1);
}, 60);
}
};
t.prototype.show = function(e) {
void 0 === e && (e = !0);
if (Global.isSingle()) this.node.active = !1; else {
var t = this.node;
if (t) if (e) {
if (!t.active) {
t.active = !0;
t.getChildByName("spine").getComponent(sp.Skeleton).setAnimation(0, "animation", !0);
}
cc.vv.FloatTip.show(___("You are about to run out of gold coins!"));
} else t.active = !1;
}
};
return __decorate([ a ], t);
}(cc.Component));
i.PBTipsCoinRecharge = o;
cc._RF.pop();
}, {} ],
PBToggleVoice: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0b01dlU9jlFdYoy8Lt9qhrX", "PBToggleVoice");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBToggleVoice = void 0;
var n = e("../PBLogic"), a = cc._decorator, o = a.ccclass, c = a.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.spine = null;
t.toggle = null;
t.uid = 0;
t._isInit = !1;
t._isPlaySayingAni = !1;
t._canPlaySaying = !1;
t._cbHandler = null;
t.joinChat = -1;
t.mic = -1;
t.isBeRefuse = !1;
return t;
}
t.prototype.forceInit = function() {
var e = this;
this._isInit = !0;
this.spine.node.active = !1;
this.toggle.enabled = !1;
this.toggle.target.active = !1;
cc.find("checkmark", this.toggle.node).active = !0;
this.micSprite = cc.find("checkmark", this.toggle.node).getComponent(cc.Sprite);
this.micSprite.spriteFrame = null;
this.toggle.node.addComponent(cc.Button);
this.toggle.node.on("click", function() {
var t = n.facade.playersCtrl.getPlayerByUid(e.uid);
if (e.uid == cc.vv.UserManager.uid) 0 == e.mic ? n.facade.dm.msgWriter.sendVoiceChanged(1) : n.facade.dm.msgWriter.sendVoiceChanged(0); else if (1 == t.voiceToggle.joinChat) {
t.voiceToggle.isBeRefuse = !t.voiceToggle.isBeRefuse;
t.voiceToggle.updateView();
}
});
};
t.prototype.init = function(e) {
this.uid = e;
this.mic = 0;
this.isBeRefuse = !1;
};
t.prototype.updateView = function() {
if (this.uid == cc.vv.UserManager.uid) {
1 == this.joinChat ? n.facade.voiceCtrl.joinVoiceRoom() : n.facade.voiceCtrl.levelVoiceRoom();
if (1 == this.mic) {
cc.vv.ResManager.setSpriteFrame(this.micSprite, "games/PokerBase/texture/icon_voice_1", null, null);
n.facade.voiceCtrl.muteSelfVoice(!1);
} else {
cc.vv.ResManager.setSpriteFrame(this.micSprite, "games/PokerBase/texture/icon_voice_0", null, null);
n.facade.voiceCtrl.muteSelfVoice(!0);
}
} else if (1 == this.mic) if (this.isBeRefuse) {
cc.vv.ResManager.setSpriteFrame(this.micSprite, "games/PokerBase/texture/icon_voice_0", null, null);
n.facade.voiceCtrl.muteOtherVoice(this.uid, !0);
} else {
cc.vv.ResManager.setSpriteFrame(this.micSprite, "games/PokerBase/texture/icon_voice_1", null, null);
n.facade.voiceCtrl.muteOtherVoice(this.uid, !1);
} else cc.vv.ResManager.setSpriteFrame(this.micSprite, "games/PokerBase/texture/icon_voice_2", null, null);
};
Object.defineProperty(t.prototype, "canSaying", {
set: function(e) {
this._canPlaySaying = e;
this._canPlaySaying && this._playSayingAni();
},
enumerable: !1,
configurable: !0
});
t.prototype._playSayingAni = function() {
var e = this;
if (!this._isPlaySayingAni) {
this._canPlaySaying = !1;
this._isPlaySayingAni = !0;
this.spine.node.active = !0;
this.spine.setAnimation(0, "animation", !0);
this.spine.setCompleteListener(function() {
if (e._canPlaySaying) e._canPlaySaying = !1; else {
e.spine.setCompleteListener(null);
e.spine.node.active = !1;
e._isPlaySayingAni = !1;
}
});
}
};
t.prototype.show = function() {
this.node.active = !0;
};
t.prototype.hide = function() {
this._canPlaySaying = !1;
this._isPlaySayingAni = !1;
this.spine.node.active = !1;
this.node.active = !1;
};
__decorate([ c(sp.Skeleton) ], t.prototype, "spine", void 0);
__decorate([ c(cc.Toggle) ], t.prototype, "toggle", void 0);
return __decorate([ o ], t);
}(cc.Component);
i.PBToggleVoice = s;
cc._RF.pop();
}, {
"../PBLogic": "PBLogic"
} ],
PBTotalSettlement: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "591875vl6hCkr4tId8ZZ28T", "PBTotalSettlement");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBTotalSettlement = i.PBSettlementResultType = void 0;
var n, a = e("../../../PokerBase/scripts/PBCommonData"), o = cc._decorator, c = o.ccclass, s = o.property;
(function(e) {
e[e.DUMMY = 0] = "DUMMY";
e[e.GO_BACK = 1] = "GO_BACK";
e[e.MANUAL_NEXT = 2] = "MANUAL_NEXT";
e[e.AUTO_NEXT = 3] = "AUTO_NEXT";
e[e.AGAIN = 4] = "AGAIN";
})(n = i.PBSettlementResultType || (i.PBSettlementResultType = {}));
var r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.panel = null;
t.flagLose = null;
t.flagWin = null;
t.btn_layout = null;
t.btn_back = null;
t.btn_next = null;
t.spine_effect_win = null;
t.autoNextRoundTipLabel = null;
t.callBack = null;
t.settlementData = null;
t.isOpen = !1;
t.autoNextRoundTime = 6;
t.shareBtnNode = null;
return t;
}
t.prototype.onLoad = function() {
this.panel.active = !1;
this.node.addComponent("EventListenerCmp").registerEvent("EVENT_ROOM_DISMISS", this.EVENT_ROOM_DISMISS, this);
};
t.prototype.EVENT_ROOM_DISMISS = function() {
if (this.isOpen) {
this.removeTick();
this.btn_layout.active = !1;
this.closeShareBtn();
}
};
t.prototype.open = function(e, t) {
var i = this;
void 0 === t && (t = null);
this.isOpen = !0;
this.settlementData = e;
this.callBack = t;
this.getDm().tableStatus.flowState = a.PBFlowState.total_settlement;
this.flagWin.active = !1;
this.flagLose.active = !1;
this.panel.active = !0;
this.btn_layout.active = !1;
this.updateView();
!this.shareBtnNode && Global.isSingle() && cc.resources.load("games/PokerBase/prefabs/settlement_btn_share_fb", cc.Prefab, function(e, t) {
if (!e) {
i.shareBtnNode = cc.instantiate(t);
i.shareBtnNode.parent = i.panel;
i.shareBtnNode.y = -cc.winSize.height / 2 + 700;
i.shareBtnNode.getComponent(cc.Button).node.on("click", i.onClickShare, i);
i.updateShareBtn();
}
});
this.updateShareBtn();
};
t.prototype.updateShareBtn = function() {
if (Global.isSingle() || Global.isYDApp()) this.shareBtnNode && (this.shareBtnNode.active = !1); else if (this.shareBtnNode) {
this.closeShareBtn();
if (this.settlementData && this.settlementData.fbshare) {
var e = this.settlementData.fbshare[cc.vv.UserManager.uid];
if (e) {
this.shareBtnNode.active = !0;
this.shareBtnNode.getComponent(cc.Button).interactable = !0;
cc.find("layout/multiple", this.shareBtnNode).getComponent(cc.Label).string = "x" + e.times;
} else this.shareBtnNode.active = !1;
}
}
};
t.prototype.closeShareBtn = function() {
this.shareBtnNode && (this.shareBtnNode.active = !1);
};
t.prototype.onClickShare = function() {
if (this.settlementData && this.settlementData.fbshare) {
var e = this.settlementData.fbshare[cc.vv.UserManager.uid];
if (e) {
this.shareBtnNode.getComponent(cc.Button).interactable = !1;
var t = null, i = facade.dm.tableInfo.gameId, n = cc.vv.i18nManager.getLanguage();
1 == e.type ? t = "http://inter.sekiengame.com/fb/win/total/?uid=" + cc.vv.UserManager.uid + "&lang=" + n + "&gameid=" + i : 2 == e.type ? t = "http://inter.sekiengame.com/fb/win/cumulative/?uid=" + cc.vv.UserManager.uid + "&lang=" + n + "&gameid=" + i : 3 == e.type && (t = "http://inter.sekiengame.com/fb/win/card/?uid=" + cc.vv.UserManager.uid + "&lang=" + n + "&gameid=" + i);
t && Global.isNative() && cc.vv.FBMgr.fbShareWeb(t, null, "", function() {
cc.vv.NetManager.send({
c: MsgId.GAME_SHARE_REWARD,
gameid: i,
cat: e.type
});
});
}
}
};
t.prototype.removeBtnListener = function() {
this.btn_back && this.btn_back.node.off("click");
this.btn_next && this.btn_next.node.off("click");
};
t.prototype.addBtnListener = function() {
var e = this;
this.btn_back && this.btn_back.node.on("click", function() {
e.removeBtnListener();
if (e.getDm().tableStatus.isDismiss) facade.gotoHall(); else {
facade.dm.msgWriter.sendExit();
e.close(n.GO_BACK);
}
});
if (this.getDm().tableStatus.isDismiss) this.btn_next && (this.btn_next.node.active = !1); else if (this.btn_next) {
this.btn_next.node.active = !0;
this.btn_next.node.on("click", function() {
e.btn_next.node.off("click");
e.close(n.MANUAL_NEXT);
facade.dm.msgWriter.sendReady();
});
this.btn_next.node.active = !0;
var t = 6;
this.settlementData.timeout && (t = this.settlementData.timeout - 6);
t = t > 0 ? t : 5;
this.showAutoNextRoundTip(t);
}
};
t.prototype.showAutoNextRoundTip = function(e) {
void 0 === e && (e = 6);
this.autoNextRoundTime = e;
this.btn_next.node.active = !0;
if (this.autoNextRoundTipLabel) {
this.autoNextRoundTipLabel.unscheduleAllCallbacks();
this.tick();
}
};
t.prototype.close = function(e) {
void 0 === e && (e = 0);
this.clear();
this.callBack && this.callBack({
type: e,
restTime: this.autoNextRoundTime
});
};
t.prototype.clear = function() {
this.isOpen = !1;
this.removeBtnListener();
this.removeTick();
this.btn_layout && this.btn_layout.stopAllActions();
this.panel && (this.panel.active = !1);
this.spine_effect_win && (this.spine_effect_win.node.active = !1);
};
t.prototype.removeTick = function() {
this.autoNextRoundTipLabel && this.autoNextRoundTipLabel.unscheduleAllCallbacks();
};
t.prototype.tick = function() {
var e = this, t = this.autoNextRoundTipLabel;
t.string = __(___("NEXT"), "(" + this.autoNextRoundTime + ")");
if (this.autoNextRoundTime > 0) t.scheduleOnce(function() {
e.autoNextRoundTime--;
e.tick();
}, 1); else {
this.getDm().tableInfo.roomType == a.PBRoomType.friend && facade.dm.msgWriter.sendReady();
this.close(n.AUTO_NEXT);
}
};
t.prototype.updateView = function() {};
t.prototype.showButton = function() {
this.btn_layout.active = !0;
this.addBtnListener();
};
t.prototype.showWinOrLoseFlag = function(e) {
return __awaiter(this, void 0, void 0, function() {
var t;
return __generator(this, function() {
if (e) {
this.spine_effect_win.node.active = !0;
this.spine_effect_win.setAnimation(0, "animation", !0);
facade.soundMgr.playBaseEffect("win");
} else {
this.spine_effect_win.node.active = !1;
facade.soundMgr.playBaseEffect("lose");
Global.dispatchEvent("USER_PIGGY_BANK_HINT");
}
this.flagLose.active = !e;
this.flagWin.active = e;
if (e) {
(t = cc.find("spine", this.flagWin).getComponent(sp.Skeleton)).setAnimation(0, "ani_mbdc", !1);
t.addAnimation(0, "ani_lizioop", !0);
} else {
(t = cc.find("spine", this.flagLose).getComponent(sp.Skeleton)).setAnimation(0, "ani_mbdc", !1);
t.addAnimation(0, "ani_lizioop", !0);
}
return [ 2 ];
});
});
};
t.prototype.getDm = function() {
return facade.dm;
};
t.prototype.getFacade = function() {
return facade;
};
__decorate([ s(cc.Node) ], t.prototype, "panel", void 0);
__decorate([ s(cc.Node) ], t.prototype, "flagLose", void 0);
__decorate([ s(cc.Node) ], t.prototype, "flagWin", void 0);
__decorate([ s(cc.Node) ], t.prototype, "btn_layout", void 0);
__decorate([ s(cc.Button) ], t.prototype, "btn_back", void 0);
__decorate([ s(cc.Button) ], t.prototype, "btn_next", void 0);
__decorate([ s(sp.Skeleton) ], t.prototype, "spine_effect_win", void 0);
__decorate([ s(cc.Label) ], t.prototype, "autoNextRoundTipLabel", void 0);
return __decorate([ c ], t);
}(cc.Component);
i.PBTotalSettlement = r;
cc._RF.pop();
}, {
"../../../PokerBase/scripts/PBCommonData": "PBCommonData"
} ],
PBTrickRoundCards: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "94169qMQXlHfZPad3UqB69w", "PBTrickRoundCards");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBTrickRoundCards = void 0;
var n = e("../card/PBCardItem"), a = cc._decorator, o = a.ccclass, c = a.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.panel = null;
t.cards = [];
return t;
}
t.prototype.onLoad = function() {
this.hide();
this.node.addComponent("EventListenerCmp").registerEvent("SWITCH_ROOM_CARD_RECORD", this.SWITCH_ROOM_CARD_RECORD, this);
};
t.prototype.SWITCH_ROOM_CARD_RECORD = function(e) {
this.node.active = e.detail;
};
t.prototype.hide = function() {
this.cards && this.cards.forEach(function(e) {
e && e.cardBack && (e.cardBack.node.active = !0);
});
};
t.prototype.getAllCards = function() {
return this.cards;
};
t.prototype.show = function(e, t) {
void 0 === t && (t = 0);
if (!e || e.length < 1 || e.length != this.cards.length) this.hide(); else {
this.panel.active = !0;
for (var i = this.cards.length, n = i - 1; n >= 0; n--) {
t < 0 && (t = i - 1);
var a = e[n], o = this.cards[t];
if (a) if (-1 === a) {
o.node.active = !1;
o.cardBack.node.active = !1;
} else {
o.node.active = !0;
o.cardBack.node.active = !1;
o.bind(a);
} else {
o.node.active = !0;
o.cardBack.node.active = !0;
}
t--;
}
}
};
__decorate([ c(cc.Node) ], t.prototype, "panel", void 0);
__decorate([ c([ n.PBCardItem ]) ], t.prototype, "cards", void 0);
return __decorate([ o ], t);
}(cc.Component);
i.PBTrickRoundCards = s;
cc._RF.pop();
}, {
"../card/PBCardItem": "PBCardItem"
} ],
PBUserInfoCmp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6dabd8L9HdB6r8TD2ChavEJ", "PBUserInfoCmp");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBUserInfoCmp = void 0;
var n = e("../../../BalootClient/game_common/common_cmp/ImgSwitchCmpTS"), a = e("../../../BalootClient/game_common/common_cmp/NetImg"), o = e("../../../BalootClient/game_common/common_cmp/UserAvatar"), c = e("../PBLogic"), s = cc._decorator, r = s.ccclass, l = (s.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label_name = null;
t.icon_node = null;
t.level_node = null;
t.coin_node = null;
t.rp_node = null;
t.tips_ready_ok = null;
t.userAvatar = null;
t.timeTip = null;
t.timeProgress = null;
t.timeTw = null;
t.isSelf = !1;
t.warningCallback = null;
t._time = 0;
t.uname = "";
return t;
}
t.prototype.onLoad = function() {
this.label_name = this.node.getChildByName("label_name").getComponent(cc.Label);
this.icon_node = this.node.getChildByName("head_icon");
this.icon_node.data = {
scale: this.icon_node.scale
};
this.level_node = this.node.getChildByName("level_node");
this.coin_node = this.node.getChildByName("coin_node");
this.rp_node = this.node.getChildByName("rp_node");
this.tips_ready_ok = this.node.getChildByName("tips_ready_ok");
this.tips_ready_ok && (this.tips_ready_ok.active = !1);
this.userAvatar = this.icon_node.getComponent(o.default);
this.timeTip = cc.find("timer_tip", this.icon_node);
this.timeProgress = cc.find("progress", this.timeTip).getComponent(cc.ProgressBar);
this.timeTip.active = !1;
this.rp_node && (this.rp_node.active = !1);
};
t.prototype.show = function(e) {
if (e) {
this.uname = e.uinfo.uname;
this.node.active = !0;
this.label_name.string = e.uinfo.uname;
this.userAvatar.updataAvatar({
uid: e.uid,
icon: e.uinfo.icon,
avatarFrame: e.avatarFrame
});
this.updateExp(e);
this.updateCoin(e);
this.updateRp(e);
this.feature(e);
cc.find("label_bg", this.node).height = 89;
this.rp_node && (this.rp_node.active = !1);
if (Global.isAndroidReview) {
this.coin_node.opacity = 0;
this.rp_node.opacity = 0;
cc.find("label_bg", this.node).height = 45;
}
} else this.node.active = !1;
};
t.prototype.updateCoin = function(e) {
if (cc.vv.gameData && e && this.coin_node) {
var t = cc.find("label", this.coin_node).getComponent(cc.Label);
Global.isYDApp() ? t.string = Global.FormatNumToComma(e.coin) : t.string = Global.convertNumToShort(e.coin);
}
};
t.prototype.addCoin = function(e, t) {
var i = cc.find("label", this.coin_node).getComponent(cc.Label);
cc.tween(this.coin_node).to(.5, {
scale: 1.5
}, {
easing: "backOut"
}).to(1, {
scale: 1
}).start();
Global.doRoallNumEff(i.node, e, t, 1, function() {
Global.isYDApp() ? i.string = Global.FormatNumToComma(t) : i.string = Global.convertNumToShort(t);
}, null, 0, !1, !1, !1);
};
t.prototype.updateExp = function(e) {
e && this.level_node && (cc.find("label", this.level_node).getComponent(cc.Label).string = e.currLevel.toString());
};
t.prototype.updateRp = function(e) {
e && this.rp_node && (cc.find("label", this.rp_node).getComponent(cc.Label).string = Global.FormatNumToComma(e.rpScore));
};
t.prototype.showReadyTip = function(e, t) {
void 0 === e && (e = !0);
void 0 === t && (t = !0);
if (this.tips_ready_ok) if (e && t) {
this.tips_ready_ok.active = !0;
this.tips_ready_ok.stopAllActions();
this.tips_ready_ok.scale = 2;
this.tips_ready_ok.opacity = 1;
cc.tween(this.tips_ready_ok).to(.2, {
scale: 1,
opacity: 255
}).start();
} else this.tips_ready_ok.active = e;
};
t.prototype.feature = function(e) {
var t = cc.find("feature_node", this.node), i = cc.find("league", t), o = cc.vv.UserConfig.getRank(e.leaguePoints);
i.active = !0;
Global.isSingle() && (i.active = !1);
var c = cc.find("icon_medal", i), s = c.getComponent(a.default);
if (s) s.url = "icon_league_big_" + o.stage; else {
var r = c.getComponent(n.default);
r && r.setIndex(o.stage - 1);
}
var l = cc.find("vip", t);
if (e.svip > 0 && !Global.isSingle()) {
l.active = !0;
l.y = 0;
var d = l.getChildByName("icon");
d.getComponent(a.default).url = "vip_" + e.svip;
d.scale = 1;
d.width = d.height = 80;
} else l.active = !1;
};
t.prototype.showAutoHost = function(e) {
this.node.getChildByName("robot") && (this.node.getChildByName("robot").active = e);
};
t.prototype._tick = function() {
var e = this, t = cc.find("label", this.timeTip);
if (t) {
t.getComponent(cc.Label).string = this._time + "";
t.scale = .5;
cc.tween(t).to(.2, {
scale: 1
}, {
easing: "backOut"
}).start();
this._time > 3 ? t.color = cc.color(15, 255, 0) : t.color = cc.color(254, 59, 59);
}
this.scheduleOnce(function() {
e._time--;
if (e._time > 0) {
e._tick();
if (e.isSelf && e._time <= e.getWarningTime()) {
c.facade.soundMgr.playBaseEffect("clock_warning");
if (e.warningCallback) {
e.warningCallback();
e.warningCallback = null;
}
}
} else e._time = 0;
}, 1);
};
t.prototype.setWarningCallback = function(e) {
this.warningCallback = e;
};
t.prototype.cleanWarningCallback = function() {
this.warningCallback = null;
};
t.prototype.getWarningTime = function() {
var e = c.facade.dm.tableInfo.turnTime;
return e < 15 ? 3 : e < 30 ? 5 : 8;
};
t.prototype.startTimeTip = function(e) {
var t = this;
void 0 === e && (e = 8);
this.cleanWarningCallback();
this.unscheduleAllCallbacks();
if (this.timeTw) {
this.timeTw.stop();
this.timeTw = null;
}
if (this.isSelf) {
c.facade.soundMgr.playBaseEffect("my_turn");
cc.vv.UserManager.getSkateStatus() && 0 == c.facade.dm.tableInfo.isViewer && cc.vv.PlatformApiMgr.deviceShock && cc.vv.PlatformApiMgr.deviceShock();
}
this._time = e;
this._tick();
this.icon_node.stopAllActions();
this.icon_node.scale = 1;
var i = this.icon_node.data;
cc.tween(this.icon_node).to(.2, {
scale: 1.2 * i.scale
}).to(.2, {
scale: i.scale
}).start();
this.timeTip.active = !0;
cc.find("progress", this.timeTip).getComponent(cc.ProgressBar).progress = 1;
this.timeTw = cc.tween(this).to(e, {
progress: 0
}).call(function() {
t.timeTw = null;
}).start();
};
Object.defineProperty(t.prototype, "progress", {
get: function() {
return this.timeProgress.progress;
},
set: function(e) {
this.timeProgress.progress = e;
var t = cc.find("effect", this.timeTip);
if (t) {
t.angle = 360 * e;
if (!t.isPlaySp) {
t.isPlaySp = !0;
cc.find("lizi", t).getComponent(sp.Skeleton).setAnimation(0, "animation", !0);
}
}
e <= 0 && this.stopTimeTip();
},
enumerable: !1,
configurable: !0
});
t.prototype.stopTimeTip = function() {
if (this.timeTw) {
this.timeTw.stop();
this.timeTw = null;
}
this._time = 0;
this.icon_node.stopAllActions();
this.icon_node.scale = 1;
this.timeTip.active = !1;
this.unscheduleAllCallbacks();
};
t.prototype.hideAvatarName = function(e, t) {
void 0 === t && (t = !0);
cc.find("head_icon", this.node).active = !e;
Global.isYDApp() && this.coin_node && (this.coin_node.active = !e && t);
this.label_name.string = e ? "unknown" : this.uname;
var i = cc.find("default_unknown", this.node);
i && (i.active = e);
};
t.prototype.showWather = function(e) {
var t = cc.find("node_watcher_head", this.node);
t && (t.active = e);
};
return __decorate([ r ], t);
}(cc.Component));
i.PBUserInfoCmp = l;
cc._RF.pop();
}, {
"../../../BalootClient/game_common/common_cmp/ImgSwitchCmpTS": "ImgSwitchCmpTS",
"../../../BalootClient/game_common/common_cmp/NetImg": "NetImg",
"../../../BalootClient/game_common/common_cmp/UserAvatar": "UserAvatar",
"../PBLogic": "PBLogic"
} ],
PBUtils: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "974efpVf3REl736VGwXYpxF", "PBUtils");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.showErrorInfo = void 0;
i.showErrorInfo = function(e) {
cc.log("#error code#", e);
var t = cc.vv.UserConfig.spcode2String(e);
t && cc.vv.FloatTip.show(t, !0);
};
cc._RF.pop();
}, {} ],
PBViewerList: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "69cf5MSpgtLDJ0AzNpgvidH", "PBViewerList");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBViewerList = void 0;
var n = e("../../../BalootClient/game_common/common_cmp/UserAvatar"), a = cc._decorator, o = a.ccclass, c = a.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.content = null;
t.head_icon = null;
t.scrollView = null;
return t;
}
t.prototype.onLoad = function() {
this.hide();
};
t.prototype.hide = function() {
this.node.active = !1;
this.content.removeAllChildren();
};
t.prototype.show = function(e) {
var t = this;
this.node.active = !0;
this.content.removeAllChildren();
for (var i = 0, a = e; i < a.length; i++) {
var o = a[i];
if (!(o.seatId > 0)) {
var c = cc.instantiate(this.head_icon);
c.active = !0;
c.parent = this.content;
c.y = 0;
c.getComponent(n.default).updataAvatar({
uid: o.uid,
icon: o.uinfo.icon,
avatarFrame: o.avatarFrame
});
}
}
this.scheduleOnce(function() {
t.scrollView.setContentPosition(cc.v2(0, 0));
}, 0);
};
t.prototype.updateList = function(e) {
this.content.removeAllChildren();
this.show(e);
};
__decorate([ c(cc.Node) ], t.prototype, "content", void 0);
__decorate([ c(cc.Node) ], t.prototype, "head_icon", void 0);
__decorate([ c(cc.ScrollView) ], t.prototype, "scrollView", void 0);
return __decorate([ o ], t);
}(cc.Component);
i.PBViewerList = s;
cc._RF.pop();
}, {
"../../../BalootClient/game_common/common_cmp/UserAvatar": "UserAvatar"
} ],
PBVoiceCtrl: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a1357o9G1ZHOol0ISOfUoM1", "PBVoiceCtrl");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PBVoiceCtrl = void 0;
var n = e("./PBLogic"), a = cc._decorator, o = a.ccclass, c = (a.property, function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.updateAll = function() {
for (var e = 0, t = n.facade.dm.playersDm.seatedPlayersInfo; e < t.length; e++) {
var i = t[e];
if (i) {
var a = n.facade.playersCtrl.getPlayerByUid(i.uid);
if (a) {
a.voiceToggle.mic = i.mic;
a.voiceToggle.joinChat = i.joinChat;
a.voiceToggle.updateView();
}
}
}
};
t.prototype.R_VOICE_CHANGE = function(e) {
if (e.users) for (var t = 0, i = e.users; t < i.length; t++) {
var a = i[t], o = n.facade.playersCtrl.getPlayerByUid(a.uid);
if (o) {
o.voiceToggle.mic = a.mic;
o.voiceToggle.joinChat = a.joinChat;
o.voiceToggle.updateView();
}
}
};
t.prototype.joinVoiceRoom = function() {
if (n.facade.dm.tableInfo.isOpenVoice) {
if (!n.facade.dm.playersDm.selfInfo) return;
var e = {
token: "" + n.facade.dm.playersDm.selfInfo.token,
cname: "" + n.facade.dm.deskInfo.deskid,
uid: "" + cc.vv.UserManager.uid,
otp: ""
};
cc.vv.PlatformApiMgr.LevelVoiceChannel();
console.log("126043  #init voice#", e);
var t = cc.vv.PlatformApiMgr.checkSelfPermission();
cc.log("#checkSelfPermission#", t);
t && cc.vv.PlatformApiMgr.JoinVoiceChannel(JSON.stringify(e), this._onSdkMsg.bind(this));
}
};
t.prototype.levelVoiceRoom = function() {
console.log("#126043 exit voice#");
try {
n.facade && n.facade.dm && n.facade.dm.tableInfo.isOpenVoice && cc.vv.PlatformApiMgr.LevelVoiceChannel();
} catch (e) {
cc.log(e);
}
};
t.prototype.onDestroy = function() {
this.levelVoiceRoom();
};
t.prototype._onSdkMsg = function(e) {
try {
if (e) {
switch (parseInt(e.result)) {
case 0:
cc.vv.NetManager.send({
c: MsgId.REQ_REPORT_STATISTICS,
act: ReportConfig.VOICE_ERORR,
ext: e.data
});
break;

case 1:
JSON.parse(e.data);
break;

case 2:
var t = JSON.parse(e.data).uid || n.facade.dm.playersDm.selfInfo.uid, i = n.facade.dm.playersDm.getPlayerByUid(t);
i && (n.facade.playersCtrl.getPlayerByPosition(i.position).voiceToggle.canSaying = !0);
}
console.log("#_onSdkMsg#", JSON.stringify(e));
}
} catch (e) {
console.log(e);
}
};
t.prototype.muteSelfVoice = function(e) {
console.log("#muteSelfVoice#", e);
cc.vv.PlatformApiMgr.SetVoiceChannelLocalMute(e ? "1" : "0");
};
t.prototype.muteOtherVoice = function(e, t) {
console.log("#muteOtherVoice#", e, t);
var i = {
uid: "" + e,
mute: "" + (t ? 1 : 0)
};
cc.vv.PlatformApiMgr.SetVoiceChannelRemteBute(JSON.stringify(i));
};
return __decorate([ o ], t);
}(cc.Component));
i.PBVoiceCtrl = c;
cc._RF.pop();
}, {
"./PBLogic": "PBLogic"
} ],
PH_NetCacheMgr: [ function(e, t) {
"use strict";
cc._RF.push(t, "2f34bok2+BMgoslbvYzj3Z4", "PH_NetCacheMgr");
cc.Class({
extends: e("NetCacheMgr"),
properties: {},
_initPopListMsg: function() {
this._popList = [];
this._popList.push(MsgId.PURCHASE_GET_ORDER);
Global.isYDApp() || this._popList.push(MsgId.DIAMOND_TO_COIN);
this._popList.push(MsgId.REQ_BUY_SKIN_SHOP_ITEM);
this._popList.push(MsgId.FRIEND_ROOM_CREATE);
this._popList.push(MsgId.VIP_FAST_JOIN);
this._popList.push(MsgId.UPDATE_USER_INFO);
this._popList.push(MsgId.GAME_ENTER_MATCH);
this._popList.push(MsgId.EVENT_VIP_SIGN_REWARD);
this._popList.push(MsgId.EVENT_SIGN_REWARD);
this._popList.push(MsgId.EVENT_ONLINE_WHEEL_RESULT);
this._popList.push(MsgId.EVENT_TASK_REWARD);
this._popList.push(MsgId.EVENT_TASK_MAIN_REWARD);
this._popList.push(MsgId.CHAT_SEND_MSG);
this._popList.push(MsgId.FRIEND_ROOM_JOIN);
this._popList.push(MsgId.USER_GIFT_SEND);
},
isPlayingGame: function() {
return !!cc.vv.gameData;
}
});
cc._RF.pop();
}, {
NetCacheMgr: "NetCacheMgr"
} ],
PageHall_Ani: [ function(e, t) {
"use strict";
cc._RF.push(t, "ad67cl0d8FD5KXlIrjcJeF4", "PageHall_Ani");
cc.Class({
extends: cc.Component,
properties: {
_org_top_y: null,
_org_diamond_x: null,
_org_coin_x: null,
_org_nick_x: null,
_org_vip_x: null,
_org_head_scale: null,
_org_rank_x: null,
_org_bg_scale: null,
node_top: cc.Node,
node_bg: cc.Node,
node_mid: cc.Node,
node_rank: cc.Node,
node_close: cc.Node
},
onLoad: function() {
this._initOrg();
},
onEnable: function() {
this.showUIAni();
},
showUIAni: function() {
var e = this.node_top;
if (e) {
var t = cc.find("bg", e);
if (t) {
var i = t.y;
t.y += 200;
cc.tween(t).to(.3, {
y: i,
scale: 1
}, {
easing: "quintOut"
}).start();
}
if (this._org_head_scale) {
var n = cc.find("head", e);
if (n) {
n.scale = this._org_head_scale + .1;
cc.tween(n).delay(.3).to(.1, {
scale: this._org_head_scale
}).start();
}
}
}
var a = cc.find("BtnLayout", this.node);
if (a) for (var o = a.children, c = 0; c < o.length; c++) {
var s = o[c];
if (s.active) {
s.opacity = 0;
cc.tween(s).delay(.05 * c).to(.1, {
opacity: 255
}).start();
}
}
var r = this.node_rank || cc.find("SimpleRank", this.node);
if (r && this._org_rank_x) {
r.x = this._org_rank_x + 100;
cc.tween(r).to(.4, {
x: this._org_rank_x
}, {
easing: "backOut"
}).start();
}
var l = this.node_close || cc.find("SimpleRank", this.node);
if (l && this._org_close_x) {
l.x = this._org_close_x + 100;
cc.tween(l).to(.5, {
x: this._org_close_x
}, {
easing: "backOut"
}).start();
}
var d = this.node_mid || cc.find("Games", this.node);
if (d) {
d.scale = 1.05;
cc.tween(d).to(.8, {
scale: 1
}, {
easing: "quintOut"
}).start();
}
var h = this.node_bg || cc.find("bg_img", this.node);
if (h && this._org_bg_scale) {
var _ = h.getComponent(cc.Widget);
_.enabled = !1;
h.scale = this._org_bg_scale + .05;
cc.tween(h).to(.8, {
scale: this._org_bg_scale
}, {
easing: "quintOut"
}).call(function() {
_.enabled = !0;
}).start();
}
},
_initOrg: function() {
var e = this.node_top || cc.find("Canvas/UserinfoBar");
if (e) {
if (!this._org_top_y) {
this.reWidgetNode(e);
this._org_top_y = e.y;
}
var t = cc.find("coin", e);
this._org_coin_x || (this._org_coin_x = t.x);
var i = cc.find("vip", e);
this._org_vip_x || (this._org_vip_x = i.x);
var n = cc.find("head", e);
n && !this._org_head_scale && (this._org_head_scale = n.scale);
}
var a = this.node_rank || cc.find("SimpleRank", this.node);
if (a && !this._org_rank_x) {
this.reWidgetNode(a);
this._org_rank_x = a.x;
}
if (this.node_close) {
this.reWidgetNode(this.node_close);
this._org_close_x = this.node_close.x;
}
var o = this.node_bg || cc.find("bg_img", this.node);
if (o && !this._org_bg_scale) {
this.reWidgetNode(o);
this._org_bg_scale = o.scale;
}
},
reWidgetNode: function(e) {
var t = e.getComponent(cc.Widget);
t && t.updateAlignment();
}
});
cc._RF.pop();
}, {} ],
PageRoomBaloot: [ function(e, t) {
"use strict";
cc._RF.push(t, "e3c94pmXIlMJIWMcL030SAl", "PageRoomBaloot");
cc.Class({
extends: e("BaseRoomCpt"),
properties: {
seatNodeList: [ cc.Node ],
_noHost: !1,
noHost: {
set: function(e) {
this._noHost = e;
this.updateView && this.updateView();
},
get: function() {
return this._noHost;
}
}
},
onOpen: function(e) {
e = e || {};
this.netListener.registerMsg(MsgId.ONLINE_START_MATCH_ROOM, this.ONLINE_START_MATCH_ROOM, this, !1);
this.netListener.registerMsg(MsgId.INVITATION_RESULT, this.INVITATION_RESULT, this, !1);
this.netListener.registerMsg(MsgId.QUIT_TEAM, this.QUIT_TEAM, this, !1);
cc.vv.NetManager.send({
c: MsgId.ONLINE_ENTER_LONLINE,
gameid: this.gameid
}, !0);
this.friendInfo = e.friendInfo;
e.friendInfo ? this.noHost = !0 : this.noHost = !1;
this.updateSeatView();
},
onClose: function() {
this.netListener.clear();
cc.vv.NetManager.send({
c: MsgId.FRIEND_ROOM_LEAVE,
gameid: this.gameid,
roomtype: 2
}, !0);
},
onClickRoomItem: function(e) {
if (!this.isLoading && !this.noHost) if (cc.vv.UserManager.coin < e.entry) cc.vv.AlertView.showTips(___("您的金币不足"), function() {
cc.vv.EventManager.emit("HALL_OPEN_SHOP", {
open: 1
});
}); else {
var t = 0;
this.friendInfo && (t = this.friendInfo.uid);
this.isLoading = !0;
StatisticsMgr.reqReport(ReportConfig.ONLINE_START_GAME, null, this.gameid);
StatisticsMgr.reqReportNow(ReportConfig.ENTER_GAME, this.gameid, this.gameid);
cc.vv.NetManager.send({
c: MsgId.GAME_ENTER_MATCH,
frienduid: t,
ssid: e.ssid
}, !0);
}
},
INVITATION_RESULT: function(e) {
this.friendInfo = e.friend || e;
this.updateSeatView();
},
QUIT_TEAM: function() {
this.noHost = !1;
this.friendInfo = null;
this.updateSeatView();
this.updateView();
},
onClickInvite: function() {
Global.dispatchEvent("INVITE_FRIEND_MATCH_GAME", {
moduleType: 1,
entryCoin: this.entry,
gameid: this.gameid
});
},
updateSeatView: function() {
for (var e = [ {
usericon: cc.vv.UserManager.userIcon,
playername: cc.vv.UserManager.nickName,
uid: cc.vv.UserManager.uid,
avatarframe: cc.vv.UserManager.avatarframe
}, this.friendInfo ], t = 0; t < this.seatNodeList.length; t++) {
var i = this.seatNodeList[t], n = e[t];
if (n) {
cc.find("nouser", i).active = !1;
cc.find("user", i).active = !0;
cc.find("user/name", i).getComponent(cc.Label).string = n.playername;
cc.find("user/id", i).getComponent(cc.Label).string = __("ID", ":", n.uid);
cc.find("user/UserHead", i).getComponent("HeadCmp").setHead(n.uid, n.usericon);
cc.find("user/UserHead", i).getComponent("HeadCmp").setAvatarFrame(n.avatarframe);
} else {
cc.find("nouser", i).active = !0;
cc.find("user", i).active = !1;
}
}
}
});
cc._RF.pop();
}, {
BaseRoomCpt: "BaseRoomCpt"
} ],
PageRoomHand: [ function(e, t) {
"use strict";
cc._RF.push(t, "f860eurmt1IiLEqhrwIiuy2", "PageRoomHand");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
cc.Class({
extends: e("BaseRoomCpt"),
properties: {
toggleContainer: cc.ToggleContainer
},
onOpen: function() {
this.netListener.registerMsg(MsgId.GAME_ENTER_MATCH, this.GAME_ENTER_MATCH, this, !1);
cc.vv.NetManager.send({
c: MsgId.ONLINE_ENTER_LONLINE,
gameid: this.gameid
}, !0);
},
onClose: function() {
this.netListener.clear();
},
onClickRoomItem: function(e) {
if (!this.isLoading) if (cc.vv.UserManager.coin < e.entry) cc.vv.AlertView.showTips(___("您的金币不足"), function() {
cc.vv.EventManager.emit("HALL_OPEN_SHOP", {
open: 1
});
}); else {
for (var t, n = 0, a = i(this.toggleContainer.toggleItems); !(t = a()).done; ) {
var o = t.value;
o.isChecked && (n = [ 0, 100 ][this.toggleContainer.toggleItems.indexOf(o)]);
}
this.isLoading = !0;
StatisticsMgr.reqReport(ReportConfig.ONLINE_START_GAME, null, this.gameid);
StatisticsMgr.reqReportNow(ReportConfig.ENTER_GAME, this.gameid, this.gameid);
cc.vv.NetManager.send({
c: MsgId.GAME_ENTER_MATCH,
frienduid: n,
ssid: e.ssid
}, !0);
}
},
onClickRank: function() {
Global.dispatchEvent("HALL_OPEN_LEAGUE");
}
});
cc._RF.pop();
}, {
BaseRoomCpt: "BaseRoomCpt"
} ],
PageSlots: [ function(e, t) {
"use strict";
cc._RF.push(t, "a3ec5M4AM1AM4pKPgGJ+kTl", "PageSlots");
e("GameIdMgr");
var i = e("List");
cc.Class({
extends: cc.Component,
properties: {
listview: i,
_listData: null,
_lastoffsetY: 0,
_beginoffsetY: 0
},
onLoad: function() {
Global.registerEvent("GAME_LIST_UPDATE", this.GAME_LIST_UPDATE, this);
this.loadSlotHallTop();
},
start: function() {
this.ShowSlots();
},
onClickGoCashHero: function() {},
loadSlotHallTop: function() {
var e = this;
this._loadPrefab("BalootClient/Hall/UserinfoBar", function(t) {
if (cc.isValid(e.node)) {
var i = cc.instantiate(t);
i.active = !0;
i.parent = e.node;
var n = e.node.getComponent("PageHall_Ani");
n && (n.node_top = i);
}
});
},
getGameCfg: function(e) {
for (var t = [ {
id: 541,
vip: -1,
ord: 1,
tag: 2
}, {
id: 635,
vip: -1,
ord: 2
}, {
id: 419,
vip: -1,
ord: 3
}, {
id: 698,
vip: -1,
ord: 4
}, {
id: 696,
vip: -1,
ord: 5
}, {
id: 695,
vip: -1,
ord: 6
}, {
id: 691,
vip: -1,
ord: 7
}, {
id: 699,
vip: -1,
ord: 8
}, {
id: 692,
vip: -1,
ord: 9
}, {
id: 693,
vip: -1,
ord: 10
}, {
id: 697,
vip: -1,
ord: 11
}, {
id: 694,
vip: -1,
ord: 12
} ], i = 0; i < t.length; i++) if (e == t[i].id) return t[i];
},
ShowSlots: function() {
var e = this, t = cc.vv.UserManager.slotsList;
t.sort(function(t, i) {
var n = e.getGameCfg(t.id), a = e.getGameCfg(i.id);
return n.ord - a.ord;
});
for (var i = [], n = !1, a = 0; a < t.length; ++a) {
var o = this.getGameCfg(t[a].id);
if (o) {
if (691 == o.id) continue;
if (o.leader) {
var c = [];
c.push(t[a]);
i.push(c);
n = !0;
} else {
if (!n && i.length > 0 && i[i.length - 1].length < 2) i[i.length - 1].push(t[a]); else {
var s = [];
s.push(t[a]);
i.push(s);
}
n = !1;
}
}
}
this._listData = i;
this.listview.numItems = this._listData.length > 0 ? this._listData.length : 0;
},
_getUnlockSlots: function() {
for (var e = [], t = cc.vv.UserManager.slotsList, i = 0; i < t.length; i++) this.getGameCfg(t[i].id).vip >= cc.vv.UserManager.svip || e.push({
id: t[i].id
});
return e;
},
OnListVRender: function(e, t) {
var i = this._listData[t], n = cc.find("layout/slots_item1", e), a = cc.find("layout/slots_item2", e);
if (1 == i.length) {
n.active = !0;
a.active = !1;
this.ShowItemInfo(n, i[0], t);
} else {
n.active = !0;
a.active = !0;
this.ShowItemInfo(n, i[0], t);
this.ShowItemInfo(a, i[1], t);
}
var o = cc.find("bottom_tip", e);
o && (o.active = t == this._listData.length - 1);
},
ShowItemInfo: function(e, t, i) {
if (t && e) {
var n = e.getComponent("SlotsItem");
n.setUnlockList(this);
var a = this.getGameCfg(t.id);
n.setLockVip(a.vip);
n.SetData(t, i, this._listData.length);
}
},
_loadPrefab: function(e, t) {
cc.loader.loadRes(e, cc.Prefab, function(i, n) {
i ? AppLog.err("未找到资源:" + e) : t(n);
});
},
onEnterGame: function(e) {
var t = e.detail;
cc.vv.SubGameUpdateNode.getComponent("subGameMgr")._delCheckNeedDown(t);
StatisticsMgr.reqReportNow(ReportConfig.ENTER_GAME, t, t);
cc.vv.GameManager.EnterGame(t);
},
GAME_LIST_UPDATE: function() {
this.ShowSlots();
}
});
cc._RF.pop();
}, {
GameIdMgr: "GameIdMgr",
List: "List"
} ],
PayMgrEx: [ function(e, t) {
"use strict";
cc._RF.push(t, "007e7FUvWlJz5q/zyOR/btW", "PayMgrEx");
cc.Class({
extends: e("PayMgr"),
statics: {
registerAllMsg: function() {
cc.vv.NetManager.registerMsg(MsgId.PURCHASE_CHECK_ORDER, this.onRcvMsgCheckOrder.bind(this));
cc.vv.NetManager.registerMsg(MsgId.PURCHASE_GET_ORDER, this.onRcvNetGetChargeOrder, this);
cc.vv.PlatformApiMgr.addCallback(this.paySdkCallback.bind(this), "paySdkCallback");
cc.vv.PlatformApiMgr.addCallback(this.onPaymentErrorCallback.bind(this), "PaymentErrorCallback");
cc.vv.PlatformApiMgr.addCallback(this.queryAllSKUCallback.bind(this), "queryAllSKUCallback");
if (Global.isArabHero()) {
cc.vv.PlatformApiMgr.addCallback(this.onBillingSetupFinished.bind(this), "onBillingSetupFinished");
cc.vv.PlatformApiMgr.addCallback(this.onGooglePayInfoToJS.bind(this), "onGooglePayInfoToJS");
}
},
onPaymentErrorCallback: function(e) {
if ("0" == e.code) {
Global.dispatchEvent(EventId.PAY_RESULT, 0);
cc.vv.LoadingTip.hide(.1, !0);
if (18 == e.errCode) StatisticsMgr.reqReportNow(StatisticsMgr.REQ_USER_CANCEL_PAY); else {
var t = e.msg;
___("Purchase Cancelled");
___("Billing service DisConnected");
___("Unsuccessful Purchase \nUnknown error");
___("Unsuccessful Purchase \nVerification failed");
___("Unsuccessful Purchase \niTunes Store verification failed");
___("Unsuccessful Purchase \nCannot connect to iTunes Store");
___("Unsuccessful Purchase \nThe product cannot be purchased");
if (-1 == t.indexOf("Item is not owned by the user")) {
cc.vv.FloatTip.show(___(t));
cc.vv.LoadingTip.hide(.1, !0);
}
}
} else e.code;
},
reqPurchaseOrder: function(e) {
var t = {
$Revenue: 0,
$CurrName: "SAR",
$TransactionId: 0,
$RoleName: cc.vv.UserManager.getNickName(),
$Vouchers: "0",
$MaterialSlot: "0",
$MaterialName: "0",
$Keywords: e,
$Content: "0",
$PromotionName: "0",
$Medium: "SHOP",
$Source: "0",
$Voucher: "0",
$Class: "0",
$EndDate: cc.sys.now(),
$BeginDate: cc.sys.now(),
$Destination: "0",
$OriginatingPlace: "0",
$PassengersNumber: "0",
$BookingRooms: "0",
$BookingDays: "0"
};
cc.vv.PlatformApiMgr.KoSDKTrackEvent("$StartCheckout", JSON.stringify(t));
var i = cc.vv.UserManager.uid;
cc.vv.PlatformApiMgr.KoSDKTrackEvent("do_order", JSON.stringify({
game_uid: i
}));
(function() {
var t = {
c: MsgId.PURCHASE_GET_ORDER
};
t.id = e;
t.appId = Global.appId;
var i = 0;
Global.isAndroid() ? i = 1 : Global.isIOS() && (i = 2);
cc.sys.isBrowser && (i = 3);
Global.isSingle() && (t.view = 1);
t.platform = i;
t.version = cc.vv.PlatformApiMgr.getAppVersion();
cc.vv.NetManager.send(t);
})();
},
onRcvNetGetChargeOrder: function(e) {
if (200 === e.code) if (cc.sys.isBrowser) {
var t = e.paymentUrl;
window.open(t);
} else {
var i = {};
i.Pid = e.productid;
i.OrderId = e.orderid;
if (Global.IsHuawei()) {
i.rolename = cc.vv.UserManager.getNickName();
i.rolelv = cc.vv.UserManager.getCurLv();
}
cc.vv.PlatformApiMgr.SdkPay(JSON.stringify(i));
this.saveOrderInfo(e.productid, e.orderid);
} else cc.vv.LoadingTip.hide(.1, !0);
},
queryAllSKUByProductids: function(e) {
if (e) {
var t = {};
t.Pids = e;
cc.vv.PlatformApiMgr.SdkQueryAllSKU(JSON.stringify(t));
}
},
sendCheckOrder: function(e) {
cc.vv.LoadingTip.hide(.1, !0);
var t = null;
if (Global.isAndroid()) if ("1" === e.result) {
var i = e.message, n = e.signature, a = e.pid;
t = {
c: MsgId.PURCHASE_CHECK_ORDER
};
e.orderid ? t.orderid = e.orderid : t.orderid = this.getOrderId(a);
t.platform = 1;
t.data = i;
t.sign = n;
} else {
var o = e.errInfo;
cc.vv.FloatTip.show(o);
Global.dispatchEvent(EventId.PAY_RESULT, 0);
} else if (Global.isIOS()) {
var c = e.receipt, s = e.orderid;
(t = {
c: MsgId.PURCHASE_CHECK_ORDER
}).orderid = s;
t.platform = 2;
t.data = c;
t.sign = "";
}
if (t) {
t.appId = Global.appId;
Global.isSingle() && (t.view = 1);
cc.vv.NetManager.send(t);
}
},
sendSDKTrackEvent: function(e) {
if (!Global.isYDApp()) {
var t = "af_purchase";
Global.IsHuawei() && (t = "Purchase_Success");
cc.vv.PlatformApiMgr.KoSDKTrackEvent(t, JSON.stringify({
af_revenue: e,
uid: Global.playerData.uid
}));
}
},
onBillingSetupFinished: function() {
cc.vv && cc.vv.UserManager && cc.vv.UserManager.productids && this.queryAllSKUByProductids(cc.vv.UserManager.productids);
},
onGooglePayInfoToJS: function(e) {
var t = "";
201 == e.code ? t = "开启下单检测调用" : 202 == e.code ? t = 0 == e.info.code ? "SDK下单检测信息成功" : "SDK下单检测,未找到订单信息" : 301 == e.code ? t = "启动独立查询订单信息" : 302 == e.code ? t = 0 == e.info.code ? "独立查询成功" : "独立查询失败:" + e.info.msg : 401 == e.code ? t = "SDK唤起支付调用" : 402 == e.code ? t = 0 == e.info.code ? "SDK开启唤起成功" : "SDK开启唤起失败:" + e.info.msg : 501 == e.code ? t = "SDK支付界面唤起" : 502 == e.code ? t = 0 == e.info.code ? "SDK支付成功" : "SDK支付失败:" + e.info.msg : 601 == e.code ? t = "SDK消费开始" : 602 == e.code && (t = 0 == e.info.code ? "SDK消费成功" : "SDK消费失败:" + e.info.msg);
cc.vv.NetManager.send({
c: MsgId.ORDER_INFO_UPDATE,
orderid: e.purchase.OrderId,
sdkOrderId: e.purchase.sdkOrderId,
stageCode: e.code,
infoCode: e.info.code,
ordMsg: t
});
}
}
});
cc._RF.pop();
}, {
PayMgr: "PayMgr"
} ],
PayMgr: [ function(e, t) {
"use strict";
cc._RF.push(t, "c3e43Zo3DVGQ7TtEvAaCxzg", "PayMgr");
cc.Class({
extends: cc.Component,
statics: {
init: function() {
this.registerAllMsg();
},
registerAllMsg: function() {
cc.vv.NetManager.registerMsg(MsgId.PURCHASE_CHECK_ORDER, this.onRcvMsgCheckOrder.bind(this));
cc.vv.NetManager.registerMsg(MsgId.PURCHASE_GET_ORDER, this.onRcvNetGetChargeOrder, this);
cc.vv.PlatformApiMgr.addCallback(this.paySdkCallback.bind(this), "paySdkCallback");
cc.vv.PlatformApiMgr.addCallback(this.onPaymentErrorCallback.bind(this), "PaymentErrorCallback");
cc.vv.PlatformApiMgr.addCallback(this.queryAllSKUCallback.bind(this), "queryAllSKUCallback");
},
queryAllSKU: function() {
if (Global.PID_CFG) {
var e = {};
if (Global.isAndroid()) {
if (Global.IsHuawei()) {
var t = cc.vv.UserManager.logintype == Global.LoginType.HUAWEI, i = Global.PID_CFG["huawei" + Global.appId] || Global.PID_CFG.huawei;
if (!t || !i) return;
e.Pids = i;
}
e.Pids = Global.PID_CFG.google;
} else e.Pids = Global.PID_CFG.ios;
cc.vv.PlatformApiMgr.SdkQueryAllSKU(JSON.stringify(e));
}
},
paySdkCallback: function(e) {
cc.log("支付成功回调服务端:" + JSON.stringify(e));
this.sendCheckOrder(e);
},
onPaymentErrorCallback: function(e) {
Global.dispatchEvent(EventId.PAY_RESULT, 0);
cc.vv.LoadingTip.hide(.1, !0);
if ("0" == e.code) if (18 == e.errCode) StatisticsMgr.reqReport(StatisticsMgr.REQ_USER_CANCEL_PAY); else {
var t = e.msg;
if (-1 == t.indexOf("Item is not owned by the user")) {
cc.vv.LoadingTip.hide(.1, !0);
cc.vv.FloatTip.show(t);
}
} else e.code;
},
queryAllSKUCallback: function(e) {
var t = e.price_detail;
t && (this._local_prices = t);
},
getLocalPrice: function(e) {
var t = null;
if (this._local_prices) for (var i = 0; i < this._local_prices.length; i++) {
var n = this._local_prices[i];
if (n.pid == e) {
t = n.price;
break;
}
}
return t;
},
reqPurchaseOrder: function(e) {
cc.vv.LoadingTip.show(cc.vv.Language.Purchasing, !0);
var t = cc.vv.UserManager.uid;
cc.vv.PlatformApiMgr.KoSDKTrackEvent("do_order", JSON.stringify({
game_uid: t
}));
(function() {
var t = {
c: MsgId.PURCHASE_GET_ORDER
};
t.id = e;
t.appId = Global.appId;
var i = 0;
Global.isAndroid() ? i = 1 : Global.isIOS() && (i = 2);
cc.sys.isBrowser && (i = 3);
t.platform = i;
t.version = cc.vv.PlatformApiMgr.getAppVersion();
cc.vv.NetManager.send(t);
})();
},
sendCheckOrder: function(e) {
cc.vv.LoadingTip.hide(.1, !0);
cc.vv.EventManager.emit("SEND_CHECK_ORDER", e);
var t = null;
if (Global.isAndroid()) if ("1" === e.result) {
var i = e.message, n = e.signature, a = e.pid;
(t = {
c: MsgId.PURCHASE_CHECK_ORDER
}).orderid = this.getOrderId(a);
t.platform = 1;
t.data = i;
t.sign = n;
} else {
var o = e.errInfo;
cc.vv.FloatTip.show(o);
Global.dispatchEvent(EventId.PAY_RESULT, 0);
} else if (Global.isIOS()) {
var c = e.receipt, s = e.orderid;
(t = {
c: MsgId.PURCHASE_CHECK_ORDER
}).orderid = s;
t.platform = 2;
t.data = c;
t.sign = "";
}
if (t) {
t.appId = Global.appId;
cc.vv.NetManager.send(t);
}
},
doReplaceOrder: function() {
if (Global.isIOS()) {
cc.vv.PlatformApiMgr.addCallback(this.paySdkReplacementCallback.bind(this), "paySdkReplacementCallback");
cc.vv.PlatformApiMgr.SdkReplaceOrder("abc");
} else if (Global.isAndroid()) {
if (Global.IsHuawei() && !cc.vv.PlatformApiMgr.isHuaweiServerAvailble()) return;
cc.vv.PlatformApiMgr.GPCheckUnComsumerOrder();
}
},
onRcvMsgCheckOrder: function(e) {
if (200 === e.code) {
Global.dispatchEvent(EventId.PAY_RESULT, 1);
if (Global.isIOS()) {
var t = {};
t.Flag = e.flag;
t.OrderId = e.orderid;
cc.vv.PlatformApiMgr.SdkDelOrderCache(JSON.stringify(t));
} else if (Global.isAndroid()) {
var i = e.purchaseTokenData;
Global.IsHuawei() && cc.vv.PlatformApiMgr.doHuaweiPayComsumerOrder(i);
}
this.sendSDKTrackEvent(e.price);
}
},
sendSDKTrackEvent: function(e) {
var t = "af_purchase";
Global.IsHuawei() && (t = "Purchase_Success");
cc.vv.PlatformApiMgr.KoSDKTrackEvent(t, JSON.stringify({
af_revenue: e,
uid: Global.playerData.uid
}));
},
paySdkReplacementCallback: function(e) {
this.sendCheckOrder(e);
},
onRcvNetGetChargeOrder: function(e) {
if (200 === e.code) if (cc.sys.isBrowser) {
var t = e.paymentUrl;
window.open(t);
} else {
cc.vv.LoadingTip.show(cc.vv.Language.Purchasing, !0);
var i = {};
i.Pid = e.productid;
i.OrderId = e.orderid;
if (Global.IsHuawei()) {
i.rolename = cc.vv.UserManager.getNickName();
i.rolelv = cc.vv.UserManager.getCurLv();
}
cc.vv.PlatformApiMgr.SdkPay(JSON.stringify(i));
this.saveOrderInfo(e.productid, e.orderid);
} else cc.vv.LoadingTip.hide(.1, !0);
},
saveOrderInfo: function(e, t) {
var i = JSON.parse(Global.getLocal("PURCHASE_ORDER_DATA", "{}")), n = i[e] || [];
n.push(t);
i[e] = n;
Global.saveLocal("PURCHASE_ORDER_DATA", JSON.stringify(i));
},
getOrderId: function(e) {
var t = JSON.parse(Global.getLocal("PURCHASE_ORDER_DATA", "{}")), i = t[e];
if (i && i.length > 0) {
var n = i.pop();
t[e] = [];
Global.saveLocal("PURCHASE_ORDER_DATA", JSON.stringify(t));
return n;
}
AppLog.err("没有找到" + e + "对应订单");
}
}
});
cc._RF.pop();
}, {} ],
PersonalInfo: [ function(e, t) {
"use strict";
cc._RF.push(t, "069cfitKXdAYJHpHBHgfbWf", "PersonalInfo");
e("../../../../BalootClient/Hall/scripts/LevelCpt").default;
cc.Class({
extends: cc.Component,
properties: {
popupBg: cc.Node,
content: cc.Node,
userHead: cc.Node,
lbl_name: cc.Label,
lbl_level: cc.Label,
lbl_uid: cc.Label,
btnCopy: cc.Button,
sp_vip: cc.Sprite,
vipProgress: cc.ProgressBar,
vipProgressLabel: cc.Label,
sp_gender: cc.Sprite,
btn_head: cc.Button,
btn_change: cc.Button,
btn_name: cc.Button,
btn_gender: cc.Button,
btn_message: cc.Button,
btn_delete: cc.Button,
btn_add: cc.Button,
btn_bagpack: cc.Button,
btn_sendCoin: cc.Button,
gender_0: cc.SpriteFrame,
gender_1: cc.SpriteFrame,
btn_gift: cc.Button,
skinPanelNode: cc.Node,
chatBoxAtlas: cc.SpriteAtlas,
pokerBackAtlas: cc.SpriteAtlas,
skinShopAtlas: cc.SpriteAtlas,
avatarSke: sp.Skeleton,
chatSprite: cc.Sprite,
deskSprite: cc.Sprite,
pokerSprite: cc.Sprite,
pokerFaceSprite: cc.Sprite,
btn_black: cc.Button,
btn_unblack: cc.Button,
btn_report: cc.Button,
expBufferNode: cc.Node,
btn_rule_vip: cc.Button,
btn_rule_balance: cc.Button,
balanceNode: cc.Node,
lbl_balance: cc.Label,
btnKyc: cc.Button,
btnLogout: cc.Button,
infoNode: cc.Node
},
onLoad: function() {
var e = this, t = this.node.addComponent("EventListenerCmp"), i = this.node.addComponent("NetListenerCmp");
t.registerEvent(EventId.UPATE_COINS, this.updateCoin, this);
t.registerEvent("USER_INFO_CHANGE", this.USER_INFO_CHANGE, this);
i.registerMsg(MsgId.PERSIONAL_INFO, this.PERSIONAL_INFO, this);
i.registerMsg(MsgId.SOCIAL_FRIEND_HANDLE_REMOVE, this.SOCIAL_FRIEND_HANDLE_REMOVE, this);
i.registerMsg(MsgId.SOCIAL_FRIEND_HANDLE_ADD, this.SOCIAL_FRIEND_HANDLE_ADD, this);
i.registerMsg(MsgId.UPDATE_USER_INFO, this.UPDATE_USER_INFO, this);
i.registerMsg(MsgId.USE_PROP, this.USE_PROP, this);
this.btn_message.node.on("click", this.onClickMessage, this);
this.btn_delete.node.on("click", this.onClickDelete, this);
this.btn_add.node.on("click", this.onClickAdd, this);
this.btn_head.node.on("click", this.onClickChangeHead, this);
this.btn_change.node.on("click", this.onClickChangeHead, this);
this.btn_name.node.on("click", this.onClickChangeName, this);
this.btn_gender.node.on("click", this.onClickChangeGender, this);
this.btn_gift.node.on("click", this.onClickOpenGiftView, this);
this.btn_report.node.on("click", this.onClickReport, this);
this.btn_black.node.on("click", this.onClickBlock, this);
this.btn_unblack.node.on("click", this.onClickUnBlock, this);
this.btn_rule_vip.node.on("click", this.onClickRuleVip, this);
this.btn_rule_balance.node.on("click", this.onClickRuleBalance, this);
this.btnCopy.node.on("click", this.onClickCopy, this);
this.updateIsSelf();
this.btn_message.node.active = !1;
this.btn_delete.node.active = !1;
this.btn_bagpack.node.active = !1;
this.btn_sendCoin.node.active = !1;
this.btn_add.node.active = !1;
this.skinPanelNode.active = !1;
this.btn_black.node.active = !1;
this.btn_unblack.node.active = !1;
this.btn_report.node.active = !1;
this.btn_rule_vip.node.active = !1;
this.expBufferNode.active = !1;
this.expBufferNode.getComponent("TimeDownCpt").setCallback(function() {
e.expBufferNode.active = !1;
});
this.btnKyc.node.on("click", this.onClickKyc, this);
this.btnLogout.node.on("click", this.onClickLogout, this);
},
onEnable: function() {
Global.isYDApp() || cc.vv.AudioManager.playBgm("BalootClient/BaseRes/", "bgm_userinfo", !0, null, null, !0);
},
onDisable: function() {
Global.isYDApp() || (cc.director.getScene().name == Global.SCENE_NAME.HALL ? cc.vv.AudioManager.playBgm("BalootClient/BaseRes/", "bgm", !0, null, null, !0) : cc.vv.AudioManager.playBgm("PokerBase/audio", "bgm", !0, null, null, !0));
},
init: function(e) {
this.uid = e;
var t = this.node.getComponentInChildren("GameRecordCpt");
t && t.onInit(this.uid);
cc.vv.NetManager.sendAndCache({
c: MsgId.PERSIONAL_INFO,
otheruid: this.uid
}, !0);
StatisticsMgr.reqReport(ReportConfig.USERINFO_OPEN, this.uid);
},
PERSIONAL_INFO: function(e) {
if (200 == e.code && e.playerInfo && e.playerInfo.uid && e.playerInfo.uid == this.uid) {
this.localData = e;
this.updateView(e);
}
},
SOCIAL_FRIEND_HANDLE_REMOVE: function(e) {
200 == e.code && cc.vv.PopupManager.removePopup(this.node);
},
SOCIAL_FRIEND_HANDLE_ADD: function(e) {
200 == e.code && cc.vv.PopupManager.removePopup(this.node);
},
updateCoin: function() {
this.uid == cc.vv.UserManager.uid && (this.lbl_balance.string = Global.FormatNumToComma(cc.vv.UserManager.coin));
},
UPDATE_USER_INFO: function(e) {
if (200 == e.code) {
var t = e.user;
if (this.uid == t.uid) {
if (null != t.playername) {
this.localData.playerInfo.playername = t.playername;
this.lbl_name.string = t.playername;
}
if (null != t.sex) {
this.localData.playerInfo.sex = t.sex;
this.sp_gender.spriteFrame = 0 == t.sex ? this.gender_0 : this.gender_1;
}
if (null != t.usericon) {
this.localData.playerInfo.usericon = t.usericon;
this.userHead.getComponent("HeadCmp").setHead(t.uid, t.usericon);
}
if (null != t.avatarframe) {
this.localData.playerInfo.avatarframe = t.avatarframe;
this.userHead.getComponent("HeadCmp").setAvatarFrame(t.avatarframe);
cc.vv.UserConfig.setAvatarFrame(this.avatarSke, t.avatarframe);
}
null != t.memo && (this.localData.playerInfo.memo = t.memo);
null != t.chatskin && (this.chatSprite.spriteFrame = this.chatBoxAtlas.getSpriteFrame(t.chatskin));
null != t.tableskin && (this.deskSprite.spriteFrame = this.skinShopAtlas.getSpriteFrame(t.tableskin));
null != t.pokerskin && this.pokerBackAtlas && (this.pokerSprite.spriteFrame = this.pokerBackAtlas.getSpriteFrame(t.pokerskin));
null != t.faceskin && (this.pokerFaceSprite.spriteFrame = this.skinShopAtlas.getSpriteFrame(t.faceskin));
}
}
},
USER_INFO_CHANGE: function() {
var e = Global.playerData.uid == this.uid;
this.btn_black.node.active = !e && cc.vv.UserManager.blockuids.indexOf(this.uid) < 0;
this.btn_unblack.node.active = !e && cc.vv.UserManager.blockuids.indexOf(this.uid) >= 0;
},
USE_PROP: function(e) {
200 == e.code && (e.spcode && e.spcode > 0 || 9 == e.category && cc.vv.NetManager.send({
c: MsgId.PERSIONAL_INFO,
otheruid: this.uid
}, !0));
},
updateView: function(e) {
var t = e.playerInfo;
this.updateIsSelf(t);
this.lbl_name.string = t.playername;
this.lbl_uid.string = t.uid;
this.userHead.getComponent("HeadCmp").setHead(t.uid, t.usericon);
this.userHead.getComponent("HeadCmp").setAvatarFrame(t.avatarframe);
this.sp_gender.spriteFrame = 0 == t.sex ? this.gender_0 : this.gender_1;
if (this.uid == cc.vv.UserManager.uid) {
this.sp_vip.node.parent.active = !0;
cc.vv.UserConfig.setVipFrame(this.sp_vip, t.vip);
var i = cc.find("lock", this.sp_vip.node.parent);
i && (i.active = t.vip <= 0);
var n = cc.vv.UserManager.nextvipexp, a = cc.vv.UserManager.svipexp;
this.vipProgress.progress = a / n;
t.vip >= cc.vv.UserConfig.max_vip ? this.vipProgressLabel.string = Global.FormatNumToComma(a) : this.vipProgressLabel.string = Global.FormatNumToComma(a) + "/" + Global.FormatNumToComma(n);
}
if (t.vipendtime) {
cc.find("endtime", this.sp_vip.node.parent).active = !0;
cc.find("endtime/value", this.sp_vip.node.parent).getComponent(cc.Label).string = Global.formatTime("yyyy/MM/dd", t.vipendtime);
} else cc.find("endtime", this.sp_vip.node.parent).active = !1;
cc.vv.UserConfig.totalExp2Level(t.levelexp);
cc.vv.UserConfig.setAvatarFrame(this.avatarSke, cc.vv.UserManager.avatarframe);
this.chatSprite.spriteFrame = this.chatBoxAtlas.getSpriteFrame(cc.vv.UserManager.chatskin);
this.deskSprite.spriteFrame = this.skinShopAtlas.getSpriteFrame(cc.vv.UserManager.tableskin);
this.pokerBackAtlas && (this.pokerSprite.spriteFrame = this.pokerBackAtlas.getSpriteFrame(cc.vv.UserManager.pokerskin));
this.pokerFaceSprite.spriteFrame = this.skinShopAtlas.getSpriteFrame(cc.vv.UserManager.faceskin);
var o = this.node.getComponentInChildren("GameRecordCpt");
o && o.setLikeGame(t.favorite_games || []);
this.updateCoin();
this.expBufferNode.active = t.expbuffertime > 0;
cc.find("buffer", this.expBufferNode).getComponent(cc.Label).string = t.expbuffer + "%";
this.expBufferNode.getComponent("TimeDownCpt").timelife = t.expbuffertime;
},
updateIsSelf: function(e) {
e = e || {};
var t = Global.playerData.uid == e.uid;
this.isSelf = t;
e.friend;
this.popupBg.height = t ? 1435 : 635;
cc.find("logoutNode", this.popupBg).active = t;
this.content.height = t ? 1400 : 600;
this.skinPanelNode.active = t;
this.expBufferNode.active = t;
this.btn_head.enabled = t;
this.btn_change.enabled = t;
this.btn_name.enabled = t;
this.btn_gender.enabled = t;
this.btn_rule_vip.node.active = t;
this.btn_report.node.active = !1;
this.btn_black.node.active = !1;
this.btn_unblack.node.active = !1;
this.btn_gift.node.active = !1;
this.btn_bagpack.node.active = t;
this.btn_sendCoin.node.active = t && cc.vv.UserManager.sender > 0;
this.btn_change.node.active = t;
cc.find("modifyBtn", this.btn_name.node).active = t;
this.infoNode.active = t;
this.btnKyc.node.active = !1;
this.btnLogout.node.active = t;
},
onClickMessage: function() {
StatisticsMgr.reqReport(ReportConfig.SOCIAL_FRIEND_OPEN_CHAT);
cc.vv.EventManager.emit("OPEN_PRIVATE_CHAT_VIEW", {
uid: this.localData.playerInfo.uid
});
cc.vv.PopupManager.removePopup(this.node);
},
onClickAdd: function() {
StatisticsMgr.reqReport(ReportConfig.SOCIAL_FRIEND_ADD);
cc.vv.NetManager.send({
c: MsgId.SOCIAL_FRIEND_HANDLE_ADD,
frienduid: this.localData.playerInfo.uid
});
},
onClickDelete: function() {
StatisticsMgr.reqReport(ReportConfig.SOCIAL_FRIEND_DELETE);
cc.vv.NetManager.send({
c: MsgId.SOCIAL_FRIEND_HANDLE_REMOVE,
frienduids: [ this.uid ]
});
},
onClickChangeName: function() {
var e = this;
cc.vv.PopupManager.addPopup("BalootClient/UserInfo/prefabs/PopupChangeName", {
opacityIn: !0,
onShow: function(t) {
t.getComponent("ChangeUserNameCmp").init(e.localData.playerInfo);
}
});
},
onClickChangeCountry: function() {},
onClickChangeGender: function() {
0 == this.localData.playerInfo.sex ? cc.vv.NetManager.send({
c: MsgId.UPDATE_USER_INFO,
gender: 1
}) : cc.vv.NetManager.send({
c: MsgId.UPDATE_USER_INFO,
gender: 0
});
},
onClickChangeIntroduction: function() {},
onClickChangeHead: function() {
var e = this;
cc.vv.PopupManager.addPopup("BalootClient/UserInfo/prefabs/PopupChangeHead", {
opacityIn: !0,
onShow: function(t) {
t.getComponent("ChangeUserHead").init(e.localData);
}
});
},
onUpdateGiftItem: function(e, t) {
e.getComponent("GiftItemCpt").onInit(cc.vv.UserManager.charmList[t], this.localData.playerInfo, this.localData.charmlist);
},
onClickOpenGiftView: function() {
cc.vv.PopupManager.addPopup("BalootClient/UserInfo/prefabs/PopupGiftList", {
opacityIn: !0
});
},
onClickSelectNan: function() {
cc.vv.NetManager.send({
c: MsgId.UPDATE_USER_INFO,
gender: 1
});
},
onClickSelectNv: function() {
cc.vv.NetManager.send({
c: MsgId.UPDATE_USER_INFO,
gender: 0
});
},
onClickReport: function() {
var e = this;
cc.vv.PopupManager.addPopup("BalootClient/UserInfo/prefabs/PopupReport", {
onShow: function(t) {
t.getComponent("PopupReport").onInit(e.localData.playerInfo);
}
});
},
onClickBlock: function() {
cc.vv.UserManager.blockuids.push(this.uid);
cc.vv.NetManager.send({
c: MsgId.UPDATE_USER_INFO,
blockuids: cc.vv.UserManager.blockuids
});
},
onClickUnBlock: function() {
var e = this, t = cc.vv.UserManager.blockuids.filter(function(t) {
return t != e.uid;
});
cc.vv.NetManager.send({
c: MsgId.UPDATE_USER_INFO,
blockuids: t
});
},
onClickRuleVip: function() {
cc.vv.PopupManager.addPopup("YD_Pro/prefab/yd_vip");
},
onClickRuleBalance: function() {
var e = this.btn_rule_balance.node.convertToWorldSpaceAR(cc.v2(0, -30)), t = cc.find("Canvas").convertToNodeSpaceAR(e);
cc.vv.PopupManager.addPopup("BalootClient/UserInfo/prefabs/PopupBalanceRule", {
noMask: !0,
pos: t,
noCloseHit: !0,
onShow: function(e) {
e.opacity = 0;
e.position = t.add(cc.v2(0, 200));
cc.tween(e).to(.1, {
opacity: 255,
position: t
}).start();
}
});
},
onClickCopy: function() {
cc.vv.FloatTip.show(___("复制成功"));
cc.vv.PlatformApiMgr.Copy(this.localData.playerInfo.uid + "");
},
onClickKyc: function() {
var e = cc.vv.UserManager.kycUrl;
e && cc.vv.PopupManager.showTopWin("YD_Pro/prefab/yd_charge", {
onShow: function(t) {
t.getComponent("yd_charge").setURL(e);
}
});
},
onClickLogout: function() {
Global.reconnect_break = !0;
cc.log("点击了退出登录----看看reconnect", Global.reconnect_break);
cc.vv.NetManager.close();
cc.vv.GameManager.goBackLoginScene();
}
});
cc._RF.pop();
}, {
"../../../../BalootClient/Hall/scripts/LevelCpt": "LevelCpt"
} ],
PhoneBindingView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d1e3aqTuKhCSIkZIAF7qcP0", "PhoneBindingView");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.phoneEditBox = null;
t.optEditBox = null;
t.pwdEditBox = null;
t.pwd2EditBox = null;
t.nameEditBox = null;
t.btn_opt = null;
t.optLabel = null;
t.btn_binding = null;
t._optTime = 0;
return t;
}
Object.defineProperty(t.prototype, "phoneStr", {
get: function() {
return this.phoneEditBox.string.trim();
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "optStr", {
get: function() {
return this.optEditBox.string.trim();
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "pwdStr", {
get: function() {
return this.pwdEditBox.string.trim();
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "pwd2Str", {
get: function() {
return this.pwd2EditBox.string.trim();
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "nameStr", {
get: function() {
return this.nameEditBox.string.trim();
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
this.netListener = this.node.addComponent("NetListenerCmp");
this.netListener.registerMsg(MsgId.BIND_PHONE, this.BIND_PHONE, this);
this.netListener.registerMsg(MsgId.GET_PHONE_CODE, this.GET_PHONE_CODE, this);
this.btn_opt.node.on("click", this.onClickOpt, this);
this.btn_binding.node.on("click", this.onClickBinding, this);
this.phoneEditBox.node.on("text-changed", this.updateView, this);
this.phoneEditBox.node.on("editing-did-ended", this.onPhoneInput, this);
this.optEditBox.node.on("text-changed", this.updateView, this);
this.pwdEditBox.node.on("text-changed", this.updateView, this);
this.pwd2EditBox.node.on("text-changed", this.updateView, this);
this.updateView();
this.optLabel.string = "OTP";
};
t.prototype.updateView = function() {
this.btn_opt.getComponent("ButtonGrayCmp").interactable = this.phoneStr.length > 0 && !this._optTime;
this.btn_binding.getComponent("ButtonGrayCmp").interactable = this.optStr.length > 0 && this.phoneStr.length > 0 && this.pwdStr.length > 0 && this.pwd2Str.length > 0 && this.nameStr.length > 0;
};
t.prototype.GET_PHONE_CODE = function(e) {
var t = this;
if (200 == e.code) {
if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(e.msg, !0); else {
var i = ___("We have send the OTP to your registered mobile number");
e.voice && (i = ___("We will call your registered mobile number to tell the OTP"));
cc.vv.FloatTip.show(i);
}
this._optTime = 120;
this.optLabel.node.getComponent("ReTimer").setReTimer(this._optTime, 1, function() {
t.btn_opt.getComponent("ButtonGrayCmp").interactable = !0;
t.optLabel.string = "OTP";
t._optTime = 0;
}, "OTP(%ss)");
}
};
t.prototype.BIND_PHONE = function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0); else {
cc.vv.FloatTip.show(___("Mobile Number Verified"));
cc.vv.UserManager.isbindphone = 1;
Global.dispatchEvent(EventId.EVENT_BIND_PHONE);
cc.vv.PopupManager.removePopup(this.node);
}
};
t.prototype.onPhoneInput = function() {
cc.vv.PlatformApiMgr.requestContracts();
};
t.prototype.onEditBoxNameChange = function(e) {
for (var t = e.trim(), i = t.split(""), n = [], a = 0; a < i.length; a++) {
var o = i[a].charCodeAt(0);
(32 == o || o >= 65 && o <= 90 || o >= 97 && o <= 122) && n.push(i[a]);
}
t = n.join("");
this.nameEditBox.string = t;
};
t.prototype.onClickOpt = function() {
this.btn_opt.getComponent("ButtonGrayCmp").interactable = !1;
cc.vv.NetManager.send({
c: MsgId.GET_PHONE_CODE,
phone: this.phoneStr
});
};
t.prototype.onClickBinding = function() {
if (this.pwdStr == this.pwd2Str) {
var e = {
c: MsgId.BIND_PHONE,
phone: this.phoneStr,
code: this.optStr,
pwd: this.pwdStr,
name: this.nameStr
};
e.dinfo = this.getDInfo();
cc.vv.NetManager.send(e);
this.postConstact();
} else cc.vv.FloatTip.show(___("Password does not match"));
};
t.prototype.getDInfo = function() {
if (Global.isYDApp() && parseInt(cc.vv.PlatformApiMgr.getAppVersion().split(".").join("")) > 129) {
var e = {}, t = cc.vv.PlatformApiMgr.getGSFId();
t && (t = t.toString());
e.gid = t;
e.sid = cc.vv.PlatformApiMgr.getSimcardid();
e.oper = cc.vv.PlatformApiMgr.getSimOperator();
return JSON.stringify(e);
}
return "";
};
t.prototype.postConstact = function() {
if (Global.isYDApp() && parseInt(cc.vv.PlatformApiMgr.getAppVersion().split(".").join("")) > 129) {
var e = cc.vv.PlatformApiMgr.getContracts(), t = {};
t.uid = Global.playerData.uid;
t.phone = this.phoneStr;
t.cts = e;
t.ddid = Global.getLocal("client_uuid", "");
cc.vv.NetManager.requestHttp("/phone", t, function() {}, Global.apiUrl, "POST");
}
};
__decorate([ o(cc.EditBox) ], t.prototype, "phoneEditBox", void 0);
__decorate([ o(cc.EditBox) ], t.prototype, "optEditBox", void 0);
__decorate([ o(cc.EditBox) ], t.prototype, "pwdEditBox", void 0);
__decorate([ o(cc.EditBox) ], t.prototype, "pwd2EditBox", void 0);
__decorate([ o(cc.EditBox) ], t.prototype, "nameEditBox", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btn_opt", void 0);
__decorate([ o(cc.Label) ], t.prototype, "optLabel", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btn_binding", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
PhoneForgetView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2bef60llz9PUKHo627usXeS", "PhoneForgetView");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.phoneEditBox = null;
t.optEditBox = null;
t.pwdEditBox = null;
t.pwd2EditBox = null;
t.btn_opt = null;
t.optLabel = null;
t.btn_binding = null;
t._optTime = 0;
return t;
}
Object.defineProperty(t.prototype, "phoneStr", {
get: function() {
return this.phoneEditBox.string.trim();
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "optStr", {
get: function() {
return this.optEditBox.string.trim();
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "pwdStr", {
get: function() {
return this.pwdEditBox.string.trim();
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "pwd2Str", {
get: function() {
return this.pwd2EditBox.string.trim();
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
this.btn_opt.node.on("click", this.onClickOpt, this);
this.btn_binding.node.on("click", this.onClickBinding, this);
cc.find("btn_close", this.node).on("click", this.onClickClose, this);
this.phoneEditBox.node.on("editing-did-ended", this.onPhoneInput, this);
this.phoneEditBox.node.on("text-changed", this.updateView, this);
this.optEditBox.node.on("text-changed", this.updateView, this);
this.pwdEditBox.node.on("text-changed", this.updateView, this);
this.pwd2EditBox.node.on("text-changed", this.updateView, this);
this.updateView();
this.optLabel.string = "OTP";
};
t.prototype.updateView = function() {
this.btn_opt.getComponent("ButtonGrayCmp").interactable = this.phoneStr.length > 0 && !this._optTime;
this.btn_binding.getComponent("ButtonGrayCmp").interactable = this.optStr.length > 0 && this.phoneStr.length > 0 && this.pwdStr.length > 0 && this.pwd2Str.length > 0;
};
t.prototype.onClickOpt = function() {
this.btn_opt.getComponent("ButtonGrayCmp").interactable = !1;
var e = this;
cc.log("请求otp-----");
var t = cc.vv.UserManager.uid;
t || (t = Global.playerData.uid);
cc.vv.NetManager.requestHttp("", {
phone: this.phoneStr,
uid: t,
tempKey: "zw101"
}, function(t, i) {
if (t) {
if (0 == i.code) {
var n = i.data;
if (0 == n.code) {
var a = ___("We have send the OTP to your registered mobile number");
n.voice && (a = ___("We will call your registered mobile number to tell the OTP"));
cc.vv.FloatTip.show(a);
} else if (n.msg) cc.vv.FloatTip.show(n.msg); else {
a = ___("Failed to send, please try again later");
cc.vv.FloatTip.show(a);
}
} else cc.vv.FloatTip.show(i.msg);
e._optTime = 120;
e.optLabel.node.getComponent("ReTimer").setReTimer(e._optTime, 1, function() {
e.btn_opt.getComponent("ButtonGrayCmp").interactable = !0;
e.optLabel.string = "OTP";
e._optTime = 0;
}, "OTP(%ss)");
}
}, Global.otpurl, "GET", !1);
};
t.prototype.onClickBinding = function() {
if (this.pwdStr == this.pwd2Str) {
cc.vv.GameManager.reqLogin(this.phoneStr, this.pwdStr, Global.LoginType.PHONE, "", "rest", this.optStr);
this.postConstact();
} else cc.vv.FloatTip.show(___("The two passwords are inconsistent."));
};
t.prototype.onClickClose = function() {
cc.vv.PopupManager.removePopup(this.node);
};
t.prototype.onPhoneInput = function() {
Global.isYDApp() && parseInt(cc.vv.PlatformApiMgr.getAppVersion().split(".").join("")) > 129 && cc.vv.PlatformApiMgr.requestContracts();
};
t.prototype.postConstact = function() {
if (Global.isYDApp() && parseInt(cc.vv.PlatformApiMgr.getAppVersion().split(".").join("")) > 129) {
var e = cc.vv.PlatformApiMgr.getContracts(), t = {};
Global.playerData && (t.uid = Global.playerData.uid);
t.phone = this.phoneStr;
t.cts = e;
t.ddid = Global.getLocal("client_uuid", "");
cc.vv.NetManager.requestHttp("/phone", t, function() {}, Global.apiUrl, "POST");
}
};
__decorate([ o(cc.EditBox) ], t.prototype, "phoneEditBox", void 0);
__decorate([ o(cc.EditBox) ], t.prototype, "optEditBox", void 0);
__decorate([ o(cc.EditBox) ], t.prototype, "pwdEditBox", void 0);
__decorate([ o(cc.EditBox) ], t.prototype, "pwd2EditBox", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btn_opt", void 0);
__decorate([ o(cc.Label) ], t.prototype, "optLabel", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btn_binding", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
PhoneLoginView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8768b6UuHxO0JIhkTZZEBjZ", "PhoneLoginView");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.phoneEditBox = null;
t.pwdEditBox = null;
t.btn_login = null;
t.btn_opt = null;
return t;
}
Object.defineProperty(t.prototype, "phoneStr", {
get: function() {
return this.phoneEditBox.string.trim();
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "pwdStr", {
get: function() {
return this.pwdEditBox.string.trim();
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
this.btn_login.node.on("click", this.onClickLogin, this);
this.phoneEditBox.node.on("editing-did-ended", this.onPhoneInput, this);
this.phoneEditBox.node.on("text-changed", this.onChangeText, this);
this.pwdEditBox.node.on("text-changed", this.onChangeText, this);
Global.registerEvent(EventId.ENTER_LOGIN_FAILE, this.onLoginFail, this);
cc.find("btn_close", this.node).on("click", this.onClickClose, this);
this.btn_opt.node.on("click", this.onClickOpt, this);
this.onChangeText();
};
t.prototype.onChangeText = function() {
this.btn_login.getComponent("ButtonGrayCmp").interactable = this.phoneStr.length > 0 && this.pwdStr.length > 0;
};
t.prototype.onClickLogin = function() {
var e = "", t = cc.find("layout/opt/input", this.node);
t && t.active && (e = t.getComponent(cc.EditBox).string.trim());
e ? cc.vv.GameManager.reqLogin(this.phoneStr, this.pwdStr, Global.LoginType.PHONE, "", "otp", e) : cc.vv.GameManager.reqLogin(this.phoneStr, this.pwdStr, Global.LoginType.PHONE, "", "", "");
Global.reconnect_break = !1;
this.postConstact();
};
t.prototype.onLoginFail = function(e) {
335 == e.detail && this.showOTP(!0);
};
t.prototype.showOTP = function(e) {
cc.find("layout/opt", this.node).active = e;
};
t.prototype.onClickClose = function() {
cc.vv.PopupManager.removePopup(this.node);
};
t.prototype.onClickOpt = function() {
this.btn_opt.getComponent("ButtonGrayCmp").interactable = !1;
var e = this;
cc.vv.NetManager.requestHttp("", {
phone: this.phoneStr
}, function(t, i) {
if (t) {
if (0 == i.code) {
var n = i.data, a = ___("We have send the OTP to your registered mobile number");
n.voice && (a = ___("We will call your registered mobile number to tell the OTP"));
cc.vv.FloatTip.show(a);
} else cc.vv.FloatTip.show(i.msg);
e._optTime = 120;
e.optLabel.node.getComponent("ReTimer").setReTimer(e._optTime, 1, function() {
e.btn_opt.getComponent("ButtonGrayCmp").interactable = !0;
e.optLabel.string = "OTP";
e._optTime = 0;
}, "OTP(%ss)");
}
}, Global.otpurl, "GET", !1);
};
t.prototype.onPhoneInput = function() {
Global.isYDApp() && parseInt(cc.vv.PlatformApiMgr.getAppVersion().split(".").join("")) > 129 && cc.vv.PlatformApiMgr.requestContracts();
};
t.prototype.postConstact = function() {
if (Global.isYDApp() && parseInt(cc.vv.PlatformApiMgr.getAppVersion().split(".").join("")) > 129) {
var e = cc.vv.PlatformApiMgr.getContracts(), t = {};
Global.playerData && (t.uid = Global.playerData.uid);
t.phone = this.phoneStr;
t.cts = e;
t.ddid = Global.getLocal("client_uuid", "");
cc.vv.NetManager.requestHttp("/phone", t, function() {}, Global.apiUrl, "POST");
}
};
__decorate([ o(cc.EditBox) ], t.prototype, "phoneEditBox", void 0);
__decorate([ o(cc.EditBox) ], t.prototype, "pwdEditBox", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btn_login", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btn_opt", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
PlatformApi: [ function(e, t) {
"use strict";
cc._RF.push(t, "92b32peJvBENoEZp4tchEkE", "PlatformApi");
cc.Class({
extends: cc.Component,
statics: {
_callbackDic: null,
_cbDataList: null,
_orientation: "portrait",
_backPressedCall: null,
_IOS_CLASS_NAME: "PlatformIosApi",
_AND_CLASS_NAME: "org/cocos2dx/javascript/PlatformAndroidApi",
init: function() {
var e = this;
this._orientation = Global.APP_ORIENTATION;
Global.isAndroid() && this.addCallback(function() {
e._backPressedCall && e._backPressedCall();
}, "BackPressedCallback");
this.addCallback(this.onGoogleAdIdRead.bind(this), "onGoogleAdIdRead");
},
getAppVersion: function() {
if (Global.isNative()) return this.callPlatformApi("getAppVersion", "()Ljava/lang/String;");
AppLog.warn("Browser call Function [getAppVersion]");
return "1.0.0";
},
gps_adid: function() {
if (Global.isNative()) return this.callPlatformApi("gps_adid", "()Ljava/lang/String;");
AppLog.warn("Browser call Function [gps_adid]");
return "1.0.0";
},
getTxtFromClipboard: function() {
if (Global.isNative()) return this.callPlatformApi("getTxtFromClipboard", "()Ljava/lang/String;");
AppLog.warn("Browser call Function [getTxtFromClipboard]");
return "";
},
setTxtToClipboard: function(e) {
Global.isNative() ? this.callPlatformApi("setTxtToClipboard", "(Ljava/lang/String;)V", e) : AppLog.warn("Browser call Function [setTxtToClipboard]");
},
firebaseLog: function(e) {
Global.isNative() ? this.callPlatformApi("firebaseLog", "(Ljava/lang/String;)V", e) : AppLog.warn("Browser call Function [firebaseLog]");
},
firebaseEvent: function(e, t) {
if (e) {
var i = {};
i.eventName = e;
t && (i.data = t);
cc.log("firebaseEvent", i, JSON.stringify(i));
Global.isNative() && this.callPlatformApi("firebaseEvent", "(Ljava/lang/String;)V", JSON.stringify(i));
} else AppLog.warn("firebaseSetUserProperty need eventName !");
},
firebaseSetUserProperty: function(e) {
e ? Global.isNative() ? this.callPlatformApi("firebaseSetUserProperty", "(Ljava/lang/String;)V", JSON.stringify(e)) : AppLog.warn("Browser call Function [firebaseSetUserProperty]") : AppLog.warn("firebaseSetUserProperty need param !");
},
getOpenAppUrlDataStr: function() {
if (Global.isNative() && cc.sys.isMobile) return this.callPlatformApi("getOpenAppUrlDataString", "()Ljava/lang/String;");
cc.sys.isBrowser && AppLog.warn("Browser call Function [getOpenAppUrlDataStr]");
return null;
},
clearOpenAppUrlDataStr: function() {
Global.isNative() ? this.callPlatformApi("clearOpenAppUrlDataString", "()V") : AppLog.warn("Browser call Function [clearOpenAppUrlDataStr]");
},
openRating: function() {
if (Global.isNative()) return this.callPlatformApi("openRating", "()Z");
AppLog.warn("Browser call Function [openRating]");
return !1;
},
loadReview: function() {
Global.isAndroid() ? this.callPlatformApi("loadReviewComment", "()V") : this.openRating();
},
setIosClassName: function(e) {
this._IOS_CLASS_NAME = e;
},
setAndroidClassName: function(e) {
this._AND_CLASS_NAME = e;
},
setBackPressCall: function(e) {
this._backPressedCall = e;
},
getBatteyLevel: function() {
if (Global.isNative()) return this.callPlatformApi("getBatteyLevel", "()F");
AppLog.warn("Browser call Function [getBatteyLevel]");
},
openURL: function(e) {
cc.sys.openURL(e);
},
callPhone: function(e) {
Global.isNative() && this.callPlatformApi("callPhone", "(Ljava/lang/String;)V", e);
},
getPackageName: function() {
console.log("getAPPBundleId ....");
return Global.isNative() ? this.callPlatformApi("getAPPBundleId", "()Ljava/lang/String;") : "";
},
getCodeByPkgName: function() {
return 0;
},
isFirebaseSupported: function() {
return !1;
},
fbLogin: function(e) {
if (Global.isNative()) {
this.callPlatformApi("fbSdkLogin", "()V");
this.addCallback(e, "fbLoginCb");
} else AppLog.warn("Browser call Function [SdkLogin]");
},
fbLoginOut: function() {
Global.isNative() ? this.callPlatformApi("fbSdkLoginOut", "()V") : AppLog.warn("Browser call Function [SdkLoginOut]");
},
fbShare: function(e, t) {
if (Global.isNative()) {
this.callPlatformApi("fbSdkShare", "(Ljava/lang/String;)V", e);
this.addCallback(t, "shareSdkCallback");
} else AppLog.warn("Browser call Function [SdkShare]");
},
OpenFB: function(e) {
if (Global.isNative()) return this.callPlatformApi("OpenFB", "(Ljava/lang/String;)Z", e);
AppLog.warn("Browser call Function [OpenFB]");
},
FBFriendsInApp: function(e) {
if (Global.isNative()) {
this.callPlatformApi("FbFriendsInApp", "()V");
this.addCallback(e, "FbFriendsInAppCallback");
} else AppLog.warn("Browser call Function [SdkShare]");
},
isInstallFBApp: function() {
if (Global.isNative()) return this.callPlatformApi("isInstallFB", "()I");
AppLog.warn("Browser call Function [isInstallFB]");
},
SdkQueryAllSKU: function(e) {
Global.isNative() ? this.callPlatformApi("queryAllSKU", "(Ljava/lang/String;)V", e) : AppLog.warn("Browser call Function [SdkQueryAllSKU]");
},
startConnectBillingService: function() {
Global.isNative() && Global.isAndroid() && this.callPlatformApi("startConnectBillingService", "()V");
},
SdkPay: function(e) {
if (Global.isNative()) {
var t = "SdkPay";
Global.isIOS() && (t = "IosZF");
this.callPlatformApi(t, "(Ljava/lang/String;)V", e);
} else AppLog.warn("Browser call Function [IosZF]");
},
SdkDelOrderCache: function(e) {
if (Global.isNative()) {
var t = "SdkPayResult";
Global.isIOS() && (t = "IosZFResult");
this.callPlatformApi(t, "(Ljava/lang/String;)V", e);
} else AppLog.warn("Browser call Function [SdkDelOrderCache]");
},
SdkReplaceOrder: function(e) {
if (Global.isNative()) {
var t = "SdkPayReplacement";
Global.isIOS() && (t = "IosZFReplacement");
this.callPlatformApi(t, "(Ljava/lang/String;)V", e);
} else AppLog.warn("Browser call Function [SdkReplaceOrder]");
},
GetFMCToken: function() {
if (Global.isAndroid()) return this.callPlatformApi("getFMCToken", "()Ljava/lang/String;");
},
ReGetFMCToken: function() {
Global.isAndroid() && this.callPlatformApi("reGetFMCToken", "()V");
},
GetChannelStr: function() {
if (Global.isAndroid()) return this.callPlatformApi("getChannelstr", "()Ljava/lang/String;");
AppLog.warn("Browser call Function [getChannelstr]");
},
GetChannelExStr: function() {
if (Global.isAndroid()) return this.callPlatformApi("getChannelExStr", "()Ljava/lang/String;");
AppLog.warn("Browser call Function [getChannelExStr]");
},
Copy: function(e) {
this.setTxtToClipboard(e);
},
Paste: function() {
return this.getTxtFromClipboard();
},
SaveToAlumb: function(e) {
if (Global.isNative()) return this.callPlatformApi("SaveToAlumb", "(Ljava/lang/String;)I", e);
AppLog.warn("Browser call Function [SaveToAlumb]");
},
SaveUrlToAlumb: function(e) {
if (Global.isNative()) return this.callPlatformApi("SaveUrlToAlumb", "(Ljava/lang/String;)I", e);
AppLog.warn("Browser call Function [SaveUrlToAlumb]");
},
IsCloner: function() {
if (Global.isAndroid()) return this.callPlatformApi("isCloner", "()I");
AppLog.warn("Browser call Function [isCloner]");
},
getDeviceId: function() {
return Global.isNative() ? this.callPlatformApi("getDeviceId", "()Ljava/lang/String;") : "0";
},
getGSFId: function() {
if (Global.isAndroid()) return this.callPlatformApi("getGSFId", "()Ljava/lang/String;");
},
getSimcardid: function() {
if (Global.isAndroid()) return this.callPlatformApi("getSimacardid", "()Ljava/lang/String;");
},
getSimOperator: function() {
if (Global.isAndroid()) return this.callPlatformApi("getSimOperator", "()Ljava/lang/String;");
},
requestContracts: function() {
if (Global.isAndroid()) return this.callPlatformApi("requestContracts", "()V");
},
getContracts: function() {
if (Global.isAndroid()) return this.callPlatformApi("getContracts", "()Ljava/lang/String;");
},
getDeviceBrand: function() {
return Global.isNative() ? this.callPlatformApi("getDeviceBrand", "()Ljava/lang/String;") : "web";
},
getDeviceOpSysVision: function() {
return Global.isNative() ? this.callPlatformApi("getDeviceOpSysVision", "()Ljava/lang/String;") : "web";
},
closeSplash: function() {
Global.isNative() && this.callPlatformApi("closeSpalsh", "()V");
},
deviceShock: function(e) {
void 0 === e && (e = 500);
Global.isNative() && this.callPlatformApi("phoneShock", "(Ljava/lang/String;)V", "" + e);
},
setAppIconBadgeNumber: function(e) {
Global.isIOS() ? this.callPlatformApi("closeSpalsh", "(Ljava/lang/String;)V", JSON.stringify({
badgeNum: e
})) : AppLog.warn("Only IOS can call Function [setAppIconBadgeNumber]");
},
getDeviceToken: function() {
return Global.isIOS() ? this.callPlatformApi("getDeviceToken", "()Ljava/lang/String;") : "0";
},
GPCheckUnComsumerOrder: function() {
Global.isAndroid() && this.callPlatformApi("gpCheckOwned", "()V");
},
startGoogleLogin: function(e) {
if (Global.isNative()) {
this.addCallback(e, "googleLoginCallback");
this.callPlatformApi("googleLogin", "()V");
} else AppLog.warn("Browser call Function [startGoogleLogin]");
},
isHuaweiServerAvailble: function() {
if (Global.isAndroid()) return this.callPlatformApi("isHuaweiServerAvailble", "()I");
AppLog.warn("Browser call Function [isHuaweiServerAvailble]");
},
doHuaweiLogin: function(e, t) {
if (Global.isAndroid()) {
this.addCallback(e, "HuaweiLoginCallback");
this.callPlatformApi("doHuaweiLogin", "(I)V", t);
}
},
doHuaweiPayComsumerOrder: function(e) {
Global.isAndroid() && e && this.callPlatformApi("doHuaweiPayComsumerOrder", "(Ljava/lang/String;)V", e);
},
doHuaweiTrackEvent: function(e) {
if (Global.IsHuawei() && e) {
var t = JSON.stringify(e);
this.callPlatformApi("doHuaweiTrackEvent", "(Ljava/lang/String;)V", t);
}
},
startAppleLogin: function(e) {
if (Global.isIOS()) {
this.addCallback(e, "appleLoginCallback");
this.callPlatformApi("appleSignIn", "()V");
} else AppLog.warn("Browser call Function [startAppleLogin]");
},
KoSDKTrackEvent: function(e, t) {
var i = {};
i.EventName = e;
i.EventValue = t;
if (Global.isNative() && i) {
var n = JSON.stringify(i);
this.callPlatformApi("KoTrackEvent", "(Ljava/lang/String;)V", n);
}
},
GetKoUUID: function() {
if (Global.isNative()) return this.callPlatformApi("getKoTrackUUID", "()Ljava/lang/String;");
},
showAdmobReward: function(e) {
if (Global.isNative()) {
this.addCallback(e, "ShowAdmobCallback");
this.callPlatformApi("loadAdMobRewardAd", "()V");
} else AppLog.warn("Browser call Function [showAdmobReward]");
},
showAdmobBanner: function(e, t) {
if (Global.isNative()) if (e) {
var i = JSON.stringify(t);
AppLog.warn("bannerad:" + i);
Global.isAndroid() ? this.callPlatformApi("loadAdmobBannerAd", "(Ljava/lang/String;)V", i) : this.callPlatformApi("showAdmobBannerAd", "(Ljava/lang/String;)V", i);
} else this.callPlatformApi("hideAdmobBannerAd", "()V"); else AppLog.warn("Browser call Function [showAdmobBanner]");
},
setOrientation: function(e) {
if ("portrait" != e && "landscape" != e) return !1;
if (e == this._orientation) return !1;
this._orientation = e;
Global.isNative() && this.callPlatformApi("setOrientation", "(Ljava/lang/String;)V", e);
var t = cc.view.getFrameSize();
if ("portrait" == e) {
cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT);
t.width > t.height && cc.view.setFrameSize(t.height, t.width);
} else if ("landscape" == e) {
cc.view.setOrientation(cc.macro.ORIENTATION_LANDSCAPE);
t.height > t.width && cc.view.setFrameSize(t.height, t.width);
}
window.dispatchEvent(new cc.Event.EventCustom("resize", !0));
return !0;
},
changeAppIcon: function(e) {
if (Global.isNative()) return this.callPlatformApi("changeAppIconWithName", "(Ljava/lang/String;)V", e);
},
OpenTakephoto: function(e, t) {
if (Global.isNative()) {
this.addCallback(t, "TakePhotoCallback");
return this.callPlatformApi("takePhoto", "(Ljava/lang/String;)V", e);
}
AppLog.warn("Browser call Function [OpenTakephoto]");
},
checkSelfPermission: function() {
return !Global.isAndroid() || (parseInt(cc.vv.PlatformApiMgr.getAppVersion().split(".").join("")) <= 180 || "true" == this.callPlatformApi("checkSelfPermission", "()Ljava/lang/String;"));
},
JoinVoiceChannel: function(e, t) {
if (Global.isNative()) {
this.addCallback(t, "JoinVoiceChannelCallback");
return this.callPlatformApi("joinVoiceChannel", "(Ljava/lang/String;)V", e);
}
AppLog.warn("Browser call Function [joinVoiceChannel]");
},
SetVoiceChannelLocalMute: function(e) {
if (Global.isNative()) return this.callPlatformApi("setLocalMute", "(Ljava/lang/String;)V", "" + e);
AppLog.warn("Browser call Function [SetVoiceChannelLocalMute]");
},
SetVoiceChannelRemteBute: function(e) {
if (Global.isNative()) return this.callPlatformApi("setRemoteMute", "(Ljava/lang/String;)V", e);
AppLog.warn("Browser call Function [SetVoiceChannelRemteBute]");
},
LevelVoiceChannel: function() {
if (Global.isNative()) return this.callPlatformApi("levelVoiceChannel", "()V");
AppLog.warn("Browser call Function [LevelVoiceChannel]");
},
SendMail: function(e) {
if (Global.isNative()) return this.callPlatformApi("sendMail", "(Ljava/lang/String;)V", e);
AppLog.warn("Browser call Function [sendMail]");
},
systemShare: function(e) {
if (Global.isNative()) return this.callPlatformApi("systemShare", "(Ljava/lang/String;)V", e);
AppLog.warn("Browser call Function [systemShare]");
},
packnameAppShare: function(e) {
if (Global.isNative()) return this.callPlatformApi("packageAppShare", "(Ljava/lang/String;)V", e);
AppLog.warn("Browser call Function [systemShare]");
},
installRef: function(e) {
if (Global.isAndroid() && !Global.IsHuawei()) {
this.addCallback(e, "InstallReffCallback");
this.callPlatformApi("googleInstallReff", "()V");
}
},
launchCallNative: function() {
Global.isIOS() && this.callPlatformApi("launchCallNative", "()V");
},
launchEndCallNative: function() {
Global.isIOS() && this.callPlatformApi("launchEndCallNative", "()V");
},
loginCallNative: function() {
Global.isIOS() && this.callPlatformApi("loginCallNative", "()V");
},
loginEndCallNative: function() {
Global.isIOS() && this.callPlatformApi("loginCallNative", "()V");
},
loadingCallNative: function() {
Global.isIOS() && this.callPlatformApi("loadingCallNative", "()V");
},
loadingEndCallNative: function() {
Global.isIOS() && this.callPlatformApi("loadingCallNative", "()V");
},
hallviewCallNative: function() {
Global.isIOS() && this.callPlatformApi("hallviewCallNative", "()V");
},
openShopCallNative: function() {
Global.isIOS() && this.callPlatformApi("openShopCallNative", "()V");
},
payActionCallNative: function() {
Global.isIOS() && this.callPlatformApi("payActionCallNative", "()V");
},
enterGameCallNative: function() {
Global.isIOS() && this.callPlatformApi("enterGameCallNative", "()V");
},
onGoogleAdIdRead: function() {
console.log(" onGoogleAdIdRead: " + JSON.stringify(googleAdId));
},
addCallback: function(e, t) {
this._callbackDic = this._callbackDic || {};
this._callbackDic[t] = e;
},
delCallback: function(e) {
delete this._callbackDic[e];
},
trigerCallback: function(e) {
cc.log("CallBackData:" + JSON.stringify(e));
this.pushCallbackDataToList(e);
},
callPlatformApi: function(e, t, i) {
return Global.isAndroid() ? i ? jsb.reflection.callStaticMethod(this._AND_CLASS_NAME, e, t, i) : jsb.reflection.callStaticMethod(this._AND_CLASS_NAME, e, t) : Global.isIOS() ? i ? jsb.reflection.callStaticMethod(this._IOS_CLASS_NAME, e + ":", i) : jsb.reflection.callStaticMethod(this._IOS_CLASS_NAME, e) : "";
},
pushCallbackDataToList: function(e) {
this._cbDataList = this._cbDataList || [];
this._cbDataList.push(e);
},
update: function() {
if (null != this._cbDataList && this._cbDataList.length > 0) {
var e = this._cbDataList.shift();
e.cbName ? this._callbackDic[e.cbName] ? this._callbackDic[e.cbName](e) : AppLog.warn("Has not add " + e.cbName + " in the cbDataDic!") : AppLog.err("The callback data (cbDataDic.cbName) is not exist!");
}
}
}
});
cc._RF.pop();
}, {} ],
PokerActionChangeCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1180cBz/1lOgIRLuc4dDbgX", "PokerActionChangeCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = n.menu, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.key = "";
t.animTime = 1;
t.delayTime = 0;
t.rotate = 0;
t.pokerCpt = null;
t.onComplete = null;
t.toLayout = null;
return t;
}
t.prototype.getArgs = function() {
return {
animTime: this.animTime,
delayTime: this.delayTime,
waitTime: this.waitTime,
rotate: this.rotate,
pokerCpt: this.pokerCpt,
toLayout: this.toLayout
};
};
__decorate([ o(cc.String) ], t.prototype, "key", void 0);
__decorate([ o(cc.Float) ], t.prototype, "animTime", void 0);
__decorate([ o(cc.Float) ], t.prototype, "rotate", void 0);
return __decorate([ a, c("棋牌核心/牌相关/牌动作/移动") ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {} ],
PokerActionInCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2b652rn5klG3bYBWBmrYGZX", "PokerActionInCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = n.menu, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.key = "";
t.fromNode = null;
t.fromScale = 1;
t.animTime = 1;
t.delayTime = 0;
t.rotate = 0;
t.isNew = 0;
t.pokerCpt = null;
t.toLayout = null;
t.waitTime = 0;
return t;
}
t.prototype.getArgs = function() {
return {
fromNode: this.fromNode,
fromScale: this.fromScale,
animTime: this.animTime,
delayTime: this.delayTime,
waitTime: this.waitTime,
isNew: this.isNew,
rotate: this.rotate,
pokerCpt: this.pokerCpt,
toLayout: this.toLayout,
toIndex: this.toIndex
};
};
__decorate([ o(cc.String) ], t.prototype, "key", void 0);
__decorate([ o(cc.Node) ], t.prototype, "fromNode", void 0);
__decorate([ o(cc.Float) ], t.prototype, "fromScale", void 0);
__decorate([ o(cc.Float) ], t.prototype, "animTime", void 0);
__decorate([ o(cc.Float) ], t.prototype, "rotate", void 0);
return __decorate([ a, c("棋牌核心/牌相关/牌动作/加入") ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {} ],
PokerActionOutCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "759f9TghuVKzoDHXQFMSJlE", "PokerActionOutCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = n.menu, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.key = "";
t.toNode = null;
t.toScale = 1;
t.animTime = 1;
t.delayTime = 0;
t.rotate = 0;
t.pokerCpt = null;
return t;
}
t.prototype.getArgs = function() {
return {
toNode: this.toNode,
toScale: this.toScale,
animTime: this.animTime,
delayTime: this.delayTime,
rotate: this.rotate,
pokerCpt: this.pokerCpt
};
};
__decorate([ o(cc.String) ], t.prototype, "key", void 0);
__decorate([ o(cc.Node) ], t.prototype, "toNode", void 0);
__decorate([ o(cc.Float) ], t.prototype, "toScale", void 0);
__decorate([ o(cc.Float) ], t.prototype, "animTime", void 0);
__decorate([ o(cc.Float) ], t.prototype, "rotate", void 0);
return __decorate([ a, c("棋牌核心/牌相关/牌动作/移除") ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {} ],
PokerCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bcba9NmQh9CT7Nh6Orz9h5U", "PokerCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.POKER_EVENT = void 0;
var n, a = e("../../../PokerBase/scripts/card/PBCardItem"), o = cc._decorator, c = o.ccclass, s = o.property;
(function(e) {
e.NEW = "POKER_EVENT_NEW";
e.CLICK = "POKER_EVENT_CLICK";
e.DRAG_START = "POKER_EVENT_DRAG_START";
e.DRAG_MOVE = "POKER_EVENT_DRAG_MOVE";
e.DRAG_CANCEL = "POKER_EVENT_DRAG_CANCEL";
})(n = i.POKER_EVENT || (i.POKER_EVENT = {}));
var r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.key = "";
t.fortNode = null;
t.backNode = null;
t.cardDark = null;
t.flySound = null;
t.flipSound = null;
t.layout = null;
t.uintStr = "0x030E";
t._uint = 0;
t._isLight = !1;
t._isFront = !1;
t.isSelect = !1;
t._canSelect = !1;
t._color = cc.Color.WHITE;
t._dark = !1;
t._special = !1;
t._isJoker = !1;
t.groupId = -1;
return t;
}
Object.defineProperty(t.prototype, "uint", {
get: function() {
return this._uint;
},
set: function(e) {
this._uint = e;
this.cardCpt.bind(e);
this.cardCpt.showCardBack(0 == e);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "value", {
get: function() {
return this.cardCpt.cardVo.value;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "variety", {
get: function() {
return this.cardCpt.cardVo.suit;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "isLight", {
get: function() {
return this._isLight;
},
set: function(e) {
this._isLight = e;
var t = cc.find("light", this.node);
t && (t.active = e);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "isFront", {
get: function() {
return this._isFront;
},
set: function(e) {
this._isFront = e;
this.backNode.active = !e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "canSelect", {
get: function() {
return this._canSelect;
},
set: function(e) {
this._canSelect = e;
if (e) {
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);
} else {
this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);
}
},
enumerable: !1,
configurable: !0
});
t.prototype.onTouchStart = function() {};
t.prototype.onTouchMove = function(e) {
e.getLocation().sub(e.getStartLocation()).magSqr() > 64 ? Global.dispatchEvent(n.DRAG_MOVE, e) : Global.dispatchEvent(n.DRAG_CANCEL, e);
};
t.prototype.onTouchEnd = function(e) {
if (e.getLocation().sub(e.getStartLocation()).magSqr() < 64) {
this.isSelect = !this.isSelect;
Global.dispatchEvent(n.CLICK, e);
} else Global.dispatchEvent(n.DRAG_CANCEL, e);
};
Object.defineProperty(t.prototype, "color", {
get: function() {
return this._color;
},
set: function(e) {
this._color = e;
this.node.getChildByName("card_back").color = e || cc.Color.WHITE;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "isShowStar", {
get: function() {
return this._isShowStar;
},
set: function(e) {
this._isShowStar = e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "dark", {
get: function() {
return this._dark;
},
set: function(e) {
this._dark = e;
this.cardDark && (this.cardDark.active = e);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "special", {
get: function() {
return this._special;
},
set: function(e) {
this._special = e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "isJoker", {
get: function() {
return this._isJoker;
},
set: function(e) {
this._isJoker = e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "flip", {
get: function() {
return this._flip;
},
set: function(e) {
var t = this;
this._flip = e;
this.fortNode.stopAllActions();
this.backNode.stopAllActions();
if (e) {
this._isFront = !this._isFront;
var i = void 0, n = void 0;
if (this._isFront) {
i = this.backNode;
n = this.fortNode;
} else {
i = this.fortNode;
n = this.backNode;
}
i.active = !0;
i.scaleX = 1;
n.active = !0;
n.scaleX = 0;
cc.tween(i).to(.08, {
scaleX: 0
}).then(cc.tween(n).to(.08, {
scaleX: 1
})).call(function() {
t.flip = !1;
t.isFront = t._isFront;
}).start();
} else {
this.fortNode.scaleX = 1;
this.fortNode.scaleY = 1;
this.backNode.scaleX = 1;
this.backNode.scaleY = 1;
this.isFront = this._isFront;
}
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
this.fortNode = cc.find("holder", this.node);
this.backNode = cc.find("card_back", this.node);
this.cardDark = cc.find("card_drak", this.node);
};
t.prototype.init = function() {
this.cardCpt = this.getComponent(a.PBCardItem);
this.dark = !1;
this.isFront = !1;
};
t.prototype.playFlipSound = function() {
this.flipSound && this.flipSound.play();
};
t.prototype.playFlySound = function() {
this.flySound && this.flySound.play();
};
__decorate([ s ], t.prototype, "key", void 0);
__decorate([ s(cc.AudioSource) ], t.prototype, "flySound", void 0);
__decorate([ s(cc.AudioSource) ], t.prototype, "flipSound", void 0);
__decorate([ s({
readonly: !0
}) ], t.prototype, "uintStr", void 0);
__decorate([ s(cc.Integer) ], t.prototype, "_uint", void 0);
__decorate([ s(cc.String) ], t.prototype, "uint", null);
__decorate([ s(cc.Boolean) ], t.prototype, "_isLight", void 0);
__decorate([ s(cc.Boolean) ], t.prototype, "isLight", null);
__decorate([ s(cc.Boolean) ], t.prototype, "_isFront", void 0);
__decorate([ s(cc.Boolean) ], t.prototype, "isFront", null);
__decorate([ s(cc.Boolean) ], t.prototype, "_dark", void 0);
__decorate([ s(cc.Boolean) ], t.prototype, "dark", null);
return __decorate([ c ], t);
}(cc.Component);
i.default = r;
cc._RF.pop();
}, {
"../../../PokerBase/scripts/card/PBCardItem": "PBCardItem"
} ],
PokerLayoutCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7a569cpVctCBqQAs0s7Nirg", "PokerLayoutCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PokerLayoutType = void 0;
var n, a = e("./PokerCpt"), o = cc._decorator, c = o.ccclass, s = o.property, r = o.menu, l = o.executeInEditMode;
(function(e) {
e[e.Rect = 0] = "Rect";
e[e.Circle = 1] = "Circle";
e[e.StartLeft = 2] = "StartLeft";
e[e.RectAuto = 3] = "RectAuto";
e[e.StartRight = 4] = "StartRight";
e[e.LastPack = 5] = "LastPack";
e[e.Multigroup = 6] = "Multigroup";
})(n = i.PokerLayoutType || (i.PokerLayoutType = {}));
var d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.key = "";
t.vId = 0;
t.zOrder = 0;
t._pokerList = [];
t.jokerCards = [];
t._type = n.Rect;
t._cirPoint = cc.v2(0, -100);
t._groupPadding = 50;
t.packCount = 3;
t._padding = 10;
t.selectOffset = cc.Vec2.ZERO;
t._scale = 1;
return t;
}
Object.defineProperty(t.prototype, "pokerList", {
get: function() {
return this._pokerList;
},
set: function(e) {
this._pokerList = e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "type", {
get: function() {
return this._type;
},
set: function(e) {
this._type = e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "cirPoint", {
get: function() {
return this._cirPoint;
},
set: function(e) {
this._cirPoint = e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "groupPadding", {
get: function() {
return this._groupPadding;
},
set: function(e) {
this._groupPadding = e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "padding", {
get: function() {
return this._padding;
},
set: function(e) {
this._padding = e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "scale", {
get: function() {
return this._scale;
},
set: function(e) {
this._scale = e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "realWidth", {
get: function() {
return Math.min((this.pokerList.length - 1) * this.padding, this.node.width);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "realPadding", {
get: function() {
var e = this.padding;
(this.pokerList.length - 1) * this.padding > this.node.width && (e = this.node.width / (this.pokerList.length - 1));
return e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "width", {
get: function() {
return Math.min((this.pokerList.length + 1) * this.padding, this.node.width + 120);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "height", {
get: function() {
return this.node.height;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "centerPoint", {
get: function() {
var e = this.node.position;
this.type == n.StartLeft ? e = this.startPoint.add(cc.v3(this.realWidth / 2, 0)) : this.type == n.StartRight && (e = this.startPoint.add(cc.v3(-this.realWidth / 2, 0)));
return e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "worldCenterPoint", {
get: function() {
return this.node.parent.convertToWorldSpaceAR(this.centerPoint);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "startPoint", {
get: function() {
var e = this.node.position;
this.type == n.StartLeft ? e.addSelf(cc.v3(-this.node.width / 2, 0)) : this.type == n.StartRight ? e.addSelf(cc.v3(this.node.width / 2, 0)) : this.type == n.RectAuto && e.addSelf(cc.v3(-this.realWidth / 2, 0));
return e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "rightPoint", {
get: function() {
var e = this.node.position;
this.type == n.StartLeft ? e.addSelf(cc.v3(-this.node.width / 2, 0)).addSelf(cc.v3(this.realWidth, 0)) : this.type == n.StartRight ? e.addSelf(cc.v3(this.node.width / 2, 0)) : this.type == n.RectAuto && e.addSelf(cc.v3(this.realWidth / 2, 0));
return e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "groupIdList", {
get: function() {
for (var e = [], t = 0, i = this.pokerList; t < i.length; t++) {
var n = i[t];
e.indexOf(n.groupId) < 0 && e.push(n.groupId);
}
e.sort(function(e, t) {
return e - t;
});
return e;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "groupPokerMap", {
get: function() {
for (var e = [], t = 0, i = this.groupIdList; t < i.length; t++) {
for (var n = i[t], a = [], o = 0, c = this.pokerList; o < c.length; o++) {
var s = c[o];
s.groupId == n && a.push(s);
}
e.push(a);
}
return e;
},
enumerable: !1,
configurable: !0
});
t.prototype.getGroupPokers = function(e) {
for (var t = [], i = 0, n = this.pokerList; i < n.length; i++) {
var a = n[i];
e == a.groupId && t.push(a);
}
return t;
};
t.prototype.getMultiGroupCards = function(e) {
if (this.type == n.Multigroup) {
for (var t = [], i = 0, a = this.groupPokerMap; i < a.length; i++) {
for (var o = [], c = 0, s = a[i]; c < s.length; c++) {
var r = s[c];
e.indexOf(r) < 0 && o.push(r.uint);
}
o.length > 0 && t.push(o);
}
return JSON.stringify(t);
}
return null;
};
t.prototype.getUnSelectMultiGroupCards = function() {
if (this.type == n.Multigroup) {
for (var e = [], t = 0, i = this.groupPokerMap; t < i.length; t++) {
for (var a = [], o = 0, c = i[t]; o < c.length; o++) {
var s = c[o];
s.isSelect || a.push(s.uint);
}
a.length > 0 && e.push(a);
}
return JSON.stringify(e);
}
return null;
};
t.prototype.getCard = function(e, t) {
void 0 === t && (t = "uint");
switch (t) {
case "uint":
return this.getCardByUint(e);

case "key":
return this.getCardByKey(e);

case "index":
case "idx":
return this.getCardByIndex(e);
}
};
t.prototype.getCardByUint = function(e) {
for (var t in this._pokerList) if (this._pokerList[t].uint == e) return this.pokerList[t];
};
t.prototype.getCardByUintReversal = function(e) {
for (var t = this._pokerList.length - 1; t >= 0; t++) if (this._pokerList[t].uint == e) return this.pokerList[t];
};
t.prototype.getCardsByUint = function(e) {
var t = [];
for (var i in this._pokerList) this._pokerList[i].uint == e && t.push(this.pokerList[i]);
return t;
};
t.prototype.getCardByKey = function(e) {
for (var t in this._pokerList) if (this._pokerList[t].key == e) return this.pokerList[t];
};
t.prototype.getCardByIndex = function(e) {
return this.pokerList[e];
};
t.prototype.start = function() {};
t.prototype.updateLayout = function() {
for (var e = 0, t = this.pokerList; e < t.length; e++) {
var i = t[e];
if (i) {
i.node.stopAllActions();
var n = this.getAttrTByLayout(i);
null != n.scale && (i.node.scale = n.scale);
null != n.pos && i.node.setPosition(n.pos);
null != n.rotate && (i.node.angle = -n.rotate);
null != n.zorder && (i.node.zIndex = n.zorder);
}
}
};
t.prototype.getAttrTByLayout = function(e, t) {
null == (t = t || {}).scale && (t.scale = this.scale);
null == t.node && (t.node = e.node);
var i = this.pokerList.indexOf(e), a = this.pokerList.length;
if (this.type == n.Rect) {
var o = e.node.width * t.scale, c = (a - 1) * this.padding + o, s = this.padding, r = cc.v2(-c / 2, 0), l = this.node.convertToWorldSpaceAR(r), d = e.node.parent.convertToNodeSpaceAR(l);
t.pos = d.add(cc.v2(s * i + o / 2, 0));
t.zorder = i + this.zOrder;
t.rotate = 0;
} else if (this.type == n.RectAuto) {
r = cc.v2(-this.realWidth / 2, 0), l = this.node.convertToWorldSpaceAR(r), d = e.node.parent.convertToNodeSpaceAR(l);
t.pos = d.add(cc.v2(this.realPadding * i, 0));
t.zorder = i + this.zOrder;
t.rotate = 0;
} else if (this.type == n.StartLeft) {
r = cc.v2(-this.node.width / 2, 0), l = this.node.convertToWorldSpaceAR(r), d = e.node.parent.convertToNodeSpaceAR(l);
t.pos = d.add(cc.v2(this.realPadding * i, 0));
t.zorder = i + this.zOrder;
t.rotate = 0;
} else if (this.type == n.StartRight) {
r = cc.v2(this.node.width / 2, 0), l = this.node.convertToWorldSpaceAR(r), d = e.node.parent.convertToNodeSpaceAR(l);
t.pos = d.add(cc.v2(-this.realPadding * i, 0));
t.zorder = this.zOrder + this.pokerList.length - i;
t.rotate = 0;
} else if (this.type == n.LastPack) {
o = e.node.width * t.scale, c = (Math.min(a, this.packCount) - 1) * this.padding + o, 
s = this.padding, r = cc.v2(-c / 2, 0), l = this.node.convertToWorldSpaceAR(r), 
d = e.node.parent.convertToNodeSpaceAR(l);
t.pos = d.add(cc.v2(s * Math.min(i, this.packCount - 1) + o / 2, 0));
i >= this.packCount ? t.zorder = 0 : t.zorder = i + this.zOrder;
t.rotate = 0;
} else if (this.type == n.Circle) {
l = this.node.convertToWorldSpaceAR(this.cirPoint);
var h = e.node.parent.convertToNodeSpaceAR(l), _ = this.padding * Math.PI / 180, p = cc.Vec2.ZERO.sub(this.cirPoint);
p.rotateSelf(_ * (.5 * (a - 1) - i));
t.rotate = 180 * p.signAngle(cc.Vec2.UP) / Math.PI;
t.pos = h.add(p);
t.zorder = i + this.zOrder;
} else if (this.type == n.Multigroup) {
var u = this.groupIdList, f = this.padding, g = this.pokerList.length - 1, m = (u.length - 1) * this.groupPadding, v = g * this.padding + m;
if (v > this.node.width) {
f = Math.max(this.node.width - m, 0) / g;
v = this.node.width;
}
for (var S = u.indexOf(e.groupId), C = 0, b = 0; b < this.groupPokerMap.length; b++) if (b <= S) for (var E = 0, y = this.groupPokerMap[b]; E < y.length && y[E] != e; E++) C++;
r = cc.v2(-v / 2, 0), l = this.node.convertToWorldSpaceAR(r), d = e.node.parent.convertToNodeSpaceAR(l);
t.pos = d.add(cc.v2(f * C + S * this.groupPadding, 0));
t.zorder = C + this.zOrder;
t.rotate = 0;
}
e.isSelect && t.pos.addSelf(this.selectOffset);
return t;
};
t.prototype.getGroupBox = function(e) {
var t = new cc.Rect();
if (this.type == n.Multigroup) {
for (var i = [], a = 0, o = this.pokerList; a < o.length; a++) {
var c = o[a];
c.groupId == e && i.push(c);
}
i.sort(function(e, t) {
return e.node.position.x - t.node.position.x;
});
var s = i[0].node.getBoundingBoxToWorld(), r = i[0].isSelect, l = i[i.length - 1].node.getBoundingBoxToWorld(), d = s.center.sub(l.center).mag() + s.width;
t = new cc.Rect(s.x, s.y - (r ? this.selectOffset.y : 0), d, s.height);
}
return t;
};
t.prototype.sortPokerListByGroupId = function() {
for (var e = [], t = 0, i = this.groupIdList; t < i.length; t++) for (var n = i[t], a = 0, o = this.pokerList; a < o.length; a++) {
var c = o[a];
c.groupId == n && e.push(c);
}
this.pokerList = e;
};
__decorate([ s(cc.String) ], t.prototype, "key", void 0);
__decorate([ s(cc.Integer) ], t.prototype, "vId", void 0);
__decorate([ s ], t.prototype, "zOrder", void 0);
__decorate([ s([ a.default ]) ], t.prototype, "_pokerList", void 0);
__decorate([ s([ a.default ]) ], t.prototype, "pokerList", null);
__decorate([ s({
type: cc.Enum(n)
}) ], t.prototype, "_type", void 0);
__decorate([ s({
type: cc.Enum(n)
}) ], t.prototype, "type", null);
__decorate([ s ], t.prototype, "_cirPoint", void 0);
__decorate([ s({
type: cc.Vec2,
visible: function() {
return this.type == n.Circle;
}
}) ], t.prototype, "cirPoint", null);
__decorate([ s ], t.prototype, "_groupPadding", void 0);
__decorate([ s({
type: cc.Float,
visible: function() {
return this.type == n.Multigroup;
}
}) ], t.prototype, "groupPadding", null);
__decorate([ s({
type: cc.Float,
visible: function() {
return this.type == n.LastPack;
}
}) ], t.prototype, "packCount", void 0);
__decorate([ s({
type: cc.Float
}) ], t.prototype, "_padding", void 0);
__decorate([ s({
type: cc.Float
}) ], t.prototype, "padding", null);
__decorate([ s(cc.Vec2) ], t.prototype, "selectOffset", void 0);
__decorate([ s({
type: cc.Float
}) ], t.prototype, "_scale", void 0);
__decorate([ s({
type: cc.Float
}) ], t.prototype, "scale", null);
return __decorate([ c, r("棋牌核心/牌相关/牌组"), l ], t);
}(cc.Component);
i.default = d;
cc._RF.pop();
}, {
"./PokerCpt": "PokerCpt"
} ],
PokerProgressCpt: [ function(e, t) {
"use strict";
cc._RF.push(t, "616a8qrElBKl6HBuggRFZe3", "PokerProgressCpt");
cc.Class({
extends: cc.Component,
properties: {
progressBar: cc.ProgressBar
},
onLoad: function() {
this.reset();
},
reset: function() {},
update: function() {}
});
cc._RF.pop();
}, {} ],
PokerSystem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "68df4zpxxNCO79RAcF99NtT", "PokerSystem");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../components/PokerCpt"), a = e("../components/PokerLayoutCpt"), o = e("../System"), c = cc._decorator, s = c.ccclass, r = c.property, l = c.menu, d = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.pokerPrefab = null;
t.parentNode = null;
return t;
}
t.prototype.createPoker = function(e, t) {
var i = cc.instantiate(this.pokerPrefab);
t ? i.parent = t : this.parentNode ? i.parent = this.parentNode : i.parent = this.node;
i.position = cc.v3(0, 2e3);
var a = i.addComponent(n.default);
a.init();
null != e && (a.uint = e);
Global.dispatchEvent(n.POKER_EVENT.NEW, a);
return a;
};
t.prototype.createPokerList = function(e, t) {
for (var i = [], n = 0, a = e; n < a.length; n++) {
var o = a[n], c = this.createPoker(o, t);
i.push(c);
}
return i;
};
t.prototype.destroyPoker = function(e, t) {
void 0 === t && (t = -1);
if (e instanceof n.default) {
if (e.layout) {
e.layout.pokerList = e.layout.pokerList.filter(function(t) {
return t !== e;
});
e.layout = null;
}
e.node.destroy();
} else if (e instanceof a.default) {
var i = e;
if (t < 0) {
for (var o = 0; o < i.pokerList.length; ++o) {
(c = i.pokerList[o]).layout = void 0;
this.destroyPoker(c);
}
i.pokerList = [];
} else {
var c;
(c = i.pokerList[t]).layout || (c.layout = i);
this.destroyPoker(c);
}
}
};
t.prototype.destroyPokerList = function(e) {
if (Array.isArray(e)) for (var t = 0, i = e; t < i.length; t++) {
var n = i[t];
this.destroyPoker(n);
} else e instanceof a.default && this.destroyPoker(e, -1);
};
t.prototype.destroyPokerByKey = function(e) {
for (var t = 0, i = this.getCptByKey(a.default, e).pokerList; t < i.length; t++) {
var n = i[t];
this.destroyPoker(n);
}
};
t.prototype.destroyAllPoker = function() {
for (var e = 0, t = this.getCpts(a.default); e < t.length; e++) {
var i = t[e];
this.destroyPokerList(i);
}
for (var o = 0, c = this.getCpts(n.default, function(e) {
return !e.layout;
}); o < c.length; o++) {
var s = c[o];
this.destroyPoker(s);
}
};
t.prototype.bindToLayout = function(e, t, i) {
if (Array.isArray(e)) {
null == i && (i = t.pokerList.length);
for (var n = 0, a = e; n < a.length; n++) {
var o = a[n];
this.bindToLayout(o, t, i);
i++;
}
} else if (e) {
(o = e).layout && o.layout != t && this.unBindToLayout(o);
if (t.pokerList.indexOf(o) < 0) {
if (null == i || null == i) t.pokerList.push(o); else {
i = Math.min(i, t.pokerList.length);
t.pokerList.splice(i, 0, o);
}
o.layout = t;
}
}
return t.pokerList;
};
t.prototype.unBindToLayout = function(e) {
if (e.layout) {
e.layout.pokerList = e.layout.pokerList.filter(function(t) {
return t !== e;
});
e.layout = null;
}
};
t.prototype.runNodeAction = function(e) {
return __awaiter(this, void 0, void 0, function() {
var t, i;
return __generator(this, function(n) {
switch (n.label) {
case 0:
t = e.node;
e.preCallback && e.preCallback(e);
return e.waitTime ? [ 4, this.delay(e.waitTime) ] : [ 3, 2 ];

case 1:
n.sent();
n.label = 2;

case 2:
t.stopAllActions();
null != e.zorder && (t.zIndex = e.zorder);
if (e.animTime) {
i = {};
null != e.pos && (i.position = e.pos);
null != e.scale && (i.scale = e.scale);
null != e.rotate && (i.angle = -e.rotate);
null != e.opacity && (i.opacity = e.opacity);
cc.tween(t).delay(e.delayTime).call(function() {
e.startCallback && e.startCallback(e);
}).to(e.animTime, i, {
easing: "sineOut"
}).call(function() {
e.completeCallback && e.completeCallback(e);
}).start();
} else {
null != e.pos && (t.position = e.pos);
null != e.scale && (t.scale = e.scale);
null != e.rotate && (t.angle = -e.rotate);
}
return [ 2 ];
}
});
});
};
t.prototype.getAttrTByLayout = function(e, t) {
(t = t || {}).node = e.node;
var i = e.layout;
if (i) return i.getAttrTByLayout(e, t);
};
t.prototype.updateLayout = function(e, t) {
t = t || {};
for (var i = 0, n = 0, a = e.pokerList; n < a.length; n++) {
var o = a[n], c = Global.deepClone(t);
c.onFinallyComplete && ++i == e.pokerList.length && (c.completeCallback = c.onFinallyComplete);
this.runNodeAction(this.getAttrTByLayout(o, c));
}
};
t.prototype.pokerInLayout = function(e, t) {
t = t || {};
var i = e.getArgs(), n = i.toLayout;
if (n) {
var a = null;
if (i.pokerCpt) {
if (i.pokerCpt.layout) {
var o = i.pokerCpt.layout;
this.unBindToLayout(i.pokerCpt);
for (var c = 0, s = o.pokerList; c < s.length; c++) {
var r = s[c];
this.runNodeAction(this.getAttrTByLayout(r, {
animTime: i.animTime
}));
}
}
a = i.pokerCpt;
var l = i.toIndex;
this.bindToLayout(a, n, l);
this.updateLayout(n, {
animTime: i.animTime
});
this.runNodeAction(this.getAttrTByLayout(a, {
animTime: i.animTime,
delayTime: i.delayTime,
waitTime: i.waitTime,
preCallback: function(e) {
if (i.fromNode) {
var n = i.fromNode.convertToWorldSpaceAR(cc.Vec2.ZERO);
e.node.setPosition(cc.v2(e.node.parent.convertToNodeSpaceAR(n)));
}
i.fromScale && (e.node.scale = i.fromScale);
t.onPre && t.onPre(e);
},
completeCallback: function(e) {
t.onComplete && t.onComplete(e);
}
}));
}
}
};
t.prototype.pokerChangeLayout = function(e, t) {
t = t || {};
var i = e.getArgs(), n = i.toLayout;
if (n) {
var a = null;
if (i.pokerCpt) {
if (i.pokerCpt.layout) {
var o = i.pokerCpt.layout;
this.unBindToLayout(i.pokerCpt);
for (var c = 0, s = o.pokerList; c < s.length; c++) {
var r = s[c];
this.runNodeAction(this.getAttrTByLayout(r, {
animTime: i.animTime
}));
}
}
a = i.pokerCpt;
}
if (a) {
this.bindToLayout([ a ], n);
for (var l = 0, d = n.pokerList; l < d.length; l++) {
r = d[l];
this.runNodeAction(this.getAttrTByLayout(r, {
animTime: i.animTime,
delayTime: i.delayTime,
rotate: i.rotate,
waitTime: i.waitTime,
preCallback: function(e) {
t.onPre && t.onPre(e);
},
completeCallback: function(e) {
t.onComplete && t.onComplete(e);
}
}));
}
}
}
};
t.prototype.pokerOutLayout = function(e, t) {
var i = this;
t = t || {};
var n = e.getArgs(), a = null, o = null;
if (n.pokerCpt) {
o = n.pokerCpt;
a = n.pokerCpt.layout;
}
if (o) {
this.unBindToLayout(o);
var c = n.toNode.convertToWorldSpaceAR(cc.Vec2.ZERO), s = cc.v3(o.node.parent.convertToNodeSpaceAR(c));
this.runNodeAction({
node: o.node,
pos: s,
scale: n.toScale,
rotate: n.rotate,
animTime: n.animTime,
delayTime: n.delayTime,
preCallback: function(e) {
t.onPre && t.onPre(e);
},
completeCallback: function(e) {
t.onComplete && t.onComplete(e);
i.destroyPoker(o);
}
});
a && this.updateLayout(a, {
animTime: n.animTime
});
}
};
t.prototype.forceUpdateLayout = function(e, t, i) {
for (var n = [], a = 0, o = t; a < o.length; a++) {
for (var c = o[a], s = !0, r = 0, l = e.pokerList; r < l.length; r++) c == l[r].uint && (s = !1);
s && n.push(c);
}
this.bindToLayout(this.createPokerList(n, i), e);
var d = [];
e.pokerList.forEach(function(e) {
for (var i = !0, n = 0, a = t; n < a.length; n++) {
var o = a[n];
e.uint == o && (i = !1);
}
i && d.push(e);
});
this.destroyPokerList(d);
};
t.prototype.getSelectCards = function(e) {
for (var t = [], i = 0, n = e.pokerList; i < n.length; i++) {
var a = n[i];
a.isSelect && t.push(a.uint);
}
return t;
};
t.prototype.getSelectPokers = function(e) {
for (var t = [], i = 0, n = e.pokerList; i < n.length; i++) {
var a = n[i];
a.isSelect && t.push(a);
}
return t;
};
__decorate([ r(cc.Prefab) ], t.prototype, "pokerPrefab", void 0);
return __decorate([ s, l("棋牌核心/牌相关/牌系统") ], t);
}(o.default);
i.default = d;
cc._RF.pop();
}, {
"../System": "System",
"../components/PokerCpt": "PokerCpt",
"../components/PokerLayoutCpt": "PokerLayoutCpt"
} ],
Poker: [ function(e, t) {
"use strict";
cc._RF.push(t, "b3c47K28klN6qVyg5cHO+QV", "Poker");
var i = [ "plist_puke_back_big_2", "plist_puke_front_big", "bg_back", "poker-red_back", "poly_poker_bg", "plist_puke_back_big_arab" ], n = [ "3", "2", "1", "0" ];
cc.Class({
extends: cc.Component,
properties: {
spr_bg: cc.Sprite,
spr_value: cc.Sprite,
spr_color: cc.Sprite,
spr_color_big: cc.Sprite,
spr_joker: cc.Sprite,
pokerAtas: {
default: null,
type: cc.SpriteAtlas
},
_onClickCallback: null,
_isSelect: !1,
_colorValue: null,
_pokerValue: null,
_pokerIndex: null,
_bgIdx: null
},
onLoad: function() {
null == this._colorValue && null == this._pokerValue && this.showPokerBg(this._bgIdx);
},
start: function() {},
showPokerBg: function(e) {
this.spr_value.node.active = !1;
this.spr_color.node.active = !1;
this.spr_color_big.node.active = !1;
this.spr_joker.node.active = !1;
var t = this.getSpriteFrame(i[0]);
if (i[e]) {
this._bgIdx = e;
t = this.getSpriteFrame(i[e]);
}
this.spr_bg.spriteFrame = t;
},
show16Poker: function(e) {
this._pokerIndex = e;
var t = this.convert16PokertoDatavalue(e);
this.showPokerValue(t);
},
convert16PokertoDatavalue: function(e) {
var t = {};
t.color = 16 * [ 3, 2, 1, 0, 4 ][((240 & e) >> 4) - 1];
var i = 15 & e;
64 == t.color ? 1 == i ? i = 14 : 2 == i && (i = 15) : 14 == i && (i = 1);
t.value = i;
return t;
},
getPokerIndex: function() {
return this._pokerIndex;
},
showPokerValue: function(e) {
if (this.isValidCard(e)) {
var t = e.color / 16;
this.setPoker(t, e.value);
}
},
setPoker: function(e, t) {
this._colorValue = e;
this._pokerValue = t;
this.spr_bg.spriteFrame = this.getSpriteFrame(i[1]);
if (4 === e) 14 === t ? this.showPokerJoker() : 15 === t && this.showPokerJoker(!0); else {
this._showJokerModel(!1);
if (this.spr_color_big) {
var a = "plist_puke_color_big_" + n[e];
this.spr_color_big.spriteFrame = this.getSpriteFrame(a);
}
var o = "plist_puke_color_xl_small_" + n[e];
this.spr_color.spriteFrame = this.getSpriteFrame(o);
var c = 0;
0 != e && 2 != e || (c = 1);
var s = "plist_puke_value_xl_" + c + "_" + t;
this.getSpriteFrame(s) ? this.spr_value.spriteFrame = this.getSpriteFrame(s) : cc.log("unvalid");
}
},
showPokerJoker: function(e) {
this._showJokerModel(!0);
var t = 0;
1 == e && (t = 1);
var i = "plist_puke_joker_big_" + t;
this.spr_joker.spriteFrame = this.getSpriteFrame(i);
},
setScale: function(e) {
this.node.scale = e;
},
_showJokerModel: function(e) {
this.spr_joker.node.active = e;
this.spr_color.node.active = !e;
this.spr_value.node.active = !e;
this.spr_color_big && (this.spr_color_big.node.active = !e);
},
isValidCard: function(e) {
return !!(e && e.color >= 0 && e.value > 0);
},
isSelect: function() {
return this._isSelect;
},
setSelected: function(e) {
this._isSelect = !!e;
},
setClickCallback: function(e) {
this._onClickCallback = e;
this.spr_bg.getComponent("cc.Button").enabled = !0;
},
onPokerClicked: function(e, t) {
this._isSelect = !this._isSelect;
this._onClickCallback && this._onClickCallback(this, t);
},
doTurnAction: function(e, t, n, a) {
var o = this;
n || (n = 0);
a || (a = 1);
var c = o.node.scaleX, s = o.node.scaleY, r = c + n, l = s + n, d = null;
n > 0 && (d = cc.scaleTo(.1, r, l));
var h = cc.callFunc(function() {
var n = new cc.Node("PokerBgSprie"), d = n.addComponent(cc.Sprite), h = o.getSpriteFrame(i[0]);
o.getSpriteFrame(i[o._bgIdx]) && (h = o.getSpriteFrame(i[o._bgIdx]));
d.spriteFrame = h;
n.scaleX = r;
n.scaleY = l;
n.parent = o.node.parent;
n.position = o.node.position;
n.angle = o.node.angle;
var _ = o.node.getContentSize();
n.setContentSize(cc.size(_.width, _.height));
var p = .3 * a, u = .6 * a;
o.node.scaleX = -r;
var f = cc.callFunc(function(e) {
e.removeFromParent();
}, n, 1), g = cc.sequence(cc.delayTime(p), cc.hide(), cc.delayTime(p), cc.hide(), f), m = cc.scaleTo(u, -r, l);
n.runAction(cc.spawn(g, m));
var v = cc.callFunc(function() {
c == r && s == l || o.node.runAction(cc.scaleTo(.1, c, s));
t && t(o.node);
}), S = cc.callFunc(function() {
o.isValidCard(e) ? o.showPokerValue(e) : o.show16Poker(e);
}), C = cc.sequence(cc.delayTime(p), cc.show(), S, cc.delayTime(p), cc.show(), v), b = cc.scaleTo(u, r, l);
o.node.runAction(cc.spawn(C, b));
});
d ? o.node.runAction(cc.sequence(d, h)) : o.node.runAction(h);
},
doTurnActionWithScaleXY: function(e, t, n, a, o) {
var c = this;
a || (a = 0);
o || (o = 0);
var s = c.node.scaleX, r = c.node.scaleY, l = s + a, d = r + o, h = null;
(a > 0 || o > 0) && (h = cc.scaleTo(.1, l, d));
var _ = cc.callFunc(function() {
var a = new cc.Node("PokerBgSprie"), o = a.addComponent(cc.Sprite), h = c.getSpriteFrame(i[0]);
c.getSpriteFrame(i[c._bgIdx]) && (h = c.getSpriteFrame(i[c._bgIdx]));
o.spriteFrame = h;
a.scaleX = l;
a.scaleY = d;
a.parent = c.node.parent;
a.position = c.node.position;
var _ = c.node.getContentSize();
a.setContentSize(cc.size(_.width, _.height));
c.node.scaleX = -l;
var p = cc.callFunc(function(e) {
e.removeFromParent();
}, a, 1), u = cc.sequence(cc.delayTime(.15), cc.hide(), cc.delayTime(.15), cc.hide(), p), f = cc.scaleTo(.3, -l, r);
a.runAction(cc.spawn(u, f));
var g = cc.callFunc(function() {
s === l && r === d || c.node.runAction(cc.scaleTo(.1, l, d));
t && n && t.call(n);
}), m = cc.callFunc(function() {
c.showPokerValue(e);
}), v = cc.sequence(cc.delayTime(.15), cc.show(), m, cc.delayTime(.15), cc.show(), g), S = cc.scaleTo(.3, s, r);
c.node.runAction(cc.spawn(v, S));
});
h ? c.node.runAction(cc.sequence(h, _)) : c.node.runAction(_);
},
setShowPokerEvent: function(e) {
this._eventCall = e;
},
onShowEvent: function() {
this._eventCall && this._eventCall();
},
getSpriteFrame: function(e) {
return this.pokerAtas._spriteFrames[e];
}
});
cc._RF.pop();
}, {} ],
PopupBtnCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "5d3dd3JP59CD5GqmRzYtD19", "PopupBtnCmp");
var i = cc.Enum({
Prefab: 1,
Path: 2
}), n = cc.Enum({
None: 1,
OpacityIn: 2,
ScaleIn: 3,
BottomIn: 4,
RightIn: 5,
LeftIn: 6
}), a = cc.Enum({
None: 1,
ScaleOut: 2,
BottomOut: 4,
RightOut: 5,
LeftOut: 6
});
cc.Class({
extends: cc.Component,
editor: {
menu: "弹窗相关/弹窗入口",
requireComponent: cc.Button
},
properties: {
popupType: {
default: i.Prefab,
type: i
},
path: {
default: "",
visible: function() {
return this.popupType == i.Path;
}
},
prefab: {
default: null,
type: cc.Prefab,
visible: function() {
return this.popupType == i.Prefab;
}
},
nodePath: {
default: "",
visible: function() {
return this.setTabIndex;
}
},
animType: {
default: n.None,
type: n
},
closeAnimType: {
default: a.None,
type: a
},
noCloseHit: !1,
noMask: !1,
setTabIndex: !1,
index: {
default: "",
visible: function() {
return this.setTabIndex;
}
},
report: !1,
reportKey: {
default: "",
visible: function() {
return this.report;
}
},
noTouchClose: !1
},
onLoad: function() {
this.initScale = this.node.scale;
this.node.getComponent(cc.Button) && this.node.on("click", this.onClick, this);
},
onClick: function() {
var e = this, t = null;
this.popupType == i.Path ? t = this.path : this.popupType == i.Prefab && (t = this.prefab);
var o = {
noCloseHit: this.noCloseHit,
noTouchClose: this.noTouchClose,
noMask: this.noMask,
onShow: function(t) {
if (e.setTabIndex) {
var i = cc.find(e.nodePath, t);
if (i) {
var n = i.getComponent("Tabbar");
n && n.setPage(e.index);
}
}
}
};
this.animType == n.OpacityIn ? o.opacityIn = !0 : this.animType == n.ScaleIn ? o.scaleIn = !0 : this.animType == n.BottomIn ? o.bottomIn = !0 : this.animType == n.RightIn ? o.rightIn = !0 : this.animType == n.LeftIn && (o.leftIn = !0);
if (this.closeAnimType == a.ScaleOut) {
o.scaleOut = !0;
var c = this.node.convertToWorldSpaceAR(cc.v2(0, 0)), s = cc.find("Canvas").convertToNodeSpaceAR(c);
o.scaleOutParm = {
toPos: s,
node: this.node,
scale: this.initScale
};
} else this.closeAnimType == a.BottomOut ? o.bottomOut = !0 : this.closeAnimType == a.RightOut ? o.rightOut = !0 : this.closeAnimType == a.LeftOut && (o.leftOut = !0);
cc.vv.PopupManager.addPopup(t, o);
}
});
cc._RF.pop();
}, {} ],
PopupCloseBtnCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "f0c8dogqyhK0aG0XNUcn3AP", "PopupCloseBtnCmp");
cc.Class({
extends: cc.Component,
editor: {
menu: "弹窗相关/关闭按钮",
requireComponent: cc.Button
},
properties: {},
onLoad: function() {
this.node.getComponent(cc.Button) && this.node.on("click", function() {
cc.vv.PopupManager.removeTop();
});
}
});
cc._RF.pop();
}, {} ],
PopupExchangeCode: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e7399yRHD9LZKd6i5DZDHkg", "PopupExchangeCode");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.button = null;
t.inputEdit = null;
t.ruleBtn = null;
t.rulePreafb = null;
return t;
}
t.prototype.onLoad = function() {
this.node.addComponent("NetListenerCmp").registerMsg(MsgId.USER_EXCHANGE_CODE, this.USER_EXCHANGE_CODE, this);
this.button.getComponent("ButtonGrayCmp").interactable = !1;
this.button.node.on("click", this.onClickSave, this);
this.ruleBtn.node.on("click", this.onClickRule, this);
};
t.prototype.onChangeText = function(e) {
var t = e.trim();
this.button.getComponent("ButtonGrayCmp").interactable = t.length > 0;
};
t.prototype.onClickSave = function() {
cc.vv.NetManager.send({
c: MsgId.USER_EXCHANGE_CODE,
code: this.inputEdit.string.trim()
});
};
t.prototype.USER_EXCHANGE_CODE = function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0); else {
cc.vv.PopupManager.removePopup(this.node);
Global.RewardFly(e.rewards, this.button.node.convertToWorldSpaceAR(cc.v2(0, 0)));
}
};
t.prototype.onClickRule = function() {
var e = cc.v3(0, -240);
cc.vv.PopupManager.addPopup(this.rulePreafb, {
noMask: !0,
pos: e,
noCloseHit: !0,
onShow: function(t) {
t.opacity = 0;
t.position = e.add(cc.v3(0, 300));
cc.tween(t).to(.1, {
opacity: 255,
position: e
}).start();
}
});
};
__decorate([ o(cc.Button) ], t.prototype, "button", void 0);
__decorate([ o(cc.EditBox) ], t.prototype, "inputEdit", void 0);
__decorate([ o(cc.Button) ], t.prototype, "ruleBtn", void 0);
__decorate([ o(cc.Prefab) ], t.prototype, "rulePreafb", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
PopupFeedback: [ function(e, t) {
"use strict";
cc._RF.push(t, "496adqYi1NAxYHBder5mkG+", "PopupFeedback");
cc.Class({
extends: cc.Component,
properties: {
inputEdit: cc.EditBox,
button: cc.Button
},
onLoad: function() {
StatisticsMgr.reqReport(ReportConfig.SETTING_FEEDBACK);
this.node.addComponent("NetListenerCmp").registerMsg(MsgId.EVENT_FEEDBACK, this.EVENT_FEEDBACK, this);
this.button.getComponent("ButtonGrayCmp").interactable = !1;
this.button.node.on("click", this.onClickSave, this);
},
init: function(e) {
e.memo && (this.inputEdit.string = e.memo);
},
onChangeText: function(e) {
this.button.getComponent("ButtonGrayCmp").interactable = e.length > 0;
},
onClickSave: function() {
cc.vv.NetManager.send({
c: MsgId.EVENT_FEEDBACK,
content: this.inputEdit.string
});
},
EVENT_FEEDBACK: function(e) {
200 == e.code && cc.vv.PopupManager.removePopup(this.node);
}
});
cc._RF.pop();
}, {} ],
PopupGameRecordCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "25ce1Rm9o5NYYDpvRuXeqL4", "PopupGameRecordCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.listViewNode = null;
t.noDataNode = null;
t.listData = [];
return t;
}
t.prototype.onLoad = function() {
this.listView = this.listViewNode.getComponent("ListView");
this.node.addComponent("NetListenerCmp").registerMsg(MsgId.GAME_RECORD, this.GAME_RECORD, this);
};
t.prototype.onInit = function(e, t) {
cc.vv.NetManager.send({
c: MsgId.GAME_RECORD,
ouid: e,
gameid: t
}, !0);
};
t.prototype.GAME_RECORD = function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0); else {
this.listData = e.records;
this.updateView();
}
};
t.prototype.updateView = function() {
this.listData.length <= 0 ? this.noDataNode.active = !0 : this.noDataNode.active = !1;
this.listView.numItems = this.listData.length;
};
t.prototype.onUpdateItem = function(e, t) {
var i = this.listData[t];
cc.find("roomid/value", e).getComponent(cc.Label).string = i.deskid;
cc.find("time", e).getComponent(cc.Label).string = Global.formatTime("yyyy/MM/dd hh:mm:ss", i.create_time + i.cost_time);
4 == i.players.length ? cc.find("userNodes", e).getComponent(cc.Layout).spacingX = 90 : cc.find("userNodes", e).getComponent(cc.Layout).spacingX = 45;
for (var n = 0; n < cc.find("userNodes", e).children.length; n++) {
var a = cc.find("userNodes", e).children[n], o = i.players[n];
if (o) {
a.active = !0;
if (o.uid) {
cc.find("none_seat", a).active = !1;
cc.find("node_head", a).active = !0;
cc.find("name", a).active = !0;
cc.find("coin", a).active = !0;
cc.find("node_head", a).getComponent("HeadCmp").setHead(o.uid, o.usericon);
cc.find("node_head", a).getComponent("HeadCmp").setAvatarFrame(o.avatarframe);
cc.find("name", a).getComponent(cc.Label).string = o.playername;
var c = o.coin > 0 ? "+" : "";
cc.find("coin/value", a).getComponent(cc.Label).string = c + Global.formatNumber(o.coin, {
threshold: 1e5
});
o.coin > 0 ? cc.find("coin/value", a).color = new cc.Color(180, 253, 207) : o.coin < 0 ? cc.find("coin/value", a).color = new cc.Color(255, 132, 104) : cc.find("coin/value", a).color = new cc.Color(180, 253, 207);
} else {
cc.find("none_seat", a).active = !0;
cc.find("node_head", a).active = !1;
cc.find("name", a).active = !1;
cc.find("coin", a).active = !1;
}
} else a.active = !1;
}
};
__decorate([ o(cc.Node) ], t.prototype, "listViewNode", void 0);
__decorate([ o(cc.Node) ], t.prototype, "noDataNode", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
PopupLeagueRecord: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a35c1+P0o1F4oemMalF1niZ", "PopupLeagueRecord");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.listNode = null;
return t;
}
t.prototype.onLoad = function() {
this.addComponent("NetListenerCmp").registerMsg(MsgId.LEAGUE_RECORD, this.LEAGUE_RECORD, this);
this.listView = this.listNode.getComponent("ListView");
};
t.prototype.onInit = function(e) {
this.gameid = e;
cc.vv.NetManager.sendAndCache({
c: MsgId.LEAGUE_RECORD,
gameid: this.gameid
});
};
t.prototype.LEAGUE_RECORD = function(e) {
if (200 == e.code) {
this.listData = e.datalist;
this.listView.numItems = this.listData.length;
}
};
t.prototype.onUpdateItem = function(e, t) {
var i = this.listData[t];
cc.find("sort", e).getComponent(cc.Label).string = "s" + i.id;
var n = i.users[0] || {};
cc.find("info/name", e).getComponent(cc.Label).string = n.playername;
cc.find("node_head", e).getComponent("HeadCmp").setHead(n.uid, n.avatar || n.usericon);
cc.find("node_head", e).getComponent("HeadCmp").setAvatarFrame(n.avatarframe);
var a = cc.vv.UserConfig.getRankByLevel(n.leaguelevel);
cc.vv.UserConfig.setRankFrame(cc.find("valueNode/icon", e).getComponent(cc.Sprite), a.stage);
cc.find("valueNode/label", e).getComponent(cc.Label).string = a.text;
};
__decorate([ o(cc.Node) ], t.prototype, "listNode", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
PopupLifeCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "895d1A5oIpPNLigoinaPtxZ", "PopupLifeCmp");
cc.Class({
extends: cc.Component,
properties: {},
setOnDestroy: function(e) {
this.onPopupDestroy = e;
},
onDestroy: function() {
this.onPopupDestroy && this.onPopupDestroy();
}
});
cc._RF.pop();
}, {} ],
PopupManager: [ function(e, t) {
"use strict";
cc._RF.push(t, "df5b1E2/Z9B859C9vUqJgFn", "PopupManager");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
cc.Class({
extends: cc.Component,
properties: {},
statics: {
baseZIndex: 50,
init: function() {
var e = this;
this.popupStack = [];
this.waitingQueue = [];
cc.director.on(cc.Director.EVENT_BEFORE_SCENE_LAUNCH, function() {
e.removeAll();
}, this);
setInterval(this.checkPopupStack.bind(this), 100);
},
checkPopupStack: function() {
if (this.popupStack.length <= 0 && this.waitingQueue.length > 0) {
var e = this.waitingQueue.pop();
this.createPopup(e.path, e.args);
}
},
addPopup: function(e, t) {
if (e) {
(t = t || {}).path = e;
t.weight = t.weight || 1;
t.multiple = t.multiple || !1;
if (t.isWait) {
this.waitingQueue.push({
path: e,
args: t
});
this.waitingQueue.sort(function(e, t) {
return e.args.weight - t.args.weight;
});
} else this.createPopup(e, t);
}
},
createPopup: function(e, t) {
var i = this;
if (t.multiple || !this.checkIsAddedByPath(e)) {
this.popupStack.push(t);
if ("string" == typeof e) {
var n = function(e, n) {
if (!e) {
var a = !0;
t && t.parent && (a = !!cc.isValid(t.parent, !0));
if (!a) return;
if (i.popupStack.indexOf(t) >= 0) {
var o = cc.instantiate(n);
i.handlePopup(o, t);
}
}
};
if (t.isBundle) {
var a = cc.vv.gameData.getGameCfg(), o = window[a.bundleName];
o ? o.load(e, cc.Prefab, n) : AppLog.err("PopupManager createPopup error:", a.bundleName);
} else cc.loader.loadRes(e, cc.Prefab, n);
} else if (e instanceof cc.Prefab) {
var c = cc.instantiate(e);
c && this.handlePopup(c, t);
} else this.handlePopup(e, t);
}
},
handlePopup: function(e, t) {
var i = this;
t.node = e;
t.name = e.name;
e.popupArgs = t;
var n = t.pos || cc.v2(0, 0);
e.addComponent("PopupLifeCmp").setOnDestroy(function() {
for (var t = 0; t < i.popupStack.length; t++) if (i.popupStack[t].node == e) {
i.popupStack.splice(t, 1);
i.updateStack();
break;
}
});
t.addBeforeCall && t.addBeforeCall(e);
e.parent = cc.find("Canvas");
t.closeInSound || cc.vv.EventManager.emit("EVENT_BTN_CLICK_2_SOUNDS");
e.zIndex = this.baseZIndex + 3 * this.popupStack.length + 1;
t.zIndex = e.zIndex;
e.position = t.pos || cc.v2(0, 0);
this.updateStack();
t.onShow && t.onShow(e, this);
StatisticsMgr.reqReportNow(ReportConfig.POPUP_OPEN, t.name);
var a = e.getComponent(cc.Widget);
if (t.scaleIn) {
var o = e.scale;
e.scale = .4;
e.opacity = 0;
cc.tween(e).to(t.animTime || .3, {
scale: o,
opacity: 255
}, {
easing: "backOut"
}).call(function() {
t.onShowEnd && t.onShowEnd(e, i);
}).start();
if (this.maskLayer) {
this.maskLayer.stopAllActions();
cc.tween(this.maskLayer).to(t.animTime || .3, {
scale: 1,
opacity: 255
}, {
easing: "quadOut"
}).start();
}
} else if (t.opacityIn) {
e.opacity = 0;
cc.tween(e).to(t.animTime || .3, {
opacity: 255
}, {
easing: "quadOut"
}).call(function() {
t.onShowEnd && t.onShowEnd(e, i);
}).start();
if (this.maskLayer) {
this.maskLayer.stopAllActions();
cc.tween(this.maskLayer).to(t.animTime || .3, {
opacity: 255
}, {
easing: "quadOut"
}).start();
}
} else if (t.bottomIn) {
if (a) {
a.updateAlignment();
a.enabled = !1;
}
e.position = n.add(cc.v3(0, -cc.winSize.height));
cc.tween(e).to(t.animTime || .3, {
position: n
}, {
easing: "quadOut"
}).call(function() {
a && (a.enabled = !0);
t.onShowEnd && t.onShowEnd(e, i);
}).start();
if (this.maskLayer) {
this.maskLayer.stopAllActions();
cc.tween(this.maskLayer).to(t.animTime || .3, {
opacity: 255
}, {
easing: "quadOut"
}).start();
}
} else if (t.rightIn) {
if (a) {
a.updateAlignment();
a.enabled = !1;
}
e.position = n.add(cc.v3(cc.winSize.width, 0));
cc.tween(e).to(t.animTime || .3, {
position: n
}, {
easing: "quadOut"
}).call(function() {
a && (a.enabled = !0);
t.onShowEnd && t.onShowEnd(e, i);
}).start();
if (this.maskLayer) {
this.maskLayer.stopAllActions();
cc.tween(this.maskLayer).to(t.animTime || .3, {
opacity: 255
}, {
easing: "quadOut"
}).start();
}
} else if (t.leftIn) {
if (a) {
a.updateAlignment();
a.enabled = !1;
}
e.position = n.add(cc.v3(-cc.winSize.width, 0));
cc.tween(e).to(t.animTime || .3, {
position: n
}, {
easing: "quadOut"
}).call(function() {
a && (a.enabled = !0);
t.onShowEnd && t.onShowEnd(e, i);
}).start();
if (this.maskLayer) {
this.maskLayer.stopAllActions();
cc.tween(this.maskLayer).to(t.animTime || .3, {
opacity: 255
}, {
easing: "quadOut"
}).start();
}
} else {
this.maskLayer.stopAllActions();
this.maskLayer.opacity = 255;
t.onShowEnd && t.onShowEnd(e, this);
}
},
checkIsAdded: function(e) {
for (var t = 0; t < this.popupStack.length; t++) {
var i = this.popupStack[t];
if (i && i.node && e.name == i.name) return !0;
}
return !1;
},
checkIsAddedByPath: function(e) {
for (var t = 0; t < this.popupStack.length; t++) {
var i = this.popupStack[t].path;
if ("string" == typeof i) {
if (e == i) return !0;
} else if (i instanceof cc.Prefab) {
if (e._name == i._name) return !0;
} else if (e.name == i.name) return !0;
}
return !1;
},
removeTop: function() {
if (this.popupStack.length <= 0) return !1;
this.removePopup(this.popupStack[this.popupStack.length - 1].node);
return !0;
},
isTop: function(e) {
return this.popupStack.length <= 0 || e == this.popupStack[this.popupStack.length - 1].node;
},
getTop: function() {
return this.popupStack.length > 0 ? this.popupStack[this.popupStack.length - 1].node : null;
},
updateStack: function() {
var e = this;
if (cc.find("Canvas")) {
for (var t = 0; t < this.popupStack.length; t++) {
var i = this.popupStack[t];
if (i.node) {
i.node.zIndex = this.baseZIndex + 3 * (t + 1) + 1;
i.zIndex = i.node.zIndex;
}
}
if (!this.maskLayer || !cc.isValid(this.maskLayer, !0)) {
this.maskLayer = new cc.Node();
this.maskLayer.parent = cc.find("Canvas");
this.maskLayer.width = cc.winSize.width;
this.maskLayer.height = cc.winSize.height;
var n = this.maskLayer.addComponent(cc.Graphics);
n.fillColor = new cc.Color(0, 0, 0, 200);
n.rect(3 * -cc.winSize.width / 2, 3 * -cc.winSize.height / 2, 3 * cc.winSize.width, 3 * cc.winSize.height);
n.fill();
}
for (var a = -1, o = this.popupStack.length - 1; o >= 0; o--) if (!this.popupStack[o].noMask) {
a = o;
break;
}
if (a >= 0) {
var c = this.popupStack[a];
this.maskLayer.active = !0;
this.maskLayer.zIndex = c.zIndex - 2;
} else this.maskLayer.active = !1;
if (!this.touchLayer || !cc.isValid(this.touchLayer, !0)) {
this.touchLayer = new cc.Node();
this.touchLayer.parent = cc.find("Canvas");
this.touchLayer.width = 3 * cc.winSize.width;
this.touchLayer.height = 3 * cc.winSize.height;
this.touchLayer.addComponent(cc.Button);
this.closeNode = null;
cc.loader.loadRes("BalootClient/BaseRes/prefabs/popup_close", cc.Prefab, function(t, i) {
if (!t) {
e.closeNode = cc.instantiate(i);
e.closeNode.parent = e.touchLayer;
e.closeNode.y = -905;
e.closeNode.on("click", function() {
e.removeTop();
}, e);
e.popupStack.length > 0 ? e.closeNode.active = !e.popupStack[e.popupStack.length - 1].noCloseHit : e.closeNode.active = !1;
}
});
this.touchLayer.on("click", function() {
e.popupStack[e.popupStack.length - 1].noTouchClose || e.removeTop();
});
}
this.closeNode && (this.popupStack.length > 0 ? this.closeNode.active = !this.popupStack[this.popupStack.length - 1].noCloseHit : this.closeNode.active = !1);
if (this.popupStack.length > 0) {
var s = this.popupStack[this.popupStack.length - 1];
if (s.touchThrough) this.touchLayer.active = !1; else {
this.touchLayer.zIndex = s.zIndex - 1;
this.touchLayer.active = !0;
}
} else this.touchLayer.active = !1;
var r = this.popupStack[this.popupStack.length - 1];
if (r && r.delayCloseTime && this.touchLayer.active) {
this.touchLayer.getComponent(cc.Button).enabled = !1;
cc.tween(this.touchLayer).delay(r.delayCloseTime).call(function() {
e.touchLayer.getComponent(cc.Button).enabled = !0;
}).start();
}
}
},
removePopup: function(e, t) {
var i = this;
if (e && cc.isValid(e)) {
for (var n = 0; n < this.popupStack.length; n++) if (this.popupStack[n].node == e) {
this.popupStack[n].closeOutSound || cc.vv.EventManager.emit("EVENT_BTN_CLOSE_SOUNDS");
var a = function() {
i.popupStack[n].onClose && i.popupStack[n].onClose(i.popupStack[n].node, i);
i.onClosePopup(i.popupStack[n]);
i.popupStack[n].node.destroy();
i.popupStack.splice(n, 1);
i.updateStack();
};
!t && this.popupStack[n].onCloseBefore ? this.popupStack[n].onCloseBefore(this.popupStack[n].node, a) : a();
break;
}
this.updateStack();
}
},
removeAll: function() {
for (var e = 0; e < this.popupStack.length; e++) {
var t = this.popupStack[e];
if (t && t.node && t.node.destroy) {
t.onClose && t.onClose(t.node, this);
this.onClosePopup(t);
t.node.destroy();
}
}
this.popupStack = [];
this.waitingQueue = [];
this.touchLayer && cc.isValid(this.touchLayer, !0) && this.touchLayer.destroy();
this.maskLayer && cc.isValid(this.maskLayer, !0) && this.maskLayer.destroy();
this.maskLayer = null;
this.touchLayer = null;
},
getPopupByName: function(e) {
for (var t = 0; t < this.popupStack.length; t++) {
var i = this.popupStack[t];
if (i && i.node && e == i.name) return i.node;
}
return null;
},
onClosePopup: function(e) {
var t = e.node, i = e.bottomOut, n = (e.leftOut, e.rightOut, e.scaleOut), a = e.scaleOutParm;
StatisticsMgr.reqReportNow(ReportConfig.POPUP_CLOSE, e.name);
if (i) ; else if (n && a) {
var o = this.createTempPopup(t);
cc.tween(o).to(.1, {
scale: .5
}).to(.2, {
scale: .03,
position: a.toPos
}, {
easing: "quadOut"
}).call(function() {
a.node && cc.tween(a.node).to(.05, {
scale: 1.1 * a.scale
}).to(.05, {
scale: a.scale
}).start();
o.destroy();
}).start();
}
},
createTempPopup: function(e) {
for (var t, n = i(e.getComponentsInChildren(cc.Component)); !(t = n()).done; ) {
var a = t.value;
a instanceof cc.Sprite || a instanceof cc.Label || a instanceof sp.Skeleton || a instanceof cc.Mask || (a.enabled = !1);
}
for (var o, c = i(e.getComponentsInChildren("Tabbar")); !(o = c()).done; ) o.value.node.active = !1;
for (var s, r = i(e.getComponentsInChildren("List")); !(s = r()).done; ) s.value.node.active = !1;
for (var l, d = i(e.getComponentsInChildren("ListView")); !(l = d()).done; ) l.value.node.active = !1;
for (var h, _ = i(e.getComponentsInChildren("NetListenerCmp")); !(h = _()).done; ) h.value.clear();
for (var p, u = i(e.getComponentsInChildren("EventListenerCmp")); !(p = u()).done; ) p.value.clear();
for (var f, g = i(e.getComponents("NetListenerCmp")); !(f = g()).done; ) f.value.clear();
for (var m, v = i(e.getComponents("EventListenerCmp")); !(m = v()).done; ) m.value.clear();
var S = cc.instantiate(e);
S.parent = e.parent;
S.position = e.position;
S.zIndex = 1e3;
return S;
},
showTopWin: function(e, t, i) {
var n = this;
void 0 === i && (i = 1e4);
cc.loader.loadRes(e, cc.Prefab, function(e, a) {
if (!e) {
var o = cc.instantiate(a);
o.zIndex = i;
o.parent = cc.director.getScene();
t.onShow && t.onShow(o, n);
}
});
}
},
log: function() {
cc.log(this.popupStack);
}
});
cc._RF.pop();
}, {} ],
PopupNewGuideName: [ function(e, t) {
"use strict";
cc._RF.push(t, "39af9XrrDBGuYKmkKmL1UnY", "PopupNewGuideName");
cc.Class({
extends: cc.Component,
properties: {
inputEdit: cc.EditBox,
button: cc.Button
},
onLoad: function() {
this.button.getComponent("ButtonGrayCmp").interactable = !1;
this.button.node.on("click", this.onClickSave, this);
var e = this.node.addComponent("NetListenerCmp");
e.registerMsg(MsgId.UPDATE_USER_INFO, this.UPDATE_USER_INFO, this);
e.registerMsg(MsgId.USER_NEW_GIFT, this.USER_NEW_GIFT, this);
},
onChangeText: function(e) {
for (var t = e.trim(), i = t.split(""), n = [], a = 0; a < i.length; a++) {
var o = i[a].charCodeAt(0);
o > 127 && o < 2304 || o > 2431 || n.push(i[a]);
}
t = n.join("");
this.inputEdit.string = t;
this.button.getComponent("ButtonGrayCmp").interactable = t.length > 0;
},
onClickSave: function() {
var e = this.inputEdit.string.trim(), t = {
$RoleClass: "NewPlayer"
};
t.$RoleName = e;
t.$FirstCreate = 1;
t.$RoleGender = cc.vv.UserManager.sex;
t.$Server = 1;
cc.vv.PlatformApiMgr.KoSDKTrackEvent("$CreateRole", JSON.stringify(t));
cc.vv.NetManager.send({
c: MsgId.UPDATE_USER_INFO,
nickname: e
});
},
USER_NEW_GIFT: function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0); else {
Global.RewardFly(e.rewards, this.button.node.convertToWorldSpaceAR(cc.v2(0, 0)));
cc.vv.PopupManager.removePopup(this.node);
}
},
UPDATE_USER_INFO: function(e) {
200 == e.code && (e.spcode && e.spcode > 0 ? cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0) : cc.vv.PopupManager.removePopup(this.node));
}
});
cc._RF.pop();
}, {} ],
PopupReport: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ac397+Xip9NSK+W4Xqgge1P", "PopupReport");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.editBox = null;
t.reportBtn = null;
return t;
}
t.prototype.onLoad = function() {
this.node.addComponent("NetListenerCmp").registerMsg(MsgId.REPORT_USER, this.REPORT_USER, this);
this.reportBtn.node.on("click", this.onClickReport, this);
};
t.prototype.onInit = function(e) {
this.playerInfo = e;
cc.find("UserHead", this.node).getComponent("HeadCmp").setHead(e.uid, e.usericon);
cc.find("name", this.node).getComponent(cc.Label).string = e.playername;
cc.find("uid", this.node).getComponent(cc.Label).string = "ID:" + e.uid;
this.reportBtn.getComponent("ButtonGrayCmp").interactable = !1;
};
t.prototype.onChangeText = function() {
this.reportBtn.getComponent("ButtonGrayCmp").interactable = this.editBox.string.trim().length > 0;
};
t.prototype.onClickReport = function() {
this.editBox.string.trim().length <= 0 || cc.vv.NetManager.send({
c: MsgId.REPORT_USER,
otheruid: this.playerInfo.uid,
content: this.editBox.string,
stype: 6
});
};
t.prototype.REPORT_USER = function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0); else {
cc.vv.FloatTip.show(___("举报成功"), !0);
cc.vv.PopupManager.removePopup(this.node);
}
};
__decorate([ o(cc.EditBox) ], t.prototype, "editBox", void 0);
__decorate([ o(cc.Button) ], t.prototype, "reportBtn", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
PopupReward: [ function(e, t) {
"use strict";
cc._RF.push(t, "8d5deHIzoVNsp5EWkZOFK+A", "PopupReward");
var i;
cc.Class(((i = {
extends: cc.Component,
properties: {
animSke: sp.Skeleton,
boomPrefab: cc.Prefab,
reawrdNode: cc.Node,
chatSpriteFrames: cc.SpriteAtlas,
vipExpFrame: cc.SpriteFrame
},
onLoad: function() {
var e = this;
this.rewardCpt = this.reawrdNode.getComponent("RewardListCpt");
this.animSke.setCompleteListener(function(t) {
t.animation && "animation" == t.animation.name && e.animSke.setAnimation(0, "animation2", !0);
});
},
start: function() {
this.animSke.setAnimation(0, "animation", !0);
},
setData: function(e) {
var t = this, i = this.rewardCpt.updateView(e);
this.scheduleOnce(function() {
var e = i[1], n = cc.find("Canvas/UserinfoBar/coin/icon");
if (e && n) if (e.data.count > 3e6) {
var a = e.node.getComponentInChildren(cc.Sprite);
a && Global.FlyAnimTo(e.node, n, {
spriteFrame: a.spriteFrame,
scale: .75,
delay: .3,
onStart: function() {
e.node.active = !1;
var i = cc.instantiate(t.boomPrefab);
if (i) {
i.parent = cc.find("Canvas");
var n = e.node.convertToWorldSpaceAR(cc.v2(0, 0));
i.position = i.parent.convertToNodeSpaceAR(n);
i.zIndex = 900;
i.getComponent(sp.Skeleton).setCompleteListener(function(e) {
e.animation && "animation" == e.animation.name && i.destroy();
});
}
}
});
} else {
var o = {
lblCoin: cc.find("Canvas/UserinfoBar/coin/lbl_coin"),
addCoin: e.data.count,
begin: cc.vv.UserManager.coin - e.data.count
};
Global.FlyCoinV2(e.node, null, null, o, !0);
}
var c = i[25], s = cc.find("Canvas/UserinfoBar/钻石/icon");
if (c && s) {
if (c.data.count > 3e3) {
var r = c.node.getComponentInChildren(cc.Sprite);
r && Global.FlyAnimTo(c.node, s, {
spriteFrame: r.spriteFrame,
scale: .75,
delay: .3,
onStart: function() {
c.node.active = !1;
var e = cc.instantiate(t.boomPrefab);
if (e) {
e.parent = cc.find("Canvas");
var i = c.node.convertToWorldSpaceAR(cc.v2(0, 0));
e.position = e.parent.convertToNodeSpaceAR(i);
e.zIndex = 900;
e.getComponent(sp.Skeleton).setCompleteListener(function(t) {
t.animation && "animation" == t.animation.name && e.destroy();
});
}
}
});
} else {
var l = {
addCoin: c.data.count,
begin: cc.vv.UserManager.getDiamond() - c.data.count
};
Global.FlyDiamond(c.node, null, null, l, !0);
}
var d = i[2], h = cc.find("Canvas/UserinfoBar/VIP/progress/icon");
t.vipExpFrame && d && Global.FlyAnimTo(c.node, h, {
spriteFrame: t.vipExpFrame,
scale: .5,
delay: .3
});
}
}, .5);
this.scheduleOnce(function() {
cc.vv.PopupManager.removePopup(t.node);
}, 2);
}
}).start = function() {
cc.vv.AudioManager.playEff("BalootClient/BaseRes/", "get_coins", !0);
}, i));
cc._RF.pop();
}, {} ],
PopupRoomLeagueView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d7519Av0+RMSZSwKrEDG+wh", "PopupRoomLeagueView");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.listViewNode = null;
t.frame_1 = null;
t.frame_2 = null;
return t;
}
t.prototype.onLoad = function() {
var e = this.node.addComponent("NetListenerCmp");
this.listView = this.listViewNode.getComponent("ListView");
e.registerMsg(MsgId.GET_LEAGUE_INFO, this.GET_LEAGUE_INFO, this);
};
t.prototype.onInit = function(e) {
this.gameId = e;
cc.vv.NetManager.sendAndCache({
c: MsgId.GET_LEAGUE_INFO,
gameid: this.gameId
});
};
t.prototype.GET_LEAGUE_INFO = function(e) {
if (200 == e.code) {
this.localData = e;
this.updateView();
}
};
t.prototype.updateView = function() {
this.listView.numItems = this.localData.sideUser.length;
for (var e = 0, t = 0; t < this.localData.sideUser.length; t++) this.localData.sideUser[t].uid == cc.vv.UserManager.uid && (e = t);
this.listView.scrollTo(e, 0, .4);
};
t.prototype.onUpdateItem = function(e, t) {
var i = this.localData.sideUser[t];
e.getComponent(cc.Sprite).spriteFrame = i.uid == cc.vv.UserManager.uid ? this.frame_2 : this.frame_1;
cc.find("label_rank", e).getComponent(cc.Label).string = i.rank;
cc.find("label_name", e).getComponent(cc.Label).string = i.playername;
cc.find("label_exp", e).getComponent(cc.Label).string = i.score;
};
__decorate([ o(cc.Node) ], t.prototype, "listViewNode", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "frame_1", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "frame_2", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
PopupSelectSendTypeView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3f8d7cLJrdAzrmKprfX/ae8", "PopupSelectSendTypeView");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./ShopFriendSendCoin"), a = e("./ShopSendCoin"), o = cc._decorator, c = o.ccclass, s = o.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.uidBtn = null;
t.friendBtn = null;
t.friendPrefab = null;
t.sendPrefab = null;
return t;
}
t.prototype.onInit = function(e) {
this.data = e;
this.uidBtn.node.on("click", this.onClickUid, this);
this.friendBtn.node.on("click", this.onClickFriend, this);
};
t.prototype.onClickUid = function() {
var e = this;
cc.vv.PopupManager.addPopup(this.sendPrefab, {
opacityIn: !0,
onShow: function(t) {
t.getComponent(a.default).onInit(e.data);
}
});
cc.vv.PopupManager.removePopup(this.node);
};
t.prototype.onClickFriend = function() {
var e = this;
cc.vv.PopupManager.addPopup(this.friendPrefab, {
opacityIn: !0,
onShow: function(t) {
t.getComponent(n.default).onInit(e.data);
}
});
cc.vv.PopupManager.removePopup(this.node);
};
__decorate([ s(cc.Button) ], t.prototype, "uidBtn", void 0);
__decorate([ s(cc.Button) ], t.prototype, "friendBtn", void 0);
__decorate([ s(cc.Prefab) ], t.prototype, "friendPrefab", void 0);
__decorate([ s(cc.Prefab) ], t.prototype, "sendPrefab", void 0);
return __decorate([ c ], t);
}(cc.Component);
i.default = r;
cc._RF.pop();
}, {
"./ShopFriendSendCoin": "ShopFriendSendCoin",
"./ShopSendCoin": "ShopSendCoin"
} ],
PopupSetting: [ function(e, t) {
"use strict";
cc._RF.push(t, "169d13bH4hBE5vt1yj4Vgf3", "PopupSetting");
cc.Class({
extends: cc.Component,
properties: {
musicToggle: cc.Toggle,
soundToggle: cc.Toggle,
versionLabel: cc.Label,
currentLanLabel: cc.Label,
_isRefuseGift: !1,
phoneBindBtn: cc.Button
},
onLoad: function() {
this.musicToggle.isChecked = cc.vv.AudioManager.getBgmVolume() > 0;
this.soundToggle.isChecked = cc.vv.AudioManager.getEffVolume() > 0;
this.updateLangView();
this.updateBindBtns();
this._isRefuseGift = 1 == Global.getLocal("REFUSE_GIFT_ANIM", 0);
var e = this.node.addComponent("EventListenerCmp");
e.registerEvent(EventId.FB_BIND_SUCCESS, this.FB_BIND_SUCCESS, this);
e.registerEvent(EventId.EVENT_BIND_PHONE, this.EVENT_BIND_PHONE, this);
},
onEnable: function() {
var e = cc.js.formatStr("%s(%s)", Global.resVersion, cc.vv.PlatformApiMgr.getAppVersion());
this.versionLabel.string = ___("版本{1}", e);
},
updateLangView: function() {
var e = cc.vv.i18nManager.getLanguage();
this.currentLanLabel.string = cc.vv.i18nManager.getLanguageConfig(e).name;
},
onChangeMusic: function(e) {
cc.vv.AudioManager.setBgmVolume(e.isChecked ? 1 : 0);
e.isChecked ? StatisticsMgr.reqReport(ReportConfig.SETTING_MUSIC_ON) : StatisticsMgr.reqReport(ReportConfig.SETTING_MUSIC_OFF);
},
onChangeSounds: function(e) {
cc.vv.AudioManager.setEffVolume(e.isChecked ? 1 : 0);
e.isChecked ? StatisticsMgr.reqReport(ReportConfig.SETTING_SOUND_ON) : StatisticsMgr.reqReport(ReportConfig.SETTING_SOUND_OFF);
},
onChangeApply: function(e) {
var t = e.isChecked ? 1 : 0;
cc.vv.NetManager.send({
c: MsgId.UPDATE_USER_INFO,
verifyfriend: t
});
},
onClickShop: function() {
StatisticsMgr.reqReport(ReportConfig.SETTING_LIKE);
Global.isIOS() ? cc.vv.PlatformApiMgr.openURL(cc.vv.UserManager.rateios) : cc.vv.PlatformApiMgr.openURL(cc.vv.UserManager.rateandroid);
},
onFbShare: function() {
StatisticsMgr.reqReport(ReportConfig.SETTING_SHARE);
cc.vv.FBMgr.fbShareWeb(cc.vv.UserManager.sharelink);
},
onFeedback: function() {
if (cc.vv.UserManager.feedback) {
var e = {
sender: cc.vv.UserManager.feedback,
title: "",
content: ""
};
cc.vv.PlatformApiMgr.SendMail(JSON.stringify(e));
}
},
onWhatsApp: function() {
StatisticsMgr.reqReport(ReportConfig.SETTING_WHATSAPP);
cc.vv.PlatformApiMgr.openURL(cc.vv.UserManager.whatapplink);
},
FB_BIND_SUCCESS: function(e) {
var t = e.detail || {};
this.bindBtn && Global.RewardFly(t.rewards, this.bindBtn.node.convertToWorldSpaceAR(cc.v2(0, 0)));
this.updateBindBtns();
},
EVENT_BIND_PHONE: function() {
this.updateBindBtns();
},
onFbBind: function() {
if (Global.isNative()) {
StatisticsMgr.reqReport(ReportConfig.SETTING_BIND_FB);
cc.vv.PlatformApiMgr.fbLogin(function(e) {
AppLog.log("=======LMSlots--FbAuth=========:  " + JSON.stringify(e));
if (1 == parseInt(e.result)) {
var t = {
c: MsgId.REQ_BIND_FACEBOOK,
accesstoken: e.token,
token: e.token,
user: e.uid,
type: Global.LoginType.FB
};
cc.vv.NetManager.send(t);
} else cc.vv.FloatTip.show(___("FB账号绑定失败!"));
});
}
},
onGoogleBind: function() {
Global.isNative() && cc.vv.PlatformApiMgr.startGoogleLogin(function(e) {
AppLog.log("=======LMSlots===onBtnGoogleLogin======:  " + JSON.stringify(e));
if (parseInt(e.result)) {
var t = e.userInfo, i = {
c: MsgId.REQ_BIND_FACEBOOK,
type: Global.LoginType.GOOGLE_LOGIN,
token: t.id_token,
accesstoken: t.id_token,
user: t.email
};
cc.vv.NetManager.send(i);
} else cc.vv.FloatTip.show(___("Google账号绑定失败!"));
});
},
onAppleBind: function() {
Global.isNative() && cc.vv.PlatformApiMgr.startAppleLogin(function(e) {
AppLog.log("=======LMSlots--AppleSignIn=========:  " + JSON.stringify(e));
if (parseInt(e.code)) {
var t = {
c: MsgId.REQ_BIND_FACEBOOK,
accesstoken: e.authorizationCode,
token: e.identityToken,
user: e.user,
type: Global.LoginType.APPLE_LOGIN
};
cc.vv.NetManager.send(t);
} else cc.vv.FloatTip.show(___("Apple账号绑定失败"));
});
},
updateBindBtns: function() {
parseInt(cc.vv.PlatformApiMgr.getAppVersion().split(".").join(""));
var e = cc.vv.UserManager.isbindphone > 0;
cc.vv.UserManager.kyc > 0 && (e = !0);
this.phoneBindBtn.interactable = !e;
cc.find("isbind", this.phoneBindBtn.node).active = e;
}
});
cc._RF.pop();
}, {} ],
PopupShopVip: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9fed2aoMMZAp5FGs2DDZ9aR", "PopupShopVip");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.vipHintNode = null;
t.btn_go = null;
return t;
}
t.prototype.onLoad = function() {
var e = this;
this.netListener = this.node.addComponent("NetListenerCmp");
cc.find("btn_gift/btn_green", this.node).on("click", function() {
e.vipgift && Global.isNative() && cc.vv.PayMgr.reqPurchaseOrder(e.vipgift.id);
});
this.btn_go.node.on("click", function() {
cc.vv.GameManager.jumpTo(9);
}, this);
this.vipHintNode.active = cc.vv.UserManager.tmpvip > 0;
};
t.prototype.start = function() {
cc.vv.NetManager.sendAndCache({
c: MsgId.REQ_SHOP_EX,
stype: "30",
platform: Global.isIOS() ? 2 : 1
}, !0);
};
t.prototype.onEnable = function() {
this.netListener.registerMsg(MsgId.REQ_SHOP_EX, this.REQ_SHOP_EX, this);
this.netListener.registerMsg(MsgId.PURCHASE_RECHARGE_SUC, this.PURCHASE_RECHARGE_SUC, this);
};
t.prototype.onDestroy = function() {
this.netListener.clear();
};
t.prototype.REQ_SHOP_EX = function(e) {
if (200 == e.code && !(e.spcode && e.spcode > 0)) {
var t = e.shoplist || {};
if (t.data30 && t.data30.length > 0) {
this.vipgift = e.shoplist.data30[0];
this.updateView();
}
}
};
t.prototype.updateView = function() {
if (this.vipgift) {
var e = "";
cc.vv.PayMgr.getLocalPrice && (e = cc.vv.PayMgr.getLocalPrice(this.vipgift.productid));
e = e || __(this.vipgift.unit, Global.FormatNumToComma(this.vipgift.amount));
cc.find("btn_gift/btn_green/label", this.node).getComponent(cc.Label).string = e;
cc.find("btn_gift/layout/price/value", this.node).getComponent(cc.Label).string = Global.FormatNumToComma(this.vipgift.diamond);
}
};
t.prototype.PURCHASE_RECHARGE_SUC = function(e) {
if (200 == e.code && e.rewards) {
Global.RewardFly(e.rewards, cc.find("btn_gift", this.node).convertToWorldSpaceAR(cc.v2(0, 0)));
Global.dispatchEvent("PURCHASE_VIP_SUC");
this.node.destroy();
}
};
__decorate([ o(cc.Node) ], t.prototype, "vipHintNode", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btn_go", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
PopupSign: [ function(e, t) {
"use strict";
cc._RF.push(t, "55e167GqMtFLqOhQCaCqxjX", "PopupSign");
function i() {
i = function() {
return e;
};
var e = {}, t = Object.prototype, n = t.hasOwnProperty, a = "function" == typeof Symbol ? Symbol : {}, o = a.iterator || "@@iterator", c = a.asyncIterator || "@@asyncIterator", s = a.toStringTag || "@@toStringTag";
function r(e, t, i) {
return Object.defineProperty(e, t, {
value: i,
enumerable: !0,
configurable: !0,
writable: !0
}), e[t];
}
try {
r({}, "");
} catch (e) {
r = function(e, t, i) {
return e[t] = i;
};
}
function l(e, t, i, n) {
var a = t && t.prototype instanceof _ ? t : _, o = Object.create(a.prototype), c = new L(n || []);
return o._invoke = function(e, t, i) {
var n = "suspendedStart";
return function(a, o) {
if ("executing" === n) throw new Error("Generator is already running");
if ("completed" === n) {
if ("throw" === a) throw o;
return {
value: void 0,
done: !0
};
}
for (i.method = a, i.arg = o; ;) {
var c = i.delegate;
if (c) {
var s = b(c, i);
if (s) {
if (s === h) continue;
return s;
}
}
if ("next" === i.method) i.sent = i._sent = i.arg; else if ("throw" === i.method) {
if ("suspendedStart" === n) throw n = "completed", i.arg;
i.dispatchException(i.arg);
} else "return" === i.method && i.abrupt("return", i.arg);
n = "executing";
var r = d(e, t, i);
if ("normal" === r.type) {
if (n = i.done ? "completed" : "suspendedYield", r.arg === h) continue;
return {
value: r.arg,
done: i.done
};
}
"throw" === r.type && (n = "completed", i.method = "throw", i.arg = r.arg);
}
};
}(e, i, c), o;
}
function d(e, t, i) {
try {
return {
type: "normal",
arg: e.call(t, i)
};
} catch (e) {
return {
type: "throw",
arg: e
};
}
}
e.wrap = l;
var h = {};
function _() {}
function p() {}
function u() {}
var f = {};
r(f, o, function() {
return this;
});
var g = Object.getPrototypeOf, m = g && g(g(T([])));
m && m !== t && n.call(m, o) && (f = m);
var v = u.prototype = _.prototype = Object.create(f);
function S(e) {
[ "next", "throw", "return" ].forEach(function(t) {
r(e, t, function(e) {
return this._invoke(t, e);
});
});
}
function C(e, t) {
function i(a, o, c, s) {
var r = d(e[a], e, o);
if ("throw" !== r.type) {
var l = r.arg, h = l.value;
return h && "object" == typeof h && n.call(h, "__await") ? t.resolve(h.__await).then(function(e) {
i("next", e, c, s);
}, function(e) {
i("throw", e, c, s);
}) : t.resolve(h).then(function(e) {
l.value = e, c(l);
}, function(e) {
return i("throw", e, c, s);
});
}
s(r.arg);
}
var a;
this._invoke = function(e, n) {
function o() {
return new t(function(t, a) {
i(e, n, t, a);
});
}
return a = a ? a.then(o, o) : o();
};
}
function b(e, t) {
var i = e.iterator[t.method];
if (void 0 === i) {
if (t.delegate = null, "throw" === t.method) {
if (e.iterator.return && (t.method = "return", t.arg = void 0, b(e, t), "throw" === t.method)) return h;
t.method = "throw", t.arg = new TypeError("The iterator does not provide a 'throw' method");
}
return h;
}
var n = d(i, e.iterator, t.arg);
if ("throw" === n.type) return t.method = "throw", t.arg = n.arg, t.delegate = null, 
h;
var a = n.arg;
return a ? a.done ? (t[e.resultName] = a.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", 
t.arg = void 0), t.delegate = null, h) : a : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), 
t.delegate = null, h);
}
function E(e) {
var t = {
tryLoc: e[0]
};
1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), 
this.tryEntries.push(t);
}
function y(e) {
var t = e.completion || {};
t.type = "normal", delete t.arg, e.completion = t;
}
function L(e) {
this.tryEntries = [ {
tryLoc: "root"
} ], e.forEach(E, this), this.reset(!0);
}
function T(e) {
if (e) {
var t = e[o];
if (t) return t.call(e);
if ("function" == typeof e.next) return e;
if (!isNaN(e.length)) {
var i = -1, a = function t() {
for (;++i < e.length; ) if (n.call(e, i)) return t.value = e[i], t.done = !1, t;
return t.value = void 0, t.done = !0, t;
};
return a.next = a;
}
}
return {
next: I
};
}
function I() {
return {
value: void 0,
done: !0
};
}
return p.prototype = u, r(v, "constructor", u), r(u, "constructor", p), p.displayName = r(u, s, "GeneratorFunction"), 
e.isGeneratorFunction = function(e) {
var t = "function" == typeof e && e.constructor;
return !!t && (t === p || "GeneratorFunction" === (t.displayName || t.name));
}, e.mark = function(e) {
return Object.setPrototypeOf ? Object.setPrototypeOf(e, u) : (e.__proto__ = u, r(e, s, "GeneratorFunction")), 
e.prototype = Object.create(v), e;
}, e.awrap = function(e) {
return {
__await: e
};
}, S(C.prototype), r(C.prototype, c, function() {
return this;
}), e.AsyncIterator = C, e.async = function(t, i, n, a, o) {
void 0 === o && (o = Promise);
var c = new C(l(t, i, n, a), o);
return e.isGeneratorFunction(i) ? c : c.next().then(function(e) {
return e.done ? e.value : c.next();
});
}, S(v), r(v, s, "Generator"), r(v, o, function() {
return this;
}), r(v, "toString", function() {
return "[object Generator]";
}), e.keys = function(e) {
var t = [];
for (var i in e) t.push(i);
return t.reverse(), function i() {
for (;t.length; ) {
var n = t.pop();
if (n in e) return i.value = n, i.done = !1, i;
}
return i.done = !0, i;
};
}, e.values = T, L.prototype = {
constructor: L,
reset: function(e) {
if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, 
this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(y), 
!e) for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0);
},
stop: function() {
this.done = !0;
var e = this.tryEntries[0].completion;
if ("throw" === e.type) throw e.arg;
return this.rval;
},
dispatchException: function(e) {
if (this.done) throw e;
var t = this;
function i(i, n) {
return c.type = "throw", c.arg = e, t.next = i, n && (t.method = "next", t.arg = void 0), 
!!n;
}
for (var a = this.tryEntries.length - 1; a >= 0; --a) {
var o = this.tryEntries[a], c = o.completion;
if ("root" === o.tryLoc) return i("end");
if (o.tryLoc <= this.prev) {
var s = n.call(o, "catchLoc"), r = n.call(o, "finallyLoc");
if (s && r) {
if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
if (this.prev < o.finallyLoc) return i(o.finallyLoc);
} else if (s) {
if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
} else {
if (!r) throw new Error("try statement without catch or finally");
if (this.prev < o.finallyLoc) return i(o.finallyLoc);
}
}
}
},
abrupt: function(e, t) {
for (var i = this.tryEntries.length - 1; i >= 0; --i) {
var a = this.tryEntries[i];
if (a.tryLoc <= this.prev && n.call(a, "finallyLoc") && this.prev < a.finallyLoc) {
var o = a;
break;
}
}
o && ("break" === e || "continue" === e) && o.tryLoc <= t && t <= o.finallyLoc && (o = null);
var c = o ? o.completion : {};
return c.type = e, c.arg = t, o ? (this.method = "next", this.next = o.finallyLoc, 
h) : this.complete(c);
},
complete: function(e, t) {
if ("throw" === e.type) throw e.arg;
return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, 
this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), 
h;
},
finish: function(e) {
for (var t = this.tryEntries.length - 1; t >= 0; --t) {
var i = this.tryEntries[t];
if (i.finallyLoc === e) return this.complete(i.completion, i.afterLoc), y(i), h;
}
},
catch: function(e) {
for (var t = this.tryEntries.length - 1; t >= 0; --t) {
var i = this.tryEntries[t];
if (i.tryLoc === e) {
var n = i.completion;
if ("throw" === n.type) {
var a = n.arg;
y(i);
}
return a;
}
}
throw new Error("illegal catch attempt");
},
delegateYield: function(e, t, i) {
return this.delegate = {
iterator: T(e),
resultName: t,
nextLoc: i
}, "next" === this.method && (this.arg = void 0), h;
}
}, e;
}
function n(e, t, i, n, a, o, c) {
try {
var s = e[o](c), r = s.value;
} catch (e) {
i(e);
return;
}
s.done ? t(r) : Promise.resolve(r).then(n, a);
}
cc.Class({
extends: cc.Component,
properties: {
contentNode: cc.Node,
_sign: !1
},
onLoad: function() {
var e = this.node.addComponent("NetListenerCmp");
e.registerMsg(MsgId.EVENT_VIP_SIGN_CONFIG, this.EVENT_VIP_SIGN_CONFIG, this);
e.registerMsg(MsgId.EVENT_VIP_SIGN_REWARD, this.EVENT_VIP_SIGN_REWARD, this);
for (var t = 0; t < this.contentNode.children.length; t++) this.contentNode.children[t].on("click", this.onClickItem, this);
this._sg = cc.find("bg/sg", this.node);
this._sg.active = !1;
},
onEnable: function() {
cc.vv.NetManager.sendAndCache({
c: MsgId.EVENT_VIP_SIGN_CONFIG
});
},
EVENT_VIP_SIGN_CONFIG: function(e) {
var t, a = this;
return (t = i().mark(function t() {
return i().wrap(function(t) {
for (;;) switch (t.prev = t.next) {
case 0:
if (200 == e.code) {
t.next = 2;
break;
}
return t.abrupt("return");

case 2:
a.localData = e;
a.updateView();

case 4:
case "end":
return t.stop();
}
}, t);
}), function() {
var e = this, i = arguments;
return new Promise(function(a, o) {
var c = t.apply(e, i);
function s(e) {
n(c, a, o, s, r, "next", e);
}
function r(e) {
n(c, a, o, s, r, "throw", e);
}
s(void 0);
});
})();
},
EVENT_VIP_SIGN_REWARD: function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0); else {
7 == e.curSignCount && (cc.vv.UserManager.vipsign = 2);
this.localData.signFlag = 1;
this.updateView();
var t = cc.find("bg/jiangli", this.node);
t.active = !0;
var i = t.getComponent(sp.Skeleton);
i.setAnimation(0, "animation", !1);
i.setCompleteListener(function() {
cc.vv.PopupManager.removeTop();
});
Global.RewardFly(e.rewards, t.convertToWorldSpaceAR(cc.v2(0, 0)));
StatisticsMgr.reqReport(ReportConfig.SIGN_VIP_REWARD_GET);
}
},
updateView: function() {
for (var e = 0; e < this.contentNode.children.length; e++) {
var t = this.contentNode.children[e];
this.onUpdateItem(t, e);
}
},
onUpdateItem: function(e, t) {
var i = this.localData.signData[t];
cc.find("light", e).active = !1;
cc.find("today", e).active = i.day == this.localData.signCount;
var n = cc.find("node_vip_lock", e);
if (n) {
n.active = i.svip > 0 && i.svip > cc.vv.UserManager.svip;
var a = cc.find("vip", n).getComponent(cc.Sprite);
cc.vv.UserConfig.setVipFrame(a, i.svip);
}
if (i.day == this.localData.signCount) {
cc.find("light", e).active = 0 == this.localData.signFlag;
cc.find("icon_ok", e).active = 1 == this.localData.signFlag;
var o = 1 == this.localData.signFlag ? i.prize[0].count : "Claim";
Global.setLabelString("lbl_val", e, o);
if (0 == this.localData.signFlag) {
this._sg.active = !0;
this._sg.position = this._sg.parent.convertToNodeSpaceAR(e.convertToWorldSpaceAR(cc.v2(4, 4)));
var c = this._sg.getComponent(sp.Skeleton);
6 == t ? c.setAnimation(0, "animation2", !0) : c.setAnimation(0, "animation", !0);
}
} else {
cc.find("icon_ok", e).active = i.day < this.localData.signCount;
var s = i.day < this.localData.signCount ? i.prize[0].count : "Claim";
Global.setLabelString("lbl_val", e, s);
}
},
onClickItem: function(e) {
if (this.localData) {
var t = this.contentNode.children.indexOf(e.node), i = this.localData.signData[t];
if (i.day == this.localData.signCount && 0 == this.localData.signFlag) {
if (i.svip > 0 && i.svip > cc.vv.UserManager.svip) {
cc.vv.AlertView.show("Upgrade to VIP" + i.svip + " for more bonuses", function() {
cc.vv.EventManager.emit("HALL_OPEN_SHOP", {
open: 1
});
}, function() {}, null, null, null, null, "Deposit");
return;
}
cc.vv.NetManager.send({
c: MsgId.EVENT_VIP_SIGN_REWARD
});
cc.vv.RedHitManager.setKeyVal("sign", 0);
}
}
}
});
cc._RF.pop();
}, {} ],
PopupVipUpgrade: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c1e49bXGbBLYqG6jTBZs+r/", "PopupVipUpgrade");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.icon = null;
t.goBtn = null;
t.noBtn = null;
return t;
}
t.prototype.onLoad = function() {
this.goBtn.node.on("click", function() {
cc.vv.EventManager.emit("HALL_OPEN_SHOP", {
open: 2
});
Global.dispatchEvent("VIP_GET_REWARD");
});
};
t.prototype.onInit = function(e) {
e = e || {};
this.noBtn.node.active = e.wait;
cc.vv.UserConfig.setVipFrame(this.icon, e.svip);
};
__decorate([ o(cc.Sprite) ], t.prototype, "icon", void 0);
__decorate([ o(cc.Button) ], t.prototype, "goBtn", void 0);
__decorate([ o(cc.Button) ], t.prototype, "noBtn", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
PopupZCService: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6d88fCltzZADKCkJK9jC7h+", "PopupZCService");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.acceptBtn = null;
return t;
}
t.prototype.onLoad = function() {
this.acceptBtn.node.on("click", this.onClickAccept, this);
};
t.prototype.onClickAccept = function() {
this.callback && this.callback();
Global.saveLocal("IS_SHOW_ZC", "1");
cc.vv.PopupManager.removePopup(this.node);
};
t.prototype.setCallback = function(e) {
this.callback = e;
};
__decorate([ o(cc.Button) ], t.prototype, "acceptBtn", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
PrefabCfgCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7abb6iah5VLh6VVzWXIZVP4", "PrefabCfgCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PrefabCfgItem = void 0;
var n = cc._decorator, a = n.ccclass, o = n.property, c = n.menu, s = (n.requireComponent, 
function() {
function e() {
this.key = "";
this.prefab = null;
}
__decorate([ o({
displayName: "Key"
}) ], e.prototype, "key", void 0);
__decorate([ o({
type: cc.Prefab,
displayName: "预制体"
}) ], e.prototype, "prefab", void 0);
return __decorate([ a("PrefabCfgItem") ], e);
}());
i.PrefabCfgItem = s;
var r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.config = [];
return t;
}
__decorate([ o({
type: [ s ]
}) ], t.prototype, "config", void 0);
return __decorate([ a, c("ECS/配置/预制体配置") ], t);
}(cc.Component);
i.default = r;
cc._RF.pop();
}, {} ],
PreloadingPrefab: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8b99eLe1MJHjp9Z9cdGis56", "PreloadingPrefab");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PreloadingPrefab = void 0;
var n, a = cc._decorator, o = a.ccclass, c = a.property, s = a.menu;
(function(e) {
e[e.Prefab = 1] = "Prefab";
e[e.Path = 2] = "Path";
})(n || (n = {}));
var r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.type = n.Prefab;
t.prefab = null;
t.path = "";
t.isAndroidReview = !1;
t.isIOSReview = !1;
return t;
}
t.prototype.onLoad = function() {
this.isAndroidReview && Global.isAndroidReview ? this.getComponent(cc.Sprite).enabled = !1 : this.isIOSReview && Global.isIOSReview ? this.getComponent(cc.Sprite).enabled = !1 : this.updateView();
};
t.prototype.updateView = function() {
return __awaiter(this, void 0, void 0, function() {
var e, t;
return __generator(this, function(i) {
switch (i.label) {
case 0:
this.getComponent(cc.Sprite).enabled = !1;
if (this.type != n.Path) return [ 3, 2 ];
e = this;
return [ 4, cc.vv.ResManager.loadPrefab(this.path) ];

case 1:
e.prefab = i.sent();
i.label = 2;

case 2:
if (this.prefab) {
(t = cc.instantiate(this.prefab)).parent = this.node;
t.position = cc.v3(0, 0);
}
return [ 2 ];
}
});
});
};
__decorate([ c({
type: cc.Enum(n)
}) ], t.prototype, "type", void 0);
__decorate([ c({
type: cc.Prefab,
visible: function() {
return this.type === n.Prefab;
}
}) ], t.prototype, "prefab", void 0);
__decorate([ c({
visible: function() {
return this.type === n.Path;
}
}) ], t.prototype, "path", void 0);
__decorate([ c ], t.prototype, "isAndroidReview", void 0);
__decorate([ c ], t.prototype, "isIOSReview", void 0);
return __decorate([ o, s("通用/预制体加载") ], t);
}(cc.Component);
i.PreloadingPrefab = r;
cc._RF.pop();
}, {} ],
ProgressBarTarget: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "426d93AmcZHx70H1ft3jsvX", "ProgressBarTarget");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.progressBar = null;
return t;
}
t.prototype.update = function() {
this.node.position = this.progressBar.barSprite.node.position.add(cc.v3(this.progressBar.progress * this.progressBar.totalLength, 0, 0));
};
__decorate([ o(cc.ProgressBar) ], t.prototype, "progressBar", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
PromiseLock: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5c693GZ+eBIqpgzcf74PP3e", "PromiseLock");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.PromiseLock = void 0;
var n = function() {
function e() {
this._lockId = 0;
}
e.prototype.resetLock = function() {
this._lockId++;
};
e.prototype.getLock = function() {
return this._lockId;
};
e.prototype.checkLock = function(e) {
return this._lockId == e;
};
e.prototype.exe = function(e) {
return __awaiter(this, void 0, void 0, function() {
var t, i;
return __generator(this, function(n) {
switch (n.label) {
case 0:
t = this.getLock();
return [ 4, e ];

case 1:
n.sent();
(i = this.checkLock(t)) || cc.log("#PromiseLock:need break");
return [ 2, i ];
}
});
});
};
return e;
}();
i.PromiseLock = new n();
cc._RF.pop();
}, {} ],
ReTimer: [ function(e, t) {
"use strict";
cc._RF.push(t, "c3054KRr99HS4hEZV2zCAtK", "ReTimer");
cc.Class({
extends: cc.Component,
properties: {
_nInter: 0
},
start: function() {},
setReTimer: function(e, t, i, n, a) {
this._bStop = null;
this._nInter = 0;
this._nTime = e;
this._nStep = t;
this._endCall = i;
this._perCall = a;
this._formatStr = n;
this._showTime(this._nTime);
},
_showTime: function(e) {
this._formatStr ? this.node.getComponent(cc.Label).string = cc.js.formatStr(this._formatStr, e) : this.node.getComponent(cc.Label).string = Global.formatSec(e, null, !0);
},
update: function(e) {
if (!this._bStop) {
this._nInter += e;
if (this._nInter >= this._nStep) {
this._nInter = 0;
this._nTime -= 1;
this._nTime < 0 && (this._nTime = 0);
this._showTime(this._nTime);
this._perCall && this._perCall(this._nTime);
if (this._nTime <= 0) {
this._bStop = !0;
this._endCall && this._endCall();
}
}
}
}
});
cc._RF.pop();
}, {} ],
RedHitCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "ccdb17+ab5Gh7tJ8gpsiEkC", "RedHitCmp");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
cc.Class({
extends: cc.Component,
properties: {
key: "",
valueLabel: cc.Label,
advanced: !1,
key_mutually_exclusive: {
default: "",
visible: function() {
return this.advanced;
}
},
check_memory: {
default: !1,
visible: function() {
return this.advanced;
}
},
btn_memory: {
default: null,
type: cc.Button,
visible: function() {
return this.advanced;
}
}
},
onLoad: function() {
cc.vv.RedHitManager.register(this);
this.btn_memory && this.btn_memory.node.on("click", this.onClickRecord, this);
},
onEnable: function() {
this.updateView();
},
onDestroy: function() {
cc.vv.RedHitManager.unregister(this);
},
updateView: function() {
var e = cc.vv.RedHitManager.data;
if (this.key.length <= 0) this.node.active = !1; else {
if (this.advanced) {
if (this.key_mutually_exclusive) {
for (var t, n = this.key_mutually_exclusive.split(","), a = 0, o = i(n = n.filter(function(e) {
return cc.vv.RedHitManager.filterKey.indexOf(e) < 0;
})); !(t = o()).done; ) {
var c = t.value;
if ("friendsmsg" == c) for (var s in e[c]) a += e[c][s]; else e[c] && e[c] > 0 && (a += e[c]);
}
cc.vv.RedHitManager.clickRecordList.indexOf(this.key_mutually_exclusive) >= 0 && (a = 0);
if (a > 0) {
this.node.active = !1;
return;
}
}
if (this.check_memory && cc.vv.RedHitManager.clickRecordList.indexOf(this.key) >= 0) {
this.node.active = !1;
return;
}
}
for (var r, l = this.key.split(","), d = 0, h = i(l = l.filter(function(e) {
return cc.vv.RedHitManager.filterKey.indexOf(e) < 0;
})); !(r = h()).done; ) {
var _ = r.value;
if ("friendsmsg" == _) for (var p in e[_]) d += e[_][p]; else e[_] && e[_] > 0 && (d += e[_]);
}
if (d > 0) {
this.node.active = !0;
this.valueLabel && (this.valueLabel.string = d);
} else this.node.active = !1;
}
},
onClickRecord: function() {
if (this.check_memory && this.node.active && cc.vv.RedHitManager.clickRecordList.indexOf(this.key) < 0) {
cc.vv.RedHitManager.clickRecordList.push(this.key);
cc.vv.RedHitManager.updateView();
}
}
});
cc._RF.pop();
}, {} ],
RedHitManager: [ function(e, t) {
"use strict";
cc._RF.push(t, "53742UuhBxC3bIXNG/idcNN", "RedHitManager");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
cc.Class({
extends: cc.Component,
properties: {},
statics: {
data: {},
redHidList: [],
filterKey: [],
clickRecordList: [],
init: function() {
this.data = {};
this.redHidList = [];
this.clickRecordList = [];
cc.vv.NetManager.registerMsg(MsgId.PULL_RED_NOTICE, this.PULL_RED_NOTICE, this);
},
register: function(e) {
if (this.redHidList.indexOf(e) < 0) {
this.redHidList.push(e);
e.updateView();
}
},
unregister: function(e) {
var t = this.redHidList.indexOf(e);
t >= 0 && this.redHidList.splice(t, 1);
},
PULL_RED_NOTICE: function(e) {
if (200 == e.code) {
this.data = e;
this.updateView();
}
},
updateView: function() {
for (var e, t = i(this.redHidList); !(e = t()).done; ) e.value.updateView(this.data);
},
setFilterKeys: function(e) {
this.filterKey = e;
this.updateView();
},
setKeyVal: function(e, t) {
this.data[e] = t;
this.updateView();
},
log: function() {
cc.log("data =>", this.data);
cc.log("redHidList =>", this.redHidList);
cc.log("redHidList =>", this.clickRecordList);
}
}
});
cc._RF.pop();
}, {} ],
RedHitMsgCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "073929djf9AColqY7V1fz8S", "RedHitMsgCmp");
cc.Class({
extends: cc.Component,
properties: {
valueLabel: cc.Label
},
onLoad: function() {
this.uid = -1;
cc.vv.RedHitManager.register(this);
},
onEnable: function() {
this.updateView();
},
setUid: function(e) {
this.uid = e;
this.updateView();
},
updateView: function() {
var e = cc.vv.RedHitManager.data.friendsmsg || [];
if (e[this.uid] && e[this.uid] > 0) {
this.node.active = !0;
this.valueLabel && (this.valueLabel.string = e[this.uid]);
} else this.node.active = !1;
},
onDestroy: function() {
cc.vv.RedHitManager.unregister(this);
}
});
cc._RF.pop();
}, {} ],
RegisterView: [ function(e, t) {
"use strict";
cc._RF.push(t, "d0e07GUeslD+qOUYlPhGeuZ", "RegisterView");
cc.Class({
extends: cc.Component,
properties: {
phoneEditBox: {
displayName: "手机号",
default: null,
type: cc.EditBox
},
pwdEditBox: {
displayName: "密码",
default: null,
type: cc.EditBox
},
repwdEditBox: {
displayName: "再次输入密码",
default: null,
type: cc.EditBox
},
otpEditBox: {
displayName: "验证码",
default: null,
type: cc.EditBox
},
registerBtn: {
displayName: "注册按钮",
default: null,
type: cc.Button
},
getOtpBtn: {
displayName: "获取OTP按钮",
default: null,
type: cc.Button
},
otpBtnLabel: {
displayName: "otp按钮文字",
default: null,
type: cc.Label
}
},
onLoad: function() {
this._optTime = 0;
this.netListener = this.node.addComponent("NetListenerCmp");
this.netListener.registerMsg(MsgId.GET_NEWER_GIFT_REWARDS, this.GET_NEWER_GIFT_REWARDS, this);
this.netListener.registerMsg(MsgId.BIND_PHONE, this.BIND_PHONE, this);
this.netListener.registerMsg(MsgId.GET_PHONE_CODE, this.GET_PHONE_CODE, this);
cc.find("btn_close", this.node).on("click", this.onClickClose, this);
this.phoneEditBox.node.on("text-changed", this.updateView, this);
this.phoneEditBox.node.on("editing-did-ended", this.onPhoneFinished, this);
this.pwdEditBox.node.on("text-changed", this.updateView, this);
this.repwdEditBox.node.on("text-changed", this.updateView, this);
this.otpEditBox.node.on("text-changed", this.updateView, this);
this.updateView();
this.registerBtn.node.on("click", this.onClickRegister, this);
this.getOtpBtn.node.on("click", this.onClickGetOtp, this);
},
updateView: function() {
this.getOtpBtn.getComponent("ButtonGrayCmp").interactable = this.validatePhone(this.phoneEditBox.string) > 0 && !this._optTime;
this.registerBtn.getComponent("ButtonGrayCmp").interactable = this.validatePhone(this.phoneEditBox.string) && this.pwdEditBox.string.length > 0 && this.repwdEditBox.string.length > 0 && this.pwdEditBox.string === this.repwdEditBox.string;
},
onPhoneFinished: function() {
this.validatePhone(this.phoneEditBox.string) || cc.vv.FloatTip.show("Phone input error");
},
GET_NEWER_GIFT_REWARDS: function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0); else {
cc.vv.UserManager.charmpack = 0;
Global.RewardFly(e.rewards, this.registerBtn.node.convertToWorldSpaceAR(cc.v2(0, 0)));
cc.vv.PopupManager.removePopup(this.node);
}
},
onClickClose: function() {
cc.vv.PopupManager.removePopup(this.node);
},
validatePhone: function(e) {
return !!/^\d{10}$/.test(e);
},
onClickGetOtp: function() {
this.getOtpBtn.getComponent("ButtonGrayCmp").interactable = !1;
cc.vv.NetManager.send({
c: MsgId.GET_PHONE_CODE,
phone: this.phoneEditBox.string
});
},
onClickRegister: function() {
if (this.validatePhone(this.phoneEditBox.string)) if (0 != this.pwdEditBox.string.length) if (0 != this.repwdEditBox.string.length) if (this.pwdEditBox.string === this.repwdEditBox.string) {
var e = {
c: MsgId.BIND_PHONE,
phone: this.phoneEditBox.string,
code: this.otpEditBox.string,
pwd: this.pwdEditBox.string,
name: "Guest"
};
Global.reconnect_break = !1;
cc.vv.NetManager.send(e);
} else cc.vv.FloatTip.show("Different password"); else cc.vv.FloatTip.show("Please input password again"); else cc.vv.FloatTip.show("Please input password"); else cc.vv.FloatTip.show("Phone input error");
},
BIND_PHONE: function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0); else {
cc.vv.FloatTip.show(___("Bind Successfully"));
cc.vv.UserManager.isbindphone = 1;
Global.dispatchEvent(EventId.EVENT_BIND_PHONE);
cc.vv.NetManager.send({
c: MsgId.GET_NEWER_GIFT_REWARDS
});
cc.vv.NetManager.sendAndCache({
c: MsgId.PERSIONAL_INFO,
otheruid: cc.vv.UserManager.uid
}, !0);
}
},
GET_PHONE_CODE: function(e) {
var t = this;
if (200 == e.code) {
if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(e.msg, !0); else {
var i = ___("We have send the OTP to your registered mobile number");
e.voice && (i = ___("We will call your registered mobile number to tell the OTP"));
cc.vv.FloatTip.show(i);
}
t._optTime = 60;
t.otpBtnLabel.node.getComponent("ReTimer").setReTimer(t._optTime, 1, function() {
t.getOtpBtn.getComponent("ButtonGrayCmp").interactable = !0;
t.otpBtnLabel.string = "OTP";
t._optTime = 0;
}, "OTP(%ss)");
}
},
start: function() {}
});
cc._RF.pop();
}, {} ],
ReportConfig: [ function(e, t) {
"use strict";
cc._RF.push(t, "c7f60kW0wZPnqT0E+dOyVhp", "ReportConfig");
var i = cc.Class({
extends: cc.Component,
statics: {
INIT_COIN: "initcoin",
SETTING_MUSIC_OFF: "setting_music_off",
SETTING_MUSIC_ON: "setting_music_on",
SETTING_SOUND_OFF: "setting_sound_off",
SETTING_SOUND_ON: "setting_sound_on",
SETTING_SHARE: "setting_share",
SETTING_LIKE: "setting_like",
SETTING_FEEDBACK: "setting_feedback",
SETTING_BIND_TWITTER: "setting_bind_twitter",
SETTING_BIND_FB: "setting_bind_fb",
SETTING_SERVICE: "setting_service",
SETTING_PRIVATE: "setting_private",
SETTING_EMAIL: "setting_email",
SETTING_WHATSAPP: "setting_whatsapp",
SKIN_OPEN: "skin_open",
SKIN_DIAMOND: "skin_diamond",
SKIN_VIEW_POKER: "skin_view_poker",
SKIN_VIEW_DESK: "skin_view_desk",
SKIN_VIEW_CHAT: "skin_view_chat",
SKIN_VIEW_AVATAR_FRAME: "skin_view_avatar_frame",
SKIN_BUY_POKER_ASK: "skin_buy_poker_ask",
SKIN_BUY_POKER_CONFIRM: "skin_buy_poker_confirm",
SKIN_BUY_POKER_CANCEL: "skin_buy_poker_cancel",
SKIN_BUY_DESK_CONFIRM: "skin_buy_desk_confirm",
SKIN_BUY_DESK_CANCEL: "skin_buy_desk_cancel",
SKIN_BUY_DESK_ASK: "skin_buy_desk_ask",
SKIN_BUY_CHAT_CONFIRM: "skin_buy_chat_confirm",
SKIN_BUY_CHAT_CANCEL: "skin_buy_chat_cancel",
SKIN_BUY_CHAT_ASK: "skin_buy_chat_ask",
SKIN_BUY_AVATAR_FRAME_CONFIRM: "skin_buy_avatar_frame_confirm",
SKIN_BUY_AVATAR_FRAME_CANCEL: "skin_buy_avatar_frame_cancel",
SKIN_BUY_AVATAR_FRAME_ASK: "skin_buy_avatar_frame_ask",
SHOP_OPEN_VIP: "shop_open_vip",
SHOP_OPEN_DIAMOND: "shop_open_diamond",
SHOP_BUY_DIAMOND: "shop_buy_diamond",
SHOP_BUY_SKIN: "shop_buy_skin",
SHOP_OPEN_GOLD: "shop_open_gold",
SHOP_BUY_GOLD: "shop_buy_gold",
SHOP_BUY_VIP_7: "shop_buy_vip_7",
SHOP_BUY_VIP_30: "shop_buy_vip_30",
SHOP_SKIN_BUY: "shop_skin_buy",
SHOP_SKIN_CANCEL: "shop_skin_cancel",
SHOP_SKIN_INFO: "shop_skin_info",
CLUB_RANK: "club_rank",
CLUB_RANK_RULE: "club_rank_rule",
CLUB_RULE: "club_rule",
CLUB_SEARCH: "club_search",
CLUB_APPLY: "club_apply",
CLUB_CREATE: "club_create",
CLUB_ADMIN: "club_admin",
CLUB_ADMIN_INFO: "club_admin_info",
CLUB_ADMIN_APPLY: "club_admin_apply",
CLUB_ADMIN_USER: "club_admin_user",
CLUB_SIGN: "club_sign",
CLUB_EXIT: "club_exit",
CLUB_CHAT: "club_chat",
CLUB_ACTIVE: "club_active",
CLUB_INVITE_FRIEND: "club_invite_friend",
CLUB_INVITE_CHAT: "club_invite_chat",
CLUB_START_GAME: "club_start_game",
ONLINE_START_GAME: "online_start_game",
FRIEND_START_GAME: "friend_start_game",
USERINFO_OPEN: "userinfo_open",
USERINFO_CHANGE_NAME: "userinfo_change_name",
USERINFO_CHANGE_COUNTRY: "userinfo_change_country",
USERINFO_CHANGE_SEX: "userinfo_change_sex",
USERINFO_CHANGE_MEMO: "userinfo_change_memo",
USERINFO_CHANGE_HEAD: "userinfo_change_head",
USERINFO_CHANGE_HEAD_DEFAULT: "userinfo_change_head_default",
RANK_OPEN_VIEW: "rank_open_view",
RANK_OPEN_GOLD: "rank_open_gold",
RANK_OPEN_FRIEND: "rank_open_friend",
RANK_OPEN_RANK: "rank_open_rank",
RANK_OPEN_WIN: "rank_open_win",
RANK_USERINFO_GOLD: "rank_userinfo_gold",
RANK_USERINFO_FRIEND: "rank_userinfo_friend",
RANK_USERINFO_RANK: "rank_userinfo_rank",
RANK_USERINFO_WIN: "rank_userinfo_win",
INVITE_COPY_CODE: "invite_copy_code",
INVITE_FB_SHARE: "invite_fb_share",
INVITE_EDIT: "invite_edit",
INVITE_FOLLOWER_OPEN: "invite_follower_open",
INVITE_FOLLOWER_REWARD: "invite_follower_reward",
EVENT_SHARE_FB: "event_share_fb",
VIP_BUY_FRIST: "vip_buy_frist",
VIP_BUY_SECOND: "vip_buy_second",
VIP_REWARD_GET: "vip_reward_get",
PASS_OPEN: "pass_open",
PASS_RULE: "pass_rule",
PASS_REFRESH: "pass_refresh",
PASS_COMPLETE: "pass_complete",
PASS_GET_ALL_REWARD: "pass_get_all_reward",
PASS_BUY: "pass_buy",
PASS_GET_REWARD: "pass_get_reward",
FRIST_CHARGE_OPEN: "frist_Charge_open",
FRIST_CHARGE_BUY: "frist_Charge_buy",
ADVERTISEMENT_CLICK: "advertisement_click",
EMAIL_OPEN: "email_open",
EMAIL_GET: "email_get",
EMAIL_GET_ALL: "email_get_all",
CHAT_SEND_EMOJI: "chat_send_emoji",
CHAT_SEND_TEXT: "chat_send_text",
SOCIAL_FRIEND_USERINFO: "social_friend_userinfo",
SOCIAL_FRIEND_OPEN_CHAT: "social_friend_open_chat",
SOCIAL_FRIEND_GAME_INVITE: "social_friend_game_invite",
SOCIAL_FRIEND_DELETE: "social_friend_delete",
SOCIAL_FRIEND_ADD: "social_friend_add",
SOCIAL_FRIEND_CHAT: "social_friend_chat",
SOCIAL_MESSAGE_DELETE: "social_message_delete",
SOCIAL_MESSAGE_DELETE_ALL: "social_message_delete_all",
SOCIAL_MESSAGE_ADDFRIEND_AGREE: "social_message_addfriend_agree",
SOCIAL_MESSAGE_ADDFRIEND_REFUSE: "social_message_addfriend_refuse",
SOCIAL_RECENT_FRIEND_ADD: "social_recent_friend_add",
SOCIAL_SALON_VIEW: "social_salon_view",
SIGN_REWARD_GET: "sign_reward_get",
EVENT_REWARD_GET: "event_reward_get",
EVENT_REWARD_GET_SG: "event_reward_get_sg",
EVENT_ONLINE_GET: "event_online_get",
EVENT_ONLINE_TURNTABLE: "event_online_turntable",
SIGN_VIP_REWARD_GET: "sign_vip_reward_get",
SKIN_CHANGE_OPEN: "skin_change_open",
SKIN_CHANGE_POKER: "skin_change_poker",
SKIN_CHANGE_DESK: "skin_change_desk",
SKIN_CHANGE_CHAT: "skin_change_chat",
ONLINE_OPEN: "online_open",
ONLINE_START_WITH: "online_start_with",
ONLINE_INVITE_CLICK: "online_invite_click",
ONLINE_START_TEAM_GAME: "online_start_team_game",
LEAGUE_OPEN: "league_open",
LEAGUE_RANKING_GLOBAL: "league_ranking_global",
LEAGUE_RANKING_FRIEND: "league_ranking_friend",
LEAGUE_VIEW_RULE: "league_view_rule",
LEAGUE_VIEW_RANKING_RULE: "league_view_ranking_rule",
LEAGUE_TASK_GET_REWARD: "league_task_get_reward",
VIP_OPEN: "vip_open",
VIP_ENTER_ROOM_BY_ENTER_ROOM_ID: "vip_enter_room_by_enter_room_id",
VIP_CREATE_SUCCESS: "vip_create_success",
VIP_ENTER_ROOM_BY_ROOM_LIST: "vip_enter_room_by_room_list",
VIP_FAST_SEAT: "vip_fast_seat",
VIP_FILTER_ROOM: "vip_filter_room",
VIP_REFRESH_ROOM_LIST: "vip_refresh_room_list",
SG_SOUND_SWITCH: "sg_sound_switch",
SG_MUSIC_SWITCH: "sg_music_switch",
SG_EXIT_CONFIRM: "sg_exit_confirm",
SG_EXIT_CANCLE: "sg_exit_cancle",
SG_CHAT_SEND_EMOTION: "sg_chat_send_emotion",
SG_CHAT_SEND_FW: "sg_chat_send_fw",
SG_CHAT_VIEW_RECORD: "sg_chat_view_record",
SG_CHAT_SEND_INPUT: "sg_chat_send_input",
SG_VIEW_SKIN: "sg_view_skin",
SG_BTN_SHOP: "sg_btn_shop",
SG_BTN_SETTING: "sg_btn_setting",
SG_BTN_EXITGAME: "sg_btn_exitGame",
SG_BTN_RECORD: "sg_btn_record",
SG_BET: "sg_bet",
SG_EMOTION: "sg_emotion",
SG_BALOOT_VIEW_RULE: "sg_baloot_view_rule",
SG_BALOOT_BID_CALL: "sg_baloot_bid_call",
SG_BALOOT_BID_SIRA: "sg_baloot_bid_sira",
SG_HAND_CLICK_GODOWN: "sg_hand_click_godown",
SG_HAND_CLICK_LICENSING: "sg_hand_click_licensing",
SG_HAND_CLICK_HINT: "sg_hand_click_hint",
SG_HAND_CLICK_DISCARD: "sg_hand_click_discard",
SG_HAND_VIEW_RULE: "sg_hand_view_rule",
SG_HAND_CHANGE_CARD_SIZE: "sg_hand_change_card_size",
SALONG_CREATE_PUBLIC: "salong_create_public",
SALONG_CREATE_PRIVATE: "salong_create_private",
SALONG_SELECT_GAME_TAB: "salong_select_game_tab",
SALONG_MENU_SWITCH_OPEN: "salong_menu_switch_open",
SALONG_MENU_SWITCH_CLOSE: "salong_menu_switch_close",
NET_DELAY: "net_delay",
CHECK_SELF_GAME_RECORD: "check_self_game_record",
CHECK_OTHER_GAME_RECORD: "check_other_game_record",
POPUP_OPEN: "popup_open",
POPUP_CLOSE: "popup_close",
TABBAR_OPEN: "tabbar_open",
VOICE_ERORR: "voice_erorr",
PLAY_CLICk: "play_click",
ENTER_GAME: "enter_game",
SALON_SHARE: "salon_share",
INVITE_SHARE: "invite_share",
WHEEL_SHARE: "wheel_share",
PAGE_OPEN: "page_open",
PAGE_CLOSE: "page_close",
BANK_ADD_CASH: "Bank_AddCash",
BANK_VERFY: "Bank_Verfy",
BANK_WITHDRAW: "Bank_Withdraw",
BANK_TRANSACTIONS: "Bank_Transactions",
BANK_PAYMENTS: "Bank_Payments",
BONUS_TRANSFER_COLLECT: "BonusTransfer_Collect",
REFER_WHATSAPP: "Refer_WhatsApp",
REFER_SYSTEM_SHARE: "Refer_SystemShare",
REFER_COPY: "Refer_Copy",
LUCKYSPIN_SHARE: "luckyspin_share"
}
});
window.ReportConfig = i;
cc._RF.pop();
}, {} ],
ResManager: [ function(e, t) {
"use strict";
cc._RF.push(t, "5482bTVY5xLI4YKkVtsbQ/I", "ResManager");
function i() {
i = function() {
return e;
};
var e = {}, t = Object.prototype, n = t.hasOwnProperty, a = "function" == typeof Symbol ? Symbol : {}, o = a.iterator || "@@iterator", c = a.asyncIterator || "@@asyncIterator", s = a.toStringTag || "@@toStringTag";
function r(e, t, i) {
return Object.defineProperty(e, t, {
value: i,
enumerable: !0,
configurable: !0,
writable: !0
}), e[t];
}
try {
r({}, "");
} catch (e) {
r = function(e, t, i) {
return e[t] = i;
};
}
function l(e, t, i, n) {
var a = t && t.prototype instanceof _ ? t : _, o = Object.create(a.prototype), c = new L(n || []);
return o._invoke = function(e, t, i) {
var n = "suspendedStart";
return function(a, o) {
if ("executing" === n) throw new Error("Generator is already running");
if ("completed" === n) {
if ("throw" === a) throw o;
return {
value: void 0,
done: !0
};
}
for (i.method = a, i.arg = o; ;) {
var c = i.delegate;
if (c) {
var s = b(c, i);
if (s) {
if (s === h) continue;
return s;
}
}
if ("next" === i.method) i.sent = i._sent = i.arg; else if ("throw" === i.method) {
if ("suspendedStart" === n) throw n = "completed", i.arg;
i.dispatchException(i.arg);
} else "return" === i.method && i.abrupt("return", i.arg);
n = "executing";
var r = d(e, t, i);
if ("normal" === r.type) {
if (n = i.done ? "completed" : "suspendedYield", r.arg === h) continue;
return {
value: r.arg,
done: i.done
};
}
"throw" === r.type && (n = "completed", i.method = "throw", i.arg = r.arg);
}
};
}(e, i, c), o;
}
function d(e, t, i) {
try {
return {
type: "normal",
arg: e.call(t, i)
};
} catch (e) {
return {
type: "throw",
arg: e
};
}
}
e.wrap = l;
var h = {};
function _() {}
function p() {}
function u() {}
var f = {};
r(f, o, function() {
return this;
});
var g = Object.getPrototypeOf, m = g && g(g(T([])));
m && m !== t && n.call(m, o) && (f = m);
var v = u.prototype = _.prototype = Object.create(f);
function S(e) {
[ "next", "throw", "return" ].forEach(function(t) {
r(e, t, function(e) {
return this._invoke(t, e);
});
});
}
function C(e, t) {
function i(a, o, c, s) {
var r = d(e[a], e, o);
if ("throw" !== r.type) {
var l = r.arg, h = l.value;
return h && "object" == typeof h && n.call(h, "__await") ? t.resolve(h.__await).then(function(e) {
i("next", e, c, s);
}, function(e) {
i("throw", e, c, s);
}) : t.resolve(h).then(function(e) {
l.value = e, c(l);
}, function(e) {
return i("throw", e, c, s);
});
}
s(r.arg);
}
var a;
this._invoke = function(e, n) {
function o() {
return new t(function(t, a) {
i(e, n, t, a);
});
}
return a = a ? a.then(o, o) : o();
};
}
function b(e, t) {
var i = e.iterator[t.method];
if (void 0 === i) {
if (t.delegate = null, "throw" === t.method) {
if (e.iterator.return && (t.method = "return", t.arg = void 0, b(e, t), "throw" === t.method)) return h;
t.method = "throw", t.arg = new TypeError("The iterator does not provide a 'throw' method");
}
return h;
}
var n = d(i, e.iterator, t.arg);
if ("throw" === n.type) return t.method = "throw", t.arg = n.arg, t.delegate = null, 
h;
var a = n.arg;
return a ? a.done ? (t[e.resultName] = a.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", 
t.arg = void 0), t.delegate = null, h) : a : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), 
t.delegate = null, h);
}
function E(e) {
var t = {
tryLoc: e[0]
};
1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), 
this.tryEntries.push(t);
}
function y(e) {
var t = e.completion || {};
t.type = "normal", delete t.arg, e.completion = t;
}
function L(e) {
this.tryEntries = [ {
tryLoc: "root"
} ], e.forEach(E, this), this.reset(!0);
}
function T(e) {
if (e) {
var t = e[o];
if (t) return t.call(e);
if ("function" == typeof e.next) return e;
if (!isNaN(e.length)) {
var i = -1, a = function t() {
for (;++i < e.length; ) if (n.call(e, i)) return t.value = e[i], t.done = !1, t;
return t.value = void 0, t.done = !0, t;
};
return a.next = a;
}
}
return {
next: I
};
}
function I() {
return {
value: void 0,
done: !0
};
}
return p.prototype = u, r(v, "constructor", u), r(u, "constructor", p), p.displayName = r(u, s, "GeneratorFunction"), 
e.isGeneratorFunction = function(e) {
var t = "function" == typeof e && e.constructor;
return !!t && (t === p || "GeneratorFunction" === (t.displayName || t.name));
}, e.mark = function(e) {
return Object.setPrototypeOf ? Object.setPrototypeOf(e, u) : (e.__proto__ = u, r(e, s, "GeneratorFunction")), 
e.prototype = Object.create(v), e;
}, e.awrap = function(e) {
return {
__await: e
};
}, S(C.prototype), r(C.prototype, c, function() {
return this;
}), e.AsyncIterator = C, e.async = function(t, i, n, a, o) {
void 0 === o && (o = Promise);
var c = new C(l(t, i, n, a), o);
return e.isGeneratorFunction(i) ? c : c.next().then(function(e) {
return e.done ? e.value : c.next();
});
}, S(v), r(v, s, "Generator"), r(v, o, function() {
return this;
}), r(v, "toString", function() {
return "[object Generator]";
}), e.keys = function(e) {
var t = [];
for (var i in e) t.push(i);
return t.reverse(), function i() {
for (;t.length; ) {
var n = t.pop();
if (n in e) return i.value = n, i.done = !1, i;
}
return i.done = !0, i;
};
}, e.values = T, L.prototype = {
constructor: L,
reset: function(e) {
if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, 
this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(y), 
!e) for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0);
},
stop: function() {
this.done = !0;
var e = this.tryEntries[0].completion;
if ("throw" === e.type) throw e.arg;
return this.rval;
},
dispatchException: function(e) {
if (this.done) throw e;
var t = this;
function i(i, n) {
return c.type = "throw", c.arg = e, t.next = i, n && (t.method = "next", t.arg = void 0), 
!!n;
}
for (var a = this.tryEntries.length - 1; a >= 0; --a) {
var o = this.tryEntries[a], c = o.completion;
if ("root" === o.tryLoc) return i("end");
if (o.tryLoc <= this.prev) {
var s = n.call(o, "catchLoc"), r = n.call(o, "finallyLoc");
if (s && r) {
if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
if (this.prev < o.finallyLoc) return i(o.finallyLoc);
} else if (s) {
if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
} else {
if (!r) throw new Error("try statement without catch or finally");
if (this.prev < o.finallyLoc) return i(o.finallyLoc);
}
}
}
},
abrupt: function(e, t) {
for (var i = this.tryEntries.length - 1; i >= 0; --i) {
var a = this.tryEntries[i];
if (a.tryLoc <= this.prev && n.call(a, "finallyLoc") && this.prev < a.finallyLoc) {
var o = a;
break;
}
}
o && ("break" === e || "continue" === e) && o.tryLoc <= t && t <= o.finallyLoc && (o = null);
var c = o ? o.completion : {};
return c.type = e, c.arg = t, o ? (this.method = "next", this.next = o.finallyLoc, 
h) : this.complete(c);
},
complete: function(e, t) {
if ("throw" === e.type) throw e.arg;
return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, 
this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), 
h;
},
finish: function(e) {
for (var t = this.tryEntries.length - 1; t >= 0; --t) {
var i = this.tryEntries[t];
if (i.finallyLoc === e) return this.complete(i.completion, i.afterLoc), y(i), h;
}
},
catch: function(e) {
for (var t = this.tryEntries.length - 1; t >= 0; --t) {
var i = this.tryEntries[t];
if (i.tryLoc === e) {
var n = i.completion;
if ("throw" === n.type) {
var a = n.arg;
y(i);
}
return a;
}
}
throw new Error("illegal catch attempt");
},
delegateYield: function(e, t, i) {
return this.delegate = {
iterator: T(e),
resultName: t,
nextLoc: i
}, "next" === this.method && (this.arg = void 0), h;
}
}, e;
}
function n(e, t, i, n, a, o, c) {
try {
var s = e[o](c), r = s.value;
} catch (e) {
i(e);
return;
}
s.done ? t(r) : Promise.resolve(r).then(n, a);
}
cc.Class({
extends: cc.Component,
statics: {
resMap: {},
getRes: function(e) {
var t = this.resMap[e];
if (t) return t;
cc.warn("找不到该资源缓存: " + e);
},
loadImage: function(e, t) {
var i = e.split("/"), n = i[i.length - 1], a = {
url: e,
ignoreMaxConcurrency: !0
};
n.indexOf(".") < 0 && (a = {
url: e,
type: "jpg",
ignoreMaxConcurrency: !0
});
var o = {
url: e
};
new Promise(function(e, t) {
o.rejectFunc = function() {
t(0, "主动取消加载");
};
try {
cc.loader.load(a, function(i, n) {
i ? t(-1, i) : e(n);
});
} catch (e) {
t(-1, e);
}
}).then(function(e) {
t(null, e);
}).catch(function(e, i) {
if (e < 0) {
cc.warn(i, o.url);
t(i);
}
});
return o;
},
loadLocalRes: function(e, t, i) {
var n = {
url: e
};
new Promise(function(i, a) {
n.rejectFunc = function() {
a(0, "主动取消加载");
};
cc.loader.loadRes(e, t, function(e, t) {
e ? a(-1, e) : i(t);
});
}).then(function(e) {
i(null, e);
}).catch(function(e, t) {
if (e < 0) {
cc.warn(t, n.url);
i(t);
}
});
return n;
},
setSpriteFrame: function(e, t, i, n) {
if (e) {
if (e._reqHandle && e._reqHandle.rejectFunc) {
e._reqHandle.rejectFunc();
e._reqHandle = void 0;
}
e._reqHandle = i ? this.loadLocalRes(t, cc.SpriteAtlas, function(t, a) {
a && (e.spriteFrame = a.getSpriteFrame(i));
e._reqHandle = void 0;
n && n(t, a);
}) : this.loadLocalRes(t, cc.SpriteFrame, function(t, i) {
i && (e.spriteFrame = i);
e._reqHandle = void 0;
n && n(t, i);
});
}
},
setSkeleton: function(e, t, i) {
if (e._reqHandle && e._reqHandle.rejectFunc) {
e._reqHandle.rejectFunc();
e._reqHandle = void 0;
}
e._reqHandle = this.loadLocalRes(t, sp.SkeletonData, function(t, n) {
if (!t) {
n && (e.skeletonData = n);
e._reqHandle = void 0;
i(e);
}
});
},
loadPrefab: function(e) {
return (t = i().mark(function t() {
return i().wrap(function(t) {
for (;;) switch (t.prev = t.next) {
case 0:
return t.abrupt("return", new Promise(function(t, i) {
cc.loader.loadRes(e, cc.Prefab, function(e, n) {
e ? i(null) : t(n);
});
}));

case 1:
case "end":
return t.stop();
}
}, t);
}), function() {
var e = this, i = arguments;
return new Promise(function(a, o) {
var c = t.apply(e, i);
function s(e) {
n(c, a, o, s, r, "next", e);
}
function r(e) {
n(c, a, o, s, r, "throw", e);
}
s(void 0);
});
})();
var t;
}
}
});
cc._RF.pop();
}, {} ],
RewardFlyAnim: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a1427YtBopKlr3kPeRrDCjY", "RewardFlyAnim");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../../../_FWExpand/UI/RewardItemCpt"), a = e("../../Hall/scripts/UserCoinCpt"), o = e("../../Hall/scripts/VipExpCpt"), c = cc._decorator, s = c.ccclass, r = c.property, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.hintPrefab = null;
t.boomPrefab = null;
t.itemPrefab = null;
t.commonAtlas = null;
t.chatBoxAtlas = null;
t.pokerBackAtlas = null;
t.skinShopAtlas = null;
t.bagNode = null;
t.vipExpCpt = null;
t.coinCpt = null;
return t;
}
t.prototype.onLoad = function() {
var e = this;
this.bagNode.opacity = 0;
this.initBagScale = this.bagNode.scale;
this.vipExpCpt.node.active = !1;
this.coinCpt.node.active = !1;
this.hitNodePool = new cc.NodePool();
this.node.addComponent("EventListenerCmp").registerEvent("USER_VIP_EXP_CHANGE_END", function() {
e.vipExpCpt.node.active = !1;
}, this);
};
t.prototype.onDestroy = function() {
this.hitNodePool.clear();
};
t.prototype.filterData = function(e, t) {
for (var i = [], n = 0, a = e; n < a.length; n++) {
var o = a[n];
o.type == t && i.push(o);
}
return i;
};
t.prototype.filterDataTypes = function(e, t) {
for (var i = [], n = 0, a = e; n < a.length; n++) {
var o = a[n];
t.indexOf(o.type) >= 0 && i.push(o);
}
return i;
};
t.prototype.hint = function(e, t) {
var i = this;
e.stopAllActions();
e.parent = cc.find("Canvas");
e.position = e.parent.convertToNodeSpaceAR(t);
e.zIndex = 1100;
e.scale = 1;
e.opacity = 255;
cc.tween(e).to(.2, {
scale: 3,
opacity: 100
}).call(function() {
i.hitNodePool.put(e);
}).start();
};
t.prototype.run = function(e, t) {
var i = this;
t = t || cc.find("Canvas").convertToWorldSpaceAR(cc.v2(0, 0));
cc.vv.AudioManager.playEff("BalootClient/BaseRes/", "reward2", !0);
var a = this.filterData(e, 2);
if (a.length > 0 && a[0].count > 0) {
var o = this.commonAtlas.getSpriteFrame("icon_common_vipexp"), c = this.vipExpCpt.icon.node.convertToWorldSpaceAR(cc.v2(0, 0));
Global.FlyAnimToPos(t, c, {
spriteFrame: o,
scale: .5,
endScale: .6,
count: 10,
onEndOne: function() {
var e = null;
if (e = i.hitNodePool.get()) i.hint(e, c); else {
e = cc.instantiate(i.hintPrefab);
i.hint(e, c);
}
},
onEnd: function() {
Global.dispatchEvent("USER_VIP_EXP_CHANGE");
}
});
}
var s = this.filterData(e, 1);
if (s.length > 0) {
var r = this.commonAtlas.getSpriteFrame("icon_coin"), l = this.coinCpt.iconNode.convertToWorldSpaceAR(cc.v2(0, 0));
this.coinCpt.node.active = !0;
Global.doRoallNumEff(this.coinCpt.label.node, Math.max(cc.vv.UserManager.coin - s[0].count, 0), cc.vv.UserManager.coin, 2, function() {
i.coinCpt.node.active = !1;
}, null, 2, !0);
Global.FlyAnimToPos(t, l, {
spriteFrame: r,
scale: .75,
count: 15,
onStart: function() {
var e = cc.instantiate(i.boomPrefab);
if (e) {
e.parent = cc.find("Canvas");
e.position = e.parent.convertToNodeSpaceAR(t);
e.zIndex = 900;
e.getComponent(sp.Skeleton).setCompleteListener(function(t) {
t.animation && "animation" == t.animation.name && e.destroy();
});
}
},
onEndOne: function() {
var e = null;
if (e = i.hitNodePool.get()) i.hint(e, l); else {
e = cc.instantiate(i.hintPrefab);
i.hint(e, l);
}
i.coinCpt.node.stopAllActions();
cc.tween(i.coinCpt.node).to(.03, {
scale: 1.07
}).to(.03, {
scale: 1
}).start();
}
});
}
var d = this.filterData(e, 12);
if (d.length > 0) {
var h = cc.vv.UserManager.cashbonus - d[0].count, _ = cc.vv.UserManager.cashbonus, p = cc.find("safeview/UserinfoBar/lay_coins/coin_bonus", this.node);
this.flyCoin(p, t, h, _, 8);
}
var u = this.filterData(e, 11);
if (u.length > 0) {
h = cc.vv.UserManager.dcoin - u[0].count, _ = cc.vv.UserManager.dcoin, p = cc.find("safeview/UserinfoBar/lay_coins/coin_draw", this.node);
this.flyCoin(p, t, h, _, 8);
}
var f = this.filterDataTypes(e, [ 44, 40, 39, 53, 50, 43, 54, 55 ]);
if (f.length > 0) {
var g = this.bagNode.convertToWorldSpaceAR(cc.v2(0, 0));
Global.FlyAnimToPos(t, g, {
prefab: this.itemPrefab,
scale: .75,
endScale: .55,
count: f.length,
onInit: function(e, t) {
var i = f[e];
t.getComponent(n.default).updateView(i);
var a = cc.find("icon", t);
40 == i.type ? a.scale = .5 : 55 == i.type ? a.scale = .65 : 53 == i.type ? a.scale = .6 : 44 == i.type ? a.scale = 1.2 : a.scale = 1;
},
onStart: function() {
i.bagNode.stopAllActions();
cc.tween(i.bagNode).to(.2, {
opacity: 255
}).start();
var e = cc.instantiate(i.boomPrefab);
if (e) {
e.parent = cc.find("Canvas");
e.position = e.parent.convertToNodeSpaceAR(t);
e.zIndex = 900;
e.getComponent(sp.Skeleton).setCompleteListener(function(t) {
t.animation && "animation" == t.animation.name && e.destroy();
});
}
},
onEndOne: function() {
var e = null;
if (e = i.hitNodePool.get()) i.hint(e, g); else {
e = cc.instantiate(i.hintPrefab);
i.hint(e, g);
}
cc.tween(i.bagNode).to(.1, {
scale: 1.1 * i.initBagScale
}).to(.1, {
scale: i.initBagScale
}).start();
},
onEnd: function() {
i.bagNode.stopAllActions();
cc.tween(i.bagNode).to(.2, {
opacity: 0
}).start();
}
});
}
};
t.prototype.flyCoin = function(e, t, i, n, a) {
var o = this, c = this.commonAtlas.getSpriteFrame("icon_coin"), s = e.convertToWorldSpaceAR(cc.v2(0, 0));
e.active = !0;
Global.doRoallNumEff(cc.find("lbl_val", e), Math.max(i, 0), n, 2, function() {
e.active = !1;
}, null, 2, !0);
Global.FlyAnimToPos(t, s, {
spriteFrame: c,
scale: .75,
count: a,
onStart: function() {
var e = cc.instantiate(o.boomPrefab);
if (e) {
e.parent = cc.find("Canvas");
e.position = e.parent.convertToNodeSpaceAR(t);
e.zIndex = 900;
e.getComponent(sp.Skeleton).setCompleteListener(function(t) {
t.animation && "animation" == t.animation.name && e.destroy();
});
}
},
onEndOne: function() {
var e = null;
if (e = o.hitNodePool.get()) o.hint(e, s); else {
e = cc.instantiate(o.hintPrefab);
o.hint(e, s);
}
o.coinCpt.node.stopAllActions();
cc.tween(o.coinCpt.node).to(.03, {
scale: 1.07
}).to(.03, {
scale: 1
}).start();
}
});
};
__decorate([ r(cc.Prefab) ], t.prototype, "hintPrefab", void 0);
__decorate([ r(cc.Prefab) ], t.prototype, "boomPrefab", void 0);
__decorate([ r(cc.Prefab) ], t.prototype, "itemPrefab", void 0);
__decorate([ r(cc.SpriteAtlas) ], t.prototype, "commonAtlas", void 0);
__decorate([ r(cc.SpriteAtlas) ], t.prototype, "chatBoxAtlas", void 0);
__decorate([ r(cc.SpriteAtlas) ], t.prototype, "pokerBackAtlas", void 0);
__decorate([ r(cc.SpriteAtlas) ], t.prototype, "skinShopAtlas", void 0);
__decorate([ r(cc.Node) ], t.prototype, "bagNode", void 0);
__decorate([ r(o.default) ], t.prototype, "vipExpCpt", void 0);
__decorate([ r(a.default) ], t.prototype, "coinCpt", void 0);
return __decorate([ s ], t);
}(cc.Component);
i.default = l;
cc._RF.pop();
}, {
"../../../_FWExpand/UI/RewardItemCpt": "RewardItemCpt",
"../../Hall/scripts/UserCoinCpt": "UserCoinCpt",
"../../Hall/scripts/VipExpCpt": "VipExpCpt"
} ],
RewardItemCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e89f53QIJJNop+cakjntaFQ", "RewardItemCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = n.menu, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.commonAtlas = null;
t.chatBoxAtlas = null;
t.pokerBackAtlas = null;
t.skinShopAtlas = null;
t.userCommonAtlas = null;
return t;
}
t.prototype.updateView = function(e) {
var t = e, i = cc.find("icon", this.node), n = cc.find("avatar", this.node), a = cc.find("hddj", this.node), o = cc.find("value", this.node);
if (i) {
var c = i.getComponent(cc.Sprite);
i.active = !1;
a && (a.active = !1);
n && (n.active = !1);
o.active = !0;
if (43 == t.type) {
n.active = !0;
(r = n.getComponent(sp.Skeleton)) && t.img && cc.vv.UserConfig.setAvatarFrame(r, t.img);
} else if (1 == t.type) {
i.active = !0;
var s = this.commonAtlas.getSpriteFrame("icon_coin_3");
s || (s = this.commonAtlas.getSpriteFrame("icon_coin"));
c.spriteFrame = s;
} else if (2 == t.type) ; else if (25 == t.type) {
i.active = !0;
c.spriteFrame = this.commonAtlas.getSpriteFrame("icon_diamond_3");
} else if (44 == t.type) {
i.active = !0;
c.spriteFrame = this.chatBoxAtlas.getSpriteFrame(t.img);
} else if (40 == t.type) {
i.active = !0;
c.spriteFrame = this.skinShopAtlas.getSpriteFrame(t.img);
} else if (39 == t.type) {
if (this.pokerBackAtlas) {
i.active = !0;
c.spriteFrame = this.pokerBackAtlas.getSpriteFrame(t.img);
}
} else if (53 == t.type) {
i.active = !0;
c.spriteFrame = this.skinShopAtlas.getSpriteFrame(t.img);
} else if (42 == t.type) {
i.active = !0;
c.spriteFrame = this.commonAtlas.getSpriteFrame("icon_rp");
} else if (50 == t.type) {
i.active = !0;
c.spriteFrame = this.skinShopAtlas.getSpriteFrame(t.img);
} else if (54 == t.type) if (a) {
a.active = !0;
var r;
(r = a.getComponent(sp.Skeleton)) && r.setAnimation(0, t.img, !0);
} else {
i.active = !0;
c.spriteFrame = this.userCommonAtlas.getSpriteFrame(t.img);
} else if (51 == t.type) {
i.active = !0;
cc.vv.UserConfig.setVipFrame(c, t.lv || t.count);
o.active = !1;
} else if (52 == t.type) {
i.active = !0;
cc.vv.UserConfig.setRankFrame(c, t.lv || t.count);
o.active = !1;
} else if (55 == t.type) {
i.active = !0;
c.spriteFrame = this.userCommonAtlas.getSpriteFrame(t.img);
} else if (57 == t.type) {
i.active = !0;
c.spriteFrame = this.userCommonAtlas.getSpriteFrame(t.img);
}
var l = cc.find("value", this.node).getComponent(cc.Label), d = t.count || t.num || t.prize;
if (d > 0) {
l.string = Global.FormatNumToComma(d);
l.string = Global.formatNumber(d, {
threshold: 1e4
});
}
var h = t.min, _ = t.max;
_ > 0 && (l.string = h == _ ? Global.formatNumber(_, {
threshold: 1e4
}) : Global.formatNumber(h, {
threshold: 1e4
}) + " - " + Global.formatNumber(_, {
threshold: 1e4
}));
t.days && t.days > 0 && (l.string = ___("{1}天", t.days));
t.day && t.day > 0 && (l.string = ___("{1}天", t.day));
}
};
__decorate([ o(cc.SpriteAtlas) ], t.prototype, "commonAtlas", void 0);
__decorate([ o(cc.SpriteAtlas) ], t.prototype, "chatBoxAtlas", void 0);
__decorate([ o(cc.SpriteAtlas) ], t.prototype, "pokerBackAtlas", void 0);
__decorate([ o(cc.SpriteAtlas) ], t.prototype, "skinShopAtlas", void 0);
__decorate([ o(cc.SpriteAtlas) ], t.prototype, "userCommonAtlas", void 0);
return __decorate([ a, c("UI/奖励组件") ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {} ],
RewardListCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e61d4UiwENDnLOVPPi71pJa", "RewardListCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./RewardItemCpt"), a = cc._decorator, o = a.ccclass, c = a.property, s = a.menu, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.itemNode = null;
t.contentNode = null;
t.nodeMap = {};
return t;
}
t.prototype.updateView = function(e, t) {
t = t || [];
var i = [];
if (e instanceof Array) i = e; else {
var a = e.addCoin || e.coin;
a && i.push({
type: 1,
count: a
});
var o = e.addDiamond || e.diamond;
o && i.push({
type: 25,
count: o
});
}
this.closeAll();
this.nodeMap = {};
for (var c = 0; c < i.length; c++) {
var s = i[c];
if (2 != s.type) {
var r = this.contentNode.children[c];
r || ((r = cc.instantiate(this.itemNode)).parent = this.contentNode);
r.active = !0;
for (var l = 0, d = t; l < d.length; l++) {
var h = d[l];
if (h.type == s.type) {
cc.find("icon", r) && (cc.find("icon", r).scale = h.scale);
cc.find("avatar", r) && (cc.find("avatar", r).scale = h.scale);
cc.find("hddj", r) && (cc.find("hddj", r).scale = h.scale);
}
}
this.nodeMap[s.type] = {
node: r,
data: s,
icon: cc.find("icon", r),
avatar: cc.find("avatar", r),
hddj: cc.find("hddj", r),
value: cc.find("value", r)
};
r.getComponent(n.default).updateView(s);
} else this.nodeMap[s.type] = {
data: s
};
}
return this.nodeMap;
};
t.prototype.closeAll = function() {
for (var e = 0; e < this.contentNode.children.length; e++) this.contentNode.children[e].active = !1;
};
t.prototype.showAll = function() {
for (var e = 0; e < this.contentNode.children.length; e++) this.contentNode.children[e].active = !0;
};
t.prototype.runHintAnim = function(e, t) {
for (var i = 0; i < this.contentNode.children.length; i++) {
var n = this.contentNode.children[i];
n.active = !0;
n.stopAllActions();
var a = n.position;
n.position = a.add(cc.v3(0, 100));
n.opacity = 0;
cc.tween(n).delay(e + t * i).to(.3, {
position: a,
opacity: 255
}, {
easing: "backOut"
}).start();
}
};
__decorate([ c(cc.Node) ], t.prototype, "itemNode", void 0);
__decorate([ c(cc.Node) ], t.prototype, "contentNode", void 0);
return __decorate([ o, s("UI/奖励列表") ], t);
}(cc.Component);
i.default = r;
cc._RF.pop();
}, {
"./RewardItemCpt": "RewardItemCpt"
} ],
RoomIdCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "90691r+B4ZBAKACUrnd2Dx2", "RoomIdCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label_id = null;
return t;
}
t.prototype.onLoad = function() {
this.node.addComponent("NetListenerCmp").registerMsg(MsgId.PULL_SWITCH_TABLE, this.PULL_SWITCH_TABLE, this);
};
t.prototype.PULL_SWITCH_TABLE = function(e) {
this.label_id.string = e.deskinfo.deskid;
};
__decorate([ o(cc.Label) ], t.prototype, "label_id", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
RoomLeagueCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b3d4dSAayRIy7Zd8vWK9tOr", "RoomLeagueCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./scripts/PopupRoomLeagueView"), a = cc._decorator, o = a.ccclass, c = a.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.sp_icon = null;
t.label_rank = null;
t.leagueexp = 0;
t.leagueRank = 0;
return t;
}
t.prototype.onLoad = function() {
var e = this.node.addComponent("NetListenerCmp");
e.registerMsg(MsgId.LEAGUE_EXP_CHANGE, this.LEAGUE_EXP_CHANGE, this);
e.registerMsg(MsgId.GET_LEAGUE_INFO, this.GET_LEAGUE_INFO, this);
this.node.on("click", this.onClickLeagueInfo, this);
cc.vv.NetManager.sendAndCache({
c: MsgId.GET_LEAGUE_INFO,
gameid: facade.dm.deskInfo.gameid
});
this.updateView();
};
t.prototype.GET_LEAGUE_INFO = function(e) {
if (200 == e.code) {
if (facade.dm.deskInfo.gameid == e.gameid) {
this.leagueexp = e.score || -1;
this.leagueRank = e.rank || -1;
}
this.updateView();
}
};
t.prototype.LEAGUE_EXP_CHANGE = function(e) {
200 == e.code && cc.vv.NetManager.sendAndCache({
c: MsgId.GET_LEAGUE_INFO,
gameid: facade.dm.deskInfo.gameid
});
};
t.prototype.updateView = function() {
var e = cc.vv.UserConfig.getRank(this.leagueexp);
cc.vv.UserConfig.setRankBigFrame(this.sp_icon, e.stage);
this.leagueRank > 0 ? this.label_rank.string = ___("No.{1}", this.leagueRank.toString()) : this.label_rank.string = "";
};
t.prototype.onClickLeagueInfo = function() {
if (this.leagueRank <= 0 || this.leagueexp <= 0) cc.vv.FloatTip.show(___("对不起,您目前还没有排位积分,请努力吧")); else {
var e = this.node.convertToWorldSpaceAR(cc.v3(0, 200)), t = cc.find("Canvas").convertToNodeSpaceAR(e);
cc.vv.PopupManager.addPopup("games/PokerBase/module/League/prefabs/PopupRoomLeague", {
noCloseHit: !0,
noMask: !0,
onShow: function(e) {
t = t.add(cc.v3(-e.width / 2 - 40, 0));
e.position = t.add(cc.v3(e.width, 0));
cc.tween(e).to(.2, {
opacity: 255,
position: t
}, {
easing: "quadOut"
}).start();
e.getComponent(n.default).onInit(facade.dm.deskInfo.gameid);
}
});
}
};
__decorate([ c(cc.Sprite) ], t.prototype, "sp_icon", void 0);
__decorate([ c(cc.Label) ], t.prototype, "label_rank", void 0);
return __decorate([ o ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {
"./scripts/PopupRoomLeagueView": "PopupRoomLeagueView"
} ],
RoomLeagueRule: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "da1bfgSp6RBNKvop+3reNzh", "RoomLeagueRule");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../../../../_FWExpand/UI/RewardListCpt"), a = cc._decorator, o = a.ccclass, c = a.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.listViewNode = null;
return t;
}
t.prototype.onLoad = function() {
this.listView = this.listViewNode.getComponent("ListView");
this.listView.numItems = cc.vv.UserConfig.leagueRewardConfig.length;
};
t.prototype.onUpdateItem = function(e, t) {
var i = cc.vv.UserConfig.leagueRewardConfig[t];
cc.find("name", e).getComponent(cc.Label).string = i.name;
cc.vv.UserConfig.setRankBigFrame(cc.find("icon", e).getComponent(cc.Sprite), i.level);
var a = e.getComponentInChildren(n.default).updateView(i.rewards);
a[1] && (a[1].icon.scale = .4);
a[25] && (a[25].icon.scale = .4);
a[53] && (a[53].icon.scale = .3);
a[54] && (a[54].icon.scale = .5);
a[40] && (a[40].icon.scale = .3);
a[55] && (a[55].icon.scale = .45);
};
__decorate([ c(cc.Node) ], t.prototype, "listViewNode", void 0);
return __decorate([ o ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {
"../../../../_FWExpand/UI/RewardListCpt": "RewardListCpt"
} ],
RoomListView: [ function(e, t) {
"use strict";
cc._RF.push(t, "dfc65xAqM1KuaUNC16WYnoC", "RoomListView");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
e("List");
cc.Class({
extends: cc.Component,
properties: {
roomItemList: [ cc.Node ],
titleSprite: cc.Sprite,
btnLeft: cc.Button,
btnRight: cc.Button,
_gameType: 1
},
setType: function(e, t) {
this._gameType = e;
this._typeData = t;
},
_getGameList: function() {
var e = cc.vv.UserManager.gameList;
return 3 == this._gameType ? e.filter(function(e) {
return cc.vv.UserConfig.allTableSelectIds().indexOf(e.id) >= 0;
}) : 2 == this._gameType ? this._typeData : e.filter(function(e) {
return cc.vv.UserConfig.allBetSelectIds().indexOf(e.id) >= 0;
});
},
_getSlotBetlist: function() {
return [ {
ssid: 1,
seat: 1,
entry: 5e3,
score: 1e3,
reward: 1800,
vipLevel: 0,
section: [ 1e4, 25e4 ]
}, {
ssid: 2,
seat: 1,
entry: 1e4,
score: 1e3,
reward: 1800,
vipLevel: 0,
section: [ 5e4, 15e5 ]
}, {
ssid: 3,
seat: 1,
entry: 5e4,
score: 1e3,
reward: 1800,
vipLevel: 0,
section: [ 25e4, 1e7 ]
}, {
ssid: 4,
seat: 1,
entry: 5e5,
score: 1e3,
reward: 1800,
vipLevel: 0,
section: [ 25e5, -1 ]
} ];
},
_getSlotPlayer: function() {
if (this._slotPyers) return this._slotPyers;
this._slotPyers = [];
this._slotPyers.sess = [ {
num: Math.floor(100 + 1e3 * Math.random())
}, {
num: Math.floor(100 + 1e3 * Math.random())
}, {
num: Math.floor(100 + 1e3 * Math.random())
}, {
num: Math.floor(100 + 1e3 * Math.random())
} ];
return this._slotPyers;
},
onLoad: function() {
this.netListener = this.node.addComponent("NetListenerCmp");
this.netListener.registerMsg(MsgId.REQ_ROOM_PALYER_NUM, this.REQ_ROOM_PALYER_NUM, this, !1);
this.netListener.registerMsg(MsgId.FRIEND_ROOM_CREATE, this.FRIEND_ROOM_CREATE, this, !1);
this.netListener.registerMsg(MsgId.FRIEND_ROOM_JOIN, this.FRIEND_ROOM_JOIN, this, !1);
this.netListener.registerMsg(MsgId.GAME_SESS_LIST, this.GAME_SESS_LIST, this, !1);
this.btnLeft.node.on("click", this.onPageLeft, this);
this.btnRight.node.on("click", this.onPageRight, this);
Global.btnClickEvent(cc.find("page_view/view/content/rank/hentiao_daily", this.node), function() {
cc.vv.GameManager.jumpTo(12.1);
}, this);
Global.btnClickEvent(cc.find("page_view/view/content/rank/hentiao_weekly", this.node), function() {
cc.vv.GameManager.jumpTo(12.2);
}, this);
Global.btnClickEvent(cc.find("page_view/view/content/rank/hentiao_monthly", this.node), function() {
cc.vv.GameManager.jumpTo(12.3);
}, this);
Global.btnClickEvent(cc.find("page_view/view/content/bet_cash_back/btn", this.node), function() {
cc.vv.GameManager.jumpTo(11.1);
}, this);
Global.btnClickEvent(cc.find("records", this.node), function() {
var e = this;
cc.vv.PopupManager.addPopup("YD_Pro/prefab/yd_historical_record", {
onShow: function(t) {
t.getComponent("yd_historical_record").init({
gameid: e.gameid
});
}
});
}, this);
},
onInit: function(e) {
var t = this, n = this;
this.gameid = e;
this.gamesess = new Map();
var a = cc.vv.UserConfig.getGameMapInfo(e), o = 0;
a.bTableSelect ? o = 3 : a.bBetSelect && (o = 1);
this._gameType = o;
var c = cc.find("content", this.node), s = cc.find("table_list", this.node);
c.active = 3 != o;
s.active = 3 == o;
for (var r = 0, l = this._getGameList(), d = 0; d < l.length; d++) if (l[d].id == e) {
r = d;
break;
}
this._curPageIdx = r;
this.scheduleOnce(function() {
for (var e = 0; e < t.roomItemList.length; e++) t.roomItemList[e].on("click", t.onClickRoomItem.bind(t, e), t);
});
this.schedule(function() {
if (2 == n._gameType) {
for (var e = n._getSlotPlayer(), a = 0; a < e.sess.length; a++) e.sess[a].num += Global.random(-10, 10);
t._updatePlayers();
} else if (1 == n._gameType) {
for (var o, c = i(t.gamesess.values()); !(o = c()).done; ) for (var s = o.value, r = 0; r < s.length; r++) s[r].pnum += Global.random(-5, 5);
t._updatePlayers();
}
}, 5);
3 == n._gameType && s.getComponent("GameTableList").onInit(e);
this.updateView();
this.updateBtns();
this.updateSelfInfo();
},
requestSessList: function(e) {
var t = new Date().getTime();
if (!(this._reqgameid == e && t - this._reqtime < 500)) {
this._reqgameid = e;
this._reqtime = t;
cc.vv.NetManager.sendAndCache({
c: MsgId.GAME_SESS_LIST,
gameid: e
}, !0);
}
},
updateSelfInfo: function() {
var e = cc.find("userInfo", this.node);
cc.find("head", e).getComponent("HeadCmp").setHead(cc.vv.UserManager.uid, cc.vv.UserManager.userIcon);
cc.find("head", e).getComponent("HeadCmp").setAvatarFrame(cc.vv.UserManager.avatarframe || 0);
cc.vv.UserConfig.setVipFrame(cc.find("vip/icon", e).getComponent(cc.Sprite), cc.vv.UserManager.svip);
var t = cc.vv.UserManager.nextvipexp, i = cc.vv.UserManager.svipexp;
cc.find("vip/progress", e).getComponent(cc.ProgressBar).progress = i / t;
cc.find("vip/progress/label", e).getComponent(cc.Label).string = Global.FormatNumToComma(i) + "/" + Global.FormatNumToComma(t);
cc.find("coin/value", e).getComponent(cc.Label).string = Global.FormatNumToComma(cc.vv.UserManager.coin);
},
onDisable: function() {},
REQ_ROOM_PALYER_NUM: function(e) {
if (200 == e.code && !(e.spcode && e.spcode > 0)) {
e.data && (this.playerData = e.data);
this.updateView();
}
},
updateView: function() {
var e = this._getGameList()[this._curPageIdx];
if (e) {
this._setGameTitle(e.id);
var t = this.gamesess.get(e.id);
t ? this._updateSess(t) : this.requestSessList(e.id);
this.updateAdBanner(e.id);
}
},
_updateSess: function(e) {
for (var t = 0; t < this.roomItemList.length; t++) {
var i = this.roomItemList[t], n = (e || {})[t];
if (n) {
i.active = !0;
cc.find("coin", i).active = !0;
n.maxcoin > 0 ? cc.find("coin/value", i).getComponent(cc.Label).string = Global.FormatNumToComma(n.mincoin || 0) + "-" + Global.FormatNumToComma(n.maxcoin || 0) : cc.find("coin/value", i).getComponent(cc.Label).string = Global.FormatNumToComma(n.mincoin || 0) + "+";
cc.find("blind", i).getComponent(cc.Label).string = Global.FormatNumToComma(n.basecoin || 0);
if (cc.vv.UserManager.coin >= n.maxcoin && n.maxcoin > 0) {
cc.find("btn_room_open", i).active = !1;
cc.find("btn_room_gary", i).active = !0;
} else {
cc.find("btn_room_open", i).active = !0;
cc.find("btn_room_gary", i).active = !1;
}
cc.vv.UserManager.coin >= n.mincoin && (cc.vv.UserManager.coin < n.maxcoin || n.maxcoin < 0) ? cc.find("fire", i).active = !0 : cc.find("fire", i).active = !1;
cc.find("player/value", i).getComponent(cc.Label).string = n.pnum;
} else i.active = !1;
}
},
_setGameTitle: function(e) {
var t = cc.find("title_slot", this.node);
t.active = 2 == this._gameType;
this.titleSprite.node.active = 2 != this._gameType;
if (2 == this._gameType) {
var i = t.getComponent(sp.Skeleton), n = "BalootClient/Slots/icon/" + cc.vv.GameItemCfg[e].action + "/spine";
cc.vv.ResManager.setSkeleton(i, n, function(e) {
e.setAnimation(0, "logo", !0);
});
} else cc.vv.UserConfig.setGameTitleFrame(this.titleSprite, e);
},
_updatePlayers: function(e) {
e || (e = this.gameid);
var t = this.gamesess.get(e);
if (t) for (var i = 0; i < this.roomItemList.length; i++) {
var n = this.roomItemList[i], a = t[i];
a && (cc.find("player/value", n).getComponent(cc.Label).string = a.pnum);
}
},
updateBtns: function() {
var e = this._curPageIdx;
this.btnLeft.node.active = 0 != e;
var t = this._getGameList();
this.btnRight.node.active = e != t.length - 1;
},
onPageLeft: function() {
this._curPageIdx -= 1;
this.onListPageNumChange(this._curPageIdx);
},
onPageRight: function() {
this._curPageIdx += 1;
this.onListPageNumChange(this._curPageIdx);
},
onClickRoomItem: function(e) {
console.log("走到onClickRoomItem...");
var t = this._curPageIdx, i = this._getGameList()[t];
if (i) {
var n = this.gamesess.get(i.id);
2 == this._gameType && (n = this._getSlotBetlist());
if (n) {
var a = n[e];
if (a) if (cc.vv.UserManager.coin < a.mincoin) cc.vv.AlertView.show(___("金币不足"), function() {
cc.vv.EventManager.emit("HALL_OPEN_SHOP", {
open: 1
});
}, function() {}, !1, function() {}, ___("提示"), ___("取消"), ___("Deposit")); else if (a.maxcoin > 0 && cc.vv.UserManager.coin > a.maxcoin) cc.vv.FloatTip.show(___("您的金币已超出最大携带")); else {
if (Global.isNative() && !cc.vv.UserManager.isDownloadSubGame(i.id)) {
var o = cc.vv.GameItemCfg[i.id];
if (o) {
var c = o.name;
cc.director.emit("BundleUpdateStart", [ c ]);
cc.vv.PopupManager.removeTop();
return;
}
}
AppLog.ShowScreen("开始发送进入游戏请求");
StatisticsMgr.reqReport(ReportConfig.ONLINE_START_GAME, null, i.id);
StatisticsMgr.reqReportNow(ReportConfig.ENTER_GAME, i.id, i.id);
if (2 == this._gameType) {
cc.vv.UserManager.setEnterSelectBet(a.entry);
this._enterSlot(i, a.ssid);
} else {
var s = -1;
257 == i.id && (s = 1);
258 == i.id && (s = 1);
256 == i.id && (s = 5);
cc.vv.UserManager.isNoNeedDownGame(i.id);
cc.sys.isBrowser, cc.vv.GameManager._checkSubpack(i.id, function() {
s >= 0 ? cc.vv.NetManager.send({
c: MsgId.GAME_ENTER_MATCH,
round: s,
ssid: a.ssid,
gameid: i.id
}, !0) : cc.vv.NetManager.send({
c: MsgId.GAME_ENTER_MATCH,
ssid: a.ssid,
gameid: i.id
}, !0);
});
}
}
}
} else {
var r = ___("The game is under maintenance, please wait patiently!");
cc.vv.AlertView.showTips(r, function() {});
}
},
_enterSlot: function(e, t) {
StatisticsMgr.reqReportNow(ReportConfig.ENTER_GAME, e.id, e.id);
cc.vv.GameManager.EnterGame(e.id, t);
},
FRIEND_ROOM_CREATE: function(e) {
if (200 == e.code) if (e.spcode) {
662 == e.spcode && cc.vv.FloatTip.show(___("还在游戏中,不能加入其它房间"));
752 == e.spcode && cc.vv.FloatTip.show(___("创建失败,已达到最大创建房间数"));
} else cc.vv.NetManager.send({
c: MsgId.FRIEND_ROOM_JOIN,
deskid: e.deskinfo.deskid,
gameid: e.deskinfo.gameid
}, !0);
},
FRIEND_ROOM_JOIN: function(e) {
e.spcode && cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0);
},
GAME_SESS_LIST: function(e) {
if (200 == e.code && !(e.spcode && e.spcode > 0)) {
this.gamesess.set(e.gameid, e.sess);
this.gameid == e.gameid && this._updateSess(e.sess);
}
},
onListRender: function() {},
updateAdBanner: function(e) {
var t = cc.vv.UserManager.isInLepGames(e), i = cc.vv.UserManager.isInRebateGames(e), n = cc.find("page_view", this.node);
cc.find("view/content/rank", n).active = t;
var a = cc.find("view/content/bet_cash_back", n);
Global.showSpriteGray(a, !i);
t && i ? cc.tween(n).repeatForever(cc.tween().delay(3).call(function() {
var e = n.getComponent(cc.PageView), t = 1 == e.getCurrentPageIndex() ? 0 : 1;
e.scrollToPage(t, .5);
})).start() : n.stopAllActions();
},
onListPageNumChange: function(e) {
var t = this._getGameList()[e];
this.gameid = t.id;
cc.find("table_list", this.node).getComponent("GameTableList").onInit(t.id);
this.updateView();
this.lastPageIndex = void 0;
this.updateBtns();
}
});
cc._RF.pop();
}, {
List: "List"
} ],
RoomRankCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "222905ct5dO1oePkgLoURTl", "RoomRankCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.userNodes = [];
return t;
}
t.prototype.onLoad = function() {
this.netListener = this.addComponent("NetListenerCmp");
};
t.prototype.onInit = function(e) {
this.gameid = e;
};
t.prototype.onOpen = function() {
this.netListener.registerMsg(MsgId.RANK_THREE_DATA, this.RANK_THREE_DATA, this);
cc.vv.NetManager.sendAndCache({
c: MsgId.RANK_THREE_DATA,
type: 12,
gameid: this.gameid
});
};
t.prototype.onClose = function() {
this.netListener.clear();
};
t.prototype.RANK_THREE_DATA = function(e) {
if (200 == e.code && this.gameid == e.gameid) for (var t = e.datalist || [], i = 0; i < 3; i++) {
var n = this.userNodes[i], a = t[i];
if (a) {
n.active = !0;
var o = n.getComponentInChildren("HeadCmp");
if (o) {
o.setHead(a.uid, a.usericon);
o.setAvatarFrame(a.avatarframe);
}
cc.find("name/value", n).getComponent(cc.Label).string = a.playername;
cc.find("coin/value", n).getComponent(cc.Label).string = Global.formatNumShort(Math.min(a.coin, 9999999e6), 1);
} else n.active = !1;
}
};
__decorate([ o([ cc.Node ]) ], t.prototype, "userNodes", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
RoomSettlementCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5d427qtQtBP3qaQiBSOTYls", "RoomSettlementCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../../scripts/player/PBPlayer"), a = e("../../scripts/settlement/PBSettlementInfoChange"), o = e("../../scripts/settlement/PBSettlementInfoChangeInPlayer"), c = cc._decorator, s = c.ccclass, r = (c.property, 
function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {};
t.prototype.run = function(e) {
return __awaiter(this, void 0, void 0, function() {
var t, i, c, s, r, l, d, h, _, p, u, f, g, m = this;
return __generator(this, function(v) {
switch (v.label) {
case 0:
t = null;
facade.playersCtrl ? t = facade.playersCtrl.getPlayerByUid(cc.vv.UserManager.uid).node : (i = cc.vv.gameData.getScriptGame()) && (c = i._getPlayerListScript()) && (t = c.getPlayerNode(cc.vv.UserManager.uid));
return t ? this.playerChangeCpt ? [ 3, 2 ] : [ 4, cc.vv.ResManager.loadPrefab("games/PokerBase/prefabs/info_change") ] : [ 2 ];

case 1:
s = v.sent();
(r = cc.instantiate(s)).parent = facade.panel;
r.position = facade.panel.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.v3(0, 50)));
r.zIndex = 500;
this.playerChangeCpt = r.getComponent(o.PBSettlementInfoChangeInPlayer);
this.playerChangeCpt.clear();
v.label = 2;

case 2:
return this.infoChangeCpt ? [ 3, 4 ] : [ 4, cc.vv.ResManager.loadPrefab("games/PokerBase/prefabs/settlement_info_change") ];

case 3:
l = v.sent();
(d = cc.instantiate(l)).parent = facade.panel;
d.zIndex = 500;
this.infoChangeCpt = d.getComponent(a.PBSettlementInfoChange);
this.infoChangeCpt.end_Exp = cc.find("rp/position", this.playerChangeCpt.node);
this.infoChangeCpt.end_Rp = cc.find("exp/position", this.playerChangeCpt.node);
this.infoChangeCpt.end_League = cc.find("league/position", this.playerChangeCpt.node);
this.infoChangeCpt.clear();
v.label = 4;

case 4:
h = e.rp;
_ = e.exp;
p = e.league;
u = 1;
f = .1;
g = .1;
if (_ > 0 && h > 0 && p > 0) {
f = .1;
g = .2;
u = 3;
} else if (_ > 0 && h > 0) {
f = .1;
u = 2;
}
_ > 0 && this.infoChangeCpt.playExpChange(_, 0, function() {
m.playerChangeCpt.showDialogue(u);
}, function() {
m.playerChangeCpt.addInfo(_, h, p);
var e = t.getComponent(n.PBPlayer);
e && e.playRpChange(h);
});
h > 0 && this.infoChangeCpt.playRpChange(h, f);
p > 0 && this.infoChangeCpt.playLeagueChange(p, g);
return [ 2 ];
}
});
});
};
t.prototype.clear = function() {
this.infoChangeCpt && this.infoChangeCpt.clear();
this.playerChangeCpt && this.playerChangeCpt.clear();
};
return __decorate([ s ], t);
}(cc.Component));
i.default = r;
cc._RF.pop();
}, {
"../../scripts/player/PBPlayer": "PBPlayer",
"../../scripts/settlement/PBSettlementInfoChange": "PBSettlementInfoChange",
"../../scripts/settlement/PBSettlementInfoChangeInPlayer": "PBSettlementInfoChangeInPlayer"
} ],
RoomSocialSalonDisplay: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "619e9S5BJ1DTYsbbI6KEMgl", "RoomSocialSalonDisplay");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../../scripts/PBCommonData"), a = cc._decorator, o = a.ccclass, c = a.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.numLabel = null;
t.numLabel2 = null;
return t;
}
t.prototype.onLoad = function() {
this.netListener = this.node.addComponent("NetListenerCmp");
this.netListener.registerMsg(MsgId.VIP_ROOM_LIST, this.VIP_ROOM_LIST, this);
};
t.prototype.onEnable = function() {
if (292 != facade.dm.deskInfo.gameid) if (facade && facade.dm && facade.dm.deskInfo && facade.dm.deskInfo.conf && (facade.dm.deskInfo.conf.roomtype == n.PBRoomType.normal || facade.dm.deskInfo.conf.roomtype == n.PBRoomType.friend)) {
this.node.active = !0;
cc.vv.NetManager.send({
c: MsgId.VIP_ROOM_LIST,
sort: 2
});
} else this.node.active = !1; else this.node.active = !1;
};
t.prototype.VIP_ROOM_LIST = function(e) {
if (200 == e.code && !(e.spcode && e.spcode > 0)) {
for (var t, i = [], n = 0, a = e.super; n < a.length; n++) {
var o = a[n];
i = i.concat(o);
}
var c = [];
if ((t = e.selfrooms.concat(i)).length > 0) for (var s = 0, r = t; s < r.length; s++) {
var l = r[s];
l.pwd || c.push(l);
}
for (var d = [], h = 0, _ = c; h < _.length; h++) {
var p = _[h];
p.deskid != facade.dm.deskInfo.deskid && d.push(p);
}
this.numLabel && (d.length <= 0 ? this.numLabel.string = ___("沙龙") : this.numLabel.string = "x" + d.length);
this.numLabel2 && (d.length <= 0 ? this.numLabel2.string = ___("沙龙") : this.numLabel2.string = "x" + d.length);
}
};
t.prototype.start = function() {};
__decorate([ c(cc.Label) ], t.prototype, "numLabel", void 0);
__decorate([ c(cc.Label) ], t.prototype, "numLabel2", void 0);
return __decorate([ o ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {
"../../scripts/PBCommonData": "PBCommonData"
} ],
RoomTypeBtn: [ function(e, t) {
"use strict";
cc._RF.push(t, "3c317sEIPlPjZjb1hTUxPbt", "RoomTypeBtn");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
cc.Class({
extends: cc.Component,
properties: {
gameid: 0,
leagueexp: 0,
big: !1,
viewPrefab: cc.Prefab,
textureGameInfo: cc.SpriteAtlas,
loading: !1,
bundleName: "",
isFeatured: !1,
labelTips: {
default: null,
type: cc.Label
}
},
onLoad: function() {
var e = this;
cc.director.on("BundleUpdateFinish", this.onBundleUpdateFinish, this);
cc.director.on("BundleUpdateStart", this.onBundletUpdateStart, this);
this.node.addComponent("NetListenerCmp").registerMsg(MsgId.LEAGUE_EXP_CHANGE, this.LEAGUE_EXP_CHANGE, this);
Global.registerEvent("GO_ROOMGAME_ID", this.onEventGoGame, this);
var t = this.node.getComponent(cc.Button);
t && t.node.on("click", function() {
e.onBtnClick(t, !0);
});
this.gameAnimNode = cc.find("spine", this.node);
this.gameIconNode = cc.find("icon", this.node);
this.gameTilteNode = cc.find("label", this.node);
},
start: function() {
this.updateView();
},
onDestroy: function() {
cc.director.off("BundleUpdateFinish", this.onBundleUpdateFinish, this);
cc.director.off("BundleUpdateStart", this.onBundletUpdateStart, this);
},
onBundleUpdateFinish: function(e) {
var t = e[0], i = e[1];
if (this.bundleName == t) {
this.loading = !1;
if (!this.isFeatured) {
console.log("onBundleUpdateFinish----- ", e);
i && this.loadBundle(t);
}
}
},
onBundletUpdateStart: function(e) {
if (!this.isFeatured) {
var t = e[0];
if (this.bundleName == t) {
this.onBtnClick();
cc.vv.PopupManager.removeTop();
}
}
},
onBtnClick: function(e, t) {
if (Global.isNative()) {
var i = this.bundleName, n = cc.vv.GameItemCfg[this.gameid];
if (n) {
i = n.name;
this.bundleName = i;
}
if (window[i]) {
this._enterFunc(this.gameid);
return;
}
if (this.loading) return;
t && StatisticsMgr.reqReport(StatisticsMgr.REQ_SUBGAME_CLICK, null, this.gameid);
this.loading = !0;
var a = window[i];
if (a) {
a.releaseAll();
cc.assetManager.removeBundle(a);
}
window[i] = null;
console.log(" BundleUpdateModule .............. ", this.gameid);
this.node.getComponent("BundleUpdateModule").checkForceAppUpdate(this.gameid);
} else {
t && StatisticsMgr.reqReport(StatisticsMgr.REQ_SUBGAME_CLICK, null, this.gameid);
this._enterFunc(this.gameid);
}
},
loadBundle: function(e) {
var t = this, i = this;
if (window[e]) {
window[e].releaseAll();
cc.assetManager.removeBundle(window[e]);
window[e] = null;
}
cc.assetManager.loadBundle(e, null, function(n, a) {
if (n) AppLog.err("RoomTypeBtn-loadBundle", n); else {
window[e] = a;
a.loadScene(e, function() {
t.loading = !1;
console.log("当前点击游戏的ID", i.gameId);
t._enterFunc(i.gameid);
});
}
});
},
onEventGoGame: function(e) {
var t = e.detail;
t == this.gameid && this._enterFunc(t);
},
_enterFunc: function(e) {
if (9999 != e) {
cc.vv.UserManager.isNoNeedDownGame(e);
this._loadBetSelect();
} else cc.vv.FloatTip.show(___("Stay tuned!"));
},
_loadBetSelect: function() {
var e = this;
if (Global.isIOSAndroidReview()) cc.vv.NetManager.send({
c: MsgId.GAME_ENTER_MATCH,
ssid: {
292: 21,
265: 11,
291: 31,
269: 41,
287: 51,
255: 61
}[this.gameid],
gameid: this.gameid
}, !0); else if (cc.vv.UserConfig.getGameMapInfo(this.gameid)) cc.vv.PopupManager.addPopup(this.viewPrefab, {
opacityIn: !0,
onShowEnd: function(t) {
var i = t.getComponent("RoomListView");
i && i.onInit(e.gameid);
}
}); else {
StatisticsMgr.reqReportNow(ReportConfig.ENTER_GAME, this.gameid, this.gameid);
cc.vv.GameManager.EnterGame(this.gameid);
}
},
updateView: function() {
var e = cc.vv.GameItemCfg[this.gameid];
e && (this.bundleName = e.name);
this.gameIconNode = cc.find("icon", this.node);
this.leagueexp = this.getLeagueExp(this.gameid);
this.updateLeagueView();
var t = cc.find("CountryHeartBtn", this.node);
if (t) {
var i = t.getComponent("CountryHeartBtn");
i.gameid = this.gameid;
i.countryId = this.getCountry(this.gameid);
}
this.gameAnimNode && (this.gameAnimNode.active = !1);
this.gameIconNode && (this.gameIconNode.active = !1);
var n = this.node.getComponentInChildren("NewGuideHintCpt");
if (this.gameAnimNode && n && this.big && !Global.isDurakApp()) {
this.gameAnimNode.active = !0;
this.gameAnimNode.getComponent(sp.Skeleton).setAnimation(0, this.gameid + "_", !0);
} else if (this.gameAnimNode && [ 256, 257, 262, 264 ].indexOf(this.gameid) >= 0 && !Global.isDurakApp()) {
this.gameAnimNode.active = !0;
this.gameAnimNode.getComponent(sp.Skeleton).setAnimation(0, this.gameid + "", !0);
} else if (this.gameIconNode) {
this.gameIconNode.active = !0;
if (this.textureGameInfo) {
var a = this.textureGameInfo.getSpriteFrame("btn_hall_game_" + this.gameid);
a && (this.gameIconNode.getComponent(cc.Sprite).spriteFrame = a);
var o = cc.vv.i18nManager.getConfig();
this.gameTilteNode.getComponent(cc.Sprite).spriteFrame = this.textureGameInfo.getSpriteFrame("text_hall_game_" + this.gameid + "_" + o.lang);
} else cc.vv.ResManager.setSpriteFrame(this.gameIconNode.getComponent(cc.Sprite), "BalootClient/GameIcon/" + this.gameid, null, null);
}
var c = cc.find("node_downing", this.node);
if (c) {
var s = !0;
9999 == this.gameid && (s = !1);
c.active = s;
c.getComponent("node_downing").initGameId(this.gameid);
}
},
getCountry: function(e) {
for (var t, n = i(cc.vv.UserManager.gameList); !(t = n()).done; ) {
var a = t.value;
if (a.id == e) return a.country > 0 ? a.topCountry : a.country;
}
},
getLeagueExp: function(e) {
for (var t, n = i(cc.vv.UserManager.gameList); !(t = n()).done; ) {
var a = t.value;
if (a.id == e) return a.leagueexp;
}
},
updateLeagueView: function() {
var e = cc.find("league", this.node);
if (e) {
var t = cc.vv.UserConfig.getRank(this.leagueexp);
cc.vv.UserConfig.setRankFrame(cc.find("icon", e).getComponent(cc.Sprite), t.stage);
}
},
LEAGUE_EXP_CHANGE: function(e) {
if (200 == e.code && e.gameid == this.gameid) {
this.leagueexp = e.exp;
this.updateLeagueView();
}
},
showExitState: function(e) {
var t = cc.find("exitState", this.node);
t.stopAllActions();
if (e) {
t.active = !0;
t.getComponent(sp.Skeleton).setAnimation(0, "aniamaton", !0);
} else t.active = !1;
}
});
cc._RF.pop();
}, {} ],
RuleBtnCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a7758D5jE5JV6CNAB/yNdsj", "RuleBtnCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./RuleViewCpt"), a = cc._decorator, o = a.ccclass, c = a.property, s = a.menu, r = a.requireComponent, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.key = "";
t.height = 1148;
return t;
}
t.prototype.onLoad = function() {
this.node.getComponent(cc.Button) && this.node.on("click", this.onClick, this);
};
t.prototype.onClick = function() {
var e = this;
if (this.key) {
var t = cc.vv.i18nManager.getConfig(), i = "https://inter.sekiengame.com/fb/ruleimg/" + this.key + "_" + t.lang + ".png";
cc.vv.PopupManager.addPopup("BalootClient/BaseRes/prefabs/PopupRuleCommon", {
scaleIn: !0,
onShow: function(t) {
t.getComponent(n.default).onInit(i, {
height: e.height
});
}
});
}
};
__decorate([ c ], t.prototype, "key", void 0);
__decorate([ c ], t.prototype, "height", void 0);
return __decorate([ o, s("Web规则按钮"), r(cc.Button) ], t);
}(cc.Component);
i.default = l;
cc._RF.pop();
}, {
"./RuleViewCpt": "RuleViewCpt"
} ],
RuleViewCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "20db4ewbBVEbLyFSTHf/Pz3", "RuleViewCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.ruleSp = null;
t.bgNode = null;
t.loaddingNode = null;
t._reqHandle = null;
return t;
}
t.prototype.onLoad = function() {
this.loaddingNode.active = !0;
};
t.prototype.onInit = function(e, t) {
var i = this;
if (e) {
var n = t.height || 1148;
n = Math.min(1148, n);
n = Math.max(600, n);
this._reqHandle && this._reqHandle.rejectFunc();
this.loaddingNode.active = !0;
this.bgNode.height = n;
this._reqHandle = cc.vv.ResManager.loadImage(e, function(e, t) {
cc.isValid(i.ruleSp) && cc.isValid(i.ruleSp.node) && t && (i.ruleSp.spriteFrame = new cc.SpriteFrame(t));
i._reqHandle = null;
i.loaddingNode && cc.isValid(i.loaddingNode) && (i.loaddingNode.active = !1);
});
}
};
t.prototype.onDestroy = function() {
this._reqHandle && this._reqHandle.rejectFunc();
};
__decorate([ o(cc.Sprite) ], t.prototype, "ruleSp", void 0);
__decorate([ o(cc.Node) ], t.prototype, "bgNode", void 0);
__decorate([ o(cc.Node) ], t.prototype, "loaddingNode", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
SafeWidget: [ function(e, t) {
"use strict";
cc._RF.push(t, "66968JyueBP2YWNjLDTBBBr", "SafeWidget");
cc.Class({
extends: cc.Component,
editor: {
disallowMultiple: !1,
menu: "通用/竖屏安全区域组件",
requireComponent: cc.Widget
},
onEnable: function() {
this.updateArea();
cc.view.on("canvas-resize", this.updateArea, this);
},
onDisable: function() {
cc.view.off("canvas-resize", this.updateArea, this);
},
updateArea: function() {
if (cc.sys.os == cc.sys.OS_ANDROID || cc.sys.os == cc.sys.OS_IOS) {
var e = this.node.getComponent(cc.Widget);
if (e) {
e.updateAlignment();
var t = this.node.position, i = this.node.getAnchorPoint();
e.isAlignTop = e.isAlignBottom = e.isAlignLeft = e.isAlignRight = !0;
var n = cc.winSize.width, a = cc.winSize.height, o = cc.sys.getSafeAreaRect();
cc.log(cc.js.formatStr("【winSize】height=%s,width=%s", a, n));
cc.log(cc.js.formatStr("【safeArea】height=%s,width=%s,x=%s,y=%s", o.height, o.width, o.x, o.y));
e.top = a - (o.y + o.height);
e.bottom = 0;
e.left = o.x;
e.right = n - (o.x + o.width);
e.updateAlignment();
var c = this.node.position, s = i.x - (c.x - t.x) / this.node.width, r = i.y - (c.y - t.y) / this.node.height;
this.node.setAnchorPoint(s, r);
e.enabled = !0;
}
}
}
});
cc._RF.pop();
}, {} ],
SceneMgr: [ function(e, t) {
"use strict";
cc._RF.push(t, "94373Pjv+pEBJB7iV8EiU2R", "SceneMgr");
cc.Class({
extends: cc.Component,
statics: {
params: null,
enterScene: function(e, t, i) {
var n = this, a = null;
i && (a = "string" == typeof i ? i : i.orientation);
cc.director.resume();
cc.vv.AudioManager.stopAllEffect([ "btn_click", "lobby_click", "game_loading" ]);
cc.vv.FloatTip && cc.vv.FloatTip.clear();
var o = cc.director.getScene();
if (o.name !== e) {
AppLog.log("@@@@@@@@@@@@@@@@@@sceneName:" + e);
Global.dispatchEvent(EventId.HIDE_SHOP);
o.name == Global.SCENE_NAME.HALL && Global.dispatchEvent(EventId.HALL_RECYCLE_ITEM);
var c = e;
if (e === Global.SCENE_NAME.LOGIN) {
cc.vv.AudioManager.stopAll();
cc.vv.AppData.clearGameId();
a = "portrait";
} else if (e === Global.SCENE_NAME.HOTUPDATE) {
cc.vv.AppData.clearGameId();
a = "portrait";
} else if ("solt_loading" === e) ; else if (e === Global.SCENE_NAME.HALL) {
cc.vv.AppData.clearGameId();
cc.vv.gameData && cc.vv.gameData.onExit();
a = "portrait";
} else e !== Global.SCENE_NAME.HALL_PRELOAD && e != Global.SCENE_NAME.SLOT_BACKLOBBY || (a = "portrait");
a || (a = "landscape");
cc.vv.PlatformApiMgr.setOrientation(a);
cc.vv.BroadcastManager && cc.vv.BroadcastManager.stop();
if (c === Global.SCENE_NAME.HALL_PRELOAD || c === Global.SCENE_NAME.HALL || c === Global.SCENE_NAME.LOGIN || c === Global.SCENE_NAME.LAUNCH || c === Global.SCENE_NAME.HOTUPDATE) cc.director.loadScene(e, function(e, i) {
c !== Global.SCENE_NAME.HALL && c !== Global.SCENE_NAME.LOGIN && c != Global.SCENE_NAME.QUEST || cc.vv.gameData && cc.vv.gameData.clear();
!e && i && (i.autoReleaseAssets = !0);
cc.vv.BroadcastManager && cc.vv.BroadcastManager.run();
t && t(e, i);
}); else {
var s = c;
i && i.mainScene && (s = i.mainScene);
var r = window[s];
if (r) if (c == s) this.loadScene(r, c, t); else {
r.releaseAll();
cc.assetManager.removeBundle(r);
window[s] = null;
cc.assetManager.loadBundle(s, null, function(e, i) {
window[s] = i;
n.loadScene(i, c, t);
});
} else cc.assetManager.loadBundle(s, null, function(e, i) {
window[s] = i;
n.loadScene(i, c, t);
});
}
}
},
loadScene: function(e, t, i) {
e.loadScene(t, function(e, n) {
if (e) AppLog.err(e); else {
StatisticsMgr.httpReport(StatisticsMgr.HTTP_GAME_ENTER, null, t);
cc.director.runSceneImmediate(n);
t !== Global.SCENE_NAME.HALL && t !== Global.SCENE_NAME.LOGIN && t != Global.SCENE_NAME.QUEST || cc.vv.gameData && cc.vv.gameData.clear();
!e && n && (n.autoReleaseAssets = !0);
cc.vv.BroadcastManager && cc.vv.BroadcastManager.run();
i && i(e, n);
}
});
},
GetCurSceneName: function() {
return cc.director.getScene().name;
},
isInHallScene: function() {
return cc.director.getScene().name === Global.SCENE_NAME.HALL;
},
isInLoginScene: function() {
return cc.director.getScene().name === Global.SCENE_NAME.LOGIN;
},
CanShowHallPreLoading: function() {
var e = cc.director.getScene();
return e.name === Global.SCENE_NAME.LOGIN || e.name === Global.SCENE_NAME.HOTUPDATE || e.name == Global.SCENE_NAME.LAUNCH;
},
setParams: function(e) {
this.params = e;
},
getParams: function(e) {
void 0 === e && (e = !0);
var t = this.params;
e && (this.params = null);
return t;
}
}
});
cc._RF.pop();
}, {} ],
SceneTranslate: [ function(e, t) {
"use strict";
cc._RF.push(t, "2db70BIcnZObZDO6T86DZwI", "SceneTranslate");
cc.Class({
extends: cc.Component,
properties: {
maskNode: cc.Node
},
onLoad: function() {
Global.FixDesignScale_V(this.node, !0);
},
toHall: function(e) {
var t = this;
cc.director.preloadScene(Global.SCENE_NAME.HALL, function() {
t.loadHalled = !0;
if (t.exitAnimed && e) {
e();
e = null;
}
});
this.maskNode.width = 4e3;
this.maskNode.height = 4e3;
cc.tween(this.maskNode).to(.5, {
width: 0,
height: 0
}).call(function() {
t.exitAnimed = !0;
Global.isYDApp() || Global.stopAllTimer();
if (t.loadHalled && e) {
e();
e = null;
}
}).start();
},
open: function() {
var e = this;
this.maskNode.width = 0;
this.maskNode.height = 0;
cc.tween(this.maskNode).to(.5, {
width: 4e3,
height: 4e3
}).call(function() {
cc.vv.PopupManager.removePopup(e.node);
}).start();
},
update: function() {
if (!this.entered && this.exitAnimed && this.loadHalled) {
cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.HALL);
this.entered = !0;
}
}
});
cc._RF.pop();
}, {} ],
ScrollViewDrawCallOpacity: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7a1a4xigM9BKpDv7QUBH8B+", "ScrollViewDrawCallOpacity");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.content = null;
t.interval = .1;
t.scrollview = null;
t.itemCount = null;
t.svBBoxRect = null;
return t;
}
t.prototype.onLoad = function() {
this.scrollview = this.node.getComponent(cc.ScrollView) || this.node.getComponent(cc.PageView);
null != this.scrollview && null != this.scrollview && this.schedule(this.scheduleCallback, this.interval || .1);
};
t.prototype.onEnable = function() {};
t.prototype.start = function() {};
t.prototype.scheduleCallback = function() {
(this.scrollview.isScrolling() || this.scrollview.isAutoScrolling()) && this.scrollViewDrawCallOpacity();
};
t.prototype.onDisable = function() {};
t.prototype.scrollViewDrawCallOpacity = function() {
if (null != this.scrollview && null != this.scrollview) {
var e = this.scrollview.node.parent.convertToWorldSpaceAR(cc.v2(this.scrollview.node.x - this.scrollview.node.anchorX * this.scrollview.node.width, this.scrollview.node.y - this.scrollview.node.anchorY * this.scrollview.node.height));
this.svBBoxRect = cc.rect(e.x, e.y, this.scrollview.node.width, this.scrollview.node.height);
this.itemCount = this.content || this.scrollview.content;
for (var t = 0; t < this.itemCount.children.length; t++) {
var i = this.itemCount.children[t];
i.getBoundingBoxToWorld().intersects(this.svBBoxRect) ? 255 != i.opacity && (i.opacity = 255) : 0 != i.opacity && (i.opacity = 0);
}
}
};
__decorate([ o({
type: cc.Node,
tooltip: "可不传,默认是content,如果是别的节点,比如layout可以从这里传进来"
}) ], t.prototype, "content", void 0);
__decorate([ o({
tooltip: "刷新时间间隔"
}) ], t.prototype, "interval", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
SettingLangBoxCpt: [ function(e, t) {
"use strict";
cc._RF.push(t, "d8b6fEX50ZMH4oV5WWr21k+", "SettingLangBoxCpt");
cc.Class({
extends: cc.Component,
properties: {
arItem: cc.Node,
enItem: cc.Node
},
initView: function(e) {
var t = this;
this.closeFunc = e;
this.arItem.on("click", function() {
t.onChangeLang(cc.vv.i18nLangEnum.AR);
}, this);
this.enItem.on("click", function() {
t.onChangeLang(cc.vv.i18nLangEnum.EN);
}, this);
},
onLoad: function() {
var e = cc.vv.i18nManager.getConfig();
cc.find("isSelect", this.arItem).active = "ar" == e.lang;
cc.find("isSelect", this.enItem).active = "en" == e.lang;
Global.isDurakApp() && (this.arItem.active = !1);
},
onChangeLang: function(e) {
if (cc.vv.i18nManager.getConfig().enum != e) {
cc.vv.i18nManager.setLanguage(e);
var t = cc.vv.i18nManager.getLanguageConfig(e);
cc.vv.NetManager.send({
c: MsgId.CHANGE_LANGUAGE,
language: t.id
}, !0);
cc.vv.SceneMgr.enterScene(Global.SCENE_NAME.CHANGE_LANGUAGE, null, Global.APP_ORIENTATION);
cc.vv.PopupManager.removePopup(this.node);
}
},
onDestroy: function() {
this.closeFunc && this.closeFunc();
}
});
cc._RF.pop();
}, {} ],
ShaderController: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "efe8ewu5K5KyLUbxEuKhwS5", "ShaderController");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.speed = 1;
t.isLoop = !1;
t.isSetUv = !1;
return t;
}
t.prototype.start = function() {
this.time = 0;
this.IsAdd = !0;
this.sprite = this.node.getComponent(cc.Sprite);
this.material = this.sprite.getMaterial(0);
};
t.prototype.update = function(e) {
var t = this.material.getProperty("u_time");
if (null != t && null != t) {
this.material.setProperty("u_time", this.time);
this.isLoop && !this.IsAdd ? this.time -= e * this.speed : this.time += e * this.speed;
if (this.isSetUv) {
var i, n, a, o, c = this.sprite.spriteFrame;
i = c.uv[0];
o = c.uv[5];
n = c.uv[6];
a = c.uv[3];
var s = new cc.Vec4(i, o, n, a), r = c.isRotated() ? 1 : 0;
this.material.setProperty("u_UVoffset", s);
this.material.setProperty("u_rotated", r);
}
this.time > 1.5 ? this.IsAdd = !1 : this.time < -.5 && (this.IsAdd = !0);
}
};
__decorate([ o({
type: cc.Float,
tooltip: "速度"
}) ], t.prototype, "speed", void 0);
__decorate([ o({
tooltip: "是否循环"
}) ], t.prototype, "isLoop", void 0);
__decorate([ o({
tooltip: "是否设置UV到effect(解决动态合图的bug)"
}) ], t.prototype, "isSetUv", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
ShopFriendSendCoin: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "dc89eueR6pN1InmbIrVUnPV", "ShopFriendSendCoin");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.listViewNode = null;
t.onlineFrame = null;
t.offlineFrame = null;
return t;
}
t.prototype.onLoad = function() {
this.listView = this.listViewNode.getComponent("ListView");
var e = this.node.addComponent("NetListenerCmp");
e.registerMsg(MsgId.SOCIAL_FRIEND_LIST, this.SOCIAL_FRIEND_LIST, this);
e.registerMsg(MsgId.DIAMOND_TO_COIN, this.DIAMOND_TO_COIN, this);
};
t.prototype.start = function() {
cc.vv.NetManager.sendAndCache({
c: MsgId.SOCIAL_FRIEND_LIST
}, !0);
};
t.prototype.onInit = function(e) {
this.data = e;
};
t.prototype.SOCIAL_FRIEND_LIST = function(e) {
if (200 == e.code) {
this.listData = e.items;
this.updateView();
}
};
t.prototype.updateView = function() {
this.listView.numItems = this.listData.length;
};
t.prototype.onUpdateItem = function(e, t) {
var i = this.listData[t];
cc.find("name", e).getComponent(cc.Label).string = i.playername;
cc.find("UserHead", e).getComponent("HeadCmp").setHead(i.uid, i.usericon);
cc.find("UserHead", e).getComponent("HeadCmp").setAvatarFrame(i.avatarframe || 0);
cc.find("online", e).getComponent(cc.Sprite).spriteFrame = 1 == i.isonline ? this.onlineFrame : this.offlineFrame;
var n = i.vip || i.badge;
cc.vv.UserConfig.setVipFrame(cc.find("vip", e).getComponent(cc.Sprite), n);
cc.find("vip", e).active = n > 0;
};
t.prototype.onClickSend = function(e) {
var t = this.listData[e.currentTarget._listId];
cc.vv.NetManager.send({
c: MsgId.DIAMOND_TO_COIN,
frienduid: t.uid,
id: this.data.id
});
};
t.prototype.DIAMOND_TO_COIN = function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0); else {
cc.vv.FloatTip.show(___("赠送成功"));
cc.vv.PopupManager.removePopup(this.node);
}
};
__decorate([ o(cc.Node) ], t.prototype, "listViewNode", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "onlineFrame", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "offlineFrame", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
ShopHeadItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "72ccaOj/0dIla93XbhijF55", "ShopHeadItem");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.statusIcon = null;
return t;
}
t.prototype.onLoad = function() {};
t.prototype.onPageItemChange = function(e) {
var t = e.isOpen ? -90 : 0;
this.statusIcon.node.stopAllActions();
cc.tween(this.statusIcon.node).to(.1, {
angle: t
}).start();
};
__decorate([ o(cc.Sprite) ], t.prototype, "statusIcon", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
ShopSendCoin: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e5bb1wipSVOQ4eiu64C3QaD", "ShopSendCoin");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.contentNode = null;
t.itemNode = null;
t.commonAtlas = null;
t.uidInput = null;
t.btnSend = null;
t.index = 0;
t.toggles = [];
return t;
}
Object.defineProperty(t.prototype, "toUid", {
get: function() {
var e = -1;
this.uidInput && this.uidInput.string.length > 0 && (e = parseInt(this.uidInput.string.trim()));
return e;
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
var e = this.node.addComponent("NetListenerCmp");
e.registerMsg(MsgId.DIAMOND_TO_COIN, this.DIAMOND_TO_COIN, this);
e.registerMsg(MsgId.REQ_SHOP_EX, this.REQ_SHOP_EX, this);
for (var t = 0; t < 5; t++) {
var i = cc.instantiate(this.itemNode);
i.position = cc.v3();
i.parent = this.contentNode;
i.active = !0;
cc.find("select", i).on("toggle", this.onClickToggle.bind(this, t), this);
this.toggles.push(cc.find("select", i).getComponent(cc.Toggle));
}
this.itemNode.active = !1;
this.btnSend.node.on("click", this.onClickSend, this);
cc.vv.NetManager.sendAndCache({
c: MsgId.REQ_SHOP_EX,
stype: "1,14,15,25,27,30",
platform: Global.isIOS() ? 2 : 1
}, !0);
this.onEditInputChange();
};
t.prototype.onClickToggle = function(e) {
if (this.data) {
this.index = e;
this.updateView();
}
};
t.prototype.REQ_SHOP_EX = function(e) {
if (200 == e.code && !(e.spcode && e.spcode > 0) && e.shoplist && e.shoplist.data1) {
this.data = Global.deepClone(e.shoplist.data1);
this.data.sort(function(e, t) {
return e.amount - t.amount;
});
this.data.shift();
this.updateView();
}
};
t.prototype.updateView = function() {
if (this.data) {
for (var e = 0; e < 5; e++) {
var t = this.contentNode.children[e];
if (t) {
var i = this.data[e];
cc.find("icon_coin", t).getComponent(cc.Sprite).spriteFrame = this.commonAtlas.getSpriteFrame("icon_coin_" + (e + 1));
cc.find("icon_value", t).getComponent(cc.Label).string = Global.FormatNumToComma(i.ocount);
cc.find("diamond/value", t).getComponent(cc.Label).string = Global.FormatNumToComma(i.amount);
var n = this.index == e ? new cc.Color(255, 252, 0) : new cc.Color(216, 255, 246);
cc.find("icon_value", t).color = n;
cc.find("diamond/value", t).color = n;
}
}
for (e = 0; e < this.toggles.length; e++) this.toggles[e].isChecked = e == this.index;
var a = this.data[this.index];
this.btnSend.getComponentInChildren(cc.Label).string = Global.FormatNumToComma(a.amount);
}
};
t.prototype.DIAMOND_TO_COIN = function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0); else {
cc.vv.FloatTip.show(___("赠送成功"));
cc.vv.PopupManager.removePopup(this.node);
}
};
t.prototype.onEditInputChange = function() {
this.btnSend.getComponent("ButtonGrayCmp").interactable = this.uidInput.string.trim().length > 0;
};
t.prototype.onClickSend = function() {
if (this.data) {
var e = this.data[this.index];
e && (this.toUid < 0 ? cc.vv.FloatTip.show(___("请输入邀请码")) : cc.vv.NetManager.send({
c: MsgId.DIAMOND_TO_COIN,
frienduid: this.toUid,
id: e.id
}));
}
};
__decorate([ o(cc.Node) ], t.prototype, "contentNode", void 0);
__decorate([ o(cc.Node) ], t.prototype, "itemNode", void 0);
__decorate([ o(cc.SpriteAtlas) ], t.prototype, "commonAtlas", void 0);
__decorate([ o(cc.EditBox) ], t.prototype, "uidInput", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btnSend", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
ShopViewBtn: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3f3e2h5bBpCX5G/gJBW2OqP", "ShopViewBtn");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = n.requireComponent, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.open = -1;
return t;
}
t.prototype.onLoad = function() {
var e = this;
this.node.getComponent(cc.Button) && this.node.on("click", function() {
0 == e.open ? StatisticsMgr.reqReport(ReportConfig.SHOP_OPEN_DIAMOND) : 1 == e.open ? StatisticsMgr.reqReport(ReportConfig.SHOP_OPEN_GOLD) : 2 == e.open && StatisticsMgr.reqReport(ReportConfig.SHOP_OPEN_VIP);
cc.vv.EventManager.emit("HALL_OPEN_SHOP", {
open: e.open
});
});
};
__decorate([ o ], t.prototype, "open", void 0);
return __decorate([ a, c(cc.Button) ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {} ],
ShopViewCoin: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "580738GEPlGwZTDaN1Q+Lho", "ShopViewCoin");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../../../../_FWExpand/UI/TimeDownCpt"), a = e("./PopupSelectSendTypeView"), o = cc._decorator, c = o.ccclass, s = o.property, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.contentNode = null;
t.itemNode = null;
t.commonAtlas = null;
t.sendPrefab = null;
return t;
}
t.prototype.onLoad = function() {
this.netListener = this.node.addComponent("NetListenerCmp");
this.initView();
};
t.prototype.onEnable = function() {
this.netListener.registerMsg(MsgId.PURCHASE_RECHARGE_SUC, this.PURCHASE_RECHARGE_SUC, this);
cc.vv.NetManager.sendAndCache({
c: MsgId.REQ_SHOP_EX,
stype: "1",
platform: Global.isIOS() ? 2 : 1
}, !0);
this.playSwingAnim();
};
t.prototype.onDisable = function() {
this.netListener.clear();
};
t.prototype.initView = function() {
for (var e = 0; e < 6; e++) {
var t = cc.instantiate(this.itemNode);
t.parent = this.contentNode;
t.active = !0;
var i = cc.find("bg", t).getComponent(cc.Button), a = cc.find("bg/time", t).getComponent(n.default);
i && i.node.on("click", this.onClickItem.bind(this, e, a), this);
a.setCallback(function() {
cc.vv.NetManager.send({
c: MsgId.REQ_SHOP_EX,
stype: "1",
platform: Global.isIOS() ? 2 : 1
}, !0);
});
}
this.itemNode.active = !1;
};
t.prototype.initData = function(e) {
this.config = e;
this.updateView();
};
t.prototype.updateView = function() {
if (this.config) for (var e = 0; e < 6; e++) {
var t = this.contentNode.children[e];
if (t) {
var i = this.config[e];
cc.find("bg/icon", t).getComponent(cc.Sprite).spriteFrame = this.commonAtlas.getSpriteFrame("icon_coin_" + (e + 1));
cc.find("bg/layout/lbl_num", t).getComponent(cc.Label).string = Global.FormatNumToComma(i.ocount);
var a = i.unit + Global.FormatNumToComma(i.amount);
cc.find("bg/btn_pay/layout/lbl_price", t).getComponent(cc.Label).string = a;
cc.find("bg/btn_pay/layout/icon_diamond", t).active = !1;
var o = i.count - i.ocount, c = !!Math.floor(o / i.ocount * 100), s = cc.find("bg/discount", t);
s.active = c;
var r = cc.find("bg/layout/lbl_extra_num", t);
r.active = c;
r.getComponent(cc.Label).string = Global.FormatNumToComma(o);
cc.find("bg/layout/extra", t).active = c;
cc.find("label", s).getComponent(cc.Label).string = i.discount + "%";
if (i.free && 1 == i.free) {
cc.find("bg/btn_pay", t).active = !1;
cc.find("bg/time", t).active = !0;
cc.find("bg/freeHint", t).active = i.timeout <= 0;
cc.find("bg/hot", t).active = !1;
cc.find("bg/icon", t).getComponent(cc.Sprite).setMaterial(0, cc.Material.getBuiltinMaterial(i.timeout <= 0 ? "2d-sprite" : "2d-gray-sprite"));
cc.find("bg/time", t).getComponent(n.default).timelife = i.timeout;
i.timeout > 0 || (cc.find("bg/time", t).getComponent(cc.Label).string = ___("FREE"));
} else {
cc.find("bg/time", t).getComponent(n.default).timelife = 0;
cc.find("bg/icon", t).getComponent(cc.Sprite).setMaterial(0, cc.Material.getBuiltinMaterial("2d-sprite"));
cc.find("bg/freeHint", t).active = !1;
cc.find("bg/hot", t).active = i.hot > 0;
cc.find("bg/btn_pay", t).active = !0;
cc.find("bg/time", t).active = !1;
}
}
}
};
t.prototype.onClickItem = function(e, t) {
var i = this;
if (this.config && this.config[e]) if (t.timelife > 0) cc.vv.FloatTip.show(___("还未到可领取时间")); else {
var n = this.config[e];
n.free && 1 == n.free ? n.timeout <= 0 && cc.vv.NetManager.send({
c: MsgId.REQ_SHOP_FREE_REWARD,
id: n.id
}) : cc.vv.PopupManager.showTopWin("YD_Pro/prefab/yd_charge", {
onShow: function(t) {
t.getComponent("yd_charge").setURL(cc.vv.UserManager.payurl, {
postfix: "&coin=" + i.config[e].count
});
}
});
}
};
t.prototype.onClickSend = function(e) {
var t = this;
this.config && this.config[e] && cc.vv.PopupManager.addPopup(this.sendPrefab, {
scaleIn: !0,
onShow: function(i) {
i.getComponent(a.default).onInit(t.config[e]);
}
});
};
t.prototype.playSwingAnim = function() {
for (var e = 0; e < 6; e++) {
var t = this.contentNode.children[e], i = cc.find("bg", t);
i.stopAllActions();
i.angle = 2.5;
i.runAction(cc.sequence(cc.rotateTo(.2, 5).easing(cc.easeSineInOut()), cc.rotateTo(.2, -3).easing(cc.easeSineInOut()), cc.rotateTo(.18, 2).easing(cc.easeSineInOut()), cc.rotateTo(.16, -1).easing(cc.easeSineInOut()), cc.rotateTo(.14, 0).easing(cc.easeSineIn())));
}
};
t.prototype.PURCHASE_RECHARGE_SUC = function(e) {
if (200 == e.code && e.rewards) {
for (var t = null, i = 0; i < this.config.length; i++) this.config[i].id == e.shopid && (t = this.contentNode.children[i]);
t && Global.RewardFly(e.rewards, t.convertToWorldSpaceAR(cc.v2(0, 0)));
}
};
__decorate([ s(cc.Node) ], t.prototype, "contentNode", void 0);
__decorate([ s(cc.Node) ], t.prototype, "itemNode", void 0);
__decorate([ s(cc.SpriteAtlas) ], t.prototype, "commonAtlas", void 0);
__decorate([ s(cc.Prefab) ], t.prototype, "sendPrefab", void 0);
return __decorate([ c ], t);
}(cc.Component);
i.default = r;
cc._RF.pop();
}, {
"../../../../_FWExpand/UI/TimeDownCpt": "TimeDownCpt",
"./PopupSelectSendTypeView": "PopupSelectSendTypeView"
} ],
ShopViewDiamond: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "cf00bCqOf9P8KcqnVA859/N", "ShopViewDiamond");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../../../../_FWExpand/UI/TimeDownCpt"), a = cc._decorator, o = a.ccclass, c = a.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.contentNode = null;
t.itemNode = null;
t.commonAtlas = null;
t.coinFrame = null;
t.vipExpFrame = null;
return t;
}
t.prototype.onLoad = function() {
this.netListener = this.node.addComponent("NetListenerCmp");
this.initView();
};
t.prototype.onEnable = function() {
this.netListener.registerMsg(MsgId.PURCHASE_RECHARGE_SUC, this.PURCHASE_RECHARGE_SUC, this);
cc.vv.NetManager.sendAndCache({
c: MsgId.REQ_SHOP_EX,
stype: "25",
platform: Global.isIOS() ? 2 : 1
}, !0);
this.playSwingAnim();
};
t.prototype.onDisable = function() {
this.netListener.clear();
};
t.prototype.initView = function() {
for (var e = 0; e < 6; e++) {
var t = cc.instantiate(this.itemNode);
t.parent = this.contentNode;
t.active = !0;
var i = t.getComponent(cc.Button), a = cc.find("bg/time", t).getComponent(n.default);
i && i.node.on("click", this.onClickItem.bind(this, e, a), this);
a.setCallback(function() {
cc.vv.NetManager.send({
c: MsgId.REQ_SHOP_EX,
stype: "25",
platform: Global.isIOS() ? 2 : 1
}, !0);
});
}
this.itemNode.active = !1;
};
t.prototype.initData = function(e) {
this.config = e;
this.updateView();
};
t.prototype.updateView = function() {
if (this.config) for (var e = 0; e < 6; e++) {
var t = this.contentNode.children[e];
if (t) {
var i = this.config[e];
cc.find("bg/icon", t).getComponent(cc.Sprite).spriteFrame = this.commonAtlas.getSpriteFrame("icon_diamond_" + (e + 1));
cc.find("bg/layout/lbl_num", t).getComponent(cc.Label).string = Global.FormatNumToComma(i.ocount);
var a = i.count - i.ocount, o = !!Math.floor(a / i.ocount * 100), c = cc.find("bg/discount", t);
c.active = o;
var s = cc.find("bg/layout/lbl_extra_num", t);
s.active = o;
s.getComponent(cc.Label).string = Global.FormatNumToComma(a);
cc.find("bg/layout/extra", t).active = o;
cc.find("label", c).getComponent(cc.Label).string = i.discount + "%";
var r = "";
cc.vv.PayMgr.getLocalPrice && (r = cc.vv.PayMgr.getLocalPrice(i.productid));
r = r || __(i.unit, Global.FormatNumToComma(i.amount));
cc.find("bg/btn_pay/lbl_price", t).getComponent(cc.Label).string = r;
if (i.free && 1 == i.free) {
cc.find("bg/btn_pay", t).active = !1;
cc.find("bg/time", t).active = !0;
cc.find("bg/freeHint", t).active = i.timeout <= 0;
cc.find("bg/hot", t).active = !1;
cc.find("bg/icon", t).getComponent(cc.Sprite).setMaterial(0, cc.Material.getBuiltinMaterial(i.timeout <= 0 ? "2d-sprite" : "2d-gray-sprite"));
cc.find("bg/time", t).getComponent(n.default).timelife = i.timeout;
i.timeout > 0 || (cc.find("bg/time", t).getComponent(cc.Label).string = ___("FREE"));
} else {
cc.find("bg/icon", t).getComponent(cc.Sprite).setMaterial(0, cc.Material.getBuiltinMaterial("2d-sprite"));
cc.find("bg/freeHint", t).active = !1;
cc.find("bg/hot", t).active = i.hot > 0;
cc.find("bg/btn_pay", t).active = !0;
cc.find("bg/time", t).active = !1;
}
}
}
};
t.prototype.onClickItem = function(e, t) {
if (this.config && this.config[e]) if (t.timelife > 0) cc.vv.FloatTip.show(___("还未到可领取时间")); else {
var i = this.config[e];
i.free && 1 == i.free ? i.timeout <= 0 && cc.vv.NetManager.send({
c: MsgId.REQ_SHOP_FREE_REWARD,
id: i.id
}) : cc.vv.YDPRO.doPay(2, i.amount);
}
};
t.prototype.playSwingAnim = function() {
for (var e = 0; e < 6; e++) {
var t = this.contentNode.children[e], i = cc.find("bg", t);
i.stopAllActions();
i.angle = 2.5;
i.runAction(cc.sequence(cc.rotateTo(.2, 5).easing(cc.easeSineInOut()), cc.rotateTo(.2, -3).easing(cc.easeSineInOut()), cc.rotateTo(.18, 2).easing(cc.easeSineInOut()), cc.rotateTo(.16, -1).easing(cc.easeSineInOut()), cc.rotateTo(.14, 0).easing(cc.easeSineIn())));
}
};
t.prototype.PURCHASE_RECHARGE_SUC = function(e) {
if (200 == e.code && e.rewards) {
for (var t = null, i = 0; i < this.config.length; i++) this.config[i].id == e.shopid && (t = this.contentNode.children[i]);
t && Global.RewardFly(e.rewards, t.convertToWorldSpaceAR(cc.v2(0, 0)));
}
};
__decorate([ c(cc.Node) ], t.prototype, "contentNode", void 0);
__decorate([ c(cc.Node) ], t.prototype, "itemNode", void 0);
__decorate([ c(cc.SpriteAtlas) ], t.prototype, "commonAtlas", void 0);
__decorate([ c(cc.SpriteFrame) ], t.prototype, "coinFrame", void 0);
__decorate([ c(cc.SpriteFrame) ], t.prototype, "vipExpFrame", void 0);
return __decorate([ o ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {
"../../../../_FWExpand/UI/TimeDownCpt": "TimeDownCpt"
} ],
ShopViewGift: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "73c63zaSEpJhaHlrATcnLqJ", "ShopViewGift");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.contentNode = null;
t.itemNode = null;
t.commonAtlas = null;
return t;
}
t.prototype.onLoad = function() {
this.initView();
};
t.prototype.onEnable = function() {
this.updateView();
};
t.prototype.initView = function() {
for (var e = 0; e < 2; e++) {
var t = cc.instantiate(this.itemNode);
t.parent = this.contentNode;
t.active = !0;
var i = t.getComponentInChildren(cc.Button);
i && i.node.on("click", this.onClickItem.bind(this, e), this);
}
this.itemNode.active = !1;
};
t.prototype.initData = function(e) {
this.config = e;
this.updateView();
};
t.prototype.updateView = function() {
if (this.config) for (var e = 0; e < 2; e++) {
var t = this.contentNode.children[e];
if (t) {
var i = this.config[e];
cc.find("icon", t).getComponent(cc.Sprite).spriteFrame = this.commonAtlas.getSpriteFrame("icon_shop_gift_" + (e + 1));
var n = "";
cc.vv.PayMgr.getLocalPrice && (n = cc.vv.PayMgr.getLocalPrice(i.productid));
n = n || __(i.unit, Global.FormatNumToComma(i.amount));
cc.find("btn_pay/lbl_price", t).getComponent(cc.Label).string = n;
}
}
};
t.prototype.onClickItem = function(e) {
if (this.config && this.config[e]) {
var t = this.config[e];
Global.isNative() && cc.vv.PayMgr.reqPurchaseOrder(t.id);
}
};
__decorate([ o(cc.Node) ], t.prototype, "contentNode", void 0);
__decorate([ o(cc.Node) ], t.prototype, "itemNode", void 0);
__decorate([ o(cc.SpriteAtlas) ], t.prototype, "commonAtlas", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
ShopViewMainV3View: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "aaf828aOkROn7KFVyjP94bf", "ShopViewMainV3View");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.walletNode = null;
return t;
}
t.prototype.onLoad = function() {
this.netListener = this.node.addComponent("NetListenerCmp");
Global.FixDesignScale_V(this.node);
this.initWalletNode();
var e = cc.find("safeview/ScrollView", this.node).getComponent(cc.ScrollView);
this.scheduleOnce(function() {
e.scrollToTop(.1);
}, .2);
};
t.prototype.onEnable = function() {
this.netListener.registerMsg(MsgId.PURCHASE_RECHARGE_SUC, this.PURCHASE_RECHARGE_SUC, this);
this.netListener.registerMsg(MsgId.PERSIONAL_INFO, this.PERSIONAL_INFO, this);
this.netListener.registerMsg(MsgId.UPDATE_USER_INFO, this.UPDATE_USER_INFO, this);
cc.vv.NetManager.sendAndCache({
c: MsgId.PERSIONAL_INFO,
otheruid: cc.vv.UserManager.uid
}, !0);
this.updateWalletView();
this.node.addComponent("EventListenerCmp").registerEvent(EventId.UPATE_COINS, this.updateCoin, this);
};
t.prototype.onDisable = function() {
this.netListener.clear();
};
t.prototype.PURCHASE_RECHARGE_SUC = function(e) {
200 == e.code && (e.spcode && e.spcode > 0 || cc.vv.NetManager.sendAndCache({
c: MsgId.REQ_SHOP_EX,
stype: "1",
platform: Global.isIOS() ? 2 : 1
}, !0));
};
t.prototype.PERSIONAL_INFO = function(e) {
if (200 == e.code && e.playerInfo && e.playerInfo.uid) {
cc.vv.UserManager.dcoin = e.playerInfo.dcoin;
cc.vv.UserManager.ecoin = e.playerInfo.ecoin;
cc.vv.UserManager.cashbonus = e.playerInfo.cashbonus;
cc.vv.UserManager.SetCoin(e.playerInfo.coin, !0);
this._pDrawinfo = e.playerInfo.drawinfo;
this.updateWalletView();
}
};
t.prototype.UPDATE_USER_INFO = function(e) {
if (this._pDrawinfo && e.user && e.user.drawinfo) {
cc.js.isNumber(e.user.drawinfo.isfirstdraw) && (this._pDrawinfo.isfirstdraw = e.user.drawinfo.isfirstdraw);
cc.js.isNumber(e.user.drawinfo.isfirstdeposit) && (this._pDrawinfo.isfirstdeposit = e.user.drawinfo.isfirstdeposit);
cc.js.isNumber(e.user.drawinfo.islimited) && (this._pDrawinfo.islimited = e.user.drawinfo.islimited);
}
this.updateWalletView();
};
t.prototype.initWalletNode = function() {
var e = this;
cc.find("btn_add", this.walletNode).on("click", function() {
StatisticsMgr.reqReport(ReportConfig.BANK_ADD_CASH);
cc.vv.UserManager.showChargeUI();
});
cc.find("layout/item_winnings/btn_withdraw", this.walletNode).on("click", function() {
cc.vv.UserManager.kyc;
StatisticsMgr.reqReport(ReportConfig.BANK_WITHDRAW);
if (e._pDrawinfo) {
var t;
t = cc.vv.UserManager.isbindphone > 0 ? "YD_Pro/prefab/yd_withdrawChoice" : "YD_Pro/prefab/Register";
cc.vv.PopupManager.addPopup(t, {
onShow: function() {}
});
}
});
var t = cc.find("layout/item_amount/btn_hint", this.walletNode);
t.on("click", function() {
var e = t.convertToWorldSpaceAR(cc.v2(-340, -50)), i = cc.v3(cc.find("Canvas").convertToNodeSpaceAR(e));
cc.vv.PopupManager.addPopup("BalootClient/ShopV2/prefabs/ShopWalletHintAmount", {
noMask: !0,
pos: i,
noCloseHit: !0,
onShow: function(e) {
e.opacity = 0;
e.position = i.add(cc.v3(0, 200));
cc.tween(e).to(.1, {
opacity: 255,
position: i
}).start();
}
});
});
var i = cc.find("layout/item_winnings/btn_hint", this.walletNode);
i.on("click", function() {
var e = i.convertToWorldSpaceAR(cc.v2(-340, -50)), t = cc.v3(cc.find("Canvas").convertToNodeSpaceAR(e));
cc.vv.PopupManager.addPopup("BalootClient/ShopV2/prefabs/ShopWalletHintWinnings", {
noMask: !0,
pos: t,
noCloseHit: !0,
onShow: function(e) {
e.opacity = 0;
e.position = t.add(cc.v3(0, 200));
cc.tween(e).to(.1, {
opacity: 255,
position: t
}).start();
}
});
});
var n = cc.find("layout/item_cashbouns/btn_hint", this.walletNode);
n.on("click", function() {
var e = n.convertToWorldSpaceAR(cc.v2(-340, -50)), t = cc.v3(cc.find("Canvas").convertToNodeSpaceAR(e));
cc.vv.PopupManager.addPopup("BalootClient/ShopV2/prefabs/ShopWalletHintCashBouns", {
noMask: !0,
pos: t,
noCloseHit: !0,
onShow: function(e) {
e.opacity = 0;
e.position = t.add(cc.v3(0, 200));
cc.tween(e).to(.1, {
opacity: 255,
position: t
}).start();
}
});
});
cc.find("layout/item_cashbouns/btn_transfer", this.walletNode).on("click", function() {
cc.vv.PopupManager.addPopup("YD_Pro/prefab/yd_bonus_transfer", {
onShow: function(e) {
e.addComponent("NodeLifeCallBack").setDestroyCall(function() {
cc.vv.NetManager.sendAndCache({
c: MsgId.PERSIONAL_INFO,
otheruid: cc.vv.UserManager.uid
}, !0);
});
}
});
});
cc.find("layout/item_mytransfer/btn_go", this.walletNode).on("click", function() {
cc.vv.PopupManager.addPopup("YD_Pro/prefab/yd_money_record", {
onShow: function() {}
});
});
cc.find("layout/item_manager/btn_go", this.walletNode).on("click", function() {
StatisticsMgr.reqReport(ReportConfig.BANK_PAYMENTS);
cc.vv.PopupManager.addPopup("YD_Pro/prefab/yd_manage", {
onShow: function() {}
});
});
cc.find("layout/item_support/btn_go", this.walletNode).on("click", function() {
cc.vv.PopupManager.addPopup("YD_Pro/prefab/yd_service", {
isWait: !0,
scaleIn: !0
});
});
};
t.prototype.updateWalletView = function() {
cc.find("value", this.walletNode).getComponent(cc.Label).string = "₹ " + cc.vv.UserManager.coin.toFixed(2);
cc.find("layout/item_amount/label", this.walletNode).getComponent(cc.Label).string = "₹ " + cc.vv.UserManager.ecoin.toFixed(2);
cc.find("layout/item_winnings/label", this.walletNode).getComponent(cc.Label).string = "₹ " + cc.vv.UserManager.dcoin.toFixed(2);
cc.find("layout/item_cashbouns/label", this.walletNode).getComponent(cc.Label).string = "₹ " + cc.vv.UserManager.cashbonus.toFixed(2);
cc.vv.UserManager.kyc;
cc.find("layout/item_winnings/btn_withdraw", this.walletNode).active = !0;
};
t.prototype.updateCoin = function() {
this.updateWalletView();
};
__decorate([ o(cc.Node) ], t.prototype, "walletNode", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
ShopViewSalon: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "09fd4P9s1hCB7X7cgtiqQsD", "ShopViewSalon");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.itemNode = null;
t.btn_play = null;
return t;
}
t.prototype.onLoad = function() {
this.netListener = this.node.addComponent("NetListenerCmp");
this.btn_play.node.on("click", this.onClickItem, this);
};
t.prototype.onEnable = function() {
this.netListener.registerMsg(MsgId.REQ_SKIN_SHOP, this.REQ_SKIN_SHOP, this);
this.netListener.registerMsg(MsgId.REQ_BUY_SKIN_SHOP_ITEM, this.REQ_BUY_SKIN_SHOP_ITEM, this);
cc.vv.NetManager.sendAndCache({
c: MsgId.REQ_SKIN_SHOP,
platform: Global.isIOS() ? 2 : 1
}, !0);
};
t.prototype.onDisable = function() {
this.netListener.clear();
};
t.prototype.REQ_SKIN_SHOP = function(e) {
if (200 == e.code && !(e.spcode && e.spcode > 0)) {
this.localData = e.shoplist.data10 && e.shoplist.data10[0] || {};
this.updateView();
}
};
t.prototype.REQ_BUY_SKIN_SHOP_ITEM = function(e) {
this.loading = !1;
if (200 == e.code) if (2 != e.spcode) {
if (e.item && this.localData.id == e.item.id) {
cc.vv.FloatTip.show(___("购买成功"));
this.localData.have = 1;
}
this.updateView();
} else cc.vv.FloatTip.show(___("金币不足"));
};
t.prototype.updateView = function() {
cc.find("btn_play/layout/value", this.itemNode).getComponent(cc.Label).string = Global.formatNumber(this.localData.diamond, {
threshold: 1e4
});
cc.find("btn_play", this.itemNode).active = 1 != this.localData.have;
cc.find("hit", this.itemNode).active = 1 == this.localData.have;
};
t.prototype.onClickItem = function() {
0 == this.localData.have && cc.vv.NetManager.send({
c: MsgId.REQ_BUY_SKIN_SHOP_ITEM,
id: this.localData.id
});
};
__decorate([ o(cc.Node) ], t.prototype, "itemNode", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btn_play", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
ShopViewSkinItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d2d3aaFfE1O0KLS6arWU3Xo", "ShopViewSkinItem");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.userCommonAtlas = null;
t.chatBoxAtlas = null;
t.pokerBackAtlas = null;
t.skinShopAtlas = null;
return t;
}
t.prototype.onLoad = function() {
var e;
this.colorMap = ((e = {})[100] = new cc.Color(231, 81, 90), e[50] = new cc.Color(76, 189, 107), 
e[25] = new cc.Color(246, 181, 25), e);
};
t.prototype.reuse = function() {};
t.prototype.unuse = function() {};
t.prototype.onClick = function() {
1 == this.data.have || 1 == this.data.free ? Global.dispatchEvent("CLICK_USE_SKIN_ITEM", this.changeParm) : Global.dispatchEvent("CLICK_BUY_SKIN_ITEM", this.data);
};
t.prototype.updateView = function(e) {
this.data = e;
var t = this.node;
cc.find("hit", t).active = !1;
cc.find("price", t).active = !1;
cc.find("own", t).active = !1;
if (1 == e.have) cc.find("own", t).active = !0; else if (e.amount > 0) {
var i = "";
cc.vv.PayMgr.getLocalPrice && (i = cc.vv.PayMgr.getLocalPrice(e.productid));
i = i || __(e.unit, Global.FormatNumToComma(e.amount));
cc.find("price", t).active = !0;
cc.find("price/layout/icon_diamond", t).active = !1;
cc.find("price/layout/value", t).getComponent(cc.Label).string = i;
} else if (1 == e.free) {
cc.find("hit", t).active = !0;
cc.find("hit/value", t).getComponent(cc.Label).string = e.content;
} else {
cc.find("price", t).active = !0;
cc.find("price/layout/icon_diamond", t).active = !0;
cc.find("price/layout/value", t).getComponent(cc.Label).string = Global.FormatNumToComma(e.diamond);
}
cc.find("avatar", t).active = 1 == e.category;
cc.find("icon", t).active = 1 != e.category;
cc.find("icon", t).scale = 1;
cc.find("icon", t).angle = 0;
cc.find("icon", t).position = cc.v3(0, 32);
cc.find("rate", t).active = !1;
cc.find("title", t).active = !1;
cc.find("exptime", t).active = !1;
if (1 == e.category) cc.vv.UserConfig.setAvatarFrame(cc.find("avatar", t).getComponent(sp.Skeleton), e.img); else if (2 == e.category) {
cc.find("icon", t).getComponent(cc.Sprite).spriteFrame = this.chatBoxAtlas.getSpriteFrame(e.img);
cc.find("icon", t).scale = 1.65;
} else if (3 == e.category) {
cc.find("icon", t).getComponent(cc.Sprite).spriteFrame = this.skinShopAtlas.getSpriteFrame(e.img);
cc.find("icon", t).scale = 1;
} else if (4 == e.category) {
cc.find("icon", t).getComponent(cc.Sprite).spriteFrame = this.pokerBackAtlas.getSpriteFrame(e.img);
cc.find("icon", t).scale = 1.75;
} else if (5 == e.category) {
cc.find("icon", t).getComponent(cc.Sprite).spriteFrame = this.skinShopAtlas.getSpriteFrame(e.img);
cc.find("icon", t).scale = .8;
} else if (6 == e.category) {
cc.find("icon", t).getComponent(cc.Sprite).spriteFrame = this.skinShopAtlas.getSpriteFrame(e.img);
cc.find("icon", t).scale = .55;
} else if (7 == e.category) cc.find("icon", t).getComponent(cc.Sprite).spriteFrame = this.skinShopAtlas.getSpriteFrame(e.img); else if (9 == e.category) {
cc.find("icon", t).getComponent(cc.Sprite).spriteFrame = this.userCommonAtlas.getSpriteFrame(e.img);
cc.find("title", t).active = !0;
cc.find("exptime", t).active = !0;
cc.find("rate", t).active = !0;
cc.find("title", t).getComponent(cc.Label).string = ___("经验值道具");
cc.vv.UserConfig.setExpBuffFrame(cc.find("rate", t).getComponent(cc.Sprite), e.buffer);
cc.find("icon", t).scale = .8;
cc.find("icon", t).position = cc.v3(0, 0);
cc.find("rate", t).color = this.colorMap[e.buffer] || cc.Color.WHITE;
}
this.changeParm = {};
cc.find("use", t).active = !1;
cc.find("icon_hot", t).active = 1 == e.hot;
cc.find("icon_new", t).active = 1 == e.new;
cc.find("time", t).active = e.days && e.days > 0;
cc.find("time/value", t).getComponent(cc.Label).string = ___("{1}天", e.days);
};
__decorate([ o(cc.SpriteAtlas) ], t.prototype, "userCommonAtlas", void 0);
__decorate([ o(cc.SpriteAtlas) ], t.prototype, "chatBoxAtlas", void 0);
__decorate([ o(cc.SpriteAtlas) ], t.prototype, "pokerBackAtlas", void 0);
__decorate([ o(cc.SpriteAtlas) ], t.prototype, "skinShopAtlas", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
ShopViewSkin: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d1e25qWMBRJNIA0P57f4Ic+", "ShopViewSkin");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./ShopViewSkinItem"), a = cc._decorator, o = a.ccclass, c = a.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.pagePrefab = null;
t.itemPrefab = null;
t.keyMap = [];
return t;
}
t.prototype.onLoad = function() {
this.keyMap = [ {
key: "data1",
get title() {
return ___("头像框");
}
}, {
key: "data2",
get title() {
return ___("聊天框与字体");
}
}, {
key: "data3",
get title() {
return ___("牌桌");
}
}, {
key: "data4",
get title() {
return ___("牌背");
}
}, {
key: "data5",
get title() {
return ___("牌花");
}
}, {
key: "data7",
get title() {
return ___("字体颜色");
}
}, {
key: "data9",
get title() {
return ___("经验值道具");
}
}, {
key: "data6",
get title() {
return ___("表情包");
}
} ];
this.netListener = this.node.addComponent("NetListenerCmp");
this.eventListener = this.node.addComponent("EventListenerCmp");
this.itemPool = new cc.NodePool(n.default);
this.initView();
};
t.prototype.onDestroy = function() {
this.itemPool.clear();
};
t.prototype.onEnable = function() {
this.netListener.registerMsg(MsgId.REQ_SKIN_SHOP, this.REQ_SKIN_SHOP, this);
this.netListener.registerMsg(MsgId.REQ_BUY_SKIN_SHOP_ITEM, this.REQ_BUY_SKIN_SHOP_ITEM, this);
this.netListener.registerMsg(MsgId.PURCHASE_RECHARGE_SUC, this.PURCHASE_RECHARGE_SUC, this);
this.eventListener.registerEvent("CLICK_BUY_SKIN_ITEM", this.CLICK_BUY_SKIN_ITEM, this);
this.eventListener.registerEvent("CLICK_USE_SKIN_ITEM", this.CLICK_USE_SKIN_ITEM, this);
this.eventListener.registerEvent("CLICK_CHECK_SKIN_ITEM", this.CLICK_CHECK_SKIN_ITEM, this);
this.eventListener.registerEvent("USER_INFO_CHANGE", this.updateView, this);
cc.vv.NetManager.sendAndCache({
c: MsgId.REQ_SKIN_SHOP,
platform: Global.isIOS() ? 2 : 1
}, !0);
};
t.prototype.onDisable = function() {
this.netListener.clear();
};
t.prototype.initView = function() {
for (var e = 0; e < 50; e++) this.itemPool.put(cc.instantiate(this.itemPrefab));
this.pageNode = cc.instantiate(this.pagePrefab);
this.pageNode.parent = this.node;
};
t.prototype.updateView = function() {
if (this.shoplist) {
for (var e = [], t = 0; t < this.keyMap.length; t++) {
var i = this.keyMap[t];
cc.find("title/label", this.pageNode).getComponent(cc.Label).string = i.title;
var a = this.shoplist[i.key] || [];
e = e.concat(a);
}
var o = cc.find("content", this.pageNode), c = e.length - o.children.length;
if (c > 0) for (t = 0; t < c; t++) o.addChild(this.createItemNode()); else if (c < 0) for (var s = Math.abs(c); s > 0; ) {
this.itemPool.put(o.children[0]);
s--;
}
for (t = 0; t < o.children.length; t++) o.children[t].getComponent(n.default).updateView(e[t]);
}
};
t.prototype.createItemNode = function() {
if (this.itemPool.size() > 0) return this.itemPool.get();
var e = cc.instantiate(this.itemPrefab);
e.getComponent(n.default).reuse();
return e;
};
t.prototype.REQ_SKIN_SHOP = function(e) {
if (200 == e.code && !(e.spcode && e.spcode > 0)) {
this.shoplist = e.shoplist || {};
this.updateView();
}
};
t.prototype.REQ_BUY_SKIN_SHOP_ITEM = function(e) {
if (200 == e.code) if (2 != e.spcode) {
for (var t in this.shoplist) for (var i = 0, a = this.shoplist[t]; i < a.length; i++) {
var o = a[i];
o.id == e.item.id && 9 != e.item.category && (o.have = 1);
}
for (var c = cc.find("content", this.pageNode), s = 0; s < c.children.length; s++) {
var r = c.children[s];
if (r.getComponent(n.default).data.id == e.id) {
Global.RewardFly(e.rewards, r.convertToWorldSpaceAR(cc.v2(0, 0)));
break;
}
}
this.updateView();
} else cc.vv.FloatTip.show(___("金币不足"));
};
t.prototype.CLICK_BUY_SKIN_ITEM = function(e) {
var t = e.detail;
if (t.amount > 0) {
Global.isNative() && cc.vv.PayMgr.reqPurchaseOrder(t.shopid);
StatisticsMgr.reqReport(ReportConfig.SHOP_BUY_SKIN, t.shopid);
} else cc.vv.NetManager.send({
c: MsgId.REQ_BUY_SKIN_SHOP_ITEM,
id: t.id
});
};
t.prototype.CLICK_USE_SKIN_ITEM = function() {};
t.prototype.CLICK_CHECK_SKIN_ITEM = function() {};
t.prototype.PURCHASE_RECHARGE_SUC = function(e) {
if (200 == e.code) {
for (var t in this.shoplist) for (var i = 0, a = this.shoplist[t]; i < a.length; i++) {
var o = a[i];
o.shopid == e.shopid && (o.have = 1);
}
this.updateView();
if (e.rewards) {
for (var c = null, s = cc.find("content", this.pageNode), r = 0; r < s.children.length; r++) {
var l = s.children[r];
if (l.getComponent(n.default).data.shopid == e.shopid) {
c = l;
break;
}
}
c && Global.RewardFly(e.rewards, c.convertToWorldSpaceAR(cc.v2(0, 0)));
}
}
};
__decorate([ c(cc.Prefab) ], t.prototype, "pagePrefab", void 0);
__decorate([ c(cc.Prefab) ], t.prototype, "itemPrefab", void 0);
return __decorate([ o ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {
"./ShopViewSkinItem": "ShopViewSkinItem"
} ],
ShopViewVipBenefits: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2234eAPdGlCTr26/uLoybm3", "ShopViewVipBenefits");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.vipTitle = null;
t.btnLeft = null;
t.btnRight = null;
t.pageNode = null;
t.pageToggles = null;
t.toggleNode = null;
t.chatAtlas = null;
t.userComAtlas = null;
t.infoLabel = null;
t.vipInfoEx = null;
t._index = 0;
return t;
}
Object.defineProperty(t.prototype, "index", {
get: function() {
return this._index;
},
set: function(e) {
e < 0 && (e += 13 * (Math.floor(Math.abs(e / 13)) + 1));
this._index = e % 13;
this.updateView();
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
var e = this;
this.netListener = this.node.addComponent("NetListenerCmp");
this.eventListener = this.node.addComponent("EventListenerCmp");
this.initView();
this.btnLeft.node.on("click", function() {
e.index--;
});
this.btnRight.node.on("click", function() {
e.index++;
});
cc.find("btn_charge", this.vipInfoEx).on("click", function() {
cc.vv.EventManager.emit("HALL_OPEN_SHOP", {
open: 3
});
});
cc.vv.NetManager.send({
c: MsgId.REQ_RANK_MAIN_VIEW,
id: 2
}, !0);
};
t.prototype.onDestroy = function() {};
t.prototype.onEnable = function() {
var e = this;
this.index = Math.min(Math.max(0, cc.vv.UserManager.svip), 12);
this.eventListener.registerEvent("USER_INFO_CHANGE", function() {
e.index = Math.min(Math.max(0, cc.vv.UserManager.svip), 12);
}, this);
this.eventListener.registerEvent("VIP_GET_REWARD", function() {}, this);
this.updateView();
this.vip2Data && this.vip2Data.collect;
};
t.prototype.onDisable = function() {
this.netListener.clear();
this.eventListener.clear();
};
t.prototype.initData = function(e, t) {
this.vip1Data = e;
this.vip2Data = t;
this.updateView();
};
t.prototype.initView = function() {
for (var e = 0; e < 12; e++) cc.instantiate(this.toggleNode).parent = this.pageToggles.node;
cc.find("reward/gou", this.pageNode).active = !1;
this.index = cc.vv.UserManager.svip;
};
t.prototype.updateView = function() {
var e = this, t = cc.vv.UserManager.svip - 1;
this.scheduleOnce(function() {
e.pageToggles.toggleItems[e.index].isChecked = !0;
});
var i = cc.vv.UserConfig.vipInfoConfig[this.index];
if (i.avatarframe) {
cc.find("frame", this.pageNode).active = !0;
cc.vv.UserConfig.setAvatarFrame(cc.find("frame/spine", this.pageNode).getComponent(sp.Skeleton), i.avatarframe);
} else cc.find("frame", this.pageNode).active = !1;
if (i.gift) {
cc.find("gift", this.pageNode).active = !0;
cc.find("gift/icon", this.pageNode).getComponent(cc.Sprite).spriteFrame = this.userComAtlas.getSpriteFrame(i.gift.img);
cc.find("gift/value", this.pageNode).getComponent(cc.Label).string = "x" + i.gift.count;
} else cc.find("gift", this.pageNode).active = !1;
cc.find("emojoy/spine", this.pageNode).getComponent(sp.Skeleton).setAnimation(0, i.emoj, !0);
if (i.chatSkin) {
cc.find("chatbox", this.pageNode).active = !0;
cc.find("chatbox/icon", this.pageNode).getComponent(cc.Sprite).spriteFrame = this.chatAtlas.getSpriteFrame(i.chatSkin);
} else cc.find("chatbox", this.pageNode).active = !1;
cc.find("reward/layout/coin", this.pageNode).active = !1;
cc.find("reward/layout/diamond", this.pageNode).active = !1;
1 == i.rewards.length ? cc.find("reward/layout", this.pageNode).scale = 1 : cc.find("reward/layout", this.pageNode).scale = .8;
for (var n = 0, a = i.rewards; n < a.length; n++) {
var o = a[n];
if (1 == o.type) {
cc.find("reward/layout/coin", this.pageNode).active = !0;
cc.find("reward/layout/coin/value", this.pageNode).getComponent(cc.Label).string = o.count.toString();
}
if (25 == o.type) {
cc.find("reward/layout/diamond", this.pageNode).active = !0;
cc.find("reward/layout/diamond/value", this.pageNode).getComponent(cc.Label).string = o.count.toString();
}
}
var c = cc.find("lbl_benefits", this.node);
c.removeAllChildren();
var s = cc.find("lbl_benefits_item", this.node), r = function(e) {
var t = cc.instantiate(s);
t.active = !0;
t.parent = c;
cc.find("des", t).getComponent(cc.Label).string = e;
};
r(___("沙龙房间数:{1}", i.room));
i.freeRank && r(___("免费参加排位赛"));
i.friendadd && r(___("好友上限:{1}", i.friendadd));
cc.vv.UserConfig.setVipFrame(cc.find("vipicon", this.node).getComponent(cc.Sprite), this.index + 1);
cc.find("vipicon", this.node).active = 0 == this.index;
this.vipTitle.string = ___("VIP{1} 权益", this.index || "");
this.vipInfoEx.active = 0 != this.index;
if (this.vip1Data) {
var l = "";
cc.vv.PayMgr.getLocalPrice && (l = cc.vv.PayMgr.getLocalPrice(this.vip1Data.productid));
l = l || __(this.vip1Data.unit, Global.FormatNumToComma(this.vip1Data.amount));
}
if (this.vip2Data) {
l = "";
cc.vv.PayMgr.getLocalPrice && (l = cc.vv.PayMgr.getLocalPrice(this.vip2Data.productid));
l = l || __(this.vip2Data.unit, Global.FormatNumToComma(this.vip2Data.amount));
t == this.index ? cc.find("reward/gou", this.pageNode).active = 2 == this.vip2Data.collect : t < this.index ? cc.find("reward/gou", this.pageNode).active = !1 : t > this.index && (cc.find("reward/gou", this.pageNode).active = !1);
}
cc.find("hit", this.vipInfoEx).active = !1;
cc.find("gou", this.vipInfoEx).active = !1;
cc.find("btn_charge", this.vipInfoEx).active = !1;
var d = Math.min(cc.vv.UserManager.svipexp, i.expup);
cc.find("layout/progress/label", this.vipInfoEx).getComponent(cc.Label).string = Global.FormatNumToComma(d) + "/" + Global.FormatNumToComma(i.expup);
cc.find("layout/progress", this.vipInfoEx).getComponent(cc.ProgressBar).progress = d / i.expup;
cc.vv.UserConfig.setVipFrame(cc.find("layout/vip", this.vipInfoEx).getComponent(cc.Sprite), this.index + 1);
if (cc.vv.UserManager.svip > this.index) {
this.infoLabel.string = ___("恭喜您已经成为VIP{1}", this.index);
cc.find("info_layout_ar", this.node).active = !1;
cc.find("info_layout_en", this.node).active = !1;
} else if (0 == this.index) {
this.infoLabel.string = ___("购买开启VIP资格");
cc.find("info_layout_ar", this.node).active = !1;
cc.find("info_layout_en", this.node).active = !1;
} else {
this.infoLabel.string = "";
cc.find("info_layout_ar/value", this.node).getComponent(cc.Label).string = i.expup.toString();
cc.find("info_layout_en/value", this.node).getComponent(cc.Label).string = i.expup.toString();
cc.find("info_layout_ar/vip", this.node).getComponent(cc.Label).string = "VIP" + this.index.toString();
cc.find("info_layout_en/vip", this.node).getComponent(cc.Label).string = "VIP" + this.index.toString();
cc.find("info_layout_ar", this.node).active = cc.vv.i18nManager.getLanguage() == cc.vv.i18nLangEnum.AR;
cc.find("info_layout_en", this.node).active = cc.vv.i18nManager.getLanguage() == cc.vv.i18nLangEnum.EN;
}
};
t.prototype.onChangeIndex = function() {
for (var e = null, t = 0, i = this.pageToggles.toggleItems; t < i.length; t++) {
var n = i[t];
n.isChecked && (e = n);
}
this.index = this.pageToggles.toggleItems.indexOf(e);
};
t.prototype.REQU_GET_VIP_REWARD = function() {};
__decorate([ o(cc.Label) ], t.prototype, "vipTitle", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btnLeft", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btnRight", void 0);
__decorate([ o(cc.Node) ], t.prototype, "pageNode", void 0);
__decorate([ o(cc.ToggleContainer) ], t.prototype, "pageToggles", void 0);
__decorate([ o(cc.Node) ], t.prototype, "toggleNode", void 0);
__decorate([ o(cc.SpriteAtlas) ], t.prototype, "chatAtlas", void 0);
__decorate([ o(cc.SpriteAtlas) ], t.prototype, "userComAtlas", void 0);
__decorate([ o(cc.Label) ], t.prototype, "infoLabel", void 0);
__decorate([ o(cc.Node) ], t.prototype, "vipInfoEx", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
ShopViewVip: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ad496S1VjVDYo6FkTqwI/0I", "ShopViewVip");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.vipBenefitsPrefab = null;
t.btnLeft = null;
t.btnRight = null;
t.btnReward = null;
t.pageNode = null;
t.chatAtlas = null;
t.userComAtlas = null;
t.getBtn = null;
t._index = 0;
return t;
}
Object.defineProperty(t.prototype, "index", {
get: function() {
return this._index;
},
set: function(e) {
this._index = this.calcIndex(e);
this.updateView();
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
var e = this;
this.netListener = this.node.addComponent("NetListenerCmp");
this.eventListener = this.node.addComponent("EventListenerCmp");
this.vipInfoBase = cc.find("vip_info_base", this.node);
cc.find("layout/btn1/btn_pay", this.vipInfoBase).on("click", function() {
StatisticsMgr.reqReport(ReportConfig.SHOP_BUY_VIP_7);
Global.isNative() && cc.vv.PayMgr.reqPurchaseOrder(e.vip1Data.id);
});
cc.find("layout/btn2/btn_pay", this.vipInfoBase).on("click", function() {
StatisticsMgr.reqReport(ReportConfig.SHOP_BUY_VIP_30);
Global.isNative() && cc.vv.PayMgr.reqPurchaseOrder(e.vip2Data.id);
});
cc.find("vip_info/btn_gift/btn_green", this.node).on("click", function() {
e.vipgift && Global.isNative() && cc.vv.PayMgr.reqPurchaseOrder(e.vipgift.id);
});
cc.find("vip_info/quanyi/btn_benefits", this.node).on("click", function() {
cc.vv.PopupManager.addPopup(e.vipBenefitsPrefab, {
opacityIn: !0,
onShow: function(t) {
t.getComponent("ShopViewVipBenefits").initData(e.vip1Data, e.vip2Data);
}
});
});
this.getBtn.node.on("click", this.onClickGetReward, this);
this.btnLeft.node.on("click", function() {
e.index--;
});
this.btnRight.node.on("click", function() {
e.index++;
});
this.btnReward.node.on("click", function() {
e.vip2Data && e.vip2Data.collect;
});
};
t.prototype.onEnable = function() {
this.netListener.registerMsg(MsgId.GET_ALL_VIP_REAWRDS, this.GET_ALL_VIP_REAWRDS, this);
this.netListener.registerMsg(MsgId.REQ_SHOP_EX, this.REQ_SHOP_EX, this);
this.netListener.registerMsg(MsgId.PURCHASE_RECHARGE_SUC, this.PURCHASE_RECHARGE_SUC, this);
this.eventListener.registerEvent("USER_INFO_CHANGE", this.USER_INFO_CHANGE, this);
this.index = Math.min(Math.max(0, cc.vv.UserManager.svip - 1), 12);
};
t.prototype.onDestroy = function() {
this.eventListener.clear();
this.netListener.clear();
};
t.prototype.calcIndex = function(e) {
e < 0 && (e += 13 * (Math.floor(Math.abs(e / 13)) + 1));
return e % 13;
};
t.prototype.REQ_SHOP_EX = function(e) {
if (200 == e.code && !(e.spcode && e.spcode > 0)) {
var t = e.shoplist || {};
if (t.data30 && t.data30.length > 0) ; else {
this.vipgift = null;
this.updateView();
}
}
};
t.prototype.start = function() {
this.updateView();
};
t.prototype.initData = function(e, t, i) {
this.vip1Data = e;
this.vip2Data = t;
this.vipgift = i;
this.vipgift && (this.vipGiftId = this.vipgift.id);
};
t.prototype.updateView = function() {
var e = this.index;
e = Math.max(e, 0);
e = Math.min(e, 12);
var t = cc.vv.UserConfig.vipInfoConfig[e];
if (t.avatarframe) {
cc.find("frame", this.pageNode).active = !0;
cc.vv.UserConfig.setAvatarFrame(cc.find("frame/spine", this.pageNode).getComponent(sp.Skeleton), t.avatarframe);
} else cc.find("frame", this.pageNode).active = !1;
if (t.gift) {
cc.find("gift", this.pageNode).active = !0;
cc.find("gift/icon", this.pageNode).getComponent(cc.Sprite).spriteFrame = this.userComAtlas.getSpriteFrame(t.gift.img);
cc.find("gift/value", this.pageNode).getComponent(cc.Label).string = "x" + t.gift.count;
} else cc.find("gift", this.pageNode).active = !1;
cc.find("emojoy/spine", this.pageNode).getComponent(sp.Skeleton).setAnimation(0, t.emoj, !0);
cc.find("emojoy/spine", this.pageNode).position = cc.v3(0, "5_st" == t.emoj ? -50 : 0);
if (t.chatSkin) {
cc.find("chatbox", this.pageNode).active = !0;
cc.find("chatbox/icon", this.pageNode).getComponent(cc.Sprite).spriteFrame = this.chatAtlas.getSpriteFrame(t.chatSkin);
} else cc.find("chatbox", this.pageNode).active = !1;
cc.find("reward/layout/coin", this.pageNode).active = !1;
cc.find("reward/layout/diamond", this.pageNode).active = !1;
1 == t.rewards.length ? cc.find("reward/layout", this.pageNode).scale = 1 : cc.find("reward/layout", this.pageNode).scale = .8;
for (var i = 0, n = t.rewards; i < n.length; i++) {
var a = n[i];
if (1 == a.type) {
cc.find("reward/layout/coin", this.pageNode).active = !0;
cc.find("reward/layout/coin/value", this.pageNode).getComponent(cc.Label).string = Global.FormatNumToComma(a.count);
}
if (25 == a.type) {
cc.find("reward/layout/diamond", this.pageNode).active = !0;
cc.find("reward/layout/diamond/value", this.pageNode).getComponent(cc.Label).string = Global.FormatNumToComma(a.count);
}
}
var o = cc.find("day", this.node);
cc.vv.UserManager.leftdays > 0 ? o.getComponent(cc.Label).string = ___("剩余VIP时间:{1}天", cc.vv.UserManager.leftdays) : o.getComponent(cc.Label).string = ___("购买开启VIP资格,根据不同档位享受VIP权益时间!");
if (this.vip1Data) {
var c = "";
cc.vv.PayMgr.getLocalPrice && (c = cc.vv.PayMgr.getLocalPrice(this.vip1Data.productid));
c = c || __(this.vip1Data.unit, Global.FormatNumToComma(this.vip1Data.amount));
cc.find("layout/btn1/btn_pay/lbl_price", this.vipInfoBase).getComponent(cc.Label).string = c;
}
if (this.vip2Data) {
c = "";
cc.vv.PayMgr.getLocalPrice && (c = cc.vv.PayMgr.getLocalPrice(this.vip2Data.productid));
c = c || __(this.vip2Data.unit, Global.FormatNumToComma(this.vip2Data.amount));
cc.find("layout/btn2/btn_pay/lbl_price", this.vipInfoBase).getComponent(cc.Label).string = c;
}
if (t.expup <= 0) {
cc.find("vip_info/layout/progress/label", this.node).getComponent(cc.Label).string = cc.vv.UserManager.svip > 0 ? ___("已激活") : ___("未激活");
cc.find("vip_info/layout/progress", this.node).getComponent(cc.ProgressBar).progress = cc.vv.UserManager.svip > 0 ? 1 : 0;
} else {
var s = Math.min(cc.vv.UserManager.svipexp, t.expup);
cc.find("vip_info/layout/progress/label", this.node).getComponent(cc.Label).string = Global.FormatNumToComma(s) + "/" + Global.FormatNumToComma(t.expup);
cc.find("vip_info/layout/progress", this.node).getComponent(cc.ProgressBar).progress = s / t.expup;
}
cc.vv.UserConfig.setVipFrame(cc.find("vip_info/layout/icon", this.node).getComponent(cc.Sprite), e + 1);
if (cc.vv.UserManager.svip > e) {
cc.find("vip_info/info_layout_complete", this.node).active = !0;
cc.find("vip_info/info_layout_complete", this.node).getComponent(cc.Label).string = ___("恭喜您已经成为VIP{1}", e);
cc.find("vip_info/info_layout_ar", this.node).active = !1;
cc.find("vip_info/info_layout_en", this.node).active = !1;
} else if (0 == e) {
cc.find("vip_info/info_layout_complete", this.node).active = !0;
cc.find("vip_info/info_layout_complete", this.node).getComponent(cc.Label).string = ___("购买开启VIP资格");
cc.find("vip_info/info_layout_ar", this.node).active = !1;
cc.find("vip_info/info_layout_en", this.node).active = !1;
} else {
cc.find("vip_info/info_layout_complete", this.node).active = !1;
cc.find("vip_info/info_layout_ar/value", this.node).getComponent(cc.Label).string = t.expup.toString();
cc.find("vip_info/info_layout_en/value", this.node).getComponent(cc.Label).string = t.expup.toString();
cc.find("vip_info/info_layout_ar/vip", this.node).getComponent(cc.Label).string = "VIP" + e.toString();
cc.find("vip_info/info_layout_en/vip", this.node).getComponent(cc.Label).string = "VIP" + e.toString();
cc.find("vip_info/info_layout_ar", this.node).active = cc.vv.i18nManager.getLanguage() == cc.vv.i18nLangEnum.AR;
cc.find("vip_info/info_layout_en", this.node).active = cc.vv.i18nManager.getLanguage() == cc.vv.i18nLangEnum.EN;
}
if (this.vipgift && cc.vv.UserManager.svip < 6) {
cc.find("vip_info/btn_gift", this.node).active = !0;
c = "";
cc.vv.PayMgr.getLocalPrice && (c = cc.vv.PayMgr.getLocalPrice(this.vipgift.productid));
c = c || __(this.vipgift.unit, Global.FormatNumToComma(this.vipgift.amount));
cc.find("vip_info/btn_gift/btn_green/label", this.node).getComponent(cc.Label).string = c;
cc.find("vip_info/btn_gift/price/value", this.node).getComponent(cc.Label).string = Global.FormatNumToComma(this.vipgift.diamond);
this.node.height = 1400;
} else {
cc.find("vip_info/btn_gift", this.node).active = !1;
this.node.height = 1050;
}
var r = cc.vv.UserManager.getviplv[e] || 0;
this.getBtn.getComponent("ButtonGrayCmp").interactable = 1 == r;
cc.find("red", this.getBtn.node).active = 1 == r;
cc.find("frame/icon_ok", this.pageNode).active = 2 == r;
cc.find("emojoy/icon_ok", this.pageNode).active = 2 == r;
cc.find("chatbox/icon_ok", this.pageNode).active = 2 == r;
cc.find("gift/icon_ok", this.pageNode).active = 2 == r;
cc.find("reward/icon_ok", this.pageNode).active = !1;
for (var l = !1, d = !1, h = 0; h < cc.vv.UserManager.getviplv.length; h++) {
var _ = cc.vv.UserManager.getviplv[h];
h < e && 1 == _ && (l = !0);
h > e && 1 == _ && (d = !0);
}
cc.find("red", this.btnLeft.node).active = l;
cc.find("red", this.btnRight.node).active = d;
};
t.prototype.REQU_GET_VIP_REWARD = function(e) {
if (200 == e.code) {
Global.RewardFly(e.rewards, this.btnReward.node.convertToWorldSpaceAR(cc.v2(0, 0)));
this.vip1Data.collect = 2;
this.vip2Data.collect = 2;
this.updateView();
}
};
t.prototype.PURCHASE_RECHARGE_SUC = function(e) {
if (200 == e.code && e.rewards) {
var t = null, i = !1;
if (this.vip1Data && this.vip1Data.id == e.shopid) {
i = !0;
t = cc.find("layout/btn1/btn_pay", this.vipInfoBase);
}
if (this.vip2Data && this.vip2Data.id == e.shopid) {
i = !0;
t = cc.find("layout/btn2/btn_pay", this.vipInfoBase);
}
if (this.vipGiftId && this.vipGiftId == e.shopid) {
i = !0;
t = cc.find("vip_info/btn_gift", this.node);
}
i && (t ? Global.RewardFly(e.rewards, t.convertToWorldSpaceAR(cc.v2(0, 0))) : Global.RewardFly(e.rewards, this.node.convertToWorldSpaceAR(cc.v2(0, -300))));
}
};
t.prototype.onClickGetReward = function() {
cc.vv.NetManager.send({
c: MsgId.GET_ALL_VIP_REAWRDS,
vip: this.index
});
};
t.prototype.GET_ALL_VIP_REAWRDS = function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0); else {
Global.RewardFly(e.rewards, this.getBtn.node.convertToWorldSpaceAR(cc.v2(0, 0)));
this.getBtn.getComponent("ButtonGrayCmp").interactable = !1;
}
};
t.prototype.USER_INFO_CHANGE = function() {
this.updateView();
};
__decorate([ o(cc.Prefab) ], t.prototype, "vipBenefitsPrefab", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btnLeft", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btnRight", void 0);
__decorate([ o(cc.Button) ], t.prototype, "btnReward", void 0);
__decorate([ o(cc.Node) ], t.prototype, "pageNode", void 0);
__decorate([ o(cc.SpriteAtlas) ], t.prototype, "chatAtlas", void 0);
__decorate([ o(cc.SpriteAtlas) ], t.prototype, "userComAtlas", void 0);
__decorate([ o(cc.Button) ], t.prototype, "getBtn", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
ShowErrorReport: [ function(e, t) {
"use strict";
cc._RF.push(t, "48f99h94adDBq9tYfk6JA9J", "ShowErrorReport");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
Global.FixDesignScale_V(this.node);
cc.find("ui_bg/btn_close", this.node).on("click", this.onClickClose, this);
},
start: function() {},
setMsg: function(e) {
cc.find("ui_bg/lbl_content", this.node).getComponent(cc.Label).string = e;
},
onClickClose: function() {
this.node.destroy();
}
});
cc._RF.pop();
}, {} ],
Simple_Bottom: [ function(e, t) {
"use strict";
cc._RF.push(t, "d5545OrDjdIWZ2L15C+J08J", "Simple_Bottom");
cc.Class({
extends: e("Table_Bottom_Base"),
properties: {},
showMyInfo: function() {
this.showCoin();
},
showCoin: function() {
var e = cc.vv.gameData.getMyCoin();
Global.setLabelString("val", this.node, Global.FormatNumToComma(e.toFixed(2)));
}
});
cc._RF.pop();
}, {
Table_Bottom_Base: "Table_Bottom_Base"
} ],
Simple_OP: [ function(e, t) {
"use strict";
cc._RF.push(t, "77cff+Amb5FVb6IfM9Ohkdo", "Simple_OP");
cc.Class({
extends: cc.Component,
properties: {
betOptId: 1,
_curBetIdx: 0,
_bAutoBet: !1,
_bAutoCollect: !1,
_curBet: 1,
_collectVal: 1.25
},
onLoad: function() {
var e = cc.find("node_l/bet_bg", this.node);
Global.btnClickEvent(e, this.onClickBetInput, this);
var t = cc.find("btn_add", e);
Global.btnClickEvent(t, this.onClickBetAdd, this);
var i = cc.find("btn_minus", e);
Global.btnClickEvent(i, this.onClickBetMinus, this);
var n = cc.find("toggle_auto_bet", e);
Global.btnClickEvent(n, this.onClickAutoBet, this);
var a = cc.find("node_l/collect_auto_on", this.node);
Global.btnClickEvent(a, this.onClickCollectInput, this);
var o = cc.find("btn_add", a);
Global.btnClickEvent(o, this.onClickCollectAdd, this);
var c = cc.find("btn_minus", a);
Global.btnClickEvent(c, this.onClickCollectMinus, this);
Global.btnClickEvent(cc.find("btn_auto", a), this.onClickCollectOff, this);
var s = cc.find("node_l/collect_auto_off", this.node);
Global.btnClickEvent(cc.find("btn_auto", s), this.onClickCollectOn, this);
var r = cc.find("node_r/btn_bet", this.node);
Global.btnClickEvent(r, this.onClickConfirmbet, this);
var l = cc.find("node_r/btn_cash", this.node);
Global.btnClickEvent(l, this.onClickConfirmCollect, this);
var d = cc.find("node_r/btn_cancel", this.node);
Global.btnClickEvent(d, this.onClickBetCancel, this);
},
start: function() {
this._showAutoCollect(!1);
this._showAutoBet(!1);
this._showCollectVal(this._collectVal);
this._showCurBet(this._curBet);
},
showOPUI: function(e) {
this._gamestatus = e;
2 == e ? cc.vv.gameData.isBetOPId(this.betOptId) ? this._setBtn("btn_bet", !0, !1, "Bet Accepted", 50) : cc.vv.gameData.isHasNextBet(this.betOptId) || this._bAutoBet && this.onClickConfirmbet() || this._setBtn("btn_bet", !0, !0, "Place your bet", 50) : 3 == e && (cc.vv.gameData.isBetOPId(this.betOptId) ? cc.vv.gameData.isCollectOPId(this.betOptId) ? this._setBtn("btn_bet", !0, !0, "Place your bet \n\nfor next round", 45) : this._setBtn("btn_cash", !0, !0) : cc.vv.gameData.isHasNextBet(this.betOptId) ? this._setBtn("btn_cancel", !0, !0) : this._setBtn("btn_bet", !0, !0, "Place your bet \n\nfor next round", 45));
},
updateCoin: function(e) {
var t = Global.SavePoints(Global.FormatNumToComma(e * this._curBet));
Global.setLabelString("node_r/btn_cash/Background/Label_val", this.node, t);
},
addBet: function(e) {
this._curBet += e;
this._showCurBet(this._curBet);
},
onClickBetAdd: function() {
if (this._isCanChangeBetVal()) {
this._curBetIdx++;
var e = cc.vv.gameData.getBetChipList();
this._curBetIdx >= e.length && (this._curBetIdx = e.length - 1);
var t = e[this._curBetIdx];
this._curBet = t;
this._showCurBet(t);
Global.TableSoundMgr.playEffect("Plus");
} else cc.vv.FloatTip.show("The Bet has accepted, can't be modify!");
},
onClickBetMinus: function() {
if (this._isCanChangeBetVal()) {
this._curBetIdx--;
this._curBetIdx <= 0 && (this._curBetIdx = 0);
var e = cc.vv.gameData.getBetChipList()[this._curBetIdx];
this._curBet = e;
this._showCurBet(e);
Global.TableSoundMgr.playEffect("Minus");
} else cc.vv.FloatTip.show("The Bet has accepted, can't be modify!");
},
onClickBetInput: function() {
var e = this;
Global.TableSoundMgr.playCommonEff("com_click");
if (this._isCanChangeBetVal()) {
var t = cc.vv.gameData.getScriptGame().node, i = cc.find("node_input", t);
if (i) {
i.active = !0;
i.getComponent("Input_Nums").init(1, 1e6, function(t) {
e._curBet = t;
e._showCurBet(e._curBet);
});
} else cc.loader.loadRes("Table_Common/TableRes/prefab/node_input", cc.Prefab, function(i, n) {
if (!i && !cc.find("node_input", t)) {
var a = cc.instantiate(n);
a.parent = t;
a.active = !0;
a.getComponent("Input_Nums").init(1, 1e6, function(t) {
e._curBet = t;
e._showCurBet(e._curBet);
});
}
});
} else cc.vv.FloatTip.show("The Bet has accepted, can't be modify!");
},
onClickCollectInput: function() {
var e = this;
Global.TableSoundMgr.playCommonEff("com_click");
var t = cc.vv.gameData.getScriptGame().node, i = cc.find("node_input", t);
if (i) {
i.active = !0;
i.getComponent("Input_Nums").init(1, 100, function(t) {
e._collectVal = t;
e._showCollectVal(t);
});
} else cc.loader.loadRes("Table_Common/TableRes/prefab/node_input", cc.Prefab, function(i, n) {
if (!i && !cc.find("node_input", t)) {
var a = cc.instantiate(n);
a.parent = t;
a.active = !0;
a.getComponent("Input_Nums").init(1, 100, function(t) {
e._collectVal = t;
e._showCollectVal(t);
});
}
});
},
onClickCollectAdd: function() {
this._collectVal = this._collectVal || 1.25;
this._collectVal += .1;
this._collectVal >= 100 && (this._collectVal = 100);
this._showCollectVal(this._collectVal);
Global.TableSoundMgr.playEffect("Plus");
},
onClickCollectMinus: function() {
this._collectVal = this._collectVal || 1.25;
this._collectVal -= .1;
this._collectVal <= 1 && (this._collectVal = 1.01);
this._showCollectVal(this._collectVal);
Global.TableSoundMgr.playEffect("Minus");
},
onClickCollectOff: function() {
Global.TableSoundMgr.playEffect("Checkbox");
this._bAutoCollect = !1;
this._showAutoCollect(!1);
},
onClickCollectOn: function() {
Global.TableSoundMgr.playEffect("Checkbox");
this._bAutoCollect = !0;
this._showAutoCollect(!0);
},
onClickAutoBet: function() {
Global.TableSoundMgr.playEffect("Checkbox");
var e = cc.find("node_l/bet_bg/toggle_auto_bet", this.node);
e && (e.getComponent(cc.Toggle).isChecked ? this._bAutoBet = !1 : this._bAutoBet = !0);
},
onClickConfirmbet: function() {
Global.TableSoundMgr.playEffect("Accept");
if (this._curBet > 0) {
if (!cc.vv.gameData.isCoinEncough(this._curBet)) {
cc.vv.gameData.showChargeTips();
return;
}
cc.vv.gameData.addMyCoin(-this._curBet, !0);
var e = 0;
this._bAutoCollect && (e = this._collectVal);
if (2 == this._gamestatus) {
cc.vv.gameData.sendBetReq(e, this._curBet, this.betOptId);
this._setBtn("btn_bet", !0, !1);
} else if (3 == this._gamestatus) {
cc.vv.gameData.saveNextBet(e, this._curBet, this.betOptId);
this._setBtn("btn_cancel", !0, !0);
}
return !0;
}
},
onClickConfirmCollect: function() {
Global.TableSoundMgr.playEffect("PlaceBet");
cc.vv.gameData.sendCashout(this.betOptId);
this._setBtn("btn_bet", !0, !0, "Place your bet \n\nfor next round", 45);
},
onClickBetCancel: function() {
Global.TableSoundMgr.playCommonEff("com_click");
cc.vv.gameData.delNextBet(this.betOptId);
},
_showCurBet: function(e) {
cc.find("node_l/bet_bg/bet_val", this.node).getComponent(cc.Label).string = Global.FormatNumToComma(e.toFixed(2));
},
_showCollectVal: function(e) {
cc.find("node_l/collect_auto_on/bet_val", this.node).getComponent(cc.Label).string = Number(e).toFixed(2) + "x";
},
_showAutoCollect: function(e) {
var t = cc.find("node_l/collect_auto_on", this.node), i = cc.find("node_l/collect_auto_off", this.node);
t.active = e;
i && (i.active = !e);
this.resizeNode(e);
},
resizeNode: function(e) {
var t = e ? 376 : 258;
this.node.height = t;
this.node.parent.getComponent(cc.Layout).updateLayout();
},
_showAutoBet: function(e) {
var t = cc.find("node_l/bet_bg/toggle_auto_bet", this.node);
t && (t.getComponent(cc.Toggle).isChecked = e);
},
_setBtn: function(e, t, i, n, a) {
for (var o = [ "btn_bet", "btn_cash", "btn_cancel" ], c = 0; c < o.length; c++) cc.find("node_r/" + o[c], this.node).active = !1;
var s = cc.find("node_r/" + e, this.node);
s.active = t;
s.getComponent(cc.Button).interactable = i;
var r = cc.find("Background/Label", s);
if (r) {
n && (r.getComponent(cc.Label).string = n);
a && (r.getComponent(cc.Label).fontSize = a);
}
},
_isCanChangeBetVal: function() {
return !(cc.vv.gameData.isBetOPId(this.betOptId) && !cc.vv.gameData.isCollectOPId(this.betOptId));
}
});
cc._RF.pop();
}, {} ],
Simple_Quickbet: [ function(e, t) {
"use strict";
cc._RF.push(t, "09b0f9XlilBoYm/2tYOOJDY", "Simple_Quickbet");
cc.Class({
extends: cc.Component,
properties: {
_betlist: null
},
onLoad: function() {
this._betlist = [ 1, 10, 100, 500 ];
for (var e = 0; e < 4; e++) {
var t = cc.find("item" + (e + 1), this.node);
Global.btnClickEvent(t, this.onClickQuickItem, this);
Global.setLabelString("val", t, Global.FormatNumToComma(this._betlist[e]));
}
},
start: function() {},
setUI: function(e) {
this._clickItemCall = e;
},
onClickQuickItem: function(e) {
Global.TableSoundMgr.playCommonEff("com_click");
if (this._clickItemCall) {
var t = e.node.name, i = t.charAt(t.length - 1), n = this._betlist[Number(i) - 1];
this._clickItemCall(n);
}
}
});
cc._RF.pop();
}, {} ],
SingleHide: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1d14bywLtJLvreoYwQ8Yaz/", "SingleHide");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = (n.property, n.menu), c = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
this.node.active = !Global.isSingle();
};
return __decorate([ a, o("UI/SingleHide") ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
SkinShopInfoCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "312cbOefrdDWYeHCFqjUQM6", "SkinShopInfoCmp");
cc.Class({
extends: cc.Component,
properties: {
chatBoxAtlas: cc.SpriteAtlas,
pokerBackAtlas: cc.SpriteAtlas,
skinShopAtlas: cc.SpriteAtlas,
btnConfim: cc.Button,
btnCancel: cc.Button
},
onLoad: function() {
var e = this;
this.btnConfim.node.on("click", function() {
cc.vv.PopupManager.removePopup(e.node);
e.confimCallback && e.confimCallback();
});
this.btnCancel.node.on("click", function() {
cc.vv.PopupManager.removePopup(e.node);
e.cancelCallback && e.cancelCallback();
});
},
initData: function(e, t, i) {
StatisticsMgr.reqReport(ReportConfig.SHOP_SKIN_INFO, e.id);
this.confimCallback = t;
this.cancelCallback = i;
var n = this.node;
cc.find("title", n).getComponent(cc.Label).string = e.title;
cc.find("price/value", n).getComponent(cc.Label).string = e.diamond;
cc.find("price/name", n).getComponent(cc.Label).string = e.title;
cc.find("avatar", n).active = 1 == e.category;
cc.find("icon", n).active = 1 != e.category;
cc.find("avatar", n).scale = 1;
cc.find("icon", n).scale = 1;
cc.find("icon", n).rotation = 0;
if (1 == e.category) {
cc.vv.UserConfig.setAvatarFrame(cc.find("avatar", n).getComponent(sp.Skeleton), e.img);
cc.find("avatar", n).scale = 2;
} else if (2 == e.category) {
cc.find("icon", n).getComponent(cc.Sprite).spriteFrame = this.chatBoxAtlas.getSpriteFrame(e.img);
cc.find("icon", n).scale = 2;
} else if (3 == e.category) {
cc.find("icon", n).getComponent(cc.Sprite).spriteFrame = this.skinShopAtlas.getSpriteFrame(e.img);
cc.find("icon", n).scale = 1.3;
cc.find("icon", n).rotation = 90;
} else if (4 == e.category) {
cc.find("icon", n).getComponent(cc.Sprite).spriteFrame = this.pokerBackAtlas.getSpriteFrame(e.img);
cc.find("icon", n).scale = 1.3;
} else if (5 == e.category) cc.find("icon", n).getComponent(cc.Sprite).spriteFrame = this.skinShopAtlas.getSpriteFrame("icon_info_" + e.img); else if (6 == e.category) cc.find("icon", n).getComponent(cc.Sprite).spriteFrame = this.skinShopAtlas.getSpriteFrame("icon_info_" + e.img); else {
cc.find("icon", n).getComponent(cc.Sprite).spriteFrame = this.skinShopAtlas.getSpriteFrame(e.img);
cc.find("icon", n).scale = 2;
}
if (1 == e.have || e.diamond <= 0 || 1 == e.free) {
this.btnConfim.node.active = !1;
this.btnCancel.node.active = !1;
cc.find("price/value", n).active = !1;
cc.find("price/icon_diamond", n).active = !1;
cc.find("price/name", n).active = !0;
} else {
this.btnConfim.node.active = !0;
this.btnCancel.node.active = !0;
cc.find("price/value", n).active = !0;
cc.find("price/icon_diamond", n).active = !0;
cc.find("price/name", n).active = !1;
}
}
});
cc._RF.pop();
}, {} ],
SkinShopItemCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "1d172bU545DPoK3jxPd0aek", "SkinShopItemCmp");
cc.Class({
extends: cc.Component,
properties: {
chatBoxAtlas: cc.SpriteAtlas,
pokerBackAtlas: cc.SpriteAtlas,
skinShopAtlas: cc.SpriteAtlas
},
onLoad: function() {
var e = this;
this.node.on("click", function() {
1 == e.oprType ? Global.dispatchEvent("CLICK_USE_SKIN_ITEM", e.changeParm) : Global.dispatchEvent("CLICK_BUY_SKIN_ITEM", e.data);
});
},
updateView: function(e, t, i, n) {
this.data = t;
this.oprType = n;
cc.find("hit", e).active = !1;
cc.find("price", e).active = !1;
cc.find("own", e).active = !1;
if (1 == t.have) cc.find("own", e).active = !0; else if (t.diamond <= 0 || 1 == t.free) {
cc.find("hit", e).active = !0;
cc.find("hit/value", e).getComponent(cc.Label).string = t.content;
} else {
cc.find("price", e).active = !0;
cc.find("price/value", e).getComponent(cc.Label).string = Global.FormatNumToComma(t.diamond);
}
if (i) cc.find("item/icon", e).getComponent(cc.Sprite).spriteFrame = this.skinShopAtlas.getSpriteFrame(t.img); else {
cc.find("avatar", e).active = 1 == t.category;
cc.find("icon", e).active = 1 != t.category;
cc.find("icon", e).scale = 1;
if (1 == t.category) cc.vv.UserConfig.setAvatarFrame(cc.find("avatar", e).getComponent(sp.Skeleton), t.img); else if (2 == t.category) cc.find("icon", e).getComponent(cc.Sprite).spriteFrame = this.chatBoxAtlas.getSpriteFrame(t.img); else if (4 == t.category) {
cc.find("icon", e).getComponent(cc.Sprite).spriteFrame = this.pokerBackAtlas.getSpriteFrame(t.img);
cc.find("icon", e).scale = .55;
} else 7 == t.category && (cc.find("icon", e).getComponent(cc.Sprite).spriteFrame = this.skinShopAtlas.getSpriteFrame(t.img));
}
this.changeParm = {};
if (0 == n) cc.find("use", e).active = !1; else if (1 == t.category) {
cc.find("use", e).active = t.img == cc.vv.UserManager.avatarframe;
this.changeParm.avatarframe = t.img;
} else if (2 == t.category) {
cc.find("use", e).active = t.img == cc.vv.UserManager.chatskin;
this.changeParm.chatskin = t.img;
} else if (3 == t.category) {
cc.find("use", e).active = t.img == cc.vv.UserManager.tableskin;
this.changeParm.tableskin = t.img;
} else if (4 == t.category) {
cc.find("use", e).active = t.img == cc.vv.UserManager.pokerskin;
this.changeParm.pokerskin = t.img;
} else if (5 == t.category) {
cc.find("use", e).active = t.img == cc.vv.UserManager.faceskin;
this.changeParm.faceskin = t.img;
} else if (6 == t.category) {
cc.find("use", e).active = t.img == cc.vv.UserManager.emojiskin;
this.changeParm.emojiskin = t.img;
} else if (7 == t.category) {
cc.find("use", e).active = t.img == cc.vv.UserManager.frontskin;
this.changeParm.frontskin = t.img;
} else cc.find("use", e).active = !1;
if (1 == n) {
cc.find("icon_hot", e).active = !1;
cc.find("icon_new", e).active = !1;
} else {
cc.find("icon_hot", e).active = 1 == t.hot;
cc.find("icon_new", e).active = 1 == t.new;
}
}
});
cc._RF.pop();
}, {} ],
SkinShop: [ function(e, t) {
"use strict";
cc._RF.push(t, "d6efcQ81HlHJ5KGXLBLE10m", "SkinShop");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
cc.Class({
extends: cc.Component,
properties: {
typeTabbar: e("Tabbar"),
listView: e("ListView"),
itemNode: cc.Node,
infoLabel: cc.Label,
btnPay: cc.Button,
btnGo: cc.Button,
btnUse: cc.Button,
chatBoxAtlas: cc.SpriteAtlas,
pokerBackAtlas: cc.SpriteAtlas,
skinShopAtlas: cc.SpriteAtlas,
userComAtlas: cc.SpriteAtlas
},
onLoad: function() {
var e, t;
this.colorMap = ((e = {})[100] = new cc.Color(231, 81, 90), e[50] = new cc.Color(76, 189, 107), 
e[25] = new cc.Color(246, 181, 25), e);
this.typeConfig = ((t = {})[0] = "data1", t[1] = "data2", t[2] = "data3", t[3] = "data4", 
t[4] = "data5", t[5] = "data6", t[6] = "data8", t[7] = "data9", t);
this.pNameMap = [ "avatarframe", "chatskin", "tableskin", "pokerskin", "faceskin", "emojiskin", "frontskin" ];
StatisticsMgr.reqReport(ReportConfig.SKIN_OPEN);
var i = this.node.addComponent("NetListenerCmp");
i.registerMsg(MsgId.REQ_SKIN_BAG, this.REQ_SKIN_BAG, this);
i.registerMsg(MsgId.REQ_BUY_SKIN_SHOP_ITEM, this.REQ_BUY_SKIN_SHOP_ITEM, this);
i.registerMsg(MsgId.WORLD_GIFT_BUY, this.WORLD_GIFT_BUY, this);
i.registerMsg(MsgId.USE_PROP, this.USE_PROP, this);
this.node.addComponent("EventListenerCmp").registerEvent("USER_INFO_CHANGE", this.USER_INFO_CHANGE, this);
this.btnPay.node.on("click", this.onClickBuy, this);
this.btnGo.node.on("click", this.onClickGo, this);
this.btnUse.node.on("click", this.onClickUse, this);
this.typeTabbar.setChangeCallback(this.onChangeTypeView.bind(this));
this.btnPay.node.active = !1;
this.btnGo.node.active = !1;
this.btnUse.node.active = !1;
},
onEnable: function() {
cc.vv.NetManager.sendAndCache({
c: MsgId.REQ_SKIN_BAG
}, !0);
},
REQ_SKIN_BAG: function(e) {
if (200 == e.code) {
this.shoplist = e.shoplist;
this.updateView();
}
},
USER_INFO_CHANGE: function() {
this.updateView();
},
REQ_BUY_SKIN_SHOP_ITEM: function(e) {
if (200 == e.code) if (2 != e.spcode) {
if (9 != e.item.category) {
var t = {
c: MsgId.UPDATE_USER_INFO
};
t[this.pNameMap[this.typeTabbar.index]] = e.item.img;
cc.vv.NetManager.send(t);
}
for (var n in this.shoplist) for (var a, o = i(this.shoplist[n]); !(a = o()).done; ) {
var c = a.value;
if (c.id == e.item.id) {
c.have = 1;
e.item.days && (c.time = e.item.days);
}
}
this.updateCurItemView(this.selectData);
} else {
cc.vv.FloatTip.show(___("金币不足"));
cc.vv.EventManager.emit("HALL_OPEN_SHOP", {
open: 0
});
}
},
WORLD_GIFT_BUY: function(e) {
200 == e.code && e.spcode && e.spcode > 0 && (652 == e.spcode || 804 == e.spcode ? cc.vv.AlertView.show(___("金币不足"), function() {
cc.vv.EventManager.emit("HALL_OPEN_SHOP", {
open: 1
});
}, function() {}, !1, function() {}, ___("提示"), ___("取消"), ___("Deposit")) : cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0));
},
USE_PROP: function(e) {
200 == e.code && e.spcode && e.spcode > 0 && cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0);
},
onChangeTypeView: function() {
this.selectData = null;
this.updateView();
},
updateView: function() {
if (this.shoplist) {
this.listData = this.shoplist[this.typeConfig[this.typeTabbar.index]] || [];
if (this.selectData) this.updateCurItemView(this.selectData); else {
for (var e = null, t = 0; t < this.listData.length; t++) {
var i = this.listData[t];
i.img == cc.vv.UserManager[this.pNameMap[this.typeTabbar.index]] && (e = i);
}
if (e) {
this.selectData = e;
this.updateCurItemView(e);
} else this.updateCurItemView();
}
this.listView.numItems = this.listData.length;
}
},
onUpdateListItem: function(e, t) {
var i = this.listData[t];
1 == i.have || 1 == i.free ? cc.find("lock", e).active = !1 : cc.find("lock", e).active = !0;
this.updateItemNodeView(e, i);
cc.find("time", e).active = i.time && i.time > 0;
cc.find("time/value", e).getComponent(cc.Label).string = ___("{1}天", i.time);
this.selectData && this.selectData.img == i.img ? cc.find("use", e).active = !0 : cc.find("use", e).active = !1;
},
onSelectListItem: function(e) {
var t = this.listData[e.currentTarget._listId];
if (t) {
this.selectData = t;
this.updateView();
cc.vv.EventManager.emit("EVENT_BTN_CLICK_2_SOUNDS");
}
},
updateCurItemView: function(e) {
if (e) {
this.itemNode.active = !0;
this.updateItemNodeView(this.itemNode, e);
this.infoLabel.string = e.content || "";
this.btnGo.node.active = e.questid && e.questid > 0 && !e.have;
this.btnUse.node.active = !1;
var t = cc.find("layout/icon_diamond", this.btnPay.node), n = cc.find("layout/icon_coin", this.btnPay.node);
t.active = null != e.diamond;
n.active = null != e.coin;
if (8 == e.category) {
this.btnPay.node.active = e.vip <= 0;
this.btnPay.node.getComponentInChildren(cc.Label).string = e.diamond || e.coin;
} else if (9 == e.category) {
for (var a, o = 0, c = i(cc.vv.UserManager.charmDataList); !(a = c()).done; ) {
var s = a.value;
s.img == e.img && (o = s.times);
}
this.btnPay.node.active = !0;
this.btnPay.node.getComponentInChildren(cc.Label).string = e.diamond || e.coin;
this.btnUse.node.active = o > 0;
} else if (e.diamond > 0 && 1 != e.have) {
this.btnPay.node.active = !0;
this.btnPay.node.getComponentInChildren(cc.Label).string = e.diamond || e.coin;
} else {
this.btnPay.node.active = !1;
var r = {
c: MsgId.UPDATE_USER_INFO
};
1 == e.category ? r.avatarframe = e.img : 2 == e.category ? r.chatskin = e.img : 3 == e.category ? r.tableskin = e.img : 4 == e.category ? r.pokerskin = e.img : 5 == e.category ? r.faceskin = e.img : 6 == e.category ? r.emojiskin = e.img : 7 == e.category && (r.frontskin = e.img);
e.img != cc.vv.UserManager[this.pNameMap[this.typeTabbar.index]] && (1 != e.have && 1 != e.free || cc.vv.NetManager.send(r));
}
} else {
this.infoLabel.string = "";
this.btnPay.node.active = !1;
this.btnGo.node.active = !1;
this.itemNode.active = !1;
this.btnUse.node.active = !1;
}
},
updateItemNodeView: function(e, t) {
if (t) {
cc.find("avatar", e).active = 1 == t.category;
cc.find("icon", e).active = 1 != t.category;
cc.find("icon", e).scale = 1;
cc.find("icon", e).angle = 0;
cc.find("icon", e).y = 0;
var n = cc.find("charm", e);
n && (n.active = !1);
var a = cc.find("count", e);
a && (a.active = !1);
var o = cc.find("rate", e);
o && (o.active = !1);
if (1 == t.category) cc.vv.UserConfig.setAvatarFrame(cc.find("avatar", e).getComponent(sp.Skeleton), t.img); else if (2 == t.category) {
cc.find("icon", e).getComponent(cc.Sprite).spriteFrame = this.chatBoxAtlas.getSpriteFrame(t.img);
cc.find("icon", e).scale = 1.2;
} else if (3 == t.category) {
cc.find("icon", e).getComponent(cc.Sprite).spriteFrame = this.skinShopAtlas.getSpriteFrame(t.img);
cc.find("icon", e).scale = .75;
} else if (4 == t.category) {
cc.find("icon", e).getComponent(cc.Sprite).spriteFrame = this.pokerBackAtlas.getSpriteFrame(t.img);
cc.find("icon", e).scale = 1.75;
} else if (5 == t.category) {
cc.find("icon", e).getComponent(cc.Sprite).spriteFrame = this.skinShopAtlas.getSpriteFrame(t.img);
cc.find("icon", e).scale = .6;
} else if (6 == t.category) {
cc.find("icon", e).getComponent(cc.Sprite).spriteFrame = this.skinShopAtlas.getSpriteFrame(t.img);
cc.find("icon", e).scale = .45;
} else if (7 == t.category) cc.find("icon", e).getComponent(cc.Sprite).spriteFrame = this.skinShopAtlas.getSpriteFrame(t.img); else if (8 == t.category) {
cc.find("icon", e).y = 15;
cc.find("icon", e).getComponent(cc.Sprite).spriteFrame = this.userComAtlas.getSpriteFrame(t.img);
if (n && t.charm && t.charm > 0) {
n.active = !0;
cc.find("value", n).getComponent(cc.Label).string = "+" + t.charm;
}
if (a) {
a.active = !0;
var c = cc.find("count/layout/value", e), s = cc.find("count/layout/icon_diamond", e), r = cc.find("count/layout/icon_coin", e);
if (t.vip > 0) {
r.active = !1;
s.active = !1;
c.getComponent(cc.Label).string = t.content;
} else {
for (var l, d = 0, h = i(cc.vv.UserManager.charmDataList); !(l = h()).done; ) {
var _ = l.value;
_.img == t.img && (d = _.times);
}
if (d <= 0) {
s.active = null != t.diamond;
r.active = null != t.coin && t.coin > 0;
(t.diamond || t.coin) > 0 ? c.getComponent(cc.Label).string = Global.FormatNumToComma(t.diamond || t.coin) : c.getComponent(cc.Label).string = "free";
} else {
r.active = !1;
s.active = !1;
c.getComponent(cc.Label).string = "x" + Global.FormatNumToComma(d || 0);
}
}
}
} else if (9 == t.category) {
cc.find("icon", e).getComponent(cc.Sprite).spriteFrame = this.userComAtlas.getSpriteFrame(t.img);
cc.find("icon", e).scale = .5;
if (a) {
a.active = !0;
var p = cc.find("count/layout/value", e), u = cc.find("count/layout/icon_diamond", e), f = cc.find("count/layout/icon_coin", e);
if (t.vip > 0) {
f.active = !1;
u.active = !1;
p.getComponent(cc.Label).string = t.content;
} else {
for (var g, m = 0, v = i(cc.vv.UserManager.charmDataList); !(g = v()).done; ) {
var S = g.value;
S.img == t.img && (m = S.times);
}
if (m <= 0) {
u.active = null != t.diamond;
f.active = null != t.coin;
p.getComponent(cc.Label).string = Global.FormatNumToComma(t.diamond || t.coin);
} else {
f.active = !1;
u.active = !1;
p.getComponent(cc.Label).string = "x" + Global.FormatNumToComma(m || 0);
}
}
}
if (o) {
o.active = !0;
cc.vv.UserConfig.setExpBuffFrame(o.getComponent(cc.Sprite), t.buffer);
o.color = this.colorMap[t.buffer] || cc.Color.WHITE;
}
}
}
},
onClickGo: function() {
var e = -1;
if (1 == this.selectData.questid) e = 0; else if (2 == this.selectData.questid) e = 3; else if (3 == this.selectData.questid) e = 4; else if (4 == this.selectData.questid) e = 2; else if (5 == this.selectData.questid) {
cc.vv.GameManager.jumpTo(10);
return;
}
var t = cc.director.getScene().getComponentInChildren("GameHall");
if (e >= 0 && t && t.pageTabbar) {
cc.vv.PopupManager.removeAll();
t.pageTabbar.setPage(3);
var i = cc.find("TabbarContent/Tabbar", t.pageTabbar.tabs[3].pageNode).getComponent("Tabbar");
i && i.setPage(e);
}
},
onClickBuy: function() {
8 == this.selectData.category ? cc.vv.NetManager.send({
c: MsgId.WORLD_GIFT_BUY,
img: this.selectData.img
}) : cc.vv.NetManager.send({
c: MsgId.REQ_BUY_SKIN_SHOP_ITEM,
id: this.selectData.id
});
},
onClickUse: function() {
cc.vv.NetManager.send({
c: MsgId.USE_PROP,
img: this.selectData.img
});
}
});
cc._RF.pop();
}, {
ListView: "ListView",
Tabbar: "Tabbar"
} ],
Slideshow3DItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "18a3cDk69dBJKXUP5Q7M2Qs", "Slideshow3DItem");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = (n.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.left = null;
t.right = null;
t.angle = 0;
return t;
}
return __decorate([ a ], t);
}(cc.Component));
i.default = o;
cc._RF.pop();
}, {} ],
Slideshow3D: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "dd362TOnxtEs6ZUTSF2Bow2", "Slideshow3D");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./Slideshow3DItem"), a = cc._decorator, o = a.ccclass, c = a.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.paddingAngle = 80;
t.radius = 500;
t.speed = 5;
t.speedCoefficient = .3;
t.autoTime = 7;
t.itemList = [];
t.indexAngle = 0;
t.tempAngle = 0;
t.Angle = 0;
t.itemNodePrefab = null;
return t;
}
Object.defineProperty(t.prototype, "numItems", {
set: function(e) {
for (var t = 0; t < e; t++) {
var i = cc.instantiate(this.itemNodePrefab);
i.parent = this.node;
this.updateFunc && this.updateFunc(i, t);
var a = i.addComponent(n.default);
this.itemList.push(a);
}
for (t = 0; t < this.itemList.length; t++) {
a = this.itemList[t];
this.itemList[t - 1] ? a.left = this.itemList[t - 1] : a.left = this.itemList[this.itemList.length - 1];
this.itemList[t + 1] ? a.right = this.itemList[t + 1] : a.right = this.itemList[0];
a.angle = this.paddingAngle * t;
}
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
this.itemNodePrefab.active = !1;
this.circlePoint = this.node.position.add(cc.v3(0, 0, -this.radius));
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);
};
t.prototype.onEnable = function() {
this.autoTime;
};
t.prototype.onDisable = function() {};
t.prototype.onTouchStart = function() {
this.running = !0;
};
t.prototype.onTouchMove = function(e) {
this.indexAngle += e.getDeltaX() * this.speedCoefficient;
};
t.prototype.onTouchEnd = function() {
cc.log("onTouchEnd ");
this.autoTime;
};
t.prototype.toNext = function() {};
t.prototype.toPrev = function() {};
t.prototype.runToAngle = function(e, t) {
var i = this;
void 0 === e && (e = 1);
cc.tween(this).call(function() {
i.running = !0;
}).to(e, {
indexAngle: t
}, {
easing: "quadOut"
}).call(function() {
i.running = !1;
}).start();
};
t.prototype.update = function() {
for (var e = 0, t = this.itemList; e < t.length; e++) {
var i = t[e], n = this.indexAngle + i.angle;
this.updateItemAttr(i, n);
}
};
t.prototype.updateItemAttr = function(e, t) {
e.node.position = this.circlePoint.add(cc.v3(Math.sin(t * Math.PI / 180), 0, Math.cos(t * Math.PI / 180)).mul(this.radius));
e.node.eulerAngles = cc.v3(0, t, 0);
e.node.zIndex = e.node.position.z;
};
t.prototype.setUpdateFunc = function(e) {
this.updateFunc = e;
};
t.prototype.setChangeFunc = function(e) {
this.changeFunc = e;
};
t.prototype.skipPage = function() {};
__decorate([ c ], t.prototype, "paddingAngle", void 0);
__decorate([ c ], t.prototype, "radius", void 0);
__decorate([ c ], t.prototype, "speed", void 0);
__decorate([ c ], t.prototype, "speedCoefficient", void 0);
__decorate([ c ], t.prototype, "autoTime", void 0);
__decorate([ c(cc.Node) ], t.prototype, "itemNodePrefab", void 0);
return __decorate([ o ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {
"./Slideshow3DItem": "Slideshow3DItem"
} ],
SlotIcon: [ function(e, t) {
"use strict";
cc._RF.push(t, "b0103fuhsVEQ5BmeOZ9xkKb", "SlotIcon");
var i = e("GameItemCfg");
cc.Class({
extends: cc.Component,
properties: {
spr_icon: cc.Node,
_gameId: null,
_spineScale: null,
_cfg: null,
_loadAni: null,
_itemIdx: null
},
onLoad: function() {
var e = cc.find("spine", this.node);
this._spineScale = e.scale;
},
start: function() {},
setGameId: function(e, t, n) {
this._gameId = e;
this._loadAni = t;
this._onShowCall = n;
cc.find("icon", this.node).active = !1;
cc.find("spine", this.node).active = !1;
this._cfg = i[e];
this._cfg && this._cfg.animation ? this.LoadIconAnimation() : this.LoadIcon();
},
_getIconUrl: function(e) {
return "BalootClient/Slots/icon/" + e.action;
},
_getAnimationUrl: function(e) {
return "BalootClient/Slots/icon/" + e.action + "/spine";
},
LoadIcon: function() {
var e = cc.find("icon", this.node);
e || (e = this.spr_icon);
var t = this._cfg;
if (t) t.animation || cc.loader.loadRes(this._getIconUrl(t), cc.SpriteFrame, function(i, n) {
if (cc.isValid(e, !0)) if (i) e.active = !1; else {
e.getComponent(cc.Sprite).spriteFrame = n;
e.active = !0;
0 == e.anchorY && (t.staOffsetY || !t.animation ? e.y = t.staOffsetY || -27 : e.y = .45);
}
}); else {
cc.log(cc.js.formatStr("%s未配置GameItemCfg", this._gameId));
e.active = !1;
}
},
LoadIconAnimation: function() {
var e = this, t = cc.find("spine", this.node), i = cc.find("icon", this.node), n = this._cfg;
if (n) {
if (n.animation) {
var a = this._getAnimationUrl(n);
cc.vv.UserManager.loadSlotIconByQueue(t, a, sp.SkeletonData, function(a, o) {
if (!a && n && n.animation && cc.isValid(t, !0)) {
var c = e._loadAni ? e._loadAni : n.animation;
i.active = !1;
t.active = !0;
var s = t.getComponent(sp.Skeleton);
s.skeletonData = o;
s.setAnimation(0, c, !0);
e._onShowCall && e._onShowCall();
}
});
}
} else cc.log(cc.js.formatStr("%s未配置GameItemCfg", this._gameId));
}
});
cc._RF.pop();
}, {
GameItemCfg: "GameItemCfg"
} ],
SlotMachine_GameEventId: [ function(e, t) {
"use strict";
cc._RF.push(t, "48659sIukRJr503IFIxueDd", "SlotMachine_GameEventId");
t.exports = {
SLOT_MOVE: "slot_move",
SLOT_STOP: "slot_stop",
SLOT_AUTO_PLAY: "slot_auto_play",
SLOT_STOP_AUTO: "slot_stop_auto",
SLOT_STOP_MOVE: "slot_stop_move",
SLOT_STOP_SELECT_MOVE: "slot_stop_select_move",
SLOT_START_MOVE: "slot_start_move",
SLOT_RANK: "slot_rank",
SLOT_RANK_RESULT: "slot_rank_result",
SLOT_START_SELECT_MOVE: "slot_start_select_move",
SLOT_PLAY_LINE_FINISH: "slot_playline_finish",
SLOT_PLAY_LINE: "slot_playline",
SLOT_BEANS_EVENT: "slot_beans_event",
SLOT_PLAY_BG: "slot_play_bg",
SLOT_PLAY_LINE_INDEX: "slot_play_line_index",
SLOT_PLAY_ITEM: "slot_play_item",
SLOT_PLAY_ALLITEM: "slot_play_allitem",
SLOT_GAME_RATE: "slot_game_rate",
SLOT_GAME_START: "slot_game_start",
SLOT_NEED_CHANG_YAZHU: "slot_need_chang_yazhu",
SLOT_PLAY_STOP_SOUND: "slot_play_stop_sound",
SLOT_DRAW_LINE: "slot_draw_line",
SLOT_ADJUST_LINE: "slot_adjust_line",
SLOT_SHOW_LINE: "slot_show_line",
SLOT_SPIN_LINE_STOP: "slot_spin_line_stop",
SLOT_LINE_STOP_SOUND: "slot_line_stop_sound",
SLOT_PAUSE_DRAW_LINE: "slot_pause_draw_line",
SLOT_UPDATE_COIN: "slot_update_coin",
SLOT_PLAY_WIN_SOUND: "slot_play_win_sound",
SLOT_SHOW_SPEED_FRAME: "slot_show_speed_frame",
SLOT_HIDE_SPEED_FRAME: "slot_hide_speed_frame",
SLOT_ENTER_FREE_GAME: "slot_enter_free_game",
SLOT_EXIT_FREE_GAME: "slot_exit_free_game",
SLOT_PLAY_SCATTER_BOUNS: "slot_play_scatter_bouns",
SLOT_PLAY_SCATTER_ITEM: "slot_play_scatter_item",
SLOT_PLAY_FREEGAME_BGMUSIC: "slot_play_freegame_bgmusic",
SLOT_STOP_FREEGAME_BGMUSIC: "slot_stop_freegame_bgmusic",
SLOT_PLAY_HELP_BGMUSIC: "slot_play_help_bgmusic",
SLOT_STOP_HELP_BGMUSIC: "slot_stop_help_bgmusic",
SLOT_PLAY_WILD_SOUND: "slot_play_wild_sound",
SLOT_PLAY_LINE_SOUND: "slot_play_line_sound",
SLOT_PLAY_ADJUST_LINE_SOUND: "slot_play_adjust_sound",
SLOT_SHOW_SUBGAME_SOUND: "slot_show_subgame_sound",
SLOT_MANUAL_CLICK_LINE: "SLOT_MANUAL_CLICK_LINE",
SLOT_PLAY_LINE_CLICK: "SLOT_PLAY_LINE_CLICK",
SLOT_PLAY_5SAME_LINE_SOUND: "SLOT_PLAY_5SAME_LINE_SOUND",
SLOT_MANUAL_STOP_MOVE_DELAY_TIME: "slot_manual_stop_move_delay_time",
SLOT_PLAY_UNLOOP_BGM: "SLOT_PLAY_UNLOOP_BGM",
SLOT_UPDATE_TOTALBET: "SLOT_UPDATE_TOTALBET",
SLOT_CHANGE_BET_IDX: "SLOT_CHANGE_BET_IDX",
SLOT_REFUSH_ENERGY: "SLOT_REFUSH_ENERGY",
SLOT_TOTALBET_UPDATED: "SLOT_TOTALBET_UPDATED",
SLOT_JACKPOOL_LOCK_CHANGE: "SLOT_JACKPOOL_LOCK_CHANGE",
SLOT_SHOW_HEADFOOTER_MASK: "SLOT_SHOW_HEADFOOTER_MASK",
SLOT_CLEAR_ALLITEMS_ANI: "SLOT_CLEAR_ALLITEMS_ANI",
SLOT_SET_TOUCH_ITEMNODE: "SLOT_SET_TOUCH_ITEMNODE",
SLOT_CLOSE_SPIN_DELAY: "SLOT_CLOSE_SPIN_DELAY",
SLOT_PLAY_FREE_SOUND_MUMAL: "SLOT_PLAY_FREE_SOUND_MUMAL",
SLOT_PLAY_FREE_ACTION_FINISH: "slot_play_free_spine_finish",
SLOT_PLAY_LINE_ONE_ROUND: "slot_play_line_one_round",
SLOT_PLAY_FREE_ACTION: "slot_play_free_spine",
SLOT_CLEAR_LINE_LIST: "slot_clear_line_list",
SLOT_START_OTHER_MOVE: "slot_start_other_move",
SLOT_START_ALL_MOVE: "slot_start_all_move",
SLOT_CAN_TOUCH: "slot_can_touch",
SLOT_PLAY_SCATTER: "slot_play_scatter",
SLOT_SECRETBOX_OPEN: "slot_secretbox_open",
SLOT_SECRETBOX_FINISH: "slot_secretbox_finish",
SLOT_GREAT_BULE_FREE_TIMES: "slot_great_bule_free_times",
SLOT_BEANS_PLAY_FINISH: "slot_beans_play_finish",
SLOT_PLAY_FREEGAME_WINCOINS: "slot_play_free_game_wincoins",
SLOT_PLAY_FREEGAME_WINCOINS_FINISH: "slot_play_freegame_wincoins_finish",
SLOT_TK_FREE_GAME: "slot_tk_free_game",
SLOT_CHOOSE_LOTUS_FLOWER: "slot_choose_Lotus_Flower",
SLOT_CHOOSE_LOTUS_FLOWER_FINISH: "slot_choose_Lotus_Flower_finish",
SLOT_ENTER_SUBGAME: "slot_enter_subgame",
SLOT_EXIT_SUBGAME: "slot_exit_subgame",
SLOT_SUBGAME_ACTION: "slot_subgame_action",
SLOT_SUBGAME_DATA: "slot_subgame_data",
SLOT_SUBGAME_WIN: "slot_subgame_action",
SLOT_SUBGAME_LOSE: "slot_subgame_action_finish",
SLOT_ALLSCREENGAME_ACTION_SHOW: "slot_allscreengame_action_show",
SLOT_ALLSCREENGAME_ACTION_HIDE: "slot_allscreengame_action_hide",
SLOT_ALLSCREENGAME_MOVE: "slot_allscreengame_move",
SLOT_ALLSCREENGAME_STOP: "slot_allscreengame_stop",
SLOT_ALLSCREENGAME_NEXT_ROUND: "slot_allscreengame_next_round",
SLOT_FIVE_ELEMENTS_SIMPLE_ANIMATION: "SLOT_FIVE_ELEMENTS_SIMPLE_ANIMATION",
SLOT_FIVE_ELEMENTS_SPEED_UP: "SLOT_FIVE_ELEMENTS_SPEED_UP",
SLOT_ALLGODLISTEN_ENTER: "slot_allgodlisten_enter",
SLOT_ALLGODLISTEN_PLAY: "slot_allgodlisten_play",
SLOT_HELP_ENTER: "slot_help_enter",
SLOT_HELP_CLOSE: "slot_help_close",
SLOT_PLAY_ALLGODLISTEN_BG: "slot_play_allgodlisten_bg",
SLOT_PLAY_ALLGODLISTEN_RUN: "slot_play_allgodlisten_run",
SLOT_PLAY_ALLGODLISTEN_STOP: "slot_play_allgodlisten_stop",
SLOT_PLAY_ALLGODLISTEN_ELE: "slot_play_allgodlisten_ele",
SLOT_PAUSE_AUTO: "slot_pause_auto",
SLOT_RESUME_AUTO: "slot_resume_auto",
SLOT_ADD_SPEED: "slot_add_speed",
SLOT_RESTORE_SPEED: "slot_restore_speed",
SLOT_SHZ_BIBEI_DIAN: "slot_shz_bibei_dian",
PLAY_SOUND_BT_XIAZHU: "play_sound_bt_xiazhu",
PLAY_SOUND_BT_DICE: "play_sound_bt_dice",
PLAY_SOUND_BT_RESULT: "play_sound_bt_result",
PLAY_SOUND_BT_CUICU: "play_sound_bt_cuicu",
PLAY_SOUND_MARY_OUT: "play_sound_mary_out",
HIDE_BIG_WIN: "hide_big_win",
CLICK_HIDE_BIG_WIN: "click_hide_big_win",
PLAY_FINISHED_BIG_WIN: "play_finished_big_win",
CALL_BIGWIN_EFFECT: "call_bigwin_effect",
PLAY_BONUS_EAT: "play_bonus_Eat",
PLAY_BONUS_FALL: "play_bonus_Fall",
PLAY_BONUS_LUODI: "play_bonus_LuoDi",
PLAY_BONUS_PA: "play_bonus_Pa",
PLAY_BONUS_ZHE: "play_bonus_Zhe",
PLAY_BONUS_AMBIENT: "play_bonus_ambient",
PLAY_BONUS_FINISH: "play_bonus_finish",
PLAY_BONUS_GAMEOVER: "play_bonus_gameover",
PLAY_BONUS_GAME_BG: "play_bonus_game_bg",
PLAY_WINCOIN_FINISH: "play_wincoin_finish",
SLOT_MAX_RATE: "slot_max_rate",
PLAY_ROBIN_DISPPERA_FINISH: "play_robin_disppera_finish",
PLAY_ROBIN_LINE: "play_robin_line",
PLAY_SHOW_ROBIN: "play_show_robin",
PLAY_ROBIN_FREE_WIN: "play_robin_free_win",
FINISH_ROBIN_SUB_FREE: "finish_robin_sub_free",
START_ROBIN_FREE_GAME: "start_robin_free_game",
START_ROBIN_CLEAR_UP: "start_robin_clear_up",
PLAY_FREEGAME_BG: "play_freegame_bg",
PLAY_SHOOT_SOUND: "play_shoot_sound",
SHOW_ROBIN_WILD: "show_robin_wild",
PLAY_ROBIN_WILD_SOUND: "play_robin_wild_sound",
PLAY_ROBIN_CLEAR_ELE: "play_robin_clear_ele",
PLAY_SHOW_ARROW_SOUND: "play_show_arrow_sound",
ROBIN_UPDATE_COIN: "robin_update_coin",
ROBIN_PLAY_WIN_LINE: "WITSH_PLAY_WIN_LINE",
ROBIN_FREEGAME_COME: "ROBIN_FREEGAME_COME",
ROBIN_FREE_GAME_WINEFF: "ROBIN_FREE_GAME_WINEFF",
ROBIN_SHOW_FREEBLANCE: "ROBIN_SHOW_FREEBLANCE",
PLAY_ROBIN_ROUND_FINNAL_COIN: "PLAY_ROBIN_ROUND_FINNAL_COIN",
PLAY_BIBEI_RESULT: "play_bibei_result",
PLAY_DOLPHIN_JUMP: "play_dolphin_jump",
PLAY_TK_BOUNSGAME_MOVE: "play_tk_bounsgame_move",
PLAY_TK_GUANYU_SHOW: "play_tk_guanyu_show",
PLAY_GB_SHELL_BG_MUSIC: "play_gb_shell_bg_music",
STOP_GB_SHELL_BG_MUSIC: "stop_gb_shell_bg_music",
PLAY_OPEN_SHELL: "play_open_shell",
PLAY_SELECT_SHELL_OVER: "play_select_shell_over",
SET_OPEARATE_ENABLE: "set_opearate_enable",
SLOT_LINE_MULT_SOUND: "slot_line_mult_sound",
PLAY_ALL_LINE: "play_all_line",
PLAY_SHOW_JINLIAN_SOUND: "play_show_jinlian_sound",
PLAY_SHOW_JINLIAN_SHOUT_SOUND: "play_show_jinlian_shout_sound",
PLAY_SPECIL_BOUNS_SOUND: "play_specil_bouns_sound",
PLAY_SPECIL_BOUNS_END_SOUND: "play_specil_bouns_end_sound",
STOP_SPECIL_BOUNS_END_SOUND: "stop_specil_bouns_end_sound",
SLOT_ALLIN: "slot_allin",
PLAY_SHOW_BOXER_SOUND: "play_show_boxer_sound",
SHOW_SHOOT_ACTION: "show_shoot_action",
FINISH_SHOOT_ACTION: "finish_shoot_action",
PLAY_SHOW_GUANYU_WILD1_SOUND: "play_show_guanyu_wild1_sound",
PLAY_SHOW_GUANYU_WILD2_SOUND: "play_show_guanyu_wild2_sound",
PLAY_BONUS_PLAY_BGM: "bonus_play_bgm",
PLAY_BONUS_STOP_BGM: "bonus_stop_bgm",
PLAY_BONUS_DOOR_OPEN_SOUND: "bonus_door_open",
PLAY_BONUS_DOOR_CLOSE_SOUND: "bonus_door_close",
PLAY_BONUS_BOOM_BURST_SOUND: "bonus_boom_burst",
PLAY_BONUS_BOOM_THROW_SOUND: "bonus_boom_throw",
PLAY_BONUS_SHOOT_SOUND: "bonus_shoot",
PLAY_BONUS_SHOOT_FAIL_SOUND: "bonus_shoot_fail_ting",
PLAY_BONUS_SHOOT_SUCC_SOUND: "bonus_shoot_succ_clash",
PLAY_BONUS_RESULT_SHOW_SOUND: "bonus_result_show",
PLAY_FREE_GAME_GET_MUL_SOUND: "free_game_get_mul",
PLAY_FREE_GAME_FIREWORK_SOUND: "free_game_firework",
PLAY_MAGICIAN_BGM: "magician_play_bgm",
PLAY_MAGICIAN_HATGAME_FIRE_BOBM: "magician_hatgame_fire_bomb",
PLAY_MAGICIAN_HATGAME_COME: "magician_hatgame_come",
PLAY_MAGICIAN_HATGAME_SELECT: "magician_hatgame_select",
PLAY_MAGICIAN_BUFFOON_BOX_JUMP: "PLAY_MAGICIAN_BUFFOON_BOX_JUMP",
PLAY_MAGICIAN_BUFFOON_BOX_UP1: "PLAY_MAGICIAN_BUFFOON_BOX_UP1",
PLAY_MAGICIAN_BUFFOON_BOX_UP2: "PLAY_MAGICIAN_BUFFOON_BOX_UP2",
PLAY_MAGICIAN_BUFFOON_BOX_UP3: "PLAY_MAGICIAN_BUFFOON_BOX_UP3",
PLAY_MAGICIAN_BUFFOON_BOX_UP4: "PLAY_MAGICIAN_BUFFOON_BOX_UP4",
PLAY_COW_SHOUT_SOUND: "play_cow_shout_sound",
PLAY_SHEEP_SHOUT_SOUND: "play_sheep_shout_sound",
PLAY_WOLF_BLUSTER_SOUND: "play_wolf_bluster_sound",
PLAY_ANIMAL_RUN_SOUND: "play_animal_run_sound",
PLAY_SUSLIKS_SOUND: "play_susliks_sound",
PLAY_SUSLIKS_OUT_SOUND: "play_susliks_out_sound",
PLAY_WOLF_COME_SOUND: "play_wolf_come_sound",
PLAY_WOLF_BACK_SOUND: "play_wolf_back_sound",
PLAY_FREE_GAME_EGG_BREAK_SOUND: "free_game_egg_break_firework",
PLAY_EGG_BIRD_FLY_SOUND: "play_egg_bird_fly_sound",
PLAY_EGG_GAMEOVER_SOUND: "play_egg_gameover_sound",
PLAY_EGG_HITS_SOUND: "play_egg_hits_sound",
PLAY_STONE_VOLCANIC_FIRE_SOUND: "play_stone_volcanic_fire_sound",
PLAY_STONE_HITS_SOUND: "play_stone_hits_sound",
PLAY_STONE_GET_GOLD_SOUND: "play_stone_get_gold_sound",
PLAY_STONE_FAIL_SOUND: "play_stone_fail_sound",
SLOT_FREEGAME_SHOW_RATE_FINISHED: "SLOT_FREEGAME_SHOW_RATE_FINISHED",
PLAY_FREE_GAME_FAIRY_GARDEN_RAND_SOUND: "freegame_fairy_garden_rand",
PLAY_FLOWER_OPEN_SOUND: "subgame_flower_open",
PLAY_FLOWER_JUMUP_SOUND: "subgame_flower_jumup",
PLAY_FLOWER_CLOSE_SOUND: "subgame_flower_close",
PLAY_FLOWER_END_SOUND: "subgame_flower_end",
PLAY_WHEEL_COME_SOUND: "subgame_wheel_come",
PLAY_WHEEL_START_SOUND: "subgame_wheel_start",
PLAY_WHEEL_WIN_SOUND: "subgame_wheel_win",
PLAY_BONUS1_GET_COIN_JUMSU_SOUND: "play_bonus1_get_coin_jumsu",
PLAY_BONUS1_SEASHELL_OPEN_SOUND: "play_bonus1_seashell_open",
PLAY_BONUS_BOX_OPEN_SOUND: "play_bonus_box_open",
PLAY_BONUS_BOX_STOP_SOUND: "play_bonus_box_stop",
PLAY_BONUS_GOLD_GATES_OPEN_SOUND: "play_bonus_gold_gates_open",
PLAY_DOUPENG_SOUND: "play_doupeng_sound",
PLAY_KING_ENTER_SOUND: "play_king_enter_sound",
PLAY_ITEMS_DOWN_SOUND: "play_items_down_sound",
PLAY_ITEMS_ELIMINATE_SOUND: "play_items_eliminate_sound",
PLAY_SPECIAL_REWARD_APPLAUD_SOUND: "play_special_reward_applaud_sound",
PLAY_EGG_GAME_HAMMER_SOUND: "play_egg_game_hammer_sound",
PLAY_EGG_GAME_EGG_BROKEN_SOUND: "play_egg_game_egg_broken_sound",
SLOT_AUTO_MODULE_IMMEDIATELY_STARG_GAME: "SLOT_AUTO_MODULE_IMMEDIATELY_STARG_GAME",
SLOT_CHERRY_LOVE_FREEGAME_CONTINUE: "SLOT_CHERRY_LOVE_FREEGAME_CONTINUE",
SLOT_LAST_FREEGAME_SHOW_BIBEI_BTN: "SLOT_LAST_FREEGAME_SHOW_BIBEI_BTN",
SLOT_YE_EXCLAMATION_SHOW_SOUND: "SLOT_YE_EXCLAMATION_SHOW_SOUND",
SLOT_YE_SEA_MOVE1_SOUND: "SLOT_YE_SEA_MOVE1_SOUND",
SLOT_YE_SCOPE_SOUND: "SLOT_YE_SCOPE_SOUND",
SLOT_SCOPE_FIND_YE01_BIRD_SOUND: "SLOT_SCOPE_FIND_YE01_BIRD_SOUND",
SLOT_SCOPE_FIND_YE02_SHIP_SOUND: "SLOT_SCOPE_FIND_YE02_SHIP_SOUND",
SLOT_SCOPE_FIND_YE03_ISLAND_SOUND: "SLOT_SCOPE_FIND_YE03_ISLAND_SOUND",
SLOT_CANNON_MOVE_FINISHED_STARG_SUBGAME: "SLOT_CANNON_MOVE_FINISHED_STARG_SUBGAME",
SLOT_CANNON_START_MOVE_SOUND: "SLOT_CANNON_START_MOVE_SOUND",
SLOT_SUBGAME_START_BOOM_SOUND: "SLOT_SUBGAME_START_BOOM_SOUND",
SLOT_SUBGAME_SELECT_CANNON_FIRE: "SLOT_SUBGAME_SELECT_CANNON_FIRE",
SLOT_SUBGAME_NO_BOOM_WATER: "SLOT_SUBGAME_NO_BOOM_WATER",
SLOT_SUBGAME_BOOM_SHIP: "SLOT_SUBGAME_BOOM_SHIP",
SLOT_SUBGAME_UPDATE_WINSCORE_LIST: "SLOT_SUBGAME_UPDATE_WINSCORE_LIST",
SLOT_SUBGAME_MAP_WINSCORE_SOUND: "SLOT_SUBGAME_MAP_WINSCORE_SOUND",
SLOT_SUBGAME_MAP_DIE_SOUND: "SLOT_SUBGAME_MAP_DIE_SOUND",
SLOT_SUBGAME_MAP_WARP_SOUND: "SLOT_SUBGAME_MAP_WARP_SOUND",
SLOT_SUBGAME_MAP_SHIPMOVE_SOUND: "SLOT_SUBGAME_MAP_SHIPMOVE_SOUND",
SLOT_ENTER_SELECT_FREEGAME: "slot_enter_select_freegame",
SLOT_EXIT_SELECT_FREEGAME: "slot_exit_select_freegame",
PLAY_POKER_BLINK_SOUND: "play_poker_blink_sound",
PLAY_CLICK_POKER_SOUND: "play_click_poker_sound",
PLAY_CLICK_EASTER_EGG_SOUND: "play_click_easter_egg_sound",
SLOT_RALLY_CHOOSE_BGSOUND: "slot_rally_choose_bgsound",
SLOT_CHOOSE_TIMES: "SLOT_CHOOSE_TIMES",
SLOT_TRAFFICLIGHT_RANK: "slot_trafficlight_rank",
SLOT_TRAFFICLIGHT_READY: "slot_trafficlight_ready",
SLOT_TRAFFICLIGHT_RUN: "slot_trafficlight_run",
SLOT_TRAFFICLIGHT_LIGHT: "slot_trafficlight_light",
SLOT_UPDATE_BOUNS_COIN: "slot_update_bouns_coin",
SLOT_UPDATE_BONUS_COIN_BY_SPIN: "slot_update_bonus_coin_by_spin",
SLOT_OPEN_BOX_SOUND: "slot_open_box_sound",
SLOT_BOUNS_SOUND: "slot_bouns_sound",
SLOT_CHANG_CARD_ACTION: "slot_chang_card_action",
SLOT_SHOW_CHANG_CARD: "slot_show_chang_card",
SLOT_PLAY_CHANG_CARD_LINE: "slot_play_chang_card_line",
SLOT_PLAY_START_CHANGE: "slot_play_start_change",
SLOT_PLAY_END_CHANGE: "slot_play_end_change",
SLOT_PLAY_RANDOMBOUNS_FINISH: "slot_play_randombouns_finish",
SLOT_CHANG_WILD_START: "slot_chang_wild_start",
SLOT_CHANG_WILD_FINISH: "slot_chang_wild_finish",
SLOT_MAGIC_SOUND: "slot_magic_sound",
SLOT_CHOOSE_CARD_SOUND: "slot_choose_card_sound",
SLOT_CHANG_CARD_LINE_SOUND: "slot_chang_card_line_sound",
SLOT_CHANG_WILD_SOUND: "slot_chang_wild_sound",
SLOT_THOROW_MONEY_SOUND: "slot_thorow_money",
SLOT_FLIPCARD_SOUND: "slot_flipcard_sound",
SLOT_CHOOSE_SOUND: "slot_choose_sound",
SLOT_BOUNS_GAME_FINISH: "slot_bouns_game_finish",
SLOT_SPIN_ONELINE_SOUND: "slot_move_oneline_sound",
SLOT_CHOOSE_WITCH_BG_MUSIC: "slot_choose_witch_bg_music",
SLOT_CHOOSE_POTION_BG_MUSIC: "slot_choose_potion_bg_music",
SLOT_POUR_POTION_SOUND: "slot_pour_potion_sound",
SLOT_WITCH_FLY_SOUND: "slot_witch_fly_sound",
SLOT_DELAY_PLAY_WIN_EFFECT: "slot_delay_play_win_effect",
SLOT_DELAY_PLAY_BIGWIN_EFFECT: "SLOT_DELAY_PLAY_BIGWIN_EFFECT",
SLOT_SPIN: "slot_spin",
SLOT_REQUEST_SPIN: "slot_request_spin",
SLOT_SHOW_STOP: "slot_show_stop",
SLOT_SET_ADJUST_ENABLE: "slot_set_adjust_enable",
SLOT_CLICK_ALL_LINE: "slot_click_all_line",
SLOT_SPIN_ONELINE: "slot_spin_oneline",
SLOT_DISABLE_STOP_BTN: "slot_disable_stop_btn",
SLOT_SHOW_FREE_BALANCE_SOUND: "slot_show_free_balance_sound",
SLOT_CLEAR_LINE: "slot_clear_line",
SLOT_PANTHER_CHANGE_SPINE_BTN: "SLOT_PANTHER_CHANGE_SPINE_BTN",
SLOT_PANTHER_RESET_SPINE_BTN: "SLOT_PANTHER_RESET_SPINE_BTN",
SLOT_STOP_PLAY_LINE: "SLOT_STOP_PLAY_LINE",
SLOT_UPDATE_BALANCE: "slot_update_balance",
SLOT_SINGLE_SPIN_STOP: "slot_single_spin_stop",
SLOT_END_ALLSCREEN_BONUS: "slot_end_allscreen_bonus",
SLOT_START_ALLSCREEN_BONUS: "slot_start_allscreen_bonus",
SLOT_SHOW_ALLSCREEN_BONUS_ACTION: "slot_show_allscreen_bonus_action",
SLOT_OPEN_SCROLL: "slot_open_scroll",
SLOT_START_FIGHT: "slot_start_fight",
SLOT_FIGHT: "slot_fight",
SLOT_THREE_BONUS: "slot_three_bonus",
SLOT_HIDE_MENU: "slot_hide_menu",
SLOT_FALL_SOUND: "slot_fall_sound",
SLOT_CLOSE_FREE_BALANCE: "slot_close_free_balance",
SLOT_CLOSE_FREE_BOUNS_FRAME: "SLOT_CLOSE_FREE_BOUNS_FRAME",
SLOT_PLAY_BIBEI_BG: "slot_play_bibei_bg",
SLOT_UPDATE_BIBEI_COIN: "slot_update_bibei_coin",
SLOT_SAINT_CHANGE_BOX: "slot_saint_change_box",
GDF_SHOW_ITEM: "gdf_show_item",
SLOT_PLAYITEM_FINISH: "slot_playitem_finish",
SLOT_FREE_GAME: "slot_free_game",
SLOT_PLAY_SCATTER_ACTION_FINISH: "slot_play_scatter_action_finish",
PLAY_SCATTER_SOUND: "play_scatter_sound",
PLAY_TK_BONUS_FINISH: "play_tk_bonus_finish",
PLAY_TK_BONUS_SOUND: "play_tk_bonus_sound",
SLOT_BONUS_BTN_SHOW: "SLOT_BONUS_BTN_SHOW",
SLOT_BALLDATA_SHOW: "slot_balldata_show",
SLOT_SHOW_BONUSGAME_RESULT: "slot_show_bonusgame_result",
WK_ADJUST_LINE_BTN: "WK_ADJUST_LINE_BTN",
WK_SHOW_FREE_GAME_CHOOSE: "WK_SHOW_FREE_GAME_CHOOSE",
WK_SHOW_BTN_BACKGAME: "WK_SHOW_BTN_BACKGAME",
SWK_SCATTER_FREE_FINISH: "SWK_SCATTER_FREE_FINISH",
SLOT_SHOW_OPEARATE: "slot_show_opearate",
SLOT_START_SOUND: "slot_start_sound",
SLOT_UPDATE_FREEBALACE: "slot_update_freebalace",
SLOT_TOUCH_MOVE: "slot_touch_move",
SLOT_CAN_SPIN: "slot_can_spin",
TORNADO_OPEARATE_ENABLE: "TORNADO_OPEARATE_ENABLE",
SLOT_RESET: "slot_reset",
MOCY_SHOW_ITEMMASK: "MOCY_SHOW_ITEMMASK",
MOCY_SELECT_CAR: "MO_CY_SELECT_CAR",
MOCY_EXIST_SUBGAME: "MOCY_EXIST_SUBGAME",
MOCY_BEGIN_SUBGAME_MOVE: "MOCY_BEGIN_SUBGAME_MOVE",
MOCY_SHOW_SUBGAME: "MOCY_SHOW_SUBGAME",
MOCY_SUBGAME_AUDIOEFF: "MOCY_SUBGAME_AUDIOEFF",
GREAT_CHINA_EFF: "GREAT_CHINA_EFF",
SLOT_FREEBALACE_ROLL_END: "slot_freebalace_roll_end",
SLOT_SET_FAST_MODE: "slot_set_fast_mode",
SLOT_PLAY_DIAMONDBOUNS: "slot_play_diamondBouns",
SLOT_PLAY_STARTFREE_BGMUSIC: "slot_play_startFree_bgmusic",
SLOT_STOP_STARTFREE_BGMUSIC: "slot_stop_startFree_bgmusic",
SLOT_PLAY_PANDADOWN_SOUND: "slot_paly_pandaDown_sound",
SLOT_SUNGODDESS_ENTER_EXPANDGAME: "slot_sungoddess_enter_expandgame",
SLOT_SUNGODDESS_ENTER_PICKBONUSGAME: "slot_sungoddess_enter_pickbonusgame",
SLOT_SUNGODDESS_CHOOSE_KNIFE: "slot_sungoddess_choose_knife",
SLOT_SUNGODDESS_ENTER_SUNGODDESS: "slot_sungoddess_enter_sungoddess",
SLOT_SUNGODDESS_UPDATE_WINCOIN: "slot_sungoddess_update_wincoin",
SLOT_SUNGODDESS_CHOOSE_SHIELD: "slot_sungoddesss_choose_shield",
SLOT_SUNGODDESS_ENTER_SHIELDGAME: "slot_sungoddess_enter_shieldgame",
SLOT_ENERGYGAME_OperationOVER: "slot_energygame_operationover",
SLOT_TIGER_BONUSTIPS: "slot_tiger_bonustips",
SLOT_TIGER_SHOWGOLDCOIN: "slot_tiger_showgoldcoin",
SLOT_TIGER_STARTBONUS: "slot_tiger_startbonus",
SLOT_CLOSE_SPIN: "slot_close_spin",
GAME423_SHOW_WHEEL_RESULT: "GAME423_SHOW_WHEEL_RESULT"
};
cc._RF.pop();
}, {} ],
SlotMachine_MsgId: [ function(e, t) {
"use strict";
cc._RF.push(t, "b0297oYZgJJkKlG8+obUT43", "SlotMachine_MsgId");
var i = e("MsgIdDef");
i.SLOT_START = 44;
i.SLOT_RANK = 242;
i.SLOT_RATE = 45;
i.SLOT_CHOOSE_TIMES = 50;
i.SLOT_ADJUST_LINE = 108;
i.SLOT_ENTER_GREAT_BULE_FREEGAME = 1031;
i.SLOT_TK_FREE_GAME = 1091;
i.SLOT_CHOOSE_LOTUS_FLOWER = 1111;
i.SLOT_ENTER_SUBGAME = 46;
i.SLOT_EXIT_SUBGAME = 47;
i.SLOT_SUBGAME_DATA = 51;
i.SLOT_SUBGAME_ACTION = 1112;
i.SLOT_MAX_BET = 1201;
i.ALLIN = 1113;
i.SLOT_SELECT_DRAGONS = 1114;
i.SLOT_ENTER_SELECT_DRAGONS = 11130;
cc._RF.pop();
}, {
MsgIdDef: "MsgIdDef"
} ],
SlotsItem: [ function(e, t) {
"use strict";
cc._RF.push(t, "227c4gdRrxCK56nUguqsKuj", "SlotsItem");
var i = e("GameIdMgr"), n = e("GameItemCfg");
cc.Class({
extends: cc.Component,
properties: {
viewPrefab: cc.Prefab,
_itemData: null,
_jpList: [],
_listLength: 0,
_showTips: !1
},
onLoad: function() {
this.node.addComponent("EventListenerCmp").registerEvent("USER_INFO_CHANGE", this.updateInfo, this);
Global.btnClickEvent(this.node, this.OnClickItem, this);
cc.director.on("BundleUpdateFinish", this.onBundleUpdateFinish, this);
},
start: function() {},
OnClickItem: function() {
if (this._itemData && 1 == this._itemData.status) {
var e = this._itemData.id;
if (!(e >= i.SLOT_COMESOON)) if (Global.isNative()) {
var t = "";
this.gameid = e;
var n = cc.vv.GameItemCfg[e];
if (n) {
t = n.name;
this.bundleName = t;
console.log("当前bundleName是什么:", t);
}
if (window[t]) {
StatisticsMgr.reqReport(StatisticsMgr.REQ_SUBGAME_CLICK, null, this.gameid);
this._enterFunc(e);
return;
}
if (this.loading) return;
StatisticsMgr.reqReport(StatisticsMgr.REQ_SUBGAME_CLICK, null, this.gameid);
this.loading = !0;
var a = window[t];
if (a) {
a.releaseAll();
cc.assetManager.removeBundle(a);
}
window[t] = null;
console.log("slot BundleUpdateModule .............. ", this.gameid);
this.node.getComponent("BundleUpdateModule").checkForceAppUpdate(this.gameid);
} else {
StatisticsMgr.reqReport(StatisticsMgr.REQ_SUBGAME_CLICK, null, this.gameid);
this._enterFunc(e);
}
}
},
_loadBetSelect: function() {
var e = this._itemData.id;
StatisticsMgr.reqReportNow(ReportConfig.ENTER_GAME, e, e);
cc.vv.GameManager.EnterGame(e, null);
},
_loadGameFunc: function() {
var e = this._itemData.id, t = cc.vv.UserManager.isNoNeedDownGame(e);
cc.sys.isNative && Global.openUpdate && !t && cc.vv.SubGameUpdateNode.emit("check_subgame", e);
},
_enterFunc: function() {
this._loadBetSelect();
},
SetData: function(e, t, i, n, a, o) {
void 0 === a && (a = !0);
void 0 === o && (o = !1);
this._itemData = e;
this._itemIdx = t;
this._listLength = i;
this._bFavGame = n;
this._bJackpot = a;
this._bLong = o;
this.ShowItem();
},
setUnlockList: function(e) {
this._parentDelete = e;
},
setLockVip: function(e) {
this.openvip = e;
},
UpdateNodeAlign: function(e) {
var t = cc.Node.isNode(e) && e.getComponent(cc.Widget);
t && t.alignMode === cc.Widget.AlignMode.ON_WINDOW_RESIZE && (t.enabled = !0);
for (var i = e._children, n = 0; n < i.length; n++) {
var a = i[n];
this.UpdateNodeAlign(a);
}
},
onEventRefushGame: function(e) {
var t = e.detail;
this._itemData && t == this._itemData.id && this.ShowItem();
},
ShowItem: function() {
var e = this, t = this._itemData.id;
if (t >= i.SLOT_COMESOON) this.ShowComeSoon(); else {
var a = this._bLong, o = cc.find("comingSoon", this.node);
o && (o.active = !1);
cc.find("mid_content/comingSoonIcon", this.node).active = !1;
var c = cc.find("mid_content/node_downing", this.node);
if (c) if (2 == this._itemData.status) c.active = !1; else {
c.active = !0;
c.getComponent("node_downing").initGameId(t);
}
var s = n[this._itemData.id], r = cc.find("mid_content/slot_icon", this.node).getComponent("SlotIcon");
s && a ? this._bFavGame || !this._bJackpot ? r.setGameId(t, "animation3") : r.setGameId(t, null) : r.setGameId(t, null, function() {
e.showVipLock();
});
if (s && this._bJackpot) {
if (a) {
this.node.width = this._bFavGame ? 450 : 900;
c && (c.y = -146);
var l = cc.find("mid_content/jp_grand", this.node);
l && (l.active = !1);
cc.find("mid_content/new_or_hot", this.node).active = !1;
} else {
this.node.width = 450;
c && (c.y = -96);
this._jpList = [];
this.ShowGrandJackpot();
this.ShowGameStatus();
}
this.UpdateNodeAlign(this.node);
}
var d = cc.find("mid_content/node_lepord", this.node);
d && d.getComponent("GameFlagShow").setData(t);
}
},
showVipLock: function() {},
updateInfo: function() {
this.showVipLock();
},
ShowComeSoon: function() {
cc.find("mid_content/node_downing", this.node).active = !1;
cc.find("mid_content/slot_icon/icon", this.node).active = !1;
cc.find("mid_content/comingSoonIcon", this.node).active = !0;
cc.find("mid_content/slot_icon/spine", this.node).active = !1;
var e = cc.find("mid_content/jp_grand", this.node);
e && (e.active = !1);
cc.find("mid_content/new_or_hot", this.node).active = !1;
var t = cc.find("comingSoon", this.node);
t && (t.active = !0);
},
ShowGrandJackpot: function() {
var e = cc.find("mid_content/jp_grand", this.node);
if (e) {
var t = this._itemData.id, i = e.getComponent("LMSlotMachine_PrizePool");
i && i.init(t, cc.vv.AppData.getMaxBet());
var n = cc.find("text", e).getComponent("ImgSwitchCmp");
n && n.setIndex(t % 3);
}
},
onEventClickGame: function(e) {
var t = e.detail;
t && this._itemData && t == this._itemData.id && this.OnClickItem();
},
ShowGameStatus: function() {
var e = this._itemData.tag, t = cc.find("mid_content/new_or_hot", this.node);
if (t) {
t.active = !0;
t.getChildByName("hot").active = 1 == e || 3 == e;
t.getChildByName("new").active = 2 == e || 3 == e;
}
var i = this._itemData.status, n = cc.find("mid_content/comingSoonIcon", this.node);
n.active = 2 == i;
var a = cc.find("mid_content/jp_grand", this.node);
a && (a.active = !n.active);
},
ShowSplitLine: function() {},
update: function() {
var e = cc.find("bottom_tip", this.node);
if (e && e.active) {
var t = e.convertToWorldSpaceAR(cc.v2(0, 0));
if (t.y > 300) {
if (!this._showTips) {
var i = cc.find("tips", e);
i.stopAllActions();
cc.tween(i).to(.2, {
opacity: 255
}).start();
this._showTips = !0;
}
} else if (t.y < 250 && this._showTips) {
var n = cc.find("tips", e);
n.stopAllActions();
cc.tween(n).to(.2, {
opacity: 0
}).start();
this._showTips = !1;
}
}
},
onDestroy: function() {
cc.director.off("BundleUpdateFinish", this.onBundleUpdateFinish, this);
},
onBundleUpdateFinish: function(e) {
var t = e[0], i = e[1];
if (this.bundleName == t) {
console.log("slot onBundleUpdateFinish----- ", e);
i && this.loadBundle(t);
}
},
loadBundle: function(e) {
var t = this, i = this;
if (window[e]) {
window[e].releaseAll();
cc.assetManager.removeBundle(window[e]);
window[e] = null;
}
cc.assetManager.loadBundle(e, null, function(n, a) {
if (n) AppLog.err("SlotsItem-loadBundle", n); else {
window[e] = a;
a.loadScene(e, function() {
t.loading = !1;
console.log("当前点击游戏的ID", i.gameId);
t._enterFunc(i.gameid);
});
}
});
}
});
cc._RF.pop();
}, {
GameIdMgr: "GameIdMgr",
GameItemCfg: "GameItemCfg"
} ],
StatisticsMgr: [ function(e, t) {
"use strict";
cc._RF.push(t, "df683v9ijlE8IFciYaq5hi1", "StatisticsMgr");
var i, n, a = ((i = {
"top/node_head": {
act: "open_head",
des: "点开大厅头像"
},
"PersonalInfo/spr_ui_bg/btnClose": {
act: "close_head",
des: "关闭用户详情"
},
"PersonalInfo/spr_ui_bg/node_info/btn_layout/btn_fb": {
act: "head_facebook",
des: "用户详情-connect"
},
"PersonalInfo/spr_ui_bg/node_info/btn_connectus": {
act: "head_contactus",
des: "用户详情-connectus"
},
"PersonalInfo/ChangeHead/bg/btn_confirm": {
act: "sure_headpic",
des: "用户详情-确认替换头像"
},
"PersonalInfo/spr_ui_bg/node_info/btn_change": {
act: "edit_headpic",
des: "用户详情-进入换头像"
},
"top/exp_bg": {
act: "click_level",
des: "大厅-点击等级条"
},
"menu_top/btn_initgift": {
act: "click_initgift",
des: "大厅-点击initgift"
},
"menu_top/btn_pig": {
act: "click_hallpig",
des: "大厅-点击initgift"
},
firstCharge: {
act: "open_purchase",
des: "大厅-点击firstcharge"
},
"menu_top/btn_email": {
act: "open_mail",
des: "点开大厅邮件"
},
"hall_email/spr_bg/btn_close": {
act: "close_mail",
des: "关闭邮件界面"
},
"hall_email/spr_bg/btn_collect": {
act: "mail_collectall",
des: "邮件-collectall"
},
"hall_email/spr_bg/spr_center/Scrollview/view/content/mail_item/btn": {
act: "mail_collect",
des: "邮件-点击单个邮件"
},
"menu_top/btn_rank": {
act: "open_rank",
des: "点开大厅-rank"
},
"ranking_list/comm_pop_ui_bg": {
act: "close_rank",
des: "关闭大厅-rank"
},
"menu_top/btn_vip": {
act: "open_vip",
des: "大厅打开VIP"
},
"vip/btn_close": {
act: "close_vip",
des: "大厅关闭VIP"
},
"vip/node_content/node_title/node_exp/btn_tip": {
act: "vip_help",
des: "VIP-帮助问号"
},
"menu_top/btn_fb": {
act: "open_event",
des: "大厅点开EventBonus"
},
"FbFeedback/pop_win_bg/btn_close": {
act: "close_event",
des: "大厅关闭EventBonus"
},
"FbFeedback/pop_win_bg/btn_contactus": {
act: "event_contact",
des: "EventBonus-ConnectUS"
},
"menu_top/btn_menu": {
act: "open_menu",
des: "打开大厅设置界面"
},
menu: {
act: "close_menu",
des: "关闭大厅设置界面"
},
"menu/menu_bg/btn_rate": {
act: "menu_rateus",
des: "大厅菜单-rateus"
},
"menu/menu_bg/btn_setting": {
act: "open_set",
des: "大厅菜单-setting"
},
"LMSlots_Setting/bg/Node_FB_ContactUs/btn_conntactUs": {
act: "set_contact",
des: "设置详情-connect"
},
"LMSlots_Setting/bg/Node_FansPage/btn_FansPage": {
act: "set_fan",
des: "设置详情-fan"
},
"LMSlots_Setting/bg/btn_PrivacyPolicy": {
act: "set_policy",
des: "设置详情-priacypolicy"
},
"LMSlots_Setting/bg/btn_logout": {
act: "logout",
des: "设置详情-logout"
},
"LMSlots_Setting/bg/btn_layout/btn_fbbind": {
act: "fb_bind",
des: "fb_bind"
},
"bottom/btn_buy": {
act: "menu_buy",
des: "Tab-buy"
},
"bottom/btn_poker": {
act: "menu_poker",
des: "menu_poker"
},
"bottom/btn_bonus": {
act: "menu_bonus",
des: "menu_bonus"
},
"bottom/btn_friend": {
act: "menu_friend",
des: "menu_friend"
},
"bottom/btn_slots": {
act: "menu_slots",
des: "menu_slots"
},
"AD_top/pageview/view/content/ad_1": {
act: "ad_monthcard",
des: "广告语-月卡"
},
"AD_top/pageview/view/content/ad_2": {
act: "ad_quest",
des: "广告语-quest"
},
"AD_top/pageview/view/content/ad_3": {
act: "ad_lucksmach",
des: "广告语-砸蛋"
},
"safe_node/LMSlots_Top/btn_pigbank": {
act: "open_pig",
des: "游戏内-打开金猪"
},
"MoneyBankUI/comm_pop_ui_bg": {
act: "close_pig",
des: "游戏内-关闭金猪"
},
"MoneyBankUI/bg/btn_open": {
act: "buy_pig",
des: "游戏内-购买金猪"
},
"MoneyBankUI/bg/node_content/maxi_coin/spr_spin": {
act: "click_pig_gospin",
des: "游戏内-金猪GOSpine"
},
"pages/view/content/page_shop/list_shop/view/content/gift_bank/content/bg/btn_open": {
act: "buy_pig_inhall",
des: "大厅-购买金猪"
},
"shop_pop_ui/page_shop/list_shop/view/content/gift_bank/content/bg/btn_open": {
act: "buy_pig_inpop",
des: "商店弹窗-购买金猪"
},
"pages/view/content/page_bonus/list_bonus/view/content/daily_bonus": {
act: "open_signin",
des: "bonus-打开签到"
},
"Signin/spr_ui_bg/siginList/signin_1/normal/btnRecive": {
act: "signin_1",
des: "签到1天"
},
"Signin/spr_ui_bg/siginList/signin_2/normal/btnRecive": {
act: "signin_2",
des: "签到2天"
},
"Signin/spr_ui_bg/siginList/signin_3/normal/btnRecive": {
act: "signin_3",
des: "签到3天"
},
"Signin/spr_ui_bg/siginList/signin_4/normal/btnRecive": {
act: "signin_4",
des: "签到4天"
},
"Signin/spr_ui_bg/siginList/signin_5/normal/btnRecive": {
act: "signin_5",
des: "签到5天"
},
"Signin/spr_ui_bg/siginList/signin_6/normal/btnRecive": {
act: "signin_6",
des: "签到6天"
},
"Signin/spr_ui_bg/siginList/signin_7/normal/btnRecive": {
act: "signin_7",
des: "签到7天"
},
"pages/view/content/page_bonus/list_bonus/view/content/online_bonus": {
act: "open_online",
des: "大厅打开在线奖励"
},
"online_rewards/node_center/btn_close": {
act: "close_online",
des: "大厅关闭在线奖励"
},
"pages/view/content/page_bonus/list_bonus/view/content/daily_task": {
act: "open_daliytask",
des: "大厅打开DaliyTask"
},
"MissionsMain/spr_ui_bg/btnClose": {
act: "close_online",
des: "大厅关闭DaliyTask"
},
"pages/view/content/page_bonus/list_bonus/view/content/mission_pass": {
act: "open_mission",
des: "大厅打开missionpass"
}
})["MissionsMain/spr_ui_bg/btnClose"] = {
act: "close_mission",
des: "大厅关闭missionpass"
}, i["MissionsMain/spr_ui_bg/RightDetail/MissionPass/btnMissionPass"] = {
act: "open_mission_pass",
des: "点击UNLOCK MISSION PASS"
}, i["MissionsMain/uiPopNode/UnlockMissionPass/btnClose"] = {
act: "close_mission_pass",
des: "关闭UNLOCK MISSION PASS"
}, i["pages/view/content/page_friends/btnNode/friendsListBtn"] = {
act: "friend_tab_friendlist",
des: "好友-tab好友列表"
}, i["pages/view/content/page_friends/btnNode/luckyCoinBtn"] = {
act: "friend_tab_luckycoin",
des: "好友-tabLuckycoin"
}, i["pages/view/content/page_friends/btnNode/friendGiftBtn"] = {
act: "friend_tab_friendgift",
des: "好友-friendgift"
}, i["pages/view/content/page_friends/friendsPage/friendsList/spr_title_bg/btnEdit"] = {
act: "friend_edit",
des: "好友-Edit按钮"
}, i["pages/view/content/page_friends/friendsPage/friendsList/spr_title_bg/btnAddFriends"] = {
act: "click_addfriend",
des: "好友-开addFriend"
}, i["CH_AddFriend/bg/btnClose"] = {
act: "close_addfriend",
des: "好友-关addFriend"
}, i["CH_AddFriend/bg/btnSure"] = {
act: "sure_addfriend",
des: "好友-搜addFriend"
}, i["CH_AlertSelect/bg/btnYES"] = {
act: "sure_editfriend",
des: "好友-搜addFriend"
}, i["CH_RemoveFriend/bg/btnClose"] = {
act: "close_editfriend",
des: "好友-关editFriend"
}, i["safe_node/LMSlots_Top/btn_menu"] = {
act: "open_set",
des: "游戏内点开Top的菜单"
}, i["safe_node/LMSlots_MenuNode/btn_close"] = {
act: "close_set",
des: "游戏内关闭Top的菜单"
}, i["safe_node/LMSlots_MenuNode/btn_help"] = {
act: "game_help",
des: "游戏内菜单-needhelp"
}, i["safe_node/help_node/btn_backgame"] = {
act: "game_help_back",
des: "游戏内帮助-goback"
}, i["safe_node/LMSlots_Bottom/totalBetBg/btn_add"] = {
act: "up_bet",
des: "押注-加"
}, i["safe_node/LMSlots_Bottom/totalBetBg/btn_minus"] = {
act: "down_bet",
des: "押注-减"
}, i["safe_node/LMSlots_Bottom/btn_max"] = {
act: "maxbet",
des: "押注-Max"
}, i["level_up/btn_claim"] = {
act: "",
des: "升级弹窗-claim"
}, i["new_game_notice/bg/btn_confirm"] = {
act: "newgame_turn",
des: "新游戏跳转"
}, i["safe_node/LMSlots_Top/btn_purchase"] = {
act: "open_store",
des: "游戏内-打开Shop弹窗"
}, i["shop_pop_ui/btn_close"] = {
act: "close_store",
des: "游戏内-关闭Shop弹窗"
}, i["safe_node/LMSlots_Bottom/node_task"] = {
act: "ingame_task",
des: "游戏内-task"
}, i["safe_node/LMSlots_Bottom/PopSelectAutoTimes/btn_1"] = {
act: "subgame_auto_10",
des: "自动10次"
}, i["safe_node/LMSlots_Bottom/PopSelectAutoTimes/btn_2"] = {
act: "subgame_auto_20",
des: "自动20次"
}, i["safe_node/LMSlots_Bottom/PopSelectAutoTimes/btn_3"] = {
act: "subgame_auto_50",
des: "自动50次"
}, i["safe_node/LMSlots_Bottom/PopSelectAutoTimes/btn_4"] = {
act: "subgame_auto_100",
des: "自动100次"
}, i["safe_node/LMSlots_Bottom/PopSelectAutoTimes/btn_5"] = {
act: "subgame_auto_500",
des: "自动500次"
}, i["safe_node/LMSlots_Bottom/btn_stop"] = {
act: "subgame_stop_spin",
des: "stop_spin"
}, i["safe_node/LMSlots_Top/btn_backLobby"] = {
act: "subgame_backlobby",
des: "子游戏内返回游戏大厅"
}, i["safe_node/LMSlots_Top/lay_active/node_online_reward/btn_reward"] = {
act: "subgame_onlinereward",
des: "子游戏内在线奖励"
}, i["safe_node/LMSlots_Top/playerLevel"] = {
act: "subgame_exp",
des: "子游戏内经验条"
}, i["safe_node/LMSlots_MenuNode/btn_setting"] = {
act: "subgame_setting",
des: "子游戏内setting"
}, i["hallWheel/hallWheel/wheel/btn_collect"] = {
act: "hall_wheel_enter",
des: "大厅轮盘入口按钮"
}, i["prize_wheel/node_buy/node_sure/bg/lbl_spin"] = {
act: "hall_wheel_makesure_buy",
des: "大厅轮盘确认购买"
}, i["prize_wheel/node_buy/node_sure/btn_close"] = {
act: "hall_wheel_makesure_close",
des: "大厅轮盘确认购买close"
}, i["pages/view/content/page_shop/list_shop/view/content/gift_bank/content/bg/btn_open"] = {
act: "shop_pigbank",
des: "shop-pigbank购买"
}, i), o = cc.Class({
extends: cc.Component,
statics: (n = {
_reqBatchs: [],
_reqOnceRecord: [],
httpReport: function(e) {
var t = {}, i = Global.getDeviceInfo();
t.os = i.osValue.toLowerCase();
t.net = i.netType;
t.phone = cc.js.formatStr("%s(%s)", i.phoneBrand, i.phoneSystemVision);
t.appid = Global.appId;
t.ddid = Global.getLocal("client_uuid", "");
t.uid = Global.getLocal("recent_uid", "");
t.waistcoat = Global.waistcoat || "0";
t.time = new Date().valueOf();
Global.isYDApp() && Global.isNative() && (t.ch = cc.vv.PlatformApiMgr.GetChannelStr());
cc.vv.PlatformApiMgr.isFirebaseSupported() && cc.vv.PlatformApiMgr.firebaseEvent(e, t);
},
errorReport: function() {},
httpAll: function() {},
reqReport: function(e, t, i, n) {
if (e) {
var a = {
c: MsgId.REQ_REPORT_STATISTICS
};
if (this._reqBatchs) {
var o = {};
o.act = e;
o.ext = t || "";
var c = cc.vv.gameData && cc.vv.gameData.getGameId();
c || (c = 0);
o.gameid = i || c;
o.id = n;
o.ts = Math.floor(cc.sys.now() / 1e3);
this._reqBatchs.push(o);
if (this._reqBatchs.length >= (Global.STATIC_BATCH_NUM || 10)) {
a.batchs = this._reqBatchs;
cc.vv.NetManager.send(a, !0);
this._reqBatchs = [];
}
} else {
a.act = e;
a.ext = t || "";
var s = cc.vv.gameData && cc.vv.gameData.getGameId();
s || (s = 0);
a.gameid = i || s;
a.id = n;
cc.vv.NetManager.send(a, !0);
}
}
},
reqReportNow: function(e, t, i, n) {
if (e) {
var a = {
c: MsgId.REQ_REPORT_STATISTICS
};
a.act = e;
a.ext = t || "";
var o = cc.vv.gameData && cc.vv.gameData.getGameId();
o || (o = 0);
a.gameid = i || o;
a.id = n;
cc.vv.PlatformApiMgr.isFirebaseSupported() && cc.vv.PlatformApiMgr.firebaseEvent(e, a);
cc.vv.NetManager.send(a, !0);
}
},
reqReportNowOnce: function(e, t, i, n) {
if (this._reqOnceRecord.indexOf(e) < 0) {
this.reqReportNow(e, t, i, n);
this._reqOnceRecord.push(e);
}
},
httpReportOnce: function(e, t, i) {
if (this._reqOnceRecord.indexOf(e) < 0) {
this.httpReport(e, t, i);
this._reqOnceRecord.push(e);
}
},
startReport: function() {
var e = this;
if (!this._RTHttpLog) {
var t = Global.getLocal("HLog", "");
this._RTHttpLog = t ? JSON.parse(t) : [];
}
this.httpAll();
this._dispatchEvent = cc.Node.prototype.dispatchEvent;
cc.Node.prototype.dispatchEvent = function(t) {
if (cc.vv.NewGuide && cc.vv.NewGuide.GetIsLoadingGuide()) cc.log("==引导加载中==="); else {
e._dispatchEvent.call(this, t);
if (t.type === cc.Node.EventType.TOUCH_END) {
var i = e.getNodeFullPath(this);
cc.log("点击：" + i);
var n = a[i];
n && e.reqReport(n.act);
}
}
};
},
getNodeFullPath: function(e) {
var t = [], i = e;
do {
t.unshift(i.name);
i = i.parent;
} while (i && "Canvas" !== i.name);
return t.join("/");
},
_createrHttpLog: function(e, t, i) {
var n = {};
n.appVer = Global.resVersion;
n.t = new Date().valueOf();
Global.isNative() && (n.x = md5(n.t.toString() + "hero888"));
n.act = e;
t && (n.act_exdata = t);
i && i.key && (n[i.key] = i.val);
return n;
},
doHTTPSendSucc: function(e, t) {
e && (1 == t.type ? this._deleHttpReport(t.time) : 2 == t.type && this._deleAllHttpReport(t.time));
},
_saveHttpReport: function(e) {
this._RTHttpLog.push(e);
Global.saveLocal("HLog", JSON.stringify(this._RTHttpLog));
},
_deleHttpReport: function(e) {
for (var t, i = 0; i < this._RTHttpLog.length; i++) if (this._RTHttpLog[i].t == Number(e)) {
t = i;
break;
}
if (t) {
this._RTHttpLog.splice(t, 1);
Global.saveLocal("HLog", JSON.stringify(this._RTHttpLog));
}
},
_deleAllHttpReport: function(e) {
for (var t = this._RTHttpLog.length - 1; t >= 0; t--) this._RTHttpLog[t].t <= Number(e) && this._RTHttpLog.splice(t, 1);
Global.saveLocal("HLog", JSON.stringify(this._RTHttpLog));
},
REQ_HALL_BGM_OPEN: "open_menu_music",
REQ_HALL_BGM_CLOSE: "close_menu_music",
REQ_HALL_EFFECT_OPEN: "open_menu_sound",
REQ_HALL_EFFECT_CLOSE: "close_menu_sound",
REQ_SETTING_BGM_OPEN: "open_menu_music",
REQ_SETTING_BGM_CLOSE: "close_menu_music",
REQ_SETTING_EFFECT_OPEN: "open_menu_sound",
REQ_SETTING_EFFECT_CLOSE: "close_menu_sound",
REQ_POP_SHOP_OPEN: "open_shop",
REQ_POP_SHOP_CLOSE: "close_shop",
REQ_SHOP_CLICKBOOTER: "click_boost",
REQ_SHOP_BOOST_INFO: "boost_info",
REQ_SHOP_BOOST_HELP: "boost_help",
REQ_HALL_LOADING_START: "Load_Start",
REQ_HALL_LOADING_END: "Load_End",
REQ_ENTER_HALL: "Entry_Main",
REQ_OPEN_NEW_GIFT: "InitCoin",
REQ_START_GAME_GUIDE: "Guide",
REQ_CLICK_SLOTGAME: "click_slot_item",
REQ_MAIL_GOFRIENDS: "mail_go_friend",
REQ_MAIL_GOVIP: "mail_go_vip",
REQ_USER_CANCEL_PAY: "cancel_buy",
REQ_HERO_DETAIL_SHARE: "hero_detail_share",
REQ_HERO_GUIDE_POP: "hero_guide_pop",
REQ_HERO_GUIDE_SKIP: "hero_guide_skip",
REQ_HERO_CAMP_ALL: "hero_camp_all",
REQ_HERO_CAMP_GOLD: "hero_camp_gold",
REQ_HERO_CAMP_WOOD: "hero_camp_wood",
REQ_HERO_CAMP_WATER: "hero_camp_water",
REQ_HERO_CAMP_FIRE: "hero_camp_fire",
REQ_HERO_CAMP_SOIL: "hero_camp_soil",
REQ_HERO_DETAIL: "hero_detail",
REQ_HERO_DETAIL_POP: "hero_detail_pop",
REQ_HERO_DETAIL_TIPPOP: "hero_detail_tippop",
REQ_HERO_DETAIL_TIPCLOSE: "hero_detail_tipclose",
REQ_HERO_DETAIL_GO: "hero_detail_go",
REQ_HERO_DETAIL_SPIN: "hero_detail_spin",
REQ_HERO_DETAIL_ALLSCREEN: "hero_detail_allscreen",
REQ_HERO_DETAIL_EXISTALL: "hero_detail_existall",
REQ_HERO_DETAIL_CLOSE: "hero_detail_close",
REQ_HERO_DETAIL_CHANGE: "hero_detail_change",
REQ_HERO_DETAIL_UNOLOCK: "hero_detail_unolock",
REQ_HERO_DETAIL_PLUSEXP: "hero_detail_plusexp",
REQ_HERO_DETAIL_PLUSEXP_ADD1: "hero_detail_plusexp_add1",
REQ_HERO_DETAIL_PLUSEXP_ADD2: "hero_detail_plusexp_add2",
REQ_HERO_DETAIL_PLUSEXP_CLOSE: "hero_detail_plusexp_close",
REQ_HERO_DETAIL_REWARDS: "hero_detail_rewards",
REQ_HERO_DETAIL_REWARDS_POP: "hero_detail_rewards_pop",
REQ_HERO_DETAIL_REWARDS_COLLECT: "hero_detail_rewards_collect",
REQ_HERO_DETAIL_REWARDS_GO: "hero_detail_rewards_go",
REQ_HERO_DETAIL_REWARDS_COLLECTALL: "hero_detail_rewards_collectall",
REQ_HERO_DETAIL_REWARDS_CLOSE: "hero_detail_rewards_close",
REQ_HERO_DETAIL_EVOLUTION: "hero_detail_evolution",
REQ_HERO_DETAIL_EVOLUTION_GONOW: "hero_detail_evolution_gonow",
REQ_HERO_DETAIL_EVOLUTION_GO: "hero_detail_evolution_go",
REQ_HERO_DETAIL_EVOLUTION_UNLOCK: "hero_detail_evolution_unlock",
REQ_HERO_DETAIL_EVOLUTION_CLOSE: "hero_detail_evolution_close",
REQ_HERO_DETAIL_EVOLUTION_POP: "hero_detail_evolution_pop",
REQ_HERO_DETAIL_LEVEL_VIEWREWARDS: "hero_detail_level_viewrewards",
REQ_FLOAT_100SPIN: "float_100spin",
REQ_FLOAT_EXPLOCK: "float_explock",
REQ_FLOAT_EXPUNLOCK: "float_expunlock",
REQ_WELCOMEBACK_POP: "welcomeback_pop",
REQ_WELCOMEBACK_COLLECT: "welcomeback_collect",
REQ_ONETIMEONLY_POP: "onetimeonly_pop",
REQ_ONETIMEONLY_BUY: "onetimeonly_buy",
REQ_ONETIMEONLY_LATER: "onetimeonly_later",
REQ_MONTHCARD_POP: "monthcard_pop",
REQ_MONTHCARD_BUY: "monthcard_buy",
REQ_MONTHCARD_CLOSE: "monthcard_close",
REQ_MONTHCARD_TRAI3: "monthcard_trai3",
REQ_MONTHCARD_RECEIVED: "monthcard_received",
REQ_QUEST_POP: "quest_pop",
REQ_QUEST_CLOSE: "quest_close",
REQ_QUEST_PLAY: "quest_play",
REQ_QUESTMAIN_ENTER: "questmain_enter",
REQ_QUESTMAIN_EXIST: "questmain_exist",
REQ_QUESTMAIN_START: "questmain_start",
REQ_QUESTMAIN_DOWNLOAD: "questmain_download",
REQ_QUESTMAIN_REWARDINFO: "questmain_rewardinfo",
REQ_QUESTMAIN_REWARDPOP: "questmain_reward_pop",
REQ_QUESTMAIN_REWARDCOLLECT: "questmain_reward_collect",
REQ_QUESTINGAME_START: "questingame_start",
REQ_QUESTINGAME_START_CONTINUE: "questingame_start_continue",
REQ_QUESTINGAME_END: "questingame_end",
REQ_QUESTINGAME_END_CONTINUE: "questingame_end_continue",
REQ_SPECIALOFFER_POP: "specialoffer_pop",
REQ_SPECIALOFFER_BUY: "specialoffer_buy",
REQ_SPECIALOFFER_CLOSE: "specialoffer_close",
REQ_PIGBANK_POP: "pigbank_pop",
REQ_PIGBANK_BUY: "pigbank_buy",
REQ_PIGBANK_CLOSE: "pigbank_close",
REQ_PIGBANK_FREE: "pigbank_free",
REQ_PIGBANK_RULE: "pigbank_rule",
REQ_PIGBANK_RULE_CLOSE: "pigbank_rule_close",
REQ_HALL_WHEEL_POP: "hall_wheel_pop",
REQ_HALL_WHEEL_SPIN: "hall_wheel_spin",
REQ_HALL_WHEEL_COLLECT: "hall_wheel_collect",
REQ_HALL_WHEEL_SKIP: "hall_wheel_skip",
REQ_HALL_BUYWHEEL_POP: "hall_buywheel_pop",
REQ_HALL_BUYWHEEL_BUY: "hall_buywheel_buy",
REQ_HALL_BUYWHEEL_CLOSE: "hall_buywheel_close",
REQ_HALL_BUYWHEEL_SUREPOP: "hall_buywheel_surepop",
REQ_HALL_BUYWHEEL_SURESPIN: "hall_buywheel_surespin",
REQ_HALL_BUYWHEEL_SURECLOSE: "hall_buywheel_sureclose",
REQ_SUBGAME_DOWNLOAD_START: "subgame_download_start",
REQ_SUBGAME_DOWNLOAD_FAILE: "subgame_download_faile",
REQ_SUBGAME_DOWNLOAD_SUCCESS: "subgame_download_success",
REQ_SUBGAME_CLICK: "subgame_click_game",
REQ_SUBGAME_LOCKTIP: "subgame_locktip",
REQ_SUBGAME_LOADING_START: "subgame_loading_start",
REQ_SUBGAME_LOADING_FAIL: "subgame_loading_fail",
REQ_SUBGAME_LOADING_SUCC: "subgame_loading_succ",
REQ_JJJ_POP: "jjj_pop",
REQ_JJJ_COLLECT: "jjj_collect",
REQ_LVUPPARTY_POP: "levelup_party_pop",
REQ_LVUPPARTY_COLLECT: "levelup_party_collect",
REQ_LVUPPARTY_PURSURE: "levelup_party_pursure_pop",
REQ_LVUPPARTY_PURSURE_CLOSE: "levelup_party_pursure_close",
REQ_LVUPPARTY_PURSURE_BUY: "levelup_party_pursure_buy",
REQ_LVUPEXP_POP: "levelup_exp_pop",
REQ_LVUPEXP_COLLECT: "levelup_exp_collect",
REQ_QUEST_UNLOCK_UI: "quest_unlock_ui",
REQ_HEROCARD_UNLOCK_UI: "herocard_unlock_ui",
REQ_HEROCARD_UNLOCK_GO: "herocard_unlock_go",
REQ_PIGBANK_UNLOCK_UI: "pigbank_unlock_ui",
REQ_LUCKYSMACH_UNLOCK_UI: "luckysmach_unlock_ui",
REQ_DAILYMISSION_POP: "daily_mission_pop",
REQ_BUY_GIFT: "buy_gift_harm",
REQ_BUY_ONETIMEONLY: "buy_click_onetimeonly",
REQ_BUY_PIGBANK: "buy_click_pigbank",
REQ_BUY_PIGBANK_HELP: "buy_click_pigbank_help",
REQ_BUY_WEEKCARD: "buy_click_weekcard",
REQ_BUY_MONTHCARD: "buy_click_monthcard",
REQ_BUY_MONTHCARD_COLLECT: "buy_monthcard_collect",
REQ_BUY_INBOX_COIN: "buy_inbox_coin",
REQ_BUY_GROWTHFUND: "buy_growth_fund",
REQ_BUY_GROWTHFUND_COLLECT: "buy_growth_fund_collect",
REQ_BUY_SPRINGGIFT: "buy_springgift",
REQ_BUY_TABCOIN: "buy_tab_coin",
REQ_BUY_TABSALE: "buy_tab_sale",
REQ_BUY_TABDIAMOND: "buy_tab_diamond",
REQ_BUY_COINLIST: "buy_coin_list",
REQ_BUY_LEVEL_GIFT: "buy_level_package",
REQ_LUCKYCARD_POP: "luckycard_pop",
REQ_LUCKYCARD_GUIDE: "luckycard_guide",
REQ_LUCKYCARD_FLIP: "luckycard_flip",
REQ_LUCKYCARD_TAKEREWARD: "luckycard_takereward",
REQ_LUCKYCARD_FINALREWARD_POP: "luckycard_finalreward_pop",
REQ_LUCKYCARD_FINALREWARD_COLLECT: "luckycard_finalreward_collect",
REQ_LUCKYCARD_GAMEOVER: "luckycard_gameover",
REQ_LUCKYCARD_GIVEUP: "luckycard_giveup",
REQ_LUCKYCARD_USE: "luckycard_use",
REQ_LUCKYCARD_GAMEOVER_BUY: "luckycard_gameover_buy",
REQ_LUCKYCARD_BUY_POP: "luckycard_buy_pop",
REQ_LUCKYCARD_BUY_CONFIRM: "luckycard_buy_confirm",
REQ_LUCKYCARD_BUY_CLOSE: "luckycard_buy_close",
REQ_LUCKYCARD_HEART_BUY: "luckycard_heart_buy",
REQ_LUCKYCARD_CLOSE: "luckycard_close",
REQ_FRIENZY_COLLECT: "frienzy_collect",
REQ_FRIENZY_QUESTMASK: "frienzy_questmask",
REQ_FRIENZY_QUESTMASK_CLOSE: "frienzy_questmask_close",
REQ_BOUNUS_FRIENZY: "tab_bonus_onlinereward",
REQ_BOUNUS_QUEST: "tab_bonus_quest",
REQ_BOUNUS_DAILYMISSION: "tab_bonus_dailymission",
REQ_BOUNUS_DAILYBONUS: "tab_bonus_dailybonus",
REQ_BOUNUS_LUCKYSMACH: "tab_bonus_lucksmach",
REQ_BOUNUS_LUCKYCARD: "tab_bonus_luckcard",
REQ_BOUNUS_SHAREFB: "tab_bonus_sharefb",
REQ_BOUNUS_SHAREFB_SHAREANDENJOY: "tab_bonus_sharefb_shareandenjoy",
REQ_BOUNUS_SHAREFB_SHAREANDENJOY_POP: "tab_bonus_sharefb_shareandenjoy_pop",
REQ_BOUNUS_SHAREFB_SHAREANDENJOY_SHARETOFB: "tab_bonus_sharefb_shareandenjoy_sharetofb",
REQ_BOUNUS_SHAREFB_SHAREANDENJOY_SHARETOFB_POP: "tab_bonus_sharefb_shareandenjoy_sharetofb_pop",
REQ_BOUNUS_SHAREFB_SHAREANDENJOY_SHARETOFB_COLLECT: "tab_bonus_sharefb_shareandenjoy_sharetofb_collect",
REQ_BOUNUS_SHAREFB_SHAREANDENJOY_SHARETOFB7_POP: "tab_bonus_sharefb_shareandenjoy_sharetofb7_pop",
REQ_BOUNUS_SHAREFB_SHAREANDENJOY_SHARETOFB7_SPIN: "tab_bonus_sharefb_shareandenjoy_sharetofb7_spin",
REQ_BOUNUS_SHAREFB_SHAREANDENJOY_SHARETOFB7_SPIN_POP: "tab_bonus_sharefb_shareandenjoy_sharetofb7_spin_pop",
REQ_BOUNUS_SHAREFB_SHAREANDENJOY_SHARETOFB7_SPIN_COLLECT: "tab_bonus_sharefb_shareandenjoy_sharetofb7_spin_collect",
REQ_BOUNUS_GIFT: "tab_bonus_gift",
REQ_DAILYMISSION_GOSPIN: "tab_dailymission_gospin",
REQ_DAILYMISSION_COLLECT: "tab_dailymission_collect",
REQ_DAILYMISSION_GIFTBOX_CHECK: "tab_dailymission_giftbox_check",
REQ_DAILYMISSION_GIFTBOX_TAKE: "tab_dailymission_giftbox_take",
REQ_DAILYMISSION_CLICK_EGG: "tab_dailymission_clickegg",
REQ_SMASHUI_POP: "smashui_pop",
REQ_SMASHUI_RULE: "smashui_rule",
REQ_SMASHUI_NEXT: "smashui_next",
REQ_SMASHUI_CLOSE: "smashui_close",
REQ_SMASHUI_SLIVER_POP: "smashui_sliver_pop",
REQ_SMASHUI_SLIVER_SMAH: "smashui_sliver_smash",
REQ_SMASHUI_SLIVER_BUY_POP: "smashui_sliver_buypop",
REQ_SMASHUI_SLIVER_BUY: "smashui_sliver_buy",
REQ_SMASHUI_SLIVER_BUY_CANCEL: "smashui_sliver_buycanel",
REQ_SMASHUI_GOLD_POP: "smashui_gold_pop",
REQ_SMASHUI_GOLD_BUY_POP: "smashui_gold_buypop",
REQ_SMASHUI_GOLD_SMAH: "smashui_gold_smash",
REQ_SMASHUI_GOLD_BUY: "smashui_gold_buy",
REQ_SMASHUI_GOLD_BUY_CANCEL: "smashui_gold_buycanel",
REQ_SMASH_CLOSE: "smash_close",
REQ_SOCIAL_HI: "social_hi",
REQ_SOCIAL_ADDME: "social_addme",
REQ_SOCIAL_SEND: "social_send",
REQ_SOCIAL_INPUTMSG: "social_inputmsg",
REQ_SOCIAL_GIFT: "social_gift",
REQ_SOCIAL_GIFTCLOSE: "social_giftclose",
REQ_SOCIAL_NEWS: "social_news",
REQ_SOCIAL_FRIENDS: "social_friends",
REQ_SOCIAL_CHAT: "social_chat",
REQ_SOCIAL_FRIENDS_SEND: "social_friends_send",
REQ_SOCIAL_FRIENDS_CHAT: "social_friends_chat",
REQ_SOCIAL_FRIENDS_COLLECT: "social_friends_collect",
REQ_SOCIAL_FRIENDS_COLLECTALL_OUT: "social_friends_collectall_out",
REQ_SOCIAL_FRIENDS_COLLECTALL_COLLECT: "social_friends_collectall_collect",
REQ_SOCIAL_FRIENDS_COLLECTALL_FBSHARE: "social_friends_collectall_fbshare",
REQ_SOCIAL_FRIENDS_GIFTBACK: "social_friends_giftback",
REQ_SOCIAL_ADDFRIENDS_OUT: "social_addfriends_out",
REQ_SOCIAL_ADDFRIENDS_ADD: "social_addfriends_add",
REQ_SOCIAL_ADDFRIENDS_SEARCH_OUT: "social_addfriends_search_out",
REQ_SOCIAL_ADDFRIENDS_SEARCH_ADD: "social_addfriends_search_add",
REQ_SOCIAL_ADDFRIENDS_SEARCHID: "social_addfriends_searchid",
REQ_SOCIAL_ADDFRIENDS_REFRUSH: "social_addfriends_refrush",
REQ_SOCIAL_ADDFRIENDS_SEARCH_CLOSE: "social_addfriends_search_close",
REQ_SOCIAL_ADDFRIENDS_CLOSE: "social_addfriends_close",
REQ_SOCIAL_DELFRIENDS_OUT: "social_delfriends_out",
REQ_SOCIAL_DELFRIENDS_SELECTALL: "social_delfriends_selectall",
REQ_SOCIAL_DELFRIENDS_SELECT: "social_delfriends_select",
REQ_SOCIAL_DELFRIENDS_SELECT_OUT: "social_delfriends_select_out",
REQ_SOCIAL_DELFRIENDS_SELECT_OUT_POP: "social_delfriends_select_out_pop",
REQ_SOCIAL_DELFRIENDS_SELECT_CONFIRM: "social_delfriends_select_confirm",
REQ_SOCIAL_DELFRIENDS_SELECT_CLOSE: "social_delfriends_select_close",
REQ_SOCIAL_FRIENDS_MORE: "social_friends_more",
REQ_SOCIAL_FRIENDS_MORE_FBFRIENDS: "social_friends_more_fbfriends",
REQ_SOCIAL_FRIENDS_MANAG: "social_friends_manag",
REQ_SOCIAL_CHAT_GLOBAL: "social_chat_global",
REQ_SOCIAL_CHAT_GIFT: "social_chat_gift",
REQ_SOCIAL_CHAT_RANK: "social_chat_rank",
REQ_SOCIAL_CHAT_PRIVATE: "social_chat_private",
REQ_SOCIAL_CHAT_ARROW: "social_chat_arrow",
REQ_SOCIAL_RANKQUIZ: "social_rankquiz",
REQ_SOCIAL_RANKQUIZ_RULE: "social_rankquiz_rule",
REQ_SOCIAL_RANKQUIZ_ADD: "social_rankquiz_add",
REQ_SOCIAL_RANKQUIZ_REDUCE: "social_rankquiz_reduce",
REQ_SOCIAL_RANKQUIZ_CONFIRM: "social_rankquiz_confirm",
REQ_SOCIAL_RANKQUIZ_CLOSE: "social_rankquiz_close",
REQ_SOCIAL_GOTOINBOX: "social_gotobox",
REQ_SELECTBET_TAB_NOR: "selectbet_tab_nor",
REQ_SELECTBET_TAB_HIG: "selectbet_tab_hig",
REQ_SELECTBET_NOR_BET: "selectbet_nor_bet",
REQ_SELECTBET_HIG_BET: "selectbet_hig_bet",
REQ_SELECTBET_LEFT: "selectbet_left",
REQ_SELECTBET_RIGHT: "selectbet_right",
REQ_HEROPALACE_EARNINGPT: "heropalace_earningpoint",
REQ_HEROPALACE_GOSPIN: "heropalace_gospin",
REQ_HEROPALACE_BUYPIG: "heropalace_buypig",
REQ_HEROPALACE_DOUBLEEXP: "heropalace_doubleexp",
REQ_HEROPALACE_HEROPACK: "heropalace_heropack",
REQ_HEROPALACE_ONLINEREWARD: "heropalace_onlinereward",
REQ_HEROPALACE_POINT_BUY: "heropalace_pointui_buy",
REQ_HEROPALACE_POINT_TAB_PLAY: "heropalace_pointui_play",
REQ_HEROPALACE_POINT_TAB_STORE: "heropalace_pointui_store",
REQ_HEROPALACE_HALL_OPEN: "open_palace",
REQ_BINGO_FLOAT_LOCK: "bingo_float_lock",
REQ_BINGO_FLOAT_LOCK_POPTIP: "bingo_float_lock_poptip",
REQ_BINGO_FLOAT_UNLOCK: "bingo_float_unlock",
REQ_BINGO_FLOAT_UNLOCK_click: "bingo_float_unlock_click",
REQ_BINGO_FLOAT_UNLOCK_BETTIP: "bingo_float_unlock_bettip",
REQ_BINGO_GAME_BACK: "bingo_game_back",
REQ_BINGO_LEVEL_BACK: "bingo_level_back",
REQ_BINGO_LEVEL_PLAY: "bingo_level_play",
REQ_BINGO_PLAYTIP_POP: "bingo_playtip_pop",
REQ_BINGO_PLAYTIP_PLAYGAME: "bingo_playtip_playgame",
REQ_BINGO_PLAYTIP_NOTIFY: "bingo_playtip_notify",
REQ_BINGO_PLAYTIP_CLOSE: "bingo_playtip_close",
REQ_BINGO_PLAY: "bingo_play",
REQ_BINGO_REWARD_POP: "bingo_reward_pop",
REQ_BINGO_REWARD_COIN: "bingo_reward_coin",
REQ_BINGO_REWARD_COUNT: "bingo_reward_count",
REQ_BINGO_BUY_BACK: "bingo_buy_back",
REQ_BINGO_BUY_GIFT: "bingo_buy_gift",
REQ_BINGO_BUY_BUFF: "bingo_buy_buff",
REQ_BINGO_HELP_POP: "bingo_help_pop",
REQ_BINGO_HELP_PAGE: "bingo_help_page",
REQ_BINGO_HELP_CLOSE: "bingo_help_close",
REQ_BINGO_RANK_CLOSE: "bingo_rank_close",
REQ_BINGO_RANK_HELP: "bingo_rank_help",
REQ_BINGO_RANK_HELP_CLOSE: "bingo_rank_help_close",
REQ_BINGO_LEFT10S_POP: "bingo_left10s_pop",
REQ_BINGO_LEFT10M_POP: "bingo_left10m_pop",
REQ_BINGO_LEFT10S_OK: "bingo_left10s_ok",
REQ_BINGO_LEFT10M_OK: "bingo_left10m_ok",
REQ_BINGO_NEWSEASON_POP: "bingo_newseason_pop",
REQ_BINGO_NEWSEASON_ENJOY: "bingo_newseason_enjoy",
REQ_BENEFITS_CLICK: "benefits_click",
REQ_BENEFITS_POP: "benefits_pop",
REQ_BENEFITS_CLOSE: "benefits_close",
REQ_HERO_WHEEL_POP: "hero_wheel_pop",
REQ_HERO_WHEEL_FILL: "hero_wheel_fill",
REQ_HERO_WHEEL_GO: "hero_wheel_go",
REQ_HERO_WHEEL_GO_SPIN: "hero_wheel_go_spin",
REQ_HERO_WHEEL_GO_SPIN_POP: "hero_wheel_go_spin_pop",
REQ_HERO_WHEEL_GO_SPIN_COLLECT: "hero_wheel_go_spin_collect",
REQ_HERO_WHEEL_CARDADD: "hero_wheel_cardadd",
REQ_HERO_WHEEL_CARDREDUCE: "hero_wheel_cardreduce",
REQ_HERO_WHEEL_GOLD: "hero_wheel_gold",
REQ_HERO_WHEEL_WOOD: "hero_wheel_wood",
REQ_HERO_WHEEL_WATER: "hero_wheel_water",
REQ_HERO_WHEEL_FIRE: "hero_wheel_fire",
REQ_HERO_WHEEL_SOIL: "hero_wheel_soil",
REQ_HERO_WHEEL_ALL: "hero_wheel_all",
REQ_HERO_WHEEL_CLOSE: "hero_wheel_close",
REQ_HERO_REWARD: "hero_reward",
REQ_HERO_REWARD_POP: "hero_reward_pop",
REQ_HERO_REWARD_PROGRESSING: "hero_reward_progressing",
REQ_HERO_REWARD_COLLECT: "hero_reward_collect",
REQ_HERO_REWARD_COLLECTALL: "hero_reward_collectall",
REQ_HERO_REWARD_CLOSE: "hero_reward_close",
REQ_HERO_MORE: "hero_more",
REQ_HERO_MORE_RULE: "hero_more_rule",
REQ_HERO_MORE_RULE_POP: "hero_more_rule_pop",
REQ_HERO_MORE_RULE_CLOSE: "hero_more_rule_close",
REQ_HERO_MORE_COLLECTION: "hero_more_collection",
REQ_HERO_MORE_COLLECTION_POP: "hero_more_collection_pop",
REQ_HERO_MORE_COLLECTION_GOLD: "hero_more_collection_gold",
REQ_HERO_MORE_COLLECTION_WOOD: "hero_more_collection_wood",
REQ_HERO_MORE_COLLECTION_WATER: "hero_more_collection_water",
REQ_HERO_MORE_COLLECTION_FIRE: "hero_more_collection_fire",
REQ_HERO_MORE_COLLECTION_SOIL: "hero_more_collection_soil",
REQ_HERO_MORE_COLLECTION_SHARE: "hero_more_collection_share",
REQ_HERO_MORE_COLLECTION_CLOSE: "hero_more_collection_close",
REQ_HERO_SUMMON: "hero_summon",
REQ_HERO_SUMMON_POP: "hero_summon_pop",
REQ_HERO_SUMMON_RULE: "hero_summon_rule",
REQ_HERO_SUMMON_RULE_POP: "hero_summon_rule_pop",
REQ_HERO_SUMMON_RULE_CLOSE: "hero_summon_rule_close",
REQ_HERO_SUMMON_ONCE: "hero_summon_once",
REQ_HERO_SUMMON_TENTN: "hero_summon_tenth",
REQ_HERO_SUMMON_CLOSE: "hero_summon_close",
REQ_SHOWSIMPLE_POP: "showsimple_pop",
REQ_SHOWSIMPLE_YES: "showsimple_yes",
REQ_SHOWSIMPLE_NO: "showsimple_no",
REQ_PACKDROP_POP: "packdrop_pop",
REQ_PACKDROP_CONFIRM: "packdrop_confirm",
REQ_PACKDROP_AGAIN: "packdrop_again",
REQ_PACKDROP_CONTINUE: "packdrop_continue",
REQ_PACKDROP_SKIP: "packdrop_skip",
REQ_FBBINDAD_POP: "fbbindad_pop",
REQ_FBBINDAD_CONNECT: "fbbindad_connect",
REQ_FBBINDAD_CLOSE: "fbbindad_close",
REQ_FUND_POP: "fund_pop",
REQ_FUND_BUY: "fund_buy",
REQ_FUND_CLOSE: "fund_close",
REQ_FIRSTBUYGIFT: "firstbuygift",
REQ_FIRSTBUYGIFT_POP: "firstbuygift_pop",
REQ_FIRSTBUYGIFT_GETNOW: "firstbuygift_getnow",
REQ_FIRSTBUYGIFT_CLOSE: "firstbuygift_close",
REQ_FIRSTBUYGIFT_COLLECT: "firstbuygift_collect",
REQ_MAIL_BOX: "mail_box",
REQ_MAIL_FBCONNECT: "mail_fbconnect",
REQ_MAIL_REDEEM: "mail_redeem",
REQ_MAIL_FBBIND_POP: "mail_fbbind_pop",
REQ_MAIL_FBBIND_CONNECT: "mail_fbbind_connect",
REQ_MAIL_FBBIND_CLOSE: "mail_fbbind_close",
REQ_HEROROAD_OPEN: "heroroad_open",
REQ_HEROROAD_CLOSE: "heroroad_close",
REQ_HEROROAD_BTN2: "heroroad_btn2",
REQ_HEROROAD_BTN3: "heroroad_btn3",
REQ_HEROROAD_BTNQUEST: "heroroad_btnquest",
REQ_HEROROAD_BTNMISSION: "heroroad_btnmission",
REQ_HEROROAD_BTNBONUS: "heroroad_btnbonus",
REQ_HEROROAD_BTNSCRATCH: "heroroad_btnscratch",
REQ_HEROROAD_BTNBIGPIG: "heroroad_btnbigpig",
REQ_HEROROAD_BTNUNLOCKSLOTS: "heroroad_btnunlockslots",
REQ_HEROROAD_BTNLUCKYSMASH: "heroroad_btnluckysmash",
REQ_HEROROAD_BTNRANKING: "heroroad_btnranking",
REQ_HEROROAD_BTNHERO: "heroroad_btnhero",
REQ_SLOTLEVEL_QUEST_CLOSE: "slotlevel_quest_close",
REQ_SLOTLEVEL_QUEST_PLAY: "slotlevel_quest_play",
REQ_SLOTLEVEL_MISSION_POP: "slotlevel_mission_pop",
REQ_SLOTLEVEL_MISSION_CLICK: "slotlevel_mission_click",
REQ_SLOTLEVEL_MISSION_COLLECT: "slotlevel_mission_collect",
REQ_SLOTLEVEL_MISSION_COLLECTALL: "slotlevel_mission_collectall",
REQ_MISSION_TIP: "mission_tip",
REQ_SLOTLEVEL_MISSION_GO: "slotlevel_mission_go",
REQ_SLOTLEVEL_MISSION_DIA: "slotlevel_mission_dia",
REQ_SLOTLEVEL_MISSION_DIA_TIP: "slotlevel_mission_dia_tip",
REQ_SLOTLEVEL_MISSION_CLOSE: "slotlevel_mission_close",
REQ_SLOTLEVEL_BONUS_COLLECT: "slotlevel_bonus_collect",
REQ_SLOTLEVEL_BONUS_CLOSE: "slotlevel_bonus_close",
REQ_SLOTLEVEL_SCRATCH: "slotlevel_scratch",
REQ_SLOTLEVEL_SCRATCH_CLOSE: "slotlevel_scratch_close",
REQ_SLOTLEVEL_MISSION_SMASH: "slotlevel_mission_smash",
REQ_SLOTLEVEL_MISSION_TAB: "slotlevel_mission_tab",
REQ_SLOTLEVEL_RANKING_POP: "slotlevel_ranking_pop",
REQ_SLOTLEVEL_RANKING_CLOSE: "slotlevel_ranking_close",
REQ_SLOTLEVEL_RANKING_TOTALWIN: "slotlevel_ranking_totalwin",
REQ_SLOTLEVEL_RANKING_WINRANK: "slotlevel_ranking_winrank",
REQ_SLOTLEVEL_RANKING_LEVELUP: "slotlevel_ranking_levelup",
REQ_SLOTLEVEL_RANKING_BET: "slotlevel_ranking_bet",
REQ_SLOTLEVEL_RANKING_HREOCARD: "slotlevel_ranking_herocard",
REQ_SLOTLEVEL_RANKING_IBTN: "slotlevel_ranking_ibtn",
REQ_SLOTLEVEL_RANKING_PVP: "slotlevel_ranking_pvp",
HTTP_ENTER_BACKGROUND: "enter_background",
HTTP_NET_TIMEOUT: "net_timeout",
HTTP_REGISTER: "addToken",
HTTP_LAUNCH: "startApp",
HTTP_START_HOTUPDATE: "loadHotUpdate",
HTTP_SUCCESS_HOTUPDATE: "endLoadHot",
SHOW_LOGO: "showlogo",
START_LOADRES: "startloadres",
END_LOADRES: "endloadres",
HTTP_UPDATE_RESTART: "update_restart",
HTTP_ADJUST_INFO_START: "adjustInfoStart",
HTTP_ADJUST_INFO_SUCC: "adjustInfoSucc",
HTTP_ADJUST_INFO_FAIL: "adjustInfoFail",
HTTP_START_AUTO_LOGIN: "autoLogin",
HTTP_SHOW_LOGIN: "showLogin",
HTTP_LOGIN_SUCC: "loginSceneSucc",
HTTP_GAME_ENTER: "gameEnter",
HTTP_GAME_RECONNECTION: "gameReconnection",
HTTP_GAME_EXITS: "gameExits",
HTTP_HOTUPDATE_PRO_ENTER: "hotupdate_pro_enter",
HTTP_HOTUPDATE_PRO_CHECK: "hotupdate_pro_check",
HTTP_HOTUPDATE_PRO_CHECKRESULT: "hotupdate_pro_checkresult",
HTTP_HOTUPDATE_PRO_TIME15: "hotupdate_pro_time15",
HTTP_HOTUPDATE_PRO_TIME30: "hotupdate_pro_time30",
HTTP_HOTUPDATE_PRO_TIME45: "hotupdate_pro_time45",
HTTP_HOTUPDATE_PRO_TIME60: "hotupdate_pro_time60",
HTTP_HOTUPDATE_PRO_TIME90: "hotupdate_pro_time90",
HTTP_HOTUPDATE_PRO_TIME180: "hotupdate_pro_time180",
HTTP_HWSDK_LOGIN_FAIL: "hwsdk_login_fail",
HTTP_CLICK_HW_SIGN: "hwsdk_click_sign",
HTTP_CLICK_GUEST_SIGN: "guest_click_sign",
HTTP_CLICK_FB_SIGN: "fb_click_sign",
HTTP_CLICK_APPLE_SIGN: "apple_click_sign",
HTTP_HOTUPDATE_PRO_FAILED: "hotupdate_pro_failed",
HTTP_SUBGAME_HOT_START: "http_subgame_hotupdate_start",
HTTP_SUBGAME_HOT_PROCESS: "http_subgame_hotupdate_process",
HTTP_SUBGAME_HOT_RESULT: "http_subgame_hotupdate_result",
HTTP_DISCONNECT: "http_disconnect",
HTTP_SPIN_NET_TIME: "SpinTime",
HTTP_SEND_MSG1: "sendMsg1",
REQ_BOUNUS_EXPROLATION_SPIN: "bounus_exprolation_spin",
REQ_BOUNUS_EXPROLATION_CLOSE: "bounus_exprolation_close",
REQ_BOUNUS_EXPROLATION_KEEPGOING: "bounus_exprolation_keepgoing",
REQ_BOUNUS_EXPROLATION_BOXOPENNOW: "bounus_exprolation_boxopennow",
REQ_BOUNUS_EXPROLATION_BOXOPENNOW_POP: "bounus_exprolation_boxopennow_pop",
REQ_BOUNUS_EXPROLATION_BOXOPENNOW_YES: "bounus_exprolation_boxopennow_yes",
REQ_BOUNUS_EXPROLATION_BOXOPENNOW_NO: "bounus_exprolation_boxopennow_no",
REQ_BOUNUS_EXPROLATION_BOXOPEN: "bounus_exprolation_boxopen",
REQ_BOUNUS_EXPROLATION_BOXOPEN_POP: "bounus_exprolation_boxopen_pop",
REQ_BOUNUS_EXPROLATION_DESPOP: "bounus_exprolation_despop",
REQ_BOUNUS_EXPROLATION_DESCOLSE: "bounus_exprolation_descolse",
REQ_BOUNUS_EXPROLATION_PAY_CLOSE: "bounus_exprolation_pay_close",
REQ_BOUNUS_EXPROLATION_PAY_POINTONE: "bounus_exprolation_pay_pointone",
REQ_EXPROLATION_PLAYTIP_POP: "exprolation_playtip_pop",
REQ_EXPROLATION_PLAYTIP_GO: "exprolation_playtip_go",
REQ_EXPROLATION_PLAYTIP_CHECK: "exprolation_playtip_check",
REQ_EXPROLATION_PLAYTIP_CLOSE: "exprolation_playtip_close",
REQ_SUGGEST: "suggest",
REQ_WHEELINGAME_POP: "wheelingame_pop",
REQ_WHEELINGAME_GO: "wheelingame_go",
REQ_WHEELINGAME_CLOSE: "wheelingame_close",
REQ_ABTEST_POP: "abtest_pop",
REQ_ABTEST_WAIT: "abtest_wait",
REQ_ABTEST_WAIT_DOWNLOAD: "abtest_wait_download",
REQ_ABTEST_WAIT_CLOSE: "abtest_wait_close",
REQ_ABTEST_CLOSE: "abtest_close",
REQ_HALL_CLICKCOIN: "hall_clickcoin",
REQ_HALL_CLICKDIA: "hall_clickdia",
REQ_HALL_PERSONALINFO_EDITNAME: "hall_personalinfo_editname",
REQ_HALL_PERSONALINFO_COIN: "hall_personalinfo_coin",
REQ_HALL_PERSONALINFO_DIA: "hall_personalinfo_dia"
}, n.REQ_DAILYMISSION_POP = "dailymission_pop", n.REQ_DAILYMISSION_COLLECT = "dailymission_collect", 
n.REQ_DAILYBONUS_POP = "dailybonus_pop", n.REQ_BIGWIN_POP = "bigwin_pop", n.REQ_BIGWIN_SHAREFB = "bigwin_sharefb", 
n.REQ_BIGWIN_CLOSE = "bigwin_close", n.REQ_CASHBACK_POP = "cashback_pop", n.REQ_CASHBACK_CLOSE = "cashback_close", 
n.REQ_CASHBACK_INGAME_POP = "cashback_ingame_pop", n.REQ_CASHBACKWALLET_CLICK = "cashbackwallet_click", 
n.REQ_CASHBACK_TOMORROW_POP = "cashback_tomorrow_pop", n.REQ_CASHBACK_TOMORROW_COLLECT = "cashback_tomorrow_collect", 
n.REQ_SETTING_FBBIND = "setting_fbbind", n.REQ_NEWGAME_POP = "newgame_pop", n.REQ_NEWGAME_GOSPIN = "newgame_gospin", 
n.REQ_NEWGAME_CLOSE = "newgame_close", n.REQ_NEWGAME_HODEON_POP = "newgame_hodeon_pop", 
n.REQ_NEWGAME_HODEON_CONFIRM = "newgame_hodeon_confirm", n.REQ_NEWGAME_HODEON_CLOSE = "newgame_hodeon_close", 
n.REQ_BONUS_CLICKTAB = "bonus_clicktab", n.REQ_BONUS_CLICKITEM_BTN = "bonus_clickitem_btn", 
n.REQ_CARDDROP_UNLOCK = "carddrop_unlock", n.REQ_CHAT_PRIVATECLICK = "chat_privateclick", 
n.REQ_CHAT_PRIVATEPOP = "chat_privatepop", n.REQ_CHAT_PRIVATEGIFT = "chat_privategift", 
n.REQ_CHAT_PRIVATECLOSE = "chat_privateclose", n)
});
window.StatisticsMgr = o;
cc._RF.pop();
}, {} ],
SubGameClickSoundCmp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fa86fzwkb5HsIGAofO3dm+9", "SubGameClickSoundCmp");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.SubGameClickSoundCmp = i.SubGameClickSoundName = i.SubGameClickSoundType = void 0;
var n, a, o, c = cc._decorator, s = c.ccclass, r = c.property, l = c.menu, d = c.disallowMultiple;
(function(e) {
e[e.EVENT = 1] = "EVENT";
e[e.AUDIO_CLIP = 2] = "AUDIO_CLIP";
})(n || (n = {}));
(function(e) {
e[e.COMMON = 1] = "COMMON";
e[e.SUBGAME = 2] = "SUBGAME";
})(a = i.SubGameClickSoundType || (i.SubGameClickSoundType = {}));
(function(e) {
e[e.CLICK = 1] = "CLICK";
})(o = i.SubGameClickSoundName || (i.SubGameClickSoundName = {}));
var h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.soundResType = n.EVENT;
t.soundType = a.COMMON;
t.soundName = o.CLICK;
t.audioClip = null;
return t;
}
t.prototype.onLoad = function() {
var e = this, t = this.node.getComponent(cc.Button);
t ? t.node.on("click", function() {
e.processClick();
}, this) : this.node.on(cc.Node.EventType.TOUCH_END, function() {
e.processClick();
}, this);
};
t.prototype.processClick = function() {
if (this.soundResType == n.AUDIO_CLIP) this.audioClip && cc.audioEngine.playEffect(this.audioClip, !1); else {
var e = {
soundType: this.soundType,
soundName: this.soundName
};
Global.dispatchEvent("SubgameClickSoundEvt", e);
}
};
__decorate([ r({
type: cc.Enum(n)
}) ], t.prototype, "soundResType", void 0);
__decorate([ r({
type: cc.Enum(a),
visible: function() {
return this.soundType == n.EVENT;
}
}) ], t.prototype, "soundType", void 0);
__decorate([ r({
type: cc.Enum(o),
visible: function() {
return this.soundType == n.EVENT;
}
}) ], t.prototype, "soundName", void 0);
__decorate([ r({
type: cc.AudioClip,
visible: function() {
return this.soundType == n.AUDIO_CLIP;
}
}) ], t.prototype, "audioClip", void 0);
return __decorate([ s, d, l("通用/子游戏音效") ], t);
}(cc.Component);
i.SubGameClickSoundCmp = h;
cc._RF.pop();
}, {} ],
System: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "85df76IIvdONq6uvFhDF/VD", "System");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = (n.property, function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.world = null;
return t;
}
t.prototype.onInit = function() {};
t.prototype.onUpdate = function() {};
t.prototype.getCpt = function(e, t) {
return this.world.getCpt(e, t);
};
t.prototype.getCpts = function(e, t) {
return this.world.getCpts(e, t);
};
t.prototype.getCptByKey = function(e, t) {
return this.world.getCptByKey(e, t);
};
t.prototype.delay = function(e, t) {
return this.world.delay(e, t);
};
return __decorate([ a ], t);
}(cc.Component));
i.default = o;
cc._RF.pop();
}, {} ],
Tabbar: [ function(e, t) {
"use strict";
cc._RF.push(t, "b9d5dRQiUVEQpZTnXLHaZzf", "Tabbar");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
var o = cc.Enum({
NODE: 1,
PREFAB: 2
}), c = cc.Class({
name: "TabbarItem",
properties: {
selectNode: {
displayName: "选中节点",
default: null,
type: cc.Node
},
unSelectNode: {
displayName: "未选中节点",
default: null,
type: cc.Node
},
pageType: {
displayName: "内容类型",
default: o.NODE,
type: o
},
pageNode: {
displayName: "内容节点",
default: null,
type: cc.Node,
visible: function() {
return this.pageType == o.NODE;
}
},
pagePrefab: {
displayName: "内容预制体",
default: null,
type: cc.Prefab,
visible: function() {
return this.pageType == o.PREFAB;
}
},
pageParent: {
displayName: "预制体父节点",
default: null,
type: cc.Node,
visible: function() {
return this.pageType == o.PREFAB;
}
},
pageOnLoad: {
displayName: "是否直接加载",
default: !1,
visible: function() {
return this.pageType == o.PREFAB;
}
},
scale: 1,
pagePrefab_review: {
displayName: "提审内容预制体",
default: null,
type: cc.Prefab,
visible: function() {
return this.pageType == o.PREFAB;
}
},
pageParent_review: {
displayName: "提审内容预制体父节点",
default: null,
type: cc.Node,
visible: function() {
return this.pageType == o.PREFAB;
}
}
}
}), s = cc.Class({
extends: cc.Component,
editor: {
disallowMultiple: !1,
menu: "通用/选项卡"
},
properties: {
tabs: {
default: [],
type: [ c ]
},
defaultIndex: -1,
_index: -1,
index: {
get: function() {
return this._index;
}
},
indexItem: {
visible: !1,
get: function() {
return this.tabs[this._index];
}
},
useSound: !0
},
onLoad: function() {
for (var e, t = this, n = function() {
var i = e.value;
i.selectNode.active = !1;
i.unSelectNode.active = !0;
if (i.pagePrefab && i.pageParent) {
var n = i.pagePrefab, a = i.pageParent;
if (Global.isIOSAndroidReview() && i.pagePrefab_review) {
n = i.pagePrefab_review;
a = i.pageParent_review;
}
i.pageNode = cc.instantiate(n);
i.pageNode.active = i.pageOnLoad;
a.addChild(i.pageNode);
}
if (i.pageNode) {
i.pageNode.active = !1;
i.pageNode.scale = i.scale;
}
if (i.unSelectNode) {
var o = i.unSelectNode.addComponent(cc.Button);
o && o.node.on("click", function() {
t.useSound && cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
t.onSelectPage(i, !1);
});
}
}, a = i(this.tabs); !(e = a()).done; ) n();
this.setPage(this.defaultIndex);
},
setChangeCallback: function(e) {
this.callback = e;
},
setPreChangeCallback: function(e) {
this.preCallback = e;
},
onSelectPage: function(e, t) {
if (t || !this.preCallback || !this.preCallback(this.tabs.indexOf(e), e, this.tabs)) {
this._index = this.tabs.indexOf(e);
for (var n, a = i(this.tabs); !(n = a()).done; ) {
var o = n.value;
o.selectNode.active = o == e;
o.unSelectNode.active = o != e;
o.pageNode && (o.pageNode.active = o == e);
}
e.pageNode && StatisticsMgr.reqReportNow(ReportConfig.TABBAR_OPEN, e.pageNode.name);
this.callback && this.callback(this._index, e, this.tabs);
}
},
setPage: function(e, t) {
this.index != e && this.tabs[e] && this.onSelectPage(this.tabs[e], t);
}
});
t.exports = s;
cc._RF.pop();
}, {} ],
Table_Area: [ function(e, t) {
"use strict";
cc._RF.push(t, "059cduOA3NK64juK8IMGoHe", "Table_Area");
cc.Class({
extends: cc.Component,
properties: {
idx: {
default: -1,
type: cc.Integer,
tooltip: "方位定义"
}
},
onLoad: function() {
Global.btnClickEvent(this.node, this.onClickArea, this);
},
start: function() {},
onClickArea: function() {
Global.TableSoundMgr.playCommonEff("com_click");
Global.dispatchEvent("bet_area", this.idx);
},
setAeranEnable: function(e) {
this.node.getComponent(cc.Button).interactable = e;
}
});
cc._RF.pop();
}, {} ],
Table_BetAreas_Base: [ function(e, t) {
"use strict";
cc._RF.push(t, "3fe42yUx91P8bOwvmaaN6hc", "Table_BetAreas_Base");
var i = e("Table_Area");
cc.Class({
extends: cc.Component,
properties: {
AreaList: {
default: [],
type: [ i ]
},
prefab_chip: cc.Prefab,
_chip_pool: null,
_active_chips: [],
_my_bet_vals: [],
_bet_record: [],
chips_show_node: cc.Node
},
onLoad: function() {
this.resetMyBets();
cc.vv.ChipPool || (this._chip_pool = new cc.NodePool());
Global.registerEvent("bet_area", this.onEventBetArea, this);
},
start: function() {
this.init();
},
init: function() {
var e = 20, t = cc.vv.gameData.getGameCfg();
t && t.init_area_chips && (e = t.init_area_chips);
for (var i = cc.vv.gameData.getBetChipList(), n = 0; n < this.AreaList.length; n++) {
var a = this.AreaList[n], o = a.idx - 1, c = a.node, s = cc.vv.gameData.getAreaTotalBet(a.idx), r = cc.vv.gameData.getAreaChipsDetail(a.idx);
this.setAreaTotalBet(c, s);
var l = cc.vv.gameData.getMyBetByAreanIdx(o);
this.setAreaMyBet(c, l);
for (var d = cc.find("chip_container", c), h = 0, _ = 0; _ < i.length; _++) for (var p = i[_], u = r[_], f = 0; f < u; f++) {
this._create_chip(p, d, a.idx);
if ((h += 1) > e) break;
}
}
this.resetMyBets();
},
setAreaTotalBet: function(e, t) {
var i = cc.find("totalbet", e);
if (i) {
i.getComponent(cc.Label) ? Global.setLabelString("totalbet", e, Global.FormatNumToComma(t)) : Global.setLabelString("lbl", i, Global.FormatNumToComma(t));
i.active = t > 0;
}
},
setAreaMyBet: function(e, t) {
var i = cc.find("mybet", e);
if (i) {
i.active = t > 0;
Global.setLabelString("lbl", i, Global.FormatNumToComma(t));
}
},
getBetAreaNode: function(e) {
for (var t = 0; t < this.AreaList.length; t++) {
var i = this.AreaList[t], n = i.idx, a = i.node;
if (e == n) return a;
}
},
_create_chip: function(e, t, i) {
var n;
if (cc.vv.ChipPool) n = cc.vv.ChipPool.get(); else if (this._chip_pool.size() > 0) n = this._chip_pool.get(); else {
n = cc.instantiate(this.prefab_chip);
this._newCont = this._newCont || 1;
cc.log("创建Chips:" + this._newCont++);
}
n.active = !0;
n.getComponent("Table_BetChip_Base").init(e);
n.getComponent("Table_BetChip_Base").setClickEnable(!1);
var a = cc.vv.gameData.getGameCfg();
n.scale = a.chipscale || .42;
n.parent = this.getChipShowNode();
t && (n.position = this._randomAreanPostion(t));
var o = {};
o.areaIdx = i;
o.chipNode = n;
this._active_chips.push(o);
return n;
},
_checkCanRecycleChip: function() {},
clearTableBet: function(e) {
for (var t = 0; t < this._active_chips.length; t++) {
var i = this._active_chips[t].chipNode;
this._recycleChip(i);
}
this._active_chips = [];
if (!e) {
this.updateBetTotalNum();
this.clearMaxRateIcon();
}
},
clearMaxRateIcon: function() {
for (var e = 0; e < this.AreaList.length; e++) {
var t = this.AreaList[e], i = cc.find("max_rate", t.node);
i && i.destroy();
}
},
onEventBetArea: function(e) {
var t = e.detail;
if (cc.vv.gameData.getIsFirstBet()) {
cc.vv.gameData.clearLastBet();
cc.vv.gameData.setIsFirstBet(!1);
cc.vv.gameData.getBottomScript().checkShowRebet();
}
var i = cc.vv.gameData.getScriptGame()._getBetListScript().getSelectChipVal();
cc.vv.gameData.isCoinEncough(i) ? this._actionBet(i, t) : cc.vv.gameData.showChargeTips();
},
_actionBet: function(e, t, i) {
var n = cc.vv.gameData.getScriptGame()._getBetListScript().getChipNodeByVal(e);
this._nodeDobetAni(n);
i || this.flyChip(n, e, t);
this.updateMyBets(t, e);
this.playClickAnim(t);
},
playClickAnim: function() {},
playRaterDoBet: function(e, t, i) {
var n = this;
this._nodeDobetAni(e);
for (var a = cc.vv.gameData.countChipsTotalVal(t), o = 0; o < a.length; o++) {
var c = a[o];
cc.vv.gameData.updateAreanBetData(i, c);
}
if (!this._bFlyrater) {
this._bFlyrater = !0;
var s, r = this.getBetAreaNode(i), l = r.convertToNodeSpaceAR(e.convertToWorldSpaceAR(cc.v2(0, 0)));
r && (s = cc.find("rater", r) ? r.convertToNodeSpaceAR(cc.find("rater", r).convertToWorldSpaceAR(cc.v2(0, 0))) : r.convertToNodeSpaceAR(cc.find("totalbet", r).convertToWorldSpaceAR(cc.v2(-100, 0))));
cc.loader.loadRes("Table_Common/TableRes/prefab/fly_rater", cc.Prefab, function(e, t) {
if (!e && cc.isValid(r)) {
var i = cc.find("max_rate", r), a = cc.instantiate(t);
a.position = l;
a.parent = r;
a.name = "max_rate";
var o = l, c = cc.v2(s.x, l.y);
s.y > l.y && (c = cc.v2(l.x, s.y));
var d = s, h = cc.find("icon", a), _ = cc.find("par", a), p = cc.vv.gameData.getGameCfg();
h.scale = p.ratescale || .6;
_.scale = p.ratescale || .6;
_.active = !0;
_.getComponent(cc.ParticleSystem).resetSystem();
var u = cc.tween().bezierTo(.8, cc.v2(0, 0), cc.v2(c.x - o.x, c.y - o.y), cc.v2(d.x - o.x, d.y - o.y));
u.clone(h).start();
u.clone(_).call(function() {
_.active = !1;
n._bFlyrater = null;
}).start();
i ? cc.tween(a).delay(.8).removeSelf().start() : cc.tween(a).delay(.8).start();
}
});
}
},
playDoBetAni: function(e, t, i, n) {
if (!n) {
this._nodeDobetAni(e);
this.flyChip(e, t, i);
}
cc.vv.gameData.updateAreanBetData(i, t);
this.updateBetTotalNum();
},
_nodeDobetAni: function(e) {
Global.TableSoundMgr.playCommonEff("com_dobet");
if (0 == e.getNumberOfRunningActions()) {
var t = this.node.convertToNodeSpaceAR(e.convertToWorldSpaceAR(cc.v2(0, 0))), i = !!e.getComponent("Table_BetChip_Base"), n = null;
t.y < 0 && i && (n = cc.v2(0, 20));
n || (t.x < 0 ? i || (n = cc.v2(20, 0)) : t.x > 0 && (i || (n = cc.v2(-20, 0))));
e.stopAllActions();
cc.tween(e).to(.1, {
x: e.x + n.x,
y: e.y + n.y
}, {
easing: "quadIn"
}).to(.1, {
x: e.x,
y: e.y
}).start();
}
},
flyChip: function(e, t, i) {
var n = this;
if (e && t) {
var a = this.getBetAreaNode(i);
if (a) {
var o = this._randomAreanPostion(cc.find("chip_container", a)), c = this.node.convertToNodeSpaceAR(e.convertToWorldSpaceAR(cc.v2(0, 0))), s = this._create_chip(t, null, i);
s.position = c;
var r = Math.abs(c.sub(o).mag()) / 1800;
cc.tween(s).to(r, {
position: o
}, {
easing: "quadOut"
}).delay(1 / 60).call(function() {
n._checkCanRecycleChip(i);
}).start();
} else cc.log("未找到押注方位:" + i);
}
},
moveChip: function(e, t, i, n, a, o, c) {
var s = this;
c ? e.parent = c : c = this.node;
var r = c.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.v2(0, 0))), l = cc.v2(0, 0);
if (o) {
l.x += o.x;
l.y += o.y;
}
var d = c.convertToNodeSpaceAR(i.convertToWorldSpaceAR(l)), h = Math.abs(r.sub(d).mag()) / 1700;
cc.tween(e).to(h, {
position: d
}).call(function() {
a && s.removeOneChip(e);
n && n(e);
}).start();
return h;
},
removeOneChip: function(e) {
if (cc.isValid(this._active_chips)) for (var t = 0; t < this._active_chips.length; t++) {
var i = this._active_chips[t];
if (i.chipNode == e) {
this._active_chips.splice(t, 1);
this._recycleChip(i.chipNode);
break;
}
}
},
getAreaChips: function(e) {
for (var t = [], i = 0; i < this._active_chips.length; i++) {
var n = this._active_chips[i];
n.areaIdx == e && t.push(n);
}
return t;
},
_isAvailAreaIdx: function(e) {
for (var t = !1, i = 0; i < this.AreaList.length; i++) if (e == this.AreaList[i].idx) {
t = !0;
break;
}
return t;
},
getAllChips: function() {
return this._active_chips;
},
clearAreaBets: function(e) {
for (var t = 0; t < this._active_chips.length; ) {
var i = this._active_chips[t];
if (i.areaIdx != e) t++; else {
this._active_chips.splice(t, 1);
this._recycleChip(i.chipNode);
}
}
},
_randomAreanPostion: function(e) {
var t = this.getChipShowNode(), i = 2;
Global.random(1, 10) > 4 && (i = 4);
var n = Global.random(-e.width / i, e.width / i), a = Global.random(-e.height / i, e.height / i);
return t.convertToNodeSpaceAR(e.convertToWorldSpaceAR(cc.v2(n, a)));
},
getChipShowNode: function() {
return this.chips_show_node || this.node;
},
setCanSelectChips: function(e) {
for (var t = 0; t < this.AreaList.length; t++) this.AreaList[t].setAeranEnable(e);
},
resetMyBets: function() {
for (var e = cc.vv.gameData.getBetChipList(), t = 0; t < this.AreaList.length; t++) {
this._my_bet_vals[t] = [];
for (var i = 0; i < e.length; i++) this._my_bet_vals[t].push(0);
}
},
updateMyBets: function(e, t) {
var i = this._my_bet_vals[e - 1];
if (i) {
i[cc.vv.gameData.getChipIdxByVal(t)] += 1;
cc.vv.gameData.addMyCoin(-t, !0);
cc.vv.gameData.addMyBet(e, t);
cc.vv.gameData.updateAreanBetData(e, t);
this.updateBetTotalNum();
this.sendBetReq();
}
},
updateBetTotalNum: function() {
for (var e = 0; e < this.AreaList.length; e++) {
var t = this.AreaList[e], i = t.idx - 1, n = t.node, a = cc.vv.gameData.getAreaTotalBet(t.idx);
this.setAreaTotalBet(n, a);
var o = cc.vv.gameData.getMyBetByAreanIdx(i);
this.setAreaMyBet(n, o);
}
},
sendBetReq: function() {
cc.vv.gameData.sendBetReq(this._my_bet_vals);
for (var e = 0; e < this._my_bet_vals.length; e++) {
this._bet_record[e] = this._bet_record[e] || [];
for (var t = 0; t < this._my_bet_vals[e].length; t++) {
this._bet_record[e][t] || (this._bet_record[e][t] = 0);
this._bet_record[e][t] += this._my_bet_vals[e][t];
}
}
this.resetMyBets();
},
_recycleChip: function(e) {
if (cc.vv.ChipPool) {
e.stopAllActions();
cc.vv.ChipPool.put(e);
} else this._chip_pool.put(e);
}
});
cc._RF.pop();
}, {
Table_Area: "Table_Area"
} ],
Table_BetChip_Base_Ex: [ function(e, t) {
"use strict";
cc._RF.push(t, "0b0e8woKElOE6UQ3pT4Ow+L", "Table_BetChip_Base_Ex");
var i = cc.Color.WHITE, n = cc.color(192, 192, 192, 255);
cc.Class({
extends: e("Table_BetChip_Base"),
setClickEnable: function(e) {
this._bCanClick = e;
},
setCanSelect: function(e) {
this.node.color = e ? i : n;
},
setSelect: function(e) {
var t = this;
if (this._bSelect != e) {
this._bSelect = e;
this.node.stopAllActions();
e ? cc.tween(this.node).to(.1, {
scale: 1.2,
y: 16
}, {
easing: "quadIn"
}).call(function() {
t.showSelectFlag(!0);
}).start() : cc.tween(this.node).to(.1, {
scale: 1,
y: 0
}, {
esaing: "quadOut"
}).call(function() {
t.showSelectFlag(!1);
}).start();
}
},
getSelect: function() {
return this._bSelect;
}
});
cc._RF.pop();
}, {
Table_BetChip_Base: "Table_BetChip_Base"
} ],
Table_BetChip_Base: [ function(e, t) {
"use strict";
cc._RF.push(t, "e3f1ab8WgFAxKB6c8xo+h26", "Table_BetChip_Base");
cc.Class({
extends: cc.Component,
properties: {
_chipdata: null,
atlas: cc.SpriteAtlas,
_bSelect: !1,
_bCanClick: !1
},
onLoad: function() {
Global.btnClickEvent(this.node, this.onClickBet, this);
},
start: function() {},
init: function(e) {
this._chipdata = e;
this._showChip();
},
getChipVal: function() {
return this._chipdata;
},
setScale: function(e) {
this.node.scale = e;
},
_showChip: function() {
this.node.getComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame(this._chipdata);
},
onClickBet: function() {
if (this._bCanClick) {
Global.TableSoundMgr.playCommonEff("com_click");
Global.dispatchEvent("change_chip", this._chipdata);
}
},
setClickEnable: function(e) {
this._bCanClick = e;
this.node.getComponent(cc.Button).enabled = e;
},
setCanSelect: function(e) {
this.node.getComponent(cc.Button).interactable = e;
e ? this.showSelectFlag(this._bSelect) : this.showSelectFlag(!1);
},
setSelect: function(e) {
this._bSelect = e;
if (e) {
this.node.y = 16;
this.node.scale = 1.2;
this.showSelectFlag(!0);
} else {
this.node.y = 0;
this.node.scale = 1;
this.showSelectFlag(!1);
}
},
showSelectFlag: function(e) {
cc.find("sel", this.node).active = e;
}
});
cc._RF.pop();
}, {} ],
Table_BetList_Base_Ex: [ function(e, t) {
"use strict";
cc._RF.push(t, "4c2eb+McP9Fao7s1x17hxWL", "Table_BetList_Base_Ex");
cc.Class({
extends: cc.Component,
properties: {
spaceX: 10,
chipWidth: 160,
content: cc.Node,
_betlist: [],
_chipList: [],
_bCanSelect: !1
},
onLoad: function() {
this.onInit();
this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
},
start: function() {},
onInit: function() {
var e = cc.vv.gameData.getBetChipList();
this._betlist = e;
var t = this.content.children[0];
this._chipList.push(t.getComponent("Table_BetChip_Base_Ex"));
for (var i = e.length, n = 1; n < i; n++) {
var a = cc.instantiate(t);
this.content.addChild(a);
this._chipList.push(a.getComponent("Table_BetChip_Base_Ex"));
}
this._startX = -(this.chipWidth + this.spaceX) * (i - 1) / 2;
for (var o = 0; o < this._chipList.length; o++) {
var c = this._chipList[o];
c.node.x = this._startX + (this.chipWidth + this.spaceX) * o;
c.init(this._betlist[o]);
}
this.setSelectChipVal(e[0]);
this.reLayout();
},
reLayout: function() {
for (var e = 0; e < this._chipList.length; e++) {
var t = this._chipList[e];
t.getSelect() ? t.node.zIndex = 100 : t.node.zIndex = e;
}
},
onTouchStart: function(e) {
this.onTouchMove(e);
},
onTouchMove: function(e) {
for (var t = e.getLocation(), i = 1e6, n = -1, a = this.node.convertToNodeSpaceAR(t), o = 0; o < this._chipList.length; o++) {
var c = this._chipList[o];
if (c.node.getBoundingBox().contains(a)) {
var s = Math.abs(a.x - c.node.x);
if (s < i) {
i = s;
n = o;
}
}
}
if (n >= 0) {
var r = this._chipList[n];
this._select_chip_node != r.node && this.setSelectChipVal(r.getChipVal());
}
},
setCanSelectChips: function(e) {
this._bCanSelect = e;
for (var t = 0; t < this._chipList.length; t++) {
var i = this._chipList[t].getChipVal(), n = e;
e && i > cc.vv.gameData.getMyCoin() && (n = !1);
this._chipList[t].setCanSelect(n);
}
},
getSelectChipVal: function() {
return this._select_val;
},
getSelectChipNode: function() {
return this._select_chip_node;
},
getChipNodeByVal: function(e) {
for (var t = 0; t < this._chipList.length; t++) {
var i = this._chipList[t];
if (i.getChipVal() == e) return i.node;
}
},
setSelectChipVal: function(e) {
this._select_val = e;
for (var t = 0; t < this._chipList.length; t++) {
var i = this._chipList[t], n = i.getChipVal() == e;
i.setSelect(n);
n && (this._select_chip_node = i.node);
}
this.reLayout();
},
onEventRefushSelect: function(e) {
var t = e.detail;
this.setSelectChipVal(t);
}
});
cc._RF.pop();
}, {} ],
Table_BetList_Base: [ function(e, t) {
"use strict";
cc._RF.push(t, "eeb3dgBv85OZrb1tlzDVLjQ", "Table_BetList_Base");
var i = e("List");
cc.Class({
extends: cc.Component,
properties: {
_betlist: [],
listview: i,
_bCanSelect: !1
},
onLoad: function() {
Global.registerEvent("change_chip", this.onEventRefushSelect, this);
var e = cc.vv.gameData.getBetChipList();
this.init(e);
var t = cc.find("arrow", this.node);
Global.btnClickEvent(t, this.onClickArrow, this);
this.listview.getComponent(cc.ScrollView).node.on("scroll-ended", this.onEventScrollEnd, this);
},
start: function() {
if (!this._select_chip_node) {
var e = cc.vv.gameData.getBetChipList()[0];
Global.dispatchEvent("change_chip", e);
}
this.showArrowEnterAni();
},
init: function(e) {
this._betlist = e;
this.listview.numItems = e.length;
},
showArrowEnterAni: function() {
var e = cc.find("arrow", this.node);
e.x = 560;
cc.tween(e).to(.2, {
x: 495
}).start();
},
onListRender: function(e, t) {
var i = this._betlist[t];
if (i) {
e.active = !0;
var n = cc.find("chip", e).getComponent("Table_BetChip_Base");
n.init(i);
n.setClickEnable(!0);
var a = this._bCanSelect;
a && i > cc.vv.gameData.getMyCoin() && (a = !1);
n.setSelect(this._select_val == i);
n.setCanSelect(a);
} else e.active = !1;
},
setCanSelectChips: function(e) {
this._bCanSelect = e;
for (var t = this.listview.getComponentsInChildren("Table_BetChip_Base"), i = 0; i < t.length; i++) {
var n = t[i].getChipVal(), a = e;
e && n > cc.vv.gameData.getMyCoin() && (a = !1);
t[i].setCanSelect(a);
}
},
getSelectChipVal: function() {
return this._select_val;
},
getSelectChipNode: function() {
return this._select_chip_node;
},
setSelectChipVal: function(e) {
this._select_val = e;
for (var t = this.listview.getComponentsInChildren("Table_BetChip_Base"), i = 0; i < t.length; i++) {
var n = t[i].getChipVal() == e;
t[i].setSelect(n);
n && (this._select_chip_node = t[i].node);
}
},
onEventRefushSelect: function(e) {
var t = e.detail;
this.setSelectChipVal(t);
},
onClickArrow: function() {
cc.isValid(this.listview) && this.listview.getComponent(cc.ScrollView).scrollToRight(.1);
},
onEventScrollEnd: function() {
var e = this.listview.getComponent(cc.ScrollView).getScrollOffset(), t = this.listview.getComponent(cc.ScrollView).getMaxScrollOffset(), i = !0;
e.x > t.x - 20 && (i = !1);
cc.find("arrow", this.node).active = i;
}
});
cc._RF.pop();
}, {
List: "List"
} ],
Table_Bottom_Base: [ function(e, t) {
"use strict";
cc._RF.push(t, "c3caeGpOvhNC4Z573Hg3Atp", "Table_Bottom_Base");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
cc.vv.gameData.setBottomScript(this);
this.showMyInfo();
Global.btnClickEvent(cc.find("btn_shop", this.node), this.onClickShop, this);
var e = cc.find("node_rebet/btn_rebet", this.node);
e && Global.btnClickEvent(e, this.onClickRebet, this);
var t = cc.find("node_rebet/btn_rebet2", this.node);
e && Global.btnClickEvent(t, this.onClickRebet2, this);
},
start: function() {},
showMyInfo: function() {
var e = cc.vv.gameData.getMyInfo(), t = cc.find("my", this.node), i = {
coin: e.coin,
playername: cc.vv.UserManager.nickName,
uid: cc.vv.UserManager.uid
};
i.usericon = cc.vv.UserManager.userIcon;
i.avatarFrame = cc.vv.UserManager.avatarframe;
t.getComponent("Table_Player_Base").init(i);
},
showCoin: function() {
var e = cc.find("my", this.node), t = cc.vv.gameData.getMyCoin();
e.getComponent("Table_Player_Base").showCoin(t);
},
checkShowRebet: function() {
var e = cc.vv.gameData.getLastbet(), t = cc.vv.gameData.getIsFirstBet(), i = cc.vv.gameData.getGameStatus();
this._showRebetNode(!!e && t && 2 == i);
},
_showRebetNode: function(e) {
var t = cc.find("node_rebet", this.node);
t && (t.active = e);
},
getMyNode: function() {
return cc.find("my", this.node);
},
getMyNodeHead: function() {
return cc.find("my/head_icon", this.node);
},
onClickShop: function() {
Global.TableSoundMgr.playCommonEff("com_click");
StatisticsMgr.reqReport(ReportConfig.SG_BTN_SHOP);
if (Global.isIOSAndroidReview()) cc.vv.PopupManager.addPopup("YD_Pro/Review/yd_more_coins"); else {
var e = "YD_Pro/prefab/yd_shop";
cc.vv.UserManager.isbindphone > 0 || (e = "YD_Pro/prefab/Register");
cc.vv.PopupManager.addPopup(e, {
onShow: function() {}
});
}
},
onClickRebet: function() {
this._doRebet(1);
},
onClickRebet2: function() {
this._doRebet(2);
},
_doRebet: function(e) {
Global.TableSoundMgr.playCommonEff("com_click");
this._showRebetNode(!1);
var t = Global.copy(cc.vv.gameData.getLastbet()), i = cc.vv.gameData.getIsFirstBet();
if (t && i) {
cc.vv.gameData.setIsFirstBet(!1);
cc.vv.gameData.clearLastBet();
var n = this.getLastTotal(t) * e;
if (cc.vv.gameData.isCoinEncough(n)) {
var a = cc.vv.gameData.getScriptGame()._getBetAreaScript();
if (a) for (var o = 0, c = 0; c < t.length; c++) for (var s = t[c], r = 0; r < s.length; r++) for (var l = r + 1, d = s[r], h = 0; h < d.length; h++) {
var _ = d[h] * e;
if (_ > 0) for (var p = cc.vv.gameData.getChipValByIdx(h), u = 0; u < _; u++) {
o += 1;
a._actionBet(p, l, o > 25);
}
}
} else cc.vv.gameData.showChargeTips();
}
},
getLastTotal: function(e) {
var t = 0;
if (cc.vv.gameData.getScriptGame()._getBetAreaScript()) for (var i = 0; i < e.length; i++) for (var n = e[i], a = 0; a < n.length; a++) for (var o = n[a], c = 0; c < o.length; c++) {
var s = o[c];
if (s > 0) for (var r = cc.vv.gameData.getChipValByIdx(c), l = 0; l < s; l++) t += r;
}
return t;
}
});
cc._RF.pop();
}, {} ],
Table_Chips_Nodepool: [ function(e, t) {
"use strict";
cc._RF.push(t, "5b86cKytiRCr4CLNcIget0A", "Table_Chips_Nodepool");
cc.Class({
extends: cc.Component,
statics: {
_chip_pool: null,
_chip_node: null,
init: function() {
var e = this;
this._chip_pool = new cc.NodePool();
this._chip_node || cc.loader.loadRes("Table_Common/TableRes/prefab/chip", cc.Prefab, function(t, i) {
if (!t) {
e._chip_node = cc.instantiate(i);
e._chip_node.active = !1;
cc.game.addPersistRootNode(e._chip_node);
}
});
},
createDefault: function(e) {
this._bStart = e;
},
get: function() {
if (this._chip_pool) return this._chip_pool.size() > 0 ? this._chip_pool.get() : this._createOne();
},
put: function(e) {
this._chip_pool.put(e);
},
_createOne: function() {
var e = cc.instantiate(this._chip_node);
e.active = !1;
this._chipcnt || (this._chipcnt = 1);
return e;
},
update: function() {
if (this._bStart && this._chip_node && this._chip_pool) {
var e = this._createOne();
this._chip_pool.put(e);
this._bStart -= 1;
}
}
}
});
cc._RF.pop();
}, {} ],
Table_Config: [ function(e, t) {
"use strict";
cc._RF.push(t, "413acynM9BKh7uxclP8az30", "Table_Config");
e("GlobalVar");
var i = e("MsgIdDef");
i.YD_RUMMY_DISCARD = 29204;
i.YD_RUMMY_DEAL = 126003;
i.YD_RUMMY_DROP = 29201;
i.YD_RUMMY_COLLECT_CARD = 29202;
i.YD_RUMMY_GROUP_CARD = 29205;
i.YD_RUMMY_ROUND_OVER = 126005;
i.YD_RUMMY_ROUND_SETTLE = 126006;
i.YD_RUMMY_SHOW_RESULT = 29203;
i.YD_RUMMY_CONFIRM_RESULT = 29206;
i.YD_RUMMY_AUTO_CHANGE = 126004;
i.YD_RUMMY_AUTO_CANCEL = 25707;
i.YD_RUMMY_CHAT_MSG = 100202;
i.YD_RUMMY_RECOUNT = 100071;
i.GAME_BET_RECORDS = 193;
i.GAME_RESULT_HISTORY = 196;
i.GAME_SEND_READY = 25708;
i.GAME_PULL_READY_STATUE = 126002;
i.GAME_DISMISS_ROOM = 126012;
cc._RF.pop();
}, {
GlobalVar: "GlobalVar",
MsgIdDef: "MsgIdDef"
} ],
Table_CountDown: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "62a8cwSMcdNkarWqal9m3u4", "Table_CountDown");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.lightNode = null;
t.greenFnt = null;
t.redFnt = null;
t.yellowFnt = null;
t._timelife = 0;
t.colorMap = [ [ 246, 72, 77 ], [ 246, 72, 77 ], [ 246, 72, 77 ], [ 246, 72, 77 ], [ 255, 168, 0 ], [ 255, 168, 0 ], [ 255, 168, 0 ], [ 57, 233, 182 ], [ 57, 233, 182 ], [ 57, 233, 182 ], [ 57, 233, 182 ] ];
return t;
}
Object.defineProperty(t.prototype, "timelife", {
get: function() {
return this._timelife;
},
set: function(e) {
this._timelife = e;
this.label.string = e.toString();
cc.tween(this.label.node).to(.1, {
scale: 1.3
}).to(.1, {
scale: 1
}).start();
this.updateColor();
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
cc.tween(this.lightNode).by(.5, {
angle: 180
}).repeatForever().start();
};
t.prototype.show = function(e) {
if (!(e <= 0)) {
this.node.active = !0;
this.timelife = e;
this.schedule(this.tick, 1);
}
};
t.prototype.hide = function() {
this.unschedule(this.tick);
this.node.active = !1;
};
t.prototype.tick = function() {
if (this.timelife > 0) {
this.timelife--;
this.timelife >= 0 && this.playRecountEffect();
if (this.timelife <= 0) {
this.hide();
this.callback && this.callback();
}
}
};
t.prototype.updateColor = function() {
var e = Math.max(this.timelife, 0);
e = Math.min(this.timelife, 10);
var t = this.colorMap[e];
this.lightNode.color = new cc.Color(t[0], t[1], t[2]);
this.timelife >= 7 ? this.label.font = this.greenFnt : this.timelife >= 4 ? this.label.font = this.yellowFnt : this.label.font = this.redFnt;
};
t.prototype.playRecountEffect = function() {
cc.vv.AudioManager.playEff("Table_Common/TableRes/", "com_timeAlarm", !0);
};
__decorate([ o(cc.Label) ], t.prototype, "label", void 0);
__decorate([ o(cc.Node) ], t.prototype, "lightNode", void 0);
__decorate([ o(cc.Font) ], t.prototype, "greenFnt", void 0);
__decorate([ o(cc.Font) ], t.prototype, "redFnt", void 0);
__decorate([ o(cc.Font) ], t.prototype, "yellowFnt", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
Table_FlyScore: [ function(e, t) {
"use strict";
cc._RF.push(t, "02013mu9apGIqp2fKNaH1Us", "Table_FlyScore");
cc.Class({
extends: cc.Component,
properties: {
win_font: cc.BitmapFont,
lose_font: cc.BitmapFont,
win_sprite: cc.SpriteFrame,
lose_sprite: cc.SpriteFrame
},
onLoad: function() {
this._org_x = this.node.x;
this._org_y = this.node.y;
this._orgWorldPos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));
},
start: function() {},
setScore: function(e) {
var t = this;
this.node.stopAllActions();
var i = this.lose_font, n = this.lose_sprite, a = "";
if (e > 0) {
i = this.win_font;
n = this.win_sprite;
a = "+";
}
var o = cc.find("val", this.node).getComponent(cc.Label);
o.string = a + Global.FormatNumToComma(e);
o.font = i;
this.node.getComponent(cc.Sprite).spriteFrame = n;
this.node.active = !0;
this.node.scale = 1.5;
this.node.y = this._org_y;
o._forceUpdateRenderData(!0);
var c = o.node.width * this.node.scale, s = this._orgWorldPos;
s.x - c / 2 < 0 ? this.node.x = this._org_x + Math.abs(s.x - c / 2) : s.x + c / 2 > cc.winSize.width ? this.node.x = this._org_x - Math.abs(cc.winSize.width - (s.x + c / 2)) : this.node.x = this._org_x;
cc.tween(this.node).to(.5, {
y: this._org_y + 60
}).delay(1).call(function() {
t.node.active = !1;
}).start();
}
});
cc._RF.pop();
}, {} ],
Table_GameData_Base: [ function(e, t) {
"use strict";
cc._RF.push(t, "ad5ebxHApNBeLt9cuF6mmcH", "Table_GameData_Base");
cc.Class({
extends: cc.Component,
properties: {
_deskInfo: null,
_gameId: null,
_cfg: null,
_atlas: []
},
start: function() {},
init: function(e, t) {
this._deskInfo || this.RegisterMsg();
this.deskInfo = e;
this._deskInfo = e;
this._gameId = t;
if (1 == e.deskFlag || e.isReconnect) {
this.setResultMsg(null);
this.setShowResultFinish(!0);
var i = cc.director.getScene().getChildByName("yd_charge");
i && cc.game.addPersistRootNode(i);
cc.vv.BroadcastManager && cc.vv.BroadcastManager.stop();
var n = cc.vv.GameDataCfg.getGameData(this.getGameId());
if (n) {
var a = n.gameScene;
a === Global.SCENE_NAME.HALL_PRELOAD || a === Global.SCENE_NAME.HALL || a === Global.SCENE_NAME.LOGIN || a === Global.SCENE_NAME.LAUNCH || a === Global.SCENE_NAME.HOTUPDATE ? cc.director.loadScene(n.gameScene, function(e, t) {
i && (i.parent = t);
cc.vv.BroadcastManager && cc.vv.BroadcastManager.run();
}) : cc.assetManager.loadBundle(n.gameScene, null, function(e, t) {
e ? AppLog.err(e) : t.loadScene(n.gameScene, function() {
i && (i.parent = target);
cc.vv.BroadcastManager && cc.vv.BroadcastManager.run();
});
});
}
}
},
RegisterMsg: function() {
cc.vv.NetManager.registerMsg(MsgId.GAME_LEVELROOM, this.OnRcvNetExitRoom, this);
cc.vv.NetManager.registerMsg(MsgId.PULL_FREE_STATUE, this.onRcvFreeStatu, this);
cc.vv.NetManager.registerMsg(MsgId.PULL_BETTING_STATUE, this.onRcvBettingStatu, this);
cc.vv.NetManager.registerMsg(MsgId.PULL_RESULT_STATUE, this.onRcvResultStatu, this);
cc.vv.NetManager.registerMsg(MsgId.TABLE_BET_REQ, this.onRcvMyDoBet, this);
cc.vv.NetManager.registerMsg(MsgId.PULL_OTHER_BET, this.onRcvOtherDoBet, this);
cc.vv.NetManager.registerMsg(MsgId.PULL_TABLE_PLAYER, this.onRcvTablePlayerJoin, this);
cc.vv.NetManager.registerMsg(MsgId.PULL_OBSERVERS_NUM, this.OnRcvNetObserNum, this);
cc.vv.NetManager.registerMsg(MsgId.LEFT_TABLE_PLAYER, this.OnRcvTablePlayerLeft, this);
cc.vv.NetManager.registerMsg(MsgId.MONEY_CHANGED, this.onRcvNetMoneyChanged, this);
},
UnregisterMsg: function() {
cc.vv.NetManager.unregisterMsg(MsgId.GAME_LEVELROOM, this.OnRcvNetExitRoom, !1, this);
cc.vv.NetManager.unregisterMsg(MsgId.PULL_FREE_STATUE, this.onRcvFreeStatu, !1, this);
cc.vv.NetManager.unregisterMsg(MsgId.PULL_BETTING_STATUE, this.onRcvBettingStatu, !1, this);
cc.vv.NetManager.unregisterMsg(MsgId.PULL_RESULT_STATUE, this.onRcvResultStatu, !1, this);
cc.vv.NetManager.unregisterMsg(MsgId.TABLE_BET_REQ, this.onRcvMyDoBet, !1, this);
cc.vv.NetManager.unregisterMsg(MsgId.PULL_OTHER_BET, this.onRcvOtherDoBet, !1, this);
cc.vv.NetManager.unregisterMsg(MsgId.PULL_TABLE_PLAYER, this.onRcvTablePlayerJoin, !1, this);
cc.vv.NetManager.unregisterMsg(MsgId.PULL_OBSERVERS_NUM, this.OnRcvNetObserNum, !1, this);
cc.vv.NetManager.unregisterMsg(MsgId.LEFT_TABLE_PLAYER, this.OnRcvTablePlayerLeft, !1, this);
cc.vv.NetManager.unregisterMsg(MsgId.MONEY_CHANGED, this.onRcvNetMoneyChanged, !1, this);
},
onExit: function() {
this.UnregisterMsg();
},
clear: function() {
this._deskInfo = null;
cc.vv.gameData = null;
},
isBackgroundReConn: function() {
return !0;
},
getDeskInfo: function() {
return this._deskInfo;
},
getGameCfg: function() {
if (!this._cfg) {
var t = cc.vv.GameDataCfg.getGameData(this.getGameId());
t && t.cfgCmp && (this._cfg = e(t.cfgCmp));
}
return this._cfg;
},
getTableSsid: function() {
return this.getDeskInfo().ssid;
},
setAtlas: function(e) {
this._atlas = [];
for (var t = 0; t < e.length; t++) this._atlas.push(e[t]);
},
getAtlas: function(e) {
return this._atlas[e];
},
showRaterBetAni: function() {
var e = !0;
this._cfg.notShowRaterAni && (e = !1);
return e;
},
ReqBackLobby: function() {
var e = {
c: MsgId.GAME_LEVELROOM
};
e.deskid = this._gameId;
cc.vv.NetManager.send(e);
},
getGameId: function() {
return this._gameId;
},
getBetChipList: function() {
return this._deskInfo.chips;
},
getChipIdxByVal: function(e) {
for (var t, i = this.getBetChipList(), n = 0; n < i.length; n++) if (i[n] == e) {
t = n;
break;
}
return t;
},
getChipValByIdx: function(e) {
return this.getBetChipList()[e];
},
getTablePlayers: function() {
return this._deskInfo.users;
},
setTablePlayers: function(e) {
this._deskInfo.users = Global.copy(e);
},
getMyInfo: function() {
return this._deskInfo.user;
},
getMyCoin: function() {
return this._deskInfo.user && this._deskInfo.user.coin;
},
setMyCoin: function(e) {
this._deskInfo && this._deskInfo.user && (this._deskInfo.user.coin = e);
},
addMyCoin: function(e, t) {
this._deskInfo.user.coin += e;
t && this.refushMyCoin();
},
isCoinEncough: function(e) {
return this.getMyCoin() >= e;
},
refushMyCoin: function() {
this._script_bottom && this._script_bottom.showCoin();
},
getMyBetByAreanIdx: function(e) {
return this._deskInfo.user.round.bets[e];
},
addMyBet: function(e, t) {
this._deskInfo.user.round.bets[e - 1] += t;
},
resetMyRoundBet: function() {
for (var e = this._deskInfo.user.round.bets, t = 0; t < e.length; t++) e[t] = 0;
},
getAreaInfo: function() {
return this._deskInfo.round;
},
getAreaTotalBet: function(e) {
return this.getAreaInfo().bets[e - 1];
},
getAreaChipsDetail: function(e) {
var t = this.getAreaInfo();
if (t && t.chips) return t.chips[e - 1];
},
updateAreanBetData: function(e, t) {
var i = this.getChipIdxByVal(t);
this._deskInfo.round.chips[e - 1][i] += 1;
this._deskInfo.round.bets[e - 1] += t;
},
resetAreaRoundBet: function() {
for (var e = this._deskInfo.round.chips, t = this._deskInfo.round.bets, i = 0; i < t.length; i++) t[i] = 0;
for (var n = 0; n < e.length; n++) for (var a = e[n], o = 0; o < a.length; o++) a[o] = 0;
},
getGameStatus: function() {
return this._deskInfo.state;
},
setGameStatus: function(e, t, i) {
void 0 === t && (t = !0);
this._deskInfo.state = e;
this._script_game && t && this._script_game.doStatusChange(i);
},
getStatusTime: function() {
return this._deskInfo.time;
},
setStatusTime: function(e) {
this._deskInfo.time = e <= 0 ? 0 : e;
},
getResultMsg: function() {
return this._resultMsg;
},
setResultMsg: function(e) {
this._resultMsg = e;
},
getObservers: function() {
return this._deskInfo.playercnt;
},
getGameRecords: function() {
return this._deskInfo.records;
},
addGameRecord: function(e) {
this._deskInfo.records.push(e);
},
getRoundInfo: function() {
return this._deskInfo.round;
},
setScriptGame: function(e) {
this._script_game = e;
},
getScriptGame: function() {
return this._script_game;
},
setBottomScript: function(e) {
this._script_bottom = e;
},
getBottomScript: function() {
return this._script_bottom;
},
getGameDir: function() {
var e = cc.vv.GameItemCfg[this.getGameId()];
if (e) return cc.js.formatStr("%s/", e.name);
},
getFirstBetArea: function(e) {
for (var t = 0, i = 0; i < e.length; i++) for (var n = e[i], a = 0; a < n.length; a++) if (n[a] > 0) {
t = i;
break;
}
return t + 1;
},
countChipsTotalVal: function(e) {
for (var t = [], i = 0; i < e.length; i++) {
var n = e[i];
t[i] = 0;
for (var a = 0; a < n.length; a++) {
var o = this.getChipValByIdx(a);
t[i] += n[a] * o;
}
}
return t;
},
formatVal2Chiplist: function(e) {
for (var t = this.getBetChipList(), i = [], n = e, a = t.length - 1; a >= 0; a--) {
var o = Math.floor(n / t[a]);
n %= t[a];
i[a] = o;
}
return i;
},
sendBetReq: function(e) {
this._lastbets || (this._lastbets = []);
this._lastbets && this._lastbets.push(Global.copy(e));
var t = {
c: MsgId.TABLE_BET_REQ
};
t.chips = e;
cc.vv.NetManager.send(t);
StatisticsMgr.reqReport(ReportConfig.SG_BET);
},
getLastbet: function() {
return this._lastbets;
},
clearLastBet: function() {
this._lastbets = null;
},
setIsFirstBet: function(e) {
this._bFirstBet = e;
},
getIsFirstBet: function() {
return this._bFirstBet;
},
getCurRoundIssue: function() {
return this._deskInfo.issue;
},
setCurRoundIssue: function(e) {
this._deskInfo.issue = e;
},
setShowResultFinish: function(e) {
this._bResultFinish = e;
},
getShowReulstFinish: function() {
return this._bResultFinish;
},
getPlayByUid: function(e) {
for (var t = cc.vv.gameData.getTablePlayers(), i = 0; i < t.length; i++) {
var n = t[i];
if (n.uid == e) return n;
}
},
getMyNode: function() {
for (var e = cc.vv.UserManager.uid, t = cc.find("Canvas").getComponentsInChildren("Table_Player_Base"), i = 0; i < t.length; i++) if (e == t[i].getPlayerInfo().uid) return t[i].node;
},
getObserveNode: function() {
var e = cc.find("Canvas").getComponentInChildren("Table_Observers");
if (e) return e.node;
},
OnRcvNetExitRoom: function(e) {
if (200 == e.code) {
if (101015 == e.spcode) {
cc.vv.FloatTip.show(___("Please complete the game before leaving the room"));
return;
}
this.doExitRoom();
}
},
doExitRoom: function() {
Global.saveLocal("SAVE_FROM_SUBGAME_ID", this._gameId);
StatisticsMgr.httpReport(StatisticsMgr.HTTP_GAME_ENTER, null, this._gameId);
cc.vv.PopupManager.addPopup("BalootClient/BaseRes/prefabs/SceneTranslate", {
noMask: !0,
noCloseHit: !0,
onShow: function(e) {
e.getComponent("SceneTranslate").toHall(function() {
var e = cc.vv.gameData.getScriptGame();
if (cc.isValid(e)) {
var t = e._getBetAreaScript();
cc.isValid(t) && t.clearTableBet(!0);
}
});
}
});
},
onRcvFreeStatu: function(e) {
if (200 == e.code) {
this.setIsFirstBet(!0);
this.setStatusTime(e.time);
this.setCurRoundIssue(e.issue);
e.users && this.setTablePlayers(e.users);
this.resetMyRoundBet();
this.resetAreaRoundBet();
this.setGameStatus(1);
}
},
onRcvBettingStatu: function(e) {
if (200 == e.code) {
this.setIsFirstBet(!0);
this.setStatusTime(e.time);
this.setGameStatus(2, !0, !0);
}
},
onRcvResultStatu: function(e) {
if (200 == e.code) {
this.setShowResultFinish(!1);
e.user && e.user.coin && this.setMyCoin(e.user.coin);
this.setResultMsg(e);
this.setStatusTime(e.time);
this.setGameStatus(3);
}
},
onRcvMyDoBet: function(e) {
if (200 == e.code) {
if (e.spcode) {
101015 == e.spcode || e.spcode;
e.bets && (this._deskInfo.user.round.bets = e.bets);
return;
}
this._deskInfo.round.chips = e.chips;
}
},
onRcvOtherDoBet: function(e) {
if (200 == e.code) {
e.chips, e.uid;
cc.isValid(this._script_game) && this._script_game.playOtherBet(e);
}
},
onRcvTablePlayerJoin: function(e) {
if (200 == e.code) {
var t = e.user.uid;
this._deskInfo.users.push(e.user);
Global.dispatchEvent("Table_Player_Change", t);
}
},
OnRcvNetObserNum: function(e) {
if (200 == e.code) {
this._deskInfo.playercnt = e.count;
var t = cc.find("Canvas").getComponentInChildren("Table_Observers");
cc.isValid(t) && t.showWatchers(e.count);
}
},
OnRcvTablePlayerLeft: function(e) {
e.code;
},
awaitTime: function(e) {
return new Promise(function(t) {
var i = cc.find("Canvas");
if (i.isValid) {
var n = i.getComponent("Table_Logic_Base");
cc.isValid(n) && n.scheduleOnce(function() {
t();
}, e);
}
});
},
update: function() {},
convert16PokertoDatavalue: function(e) {
var t = {};
t.color = 16 * [ 3, 2, 1, 0, 4 ][((240 & e) >> 4) - 1];
var i = 15 & e;
64 == t.color ? 1 == i ? i = 14 : 2 == i && (i = 15) : 14 == i && (i = 1);
t.value = i;
return t;
},
onRcvNetMoneyChanged: function(e) {
if (200 == e.code && cc.vv.UserManager.isMySelf(e.uid)) {
var t = e.coin;
this.setMyCoin(t);
this._script_bottom && this._script_bottom.showCoin();
}
},
showChargeTips: function() {
Global.isYDApp() ? cc.vv.AlertView.show(___("金币不足"), function() {
if (Global.isIOSAndroidReview()) cc.vv.PopupManager.addPopup("YD_Pro/Review/yd_more_coins"); else {
var e = "YD_Pro/prefab/yd_shop";
cc.vv.UserManager.isbindphone > 0 || (e = "YD_Pro/prefab/Register");
cc.vv.PopupManager.addPopup(e, {
onShow: function() {}
});
}
}, function() {}, !1, function() {}, ___("提示"), ___("取消"), ___("Deposit")) : cc.vv.EventManager.emit(EventId.NOT_ENOUGH_COINS);
}
});
cc._RF.pop();
}, {} ],
Table_Game_Base: [ function(e, t) {
"use strict";
cc._RF.push(t, "7366c7cDYVJqoWilk/+BtwT", "Table_Game_Base");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {},
start: function() {},
Init: function() {},
StartGame: function() {
var e = cc.vv.gameData.getGameStatus();
this.showGameByStatus(e);
Global.TableSoundMgr.stopBgm();
var t = cc.vv.gameData.getGameCfg();
if (t.enterRoomEffect) {
Global.TableSoundMgr.playEffect(t.enterRoomEffect);
this.scheduleOnce(function() {
Global.TableSoundMgr.playNormalBgm();
}, .4);
} else Global.TableSoundMgr.playNormalBgm();
},
doStatusChange: function(e) {
var t = cc.vv.gameData.getGameStatus();
this.showGameByStatus(t, e);
},
showGameByStatus: function(e, t) {
1 == e ? this.showIdleStatu() : 2 == e ? this.showBetStatu(t) : 3 == e && this.showResultStatu();
},
showIdleStatu: function() {
this.updateTablePlayer();
this.clearAllBetChips();
this.setCanSelectChips(!1);
this._showWaitResult(!1);
this._showReTime(!0, function() {}, "%s");
},
showBetStatu: function(e) {
var t = this;
this.setCanSelectChips(!0);
this._showWaitResult(!1);
this._showReTime(!0, function() {
cc.isValid(t, !0) && cc.isValid(t.node, !0) && t._showTextTipAni(!0, 2);
t.setCanSelectChips(!1);
}, "%s");
e && this._showTextTipAni(!0, 1);
},
showResultStatu: function() {
this.setCanSelectChips(!1);
this._showReTime(!1);
},
updateTablePlayer: function() {
var e = this._getPlayerListScript();
e && e._showTablePlayers();
},
_showReTime: function(e, t, i, n) {
var a = this, o = cc.vv.gameData.getStatusTime(), c = this.getRetimerNode();
c.active = e;
e && cc.find("val", c).getComponent("ReTimer").setReTimer(o, 1, t, i, function(e) {
if (2 == cc.vv.gameData.getGameStatus()) {
e <= 3 && e > 0 && Global.TableSoundMgr.playCommonEff("com_timeAlarm");
3 == e && a.playRecount3Ani(!0);
}
n && n(e);
});
},
getRetimerNode: function() {
return cc.find("node_retimer", this.node);
},
clearAllBetChips: function() {
var e = this._getBetAreaScript();
e && e.clearTableBet();
},
setCanSelectChips: function(e) {
var t = this._getBetAreaScript();
t && t.setCanSelectChips(e);
var i = this._getBetListScript();
i && i.setCanSelectChips(e);
var n = cc.vv.gameData.getBottomScript();
n && n.checkShowRebet();
},
_getBetAreaScript: function() {
this._betAreaScp || (this._betAreaScp = this.node.getComponentInChildren("Table_BetAreas_Base"));
return this._betAreaScp;
},
_getBetListScript: function() {
this._betListScp || (this._betListScp = this.node.getComponentInChildren("Table_BetList_Base_Ex"));
return this._betListScp;
},
_getPlayerListScript: function() {
this._playerListScp || (this._playerListScp = this.node.getComponentInChildren("Table_Player_List_Base"));
return this._playerListScp;
},
playOtherBet: function(e) {
var t = this._getBetAreaScript(), i = this._getPlayerNode(e.uid);
if (0 != e.uid && i) if (i.getComponent("Table_Player_Base").isRater() && cc.vv.gameData.showRaterBetAni()) {
var n = cc.vv.gameData.getFirstBetArea(e.chips);
t.playRaterDoBet(i, e.chips, n);
} else for (var a = i.getNumberOfRunningActions() > 0, o = 0; o < e.chips.length; o++) for (var c = o + 1, s = 0; s < e.chips[o].length; s++) for (var r = cc.vv.gameData.getChipValByIdx(s), l = e.chips[o][s], d = 0; d < l; d++) t.playDoBetAni(i, r, c, a); else {
var h = this._getObserverNode();
this._playWatcherQueue = this._playWatcherQueue || [];
for (var _ = 0; _ < 2; _++) {
for (var p = !1, u = [], f = 0; f < e.chips.length; f++) {
u[f] = u[f] || [];
for (var g = 0; g < e.chips[f].length; g++) {
u[f][g] = u[f][g] || 0;
var m = e.chips[f][g], v = void 0;
if (1 == _) {
v = m - 1 * Math.floor(m / 2);
u[f][g] += v;
} else {
v = Math.floor(m / 2);
u[f][g] += v;
}
v && (p = !0);
}
}
if (p) {
u.fromNode = h;
this._playWatcherQueue.push(u);
}
}
this.playWatherBetQueue();
}
},
_getObserverNode: function() {
return cc.find("node_observers", this.node);
},
_getPlayerNode: function(e) {
var t = this._getPlayerListScript();
if (t) return t.getPlayerNode(e);
},
playWatherBetQueue: function() {
var e = this;
if (!this._bPlayingQueue) {
this._bPlayingQueue = !0;
var t = this._playWatcherQueue.length;
if (t > 0) {
var i = Global.random(2, 4) / 10;
t > 6 && t < 10 ? i = Global.random(1, 2) / 10 : t > 10 ? i = Global.random(1, 2) / 20 : t > 20 && (i = t % 2 == 0 ? 0 : .05);
var n = this._getBetAreaScript();
if (3 == cc.vv.gameData.getGameStatus()) {
for (var a = 0; a < this._playWatcherQueue.length; a++) {
var o = this._playWatcherQueue[a];
if (o) for (var c = 0; c < o.length; c++) for (var s = c + 1, r = 0; r < o[c].length; r++) for (var l = cc.vv.gameData.getChipValByIdx(r), d = o[c][r], h = 0; h < d; h++) n.playDoBetAni(o.fromNode, l, s, !0);
}
this._playWatcherQueue = [];
i = 0;
}
this.scheduleOnce(function() {
e._bPlayingQueue = !1;
e.playWatherBetQueue();
}, i);
var _ = !1;
t > 20 && (_ = t % 2 == 0);
var p = this._playWatcherQueue.shift();
if (p) for (var u = 0; u < p.length; u++) for (var f = u + 1, g = 0; g < p[u].length; g++) for (var m = cc.vv.gameData.getChipValByIdx(g), v = p[u][g], S = 0; S < v; S++) n.playDoBetAni(p.fromNode, m, f, _);
} else this._bPlayingQueue = !1;
}
},
_showWaitResult: function(e) {
if (Global.isYDApp() || cc.vv.i18nManager.getLanguage() != cc.vv.i18nLangEnum.AR) cc.find("node_result_wait", this.node).active = e; else {
var t = cc.find("node_result_wait_ar", this.node);
t && (t.active = e);
}
},
getMyNode: function() {
return cc.vv.gameData.getBottomScript().getMyNode();
},
getMyNodeHead: function() {
return cc.vv.gameData.getBottomScript().getMyNodeHead();
},
flyScroe: function(e, t) {
e && e.getComponent("Table_Player_Base").playFlyScroe(t);
},
playGameBGM: function() {
Global.TableSoundMgr.stopBgm();
Global.TableSoundMgr.playNormalBgm();
},
_showTextTipAni: function(e, t) {
var i = cc.find("node_change_status", this.node);
i.active = e;
var n, a = cc.find("start_bet", i), o = cc.find("stop_bet", i);
a.active = 1 == t;
o.active = 2 == t;
if (1 == t) {
n = a;
Global.TableSoundMgr.playCommonEff("startbet");
} else {
n = o;
Global.TableSoundMgr.playCommonEff("com_stopbet");
cc.vv.gameData.setGameStatus(3, !1);
}
var c = n.getComponent(sp.Skeleton);
c.setAnimation(0, "animation", !1);
c.setCompleteListener(function() {
n.active = !1;
i.active = !1;
});
},
_flyTableChips: function(e) {
var t = this, i = 1, n = e.user.wincoin;
n > 0 && (i += 1);
for (var a = 0; a < e.users.length; a++) e.users[a].wincoin > 0 && (i += 1);
var o = this._getBetAreaScript(), c = o.getAllChips(), s = Math.ceil(c.length / i), r = c.length - (i - 1) * s, l = this.getMyNode(), d = this.getMyNodeHead();
if (n > 0) {
for (var h = function(e) {
var t = c[e];
o.moveChip(t.chipNode, t.chipNode, d, function() {
t.chipNode.active = !1;
}, !0);
}, _ = 0; _ < s; _++) h(_);
this.flyScroe(l, n);
cc.vv.gameData.refushMyCoin();
} else {
this.flyScroe(l, n);
cc.vv.gameData.refushMyCoin();
}
for (var p = -1, u = n > 0 ? s : 0, f = 0; f < e.users.length; f++) {
var g = e.users[f], m = g.wincoin, v = this._getPlayerNode(g.uid);
if (v) {
if (m > 0) {
p += 1;
for (var S = function(e) {
var t = c[e + u + p * s];
o.moveChip(t.chipNode, t.chipNode, v, function() {
t.chipNode.active = !1;
}, !0);
}, C = 0; C < s; C++) S(C);
}
this.flyScroe(v, m);
}
}
for (var b = function(e) {
var i = c[e], n = t._getObserverNode();
o.moveChip(i.chipNode, i.chipNode, n, function() {
i.chipNode.active = !1;
}, !0);
}, E = c.length - r; E < c.length; E++) b(E);
Global.TableSoundMgr.playCommonEff("com_flywin");
},
playRecount3Ani: function(e) {
var t = cc.find("node_recount3time", this.node);
if (t) {
t.active = e;
if (e) {
var i = cc.find("spine", t).getComponent(sp.Skeleton);
i.setAnimation(0, "animation", !1);
i.setCompleteListener(function() {
t.active = !1;
});
}
}
},
doShowResultFinish: function() {
cc.vv.gameData.setShowResultFinish(!0);
}
});
cc._RF.pop();
}, {} ],
Table_Help_prefab: [ function(e, t) {
"use strict";
cc._RF.push(t, "0493djhofhN9pHdXS49sKWF", "Table_Help_prefab");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this._laycontent = cc.find("scrollView/view/content", this.node);
this.InitItems();
var e = cc.find("btn_close", this.node);
Global.btnClickEvent(e, this.onClickClose, this);
},
start: function() {},
InitItems: function() {
var e = this;
this.addIdx = 0;
var t = cc.vv.gameData.getGameCfg();
if (t && t.helpItems) for (var i = function(i) {
var n = t.helpItems[i];
t.bundleName ? window[t.bundleName].load(n, cc.Prefab, function(t, n) {
if (t) console.log("加载帮助预制体报错"); else {
var a = cc.instantiate(n);
a.parent = e._laycontent;
a.setSiblingIndex(i);
}
}) : cc.resources.load(n, cc.Prefab, function(t, n) {
if (t) console.log("老的加载帮助预制体报错"); else {
var a = cc.instantiate(n);
a.parent = e._laycontent;
a.setSiblingIndex(i);
}
});
}, n = 0; n < t.helpItems.length; n++) i(n);
},
onClickClose: function() {
this.node.destroy();
}
});
cc._RF.pop();
}, {} ],
Table_History_Detail: [ function(e, t) {
"use strict";
cc._RF.push(t, "6761729+GFCCo4StPa+yIrE", "Table_History_Detail");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
var e = cc.find("bg", this.node);
Global.btnClickEvent(e, this.onClickClose, this);
},
start: function() {},
setInfo: function(e) {
Global.setLabelString("ui/node_order/val", this.node, e.i);
Global.setLabelString("ui/node_time/val", this.node, Global.getTimeStr(e.t));
this.showGameResult(JSON.parse(e.result));
this.showGameType(JSON.parse(e.result));
},
onClickClose: function() {
this.node.destroy();
},
showGameResult: function() {},
showGameType: function() {}
});
cc._RF.pop();
}, {} ],
Table_Logic_Base: [ function(e, t) {
"use strict";
cc._RF.push(t, "ef886wJ60JJbbdSSJ9kzuDK", "Table_Logic_Base");
var i = e("../../../PokerBase/scripts/chat/PBChatData");
function n() {
n = function() {
return e;
};
var e = {}, t = Object.prototype, i = t.hasOwnProperty, a = "function" == typeof Symbol ? Symbol : {}, o = a.iterator || "@@iterator", c = a.asyncIterator || "@@asyncIterator", s = a.toStringTag || "@@toStringTag";
function r(e, t, i) {
return Object.defineProperty(e, t, {
value: i,
enumerable: !0,
configurable: !0,
writable: !0
}), e[t];
}
try {
r({}, "");
} catch (e) {
r = function(e, t, i) {
return e[t] = i;
};
}
function l(e, t, i, n) {
var a = t && t.prototype instanceof _ ? t : _, o = Object.create(a.prototype), c = new L(n || []);
return o._invoke = function(e, t, i) {
var n = "suspendedStart";
return function(a, o) {
if ("executing" === n) throw new Error("Generator is already running");
if ("completed" === n) {
if ("throw" === a) throw o;
return {
value: void 0,
done: !0
};
}
for (i.method = a, i.arg = o; ;) {
var c = i.delegate;
if (c) {
var s = b(c, i);
if (s) {
if (s === h) continue;
return s;
}
}
if ("next" === i.method) i.sent = i._sent = i.arg; else if ("throw" === i.method) {
if ("suspendedStart" === n) throw n = "completed", i.arg;
i.dispatchException(i.arg);
} else "return" === i.method && i.abrupt("return", i.arg);
n = "executing";
var r = d(e, t, i);
if ("normal" === r.type) {
if (n = i.done ? "completed" : "suspendedYield", r.arg === h) continue;
return {
value: r.arg,
done: i.done
};
}
"throw" === r.type && (n = "completed", i.method = "throw", i.arg = r.arg);
}
};
}(e, i, c), o;
}
function d(e, t, i) {
try {
return {
type: "normal",
arg: e.call(t, i)
};
} catch (e) {
return {
type: "throw",
arg: e
};
}
}
e.wrap = l;
var h = {};
function _() {}
function p() {}
function u() {}
var f = {};
r(f, o, function() {
return this;
});
var g = Object.getPrototypeOf, m = g && g(g(T([])));
m && m !== t && i.call(m, o) && (f = m);
var v = u.prototype = _.prototype = Object.create(f);
function S(e) {
[ "next", "throw", "return" ].forEach(function(t) {
r(e, t, function(e) {
return this._invoke(t, e);
});
});
}
function C(e, t) {
function n(a, o, c, s) {
var r = d(e[a], e, o);
if ("throw" !== r.type) {
var l = r.arg, h = l.value;
return h && "object" == typeof h && i.call(h, "__await") ? t.resolve(h.__await).then(function(e) {
n("next", e, c, s);
}, function(e) {
n("throw", e, c, s);
}) : t.resolve(h).then(function(e) {
l.value = e, c(l);
}, function(e) {
return n("throw", e, c, s);
});
}
s(r.arg);
}
var a;
this._invoke = function(e, i) {
function o() {
return new t(function(t, a) {
n(e, i, t, a);
});
}
return a = a ? a.then(o, o) : o();
};
}
function b(e, t) {
var i = e.iterator[t.method];
if (void 0 === i) {
if (t.delegate = null, "throw" === t.method) {
if (e.iterator.return && (t.method = "return", t.arg = void 0, b(e, t), "throw" === t.method)) return h;
t.method = "throw", t.arg = new TypeError("The iterator does not provide a 'throw' method");
}
return h;
}
var n = d(i, e.iterator, t.arg);
if ("throw" === n.type) return t.method = "throw", t.arg = n.arg, t.delegate = null, 
h;
var a = n.arg;
return a ? a.done ? (t[e.resultName] = a.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", 
t.arg = void 0), t.delegate = null, h) : a : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), 
t.delegate = null, h);
}
function E(e) {
var t = {
tryLoc: e[0]
};
1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), 
this.tryEntries.push(t);
}
function y(e) {
var t = e.completion || {};
t.type = "normal", delete t.arg, e.completion = t;
}
function L(e) {
this.tryEntries = [ {
tryLoc: "root"
} ], e.forEach(E, this), this.reset(!0);
}
function T(e) {
if (e) {
var t = e[o];
if (t) return t.call(e);
if ("function" == typeof e.next) return e;
if (!isNaN(e.length)) {
var n = -1, a = function t() {
for (;++n < e.length; ) if (i.call(e, n)) return t.value = e[n], t.done = !1, t;
return t.value = void 0, t.done = !0, t;
};
return a.next = a;
}
}
return {
next: I
};
}
function I() {
return {
value: void 0,
done: !0
};
}
return p.prototype = u, r(v, "constructor", u), r(u, "constructor", p), p.displayName = r(u, s, "GeneratorFunction"), 
e.isGeneratorFunction = function(e) {
var t = "function" == typeof e && e.constructor;
return !!t && (t === p || "GeneratorFunction" === (t.displayName || t.name));
}, e.mark = function(e) {
return Object.setPrototypeOf ? Object.setPrototypeOf(e, u) : (e.__proto__ = u, r(e, s, "GeneratorFunction")), 
e.prototype = Object.create(v), e;
}, e.awrap = function(e) {
return {
__await: e
};
}, S(C.prototype), r(C.prototype, c, function() {
return this;
}), e.AsyncIterator = C, e.async = function(t, i, n, a, o) {
void 0 === o && (o = Promise);
var c = new C(l(t, i, n, a), o);
return e.isGeneratorFunction(i) ? c : c.next().then(function(e) {
return e.done ? e.value : c.next();
});
}, S(v), r(v, s, "Generator"), r(v, o, function() {
return this;
}), r(v, "toString", function() {
return "[object Generator]";
}), e.keys = function(e) {
var t = [];
for (var i in e) t.push(i);
return t.reverse(), function i() {
for (;t.length; ) {
var n = t.pop();
if (n in e) return i.value = n, i.done = !1, i;
}
return i.done = !0, i;
};
}, e.values = T, L.prototype = {
constructor: L,
reset: function(e) {
if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, 
this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(y), 
!e) for (var t in this) "t" === t.charAt(0) && i.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0);
},
stop: function() {
this.done = !0;
var e = this.tryEntries[0].completion;
if ("throw" === e.type) throw e.arg;
return this.rval;
},
dispatchException: function(e) {
if (this.done) throw e;
var t = this;
function n(i, n) {
return c.type = "throw", c.arg = e, t.next = i, n && (t.method = "next", t.arg = void 0), 
!!n;
}
for (var a = this.tryEntries.length - 1; a >= 0; --a) {
var o = this.tryEntries[a], c = o.completion;
if ("root" === o.tryLoc) return n("end");
if (o.tryLoc <= this.prev) {
var s = i.call(o, "catchLoc"), r = i.call(o, "finallyLoc");
if (s && r) {
if (this.prev < o.catchLoc) return n(o.catchLoc, !0);
if (this.prev < o.finallyLoc) return n(o.finallyLoc);
} else if (s) {
if (this.prev < o.catchLoc) return n(o.catchLoc, !0);
} else {
if (!r) throw new Error("try statement without catch or finally");
if (this.prev < o.finallyLoc) return n(o.finallyLoc);
}
}
}
},
abrupt: function(e, t) {
for (var n = this.tryEntries.length - 1; n >= 0; --n) {
var a = this.tryEntries[n];
if (a.tryLoc <= this.prev && i.call(a, "finallyLoc") && this.prev < a.finallyLoc) {
var o = a;
break;
}
}
o && ("break" === e || "continue" === e) && o.tryLoc <= t && t <= o.finallyLoc && (o = null);
var c = o ? o.completion : {};
return c.type = e, c.arg = t, o ? (this.method = "next", this.next = o.finallyLoc, 
h) : this.complete(c);
},
complete: function(e, t) {
if ("throw" === e.type) throw e.arg;
return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, 
this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), 
h;
},
finish: function(e) {
for (var t = this.tryEntries.length - 1; t >= 0; --t) {
var i = this.tryEntries[t];
if (i.finallyLoc === e) return this.complete(i.completion, i.afterLoc), y(i), h;
}
},
catch: function(e) {
for (var t = this.tryEntries.length - 1; t >= 0; --t) {
var i = this.tryEntries[t];
if (i.tryLoc === e) {
var n = i.completion;
if ("throw" === n.type) {
var a = n.arg;
y(i);
}
return a;
}
}
throw new Error("illegal catch attempt");
},
delegateYield: function(e, t, i) {
return this.delegate = {
iterator: T(e),
resultName: t,
nextLoc: i
}, "next" === this.method && (this.arg = void 0), h;
}
}, e;
}
function a(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = o(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var n = 0;
return function() {
return n >= e.length ? {
done: !0
} : {
done: !1,
value: e[n++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function o(e, t) {
if (e) {
if ("string" == typeof e) return c(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? c(e, t) : void 0;
}
}
function c(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
function s(e, t, i, n, a, o, c) {
try {
var s = e[o](c), r = s.value;
} catch (e) {
i(e);
return;
}
s.done ? t(r) : Promise.resolve(r).then(n, a);
}
function r(e) {
return function() {
var t = this, i = arguments;
return new Promise(function(n, a) {
var o = e.apply(t, i);
function c(e) {
s(o, n, a, c, r, "next", e);
}
function r(e) {
s(o, n, a, c, r, "throw", e);
}
c(void 0);
});
};
}
cc.Class({
extends: cc.Component,
properties: {
atlas: [ cc.SpriteAtlas ]
},
onLoad: function() {
Global.autoAdaptDevices(!1);
this.panel = cc.find("safe_node", this.node);
this.atlas.length > 0 && cc.vv.gameData.setAtlas(this.atlas);
this.InitCommComponent();
this.dm = cc.vv.gameData;
window.facade = this;
facade = this;
cc.vv.NetManager.registerMsg(MsgId.YD_RUMMY_CHAT_MSG, this.OnRcvChatMsg, this);
Global.registerEvent(EventId.UPATE_COINS, this.updateCoin, this);
},
onDestroy: function() {
window.facade = null;
facade = null;
cc.vv.NetManager.unregisterMsg(MsgId.YD_RUMMY_CHAT_MSG, this.OnRcvChatMsg, !1, this);
},
InitCommComponent: function() {
var e = cc.find("safe_node", this.node), t = cc.vv.gameData.getGameCfg(), i = "Table_Game_Base";
t && (i = t.GameScript);
var n = e.addComponent(i);
n.Init();
this.node.addComponent("Table_Sound");
cc.vv.gameData.setScriptGame(n);
if (!t.closeEmotion) {
this.interactiveEmotionCtrl = this.loadInterActiveEmotionsCtrl();
this.soundMgr = this.loadSoundCtrl();
}
},
startGame: function() {
var e = cc.vv.gameData.getScriptGame();
e && e.StartGame();
},
start: function() {
this.startGame();
this.loadUI();
},
loadUI: function() {
if (!Global.isYDApp()) {
this.loadMenu();
if (!Global.isYDApp() && 6 != this.dm.deskInfo.conf.roomtype) {
this.loadGameName(-2);
this.loadDeskId(-1);
this.loadRightBtnUI();
}
}
},
loadRightBtnUI: function() {
var e = this;
return r(n().mark(function t() {
var i, o, c, s, r, l, d, h, _, p;
return n().wrap(function(t) {
for (;;) switch (t.prev = t.next) {
case 0:
if (!Global.isYDApp()) {
t.next = 2;
break;
}
return t.abrupt("return");

case 2:
i = [];
[ 294, 295 ].indexOf(e.dm.deskInfo.gameid) < 0 && i.push(cc.vv.ResManager.loadPrefab("games/PokerBase/module/Chat/BtnChat"));
[ 294, 295 ].indexOf(e.dm.deskInfo.gameid) < 0 && 6 != e.dm.deskInfo.conf.roomtype && i.push(cc.vv.ResManager.loadPrefab("games/PokerBase/module/League/BtnGameLeague"));
o = cc.v3(0, 0);
[ 292 ].indexOf(e.dm.deskInfo.gameid) >= 0 && (o = cc.v3(0, -500));
t.next = 9;
return Promise.all(i);

case 9:
c = t.sent;
s = [];
for (r = a(c); !(l = r()).done; ) {
d = l.value;
(h = cc.instantiate(d)).parent = e.panel;
h.zIndex = 100;
s.push(h);
}
_ = cc.v3(468, -166).add(o);
for (p = 0; p < s.length; p++) s[p].position = _.add(cc.v3(0, -120 * p));

case 15:
case "end":
return t.stop();
}
}, t);
}))();
},
loadMenu: function() {
var e = this;
return r(n().mark(function t() {
var i, a, o, c, s, r, l;
return n().wrap(function(t) {
for (;;) switch (t.prev = t.next) {
case 0:
t.next = 2;
return cc.vv.ResManager.loadPrefab("games/PokerBase/module/Menu/RoomMenu");

case 2:
i = t.sent;
(a = cc.instantiate(i)).parent = e.panel;
if (6 == e.dm.deskInfo.conf.roomtype) {
t.next = 20;
break;
}
t.next = 8;
return cc.vv.ResManager.loadPrefab("BalootClient/PiggyBank/prefabs/PiggyBankBtn");

case 8:
o = t.sent;
(c = cc.instantiate(o)).parent = a;
c.zIndex = -1;
t.next = 14;
return cc.vv.ResManager.loadPrefab("games/PokerBase/prefabs/tips_coin_recharge");

case 14:
s = t.sent;
(r = cc.instantiate(s)).parent = a;
r.zIndex = -1;
l = cc.v3(cc.winSize.width / 2, cc.winSize.height / 2 - e.panel.getComponent(cc.Widget).top);
if ([ 269, 290, 292, 293, 294 ].indexOf(e.dm.deskInfo.gameid) >= 0) {
c.position = l.add(cc.v3(-320, -80));
r.position = l.add(cc.v3(-470, -80));
} else {
c.position = l.add(cc.v3(-100, -360));
r.position = l.add(cc.v3(-100, -500));
}

case 20:
case "end":
return t.stop();
}
}, t);
}))();
},
loadDeskId: function(e) {
var t = this;
return r(n().mark(function i() {
var a, o;
return n().wrap(function(i) {
for (;;) switch (i.prev = i.next) {
case 0:
i.next = 2;
return cc.vv.ResManager.loadPrefab("games/PokerBase/module/RoomId/room_id");

case 2:
a = i.sent;
o = cc.instantiate(a);
cc.find("top_left_layout", t.panel).addChild(o, e);
cc.find("label", o).getComponent(cc.Label).string = t.dm.deskInfo.deskid;

case 6:
case "end":
return i.stop();
}
}, i);
}))();
},
loadGameName: function(e) {
var t = this;
return r(n().mark(function i() {
var a, o;
return n().wrap(function(i) {
for (;;) switch (i.prev = i.next) {
case 0:
if (cc.find("top_left_layout/score_board", t.panel)) {
i.next = 8;
break;
}
i.next = 4;
return cc.vv.ResManager.loadPrefab("games/PokerBase/module/RoomTitle/room_title");

case 4:
a = i.sent;
o = cc.instantiate(a);
cc.find("top_left_layout", t.panel).addChild(o, e);
cc.find("label", o).getComponent(cc.Label).string = cc.vv.UserConfig.getGameName(t.dm.deskInfo.gameid);

case 8:
case "end":
return i.stop();
}
}, i);
}))();
},
sendRetransmissionMsg: function(e, t) {
var n = cc.vv.gameData.getMyInfo(), a = new i.PBChatMsgVo();
a.uid = n.uid;
a.nick = n.playername;
a.gender = cc.vv.UserManager.sex || 0;
a.icon = n.icon || n.usericon;
a.avatar = n.avatarFrame;
a.chatSkin = n.chatSkin;
a.fontSkin = "";
var o = cc.vv.UserManager.frontskin;
o && "0" != o || (o = "font_color_4");
a.fontSkin = o;
a.msgType = e;
a.sendTime = new Date().getTime();
a.content = t;
a.fcoin = n.coin;
var c = {
c: 25705
};
c.msg = a.getMsg();
cc.vv.NetManager.send(c);
},
OnRcvChatMsg: function(e) {
if (200 == e.code) {
var t = new i.PBChatMsgVo().parse(e.msg);
if (t.msgType == i.PBChatMsgType.diy) this.diyChatMsgHandler(t); else {
var n = cc.vv.gameData.getScriptGame();
n && n.showPlayChat(e.uid, t);
}
t.msgType != i.PBChatMsgType.diy && this.chat && this.chat.onMsg(t);
}
},
diyChatMsgHandler: function(e) {
try {
var t = JSON.parse(e.content);
if ("interactive_emotion" == t.cmd) {
if (!cc.vv.gameData.getPlayByUid(t.toUid)) {
console.log("####互动表情，目标用户未找到：", t.toUid);
return;
}
this.interactiveEmotionCtrl ? this.interactiveEmotionCtrl.playerEmotion(t.emotionId, t.fromUid, t.toUid) : this.loadInterActiveEmotionsCtrl();
if (e.fcoin) {
var i = cc.vv.gameData.getPlayByUid(e.uid);
i || cc.vv.UserManager.isMySelf(e.uid) && (i = cc.vv.gameData.getMyInfo());
if (i) {
i.coin = e.fcoin;
Global.dispatchEvent("PBEvent.USER_COIN_CHANGE", {
uid: i.uid,
coin: e.fcoin
});
}
}
}
} catch (t) {
console.log("#err#diy消息错误", e);
}
},
loadInterActiveEmotionsCtrl: function() {
if (!cc.vv.gameData.getGameCfg().closeEmotion) {
var e = this, t = cc.find("interactive_emotion", this.panel);
if (t) return t.getComponent("PBInteractiveCtrl");
cc.loader.loadRes("Table_Common/TableRes/prefab/interactive_emotion", cc.Prefab, function(t, i) {
if (!t) {
var n = cc.find("Canvas"), a = n.getChildByName("interactive_emotion");
if (a) e.interactiveEmotionCtrl = a.getComponent("PBInteractiveCtrl"); else {
var o = cc.instantiate(i);
o.parent = n;
e.interactiveEmotionCtrl = o.getComponent("PBInteractiveCtrl");
}
}
});
}
},
updateCoin: function() {
cc.vv.gameData.setMyCoin(cc.vv.UserManager.coin);
Global.dispatchEvent("PBEvent.USER_COIN_CHANGE", {
uid: cc.vv.UserManager.uid,
coin: cc.vv.UserManager.coin
});
},
loadSoundCtrl: function() {
return this.panel.addComponent("PBSoundCtrl");
}
});
cc._RF.pop();
}, {
"../../../PokerBase/scripts/chat/PBChatData": "PBChatData"
} ],
Table_Matching: [ function(e, t) {
"use strict";
cc._RF.push(t, "ec93bdP1Z1Ozpzp4BMgbvmJ", "Table_Matching");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {},
start: function() {},
show: function(e) {
if (e <= 0) this.showTimeEndCall(); else {
this.node.active = !0;
var t = cc.find("spr_time/lbl", this.node);
if (t) {
t.active = !0;
t.getComponent("ReTimer").setReTimer(e, 1, this.showTimeEndCall.bind(this), "%ss");
}
this.node.getComponent(sp.Skeleton).setAnimation(0, "animation", !0);
}
},
showTimeEndCall: function() {
var e = cc.find("spr_time/lbl", this.node);
cc.isValid(e) && (e.active = !1);
}
});
cc._RF.pop();
}, {} ],
Table_Observers_List: [ function(e, t) {
"use strict";
cc._RF.push(t, "2a4a9fJixFJzKJ87DFD7Per", "Table_Observers_List");
var i = e("List");
cc.Class({
extends: cc.Component,
properties: {
listview: i
},
onLoad: function() {
var e = cc.find("btn_close", this.node);
Global.btnClickEvent(e, this.onClickClose, this);
},
start: function() {},
init: function(e) {
this._listdata = e;
this.listview.numItems = e.length;
},
onListRender: function(e, t) {
var i = this._listdata[t];
if (i) {
e.active = !0;
Global.setLabelString("lbl_rank", e, t + 1);
Global.setLabelString("lbl_name", e, i.playername);
Global.setLabelString("node_coin/val", e, Global.FormatNumToComma(i.coin));
} else e.active = !1;
},
onClickClose: function() {
this.node.destroy();
}
});
cc._RF.pop();
}, {
List: "List"
} ],
Table_Observers: [ function(e, t) {
"use strict";
cc._RF.push(t, "86376GGHxRLc5Gvoukhguhp", "Table_Observers");
cc.Class({
extends: cc.Component,
properties: {
observerListPrefab: cc.Prefab
},
onLoad: function() {
var e = cc.find("btn", this.node);
Global.btnClickEvent(e, this.onClickWatchList, this);
cc.vv.NetManager.registerMsg(MsgId.REQ_OBSER_LIST, this.OnRcvNetObserList, this);
},
onDestroy: function() {
cc.vv.NetManager.unregisterMsg(MsgId.REQ_OBSER_LIST, this.OnRcvNetObserList, !1, this);
},
start: function() {
var e = cc.vv.gameData.getObservers();
this.showWatchers(e);
},
showWatchers: function(e) {
Global.setLabelString("lbl_num", this.node, e);
},
onClickWatchList: function() {
Global.TableSoundMgr.playCommonEff("com_click");
var e = {
c: MsgId.REQ_OBSER_LIST
};
cc.vv.NetManager.send(e);
},
OnRcvNetObserList: function(e) {
if (200 == e.code) if (this.observerListPrefab) {
var t = cc.find("Canvas");
if (!t.getChildByName("Obser_List")) {
var i = cc.instantiate(this.observerListPrefab);
i.name = "Obser_List";
i.parent = t;
i.getComponent("Table_Observers_List").init(e.list);
}
} else cc.loader.loadRes("Table_Common/TableRes/prefab/Obser_List", cc.Prefab, function(t, i) {
if (!t) {
var n = cc.find("Canvas");
if (!n.getChildByName("Obser_List")) {
var a = cc.instantiate(i);
a.parent = n;
a.getComponent("Table_Observers_List").init(e.list);
}
}
});
}
});
cc._RF.pop();
}, {} ],
Table_Player_Base: [ function(e, t) {
"use strict";
cc._RF.push(t, "aab73rQt8BOxJ0P8I7wTtYs", "Table_Player_Base");
cc.Class({
extends: cc.Component,
properties: {
_player: null,
_seatIdx: null
},
onLoad: function() {
Global.registerEvent("PBEvent.USER_COIN_CHANGE", this.onEventCoinChange, this);
},
start: function() {},
init: function(e, t, i) {
this._player = e;
this._seatIdx = t;
this.hideFlyScore();
var n = cc.find("head_icon", this.node);
if (n && e.usericon) {
n.getComponent("UserAvatar").updataAvatar({
uid: e.uid,
icon: e.usericon,
avatarFrame: e.avatarFrame
});
(this.isRater() || this.isRicher()) && n.getComponent("UserAvatar").updateFrame("");
}
Global.setLabelString("lbl_name", this.node, e.playername);
this.showCoin(e.coin);
var a = cc.find("rate_max", this.node);
a && (a.active = this.isRater());
var o = cc.find("coin_max", this.node);
o && (o.active = this.isRicher());
i && this.addEvent();
},
showCoin: function(e) {
var t = cc.find("node_coin", this.node);
t && Global.setLabelString("val", t, Global.FormatNumToComma(e.toFixed(2)));
},
getPlayerUid: function() {
if (this._player) return this._player.uid;
cc.log("玩家尚未初始化");
},
playFlyScroe: function(e) {
if (0 != e) {
var t = cc.find("fly_score", this.node);
t.active = !0;
t.getComponent("Table_FlyScore").setScore(e);
}
e > 0 && this.playWinHit();
},
hideFlyScore: function() {
cc.find("fly_score", this.node).active = !1;
var e = cc.find("win_hit", this.node);
e.getComponent(sp.Skeleton).setCompleteListener(null);
e.active = !1;
},
playWinHit: function() {
var e = cc.find("win_hit", this.node);
e.active = !0;
var t = e.getComponent(sp.Skeleton);
t.setAnimation(0, "animation", !1);
t.setCompleteListener(function() {
e.active = !1;
});
},
isRicher: function() {
return 1 == this._seatIdx;
},
isRater: function() {
return 2 == this._seatIdx;
},
getPlayerInfo: function() {
return this._player;
},
addEvent: function() {
var e = this;
if (!cc.vv.gameData.getGameCfg().closeEmotion) {
cc.find("head_icon", this.node).off(cc.Node.EventType.TOUCH_END);
cc.find("head_icon", this.node).on(cc.Node.EventType.TOUCH_END, function() {
if (!cc.vv.UserManager.isMySelf(e._player.uid)) {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
var t = cc.find("Canvas"), i = t.getComponentInChildren("PBInteractiveCtrl");
i ? i.openEmotionPanel(e._player.uid) : cc.loader.loadRes("Table_Common/TableRes/prefab/interactive_emotion", cc.Prefab, function(i, n) {
if (!i && !t.getChildByName("interactive_emotion")) {
var a = cc.instantiate(n);
a.parent = t;
a.getComponent("PBInteractiveCtrl").openEmotionPanel(e._player.uid);
}
});
}
}, this);
}
},
onEventCoinChange: function(e) {
var t = e.detail;
t && t.uid == this._player.uid && null != t.coin && this.showCoin(t.coin);
}
});
cc._RF.pop();
}, {} ],
Table_Player_List_Base: [ function(e, t) {
"use strict";
cc._RF.push(t, "2ecf4BLXilJ3pL4eSS9NDvJ", "Table_Player_List_Base");
cc.Class({
extends: cc.Component,
properties: {
PLAYER_NUM: 6
},
onLoad: function() {
this.init();
Global.registerEvent("Table_Player_Change", this.onEventPlayerChange, this);
},
start: function() {},
init: function() {
this._showTablePlayers();
},
_showTablePlayers: function(e) {
for (var t = cc.vv.gameData.getTablePlayers(), i = 0; i < this.PLAYER_NUM; i++) {
var n = t[i], a = i + 1, o = cc.find("player" + (i + 1), this.node);
o.active = !!n;
n && (e ? e == n.uid && o.getComponent("Table_Player_Base").init(n, a, !0) : o.getComponent("Table_Player_Base").init(n, a, !0));
}
},
getPlayerNode: function(e) {
for (var t, i = 0; i < this.PLAYER_NUM; i++) {
var n = cc.find("player" + (i + 1), this.node);
e == n.getComponent("Table_Player_Base").getPlayerUid() && (t = n);
}
return t;
},
onEventPlayerChange: function(e) {
var t = e.detail;
this._showTablePlayers(t);
}
});
cc._RF.pop();
}, {} ],
Table_Record_Bet_Item: [ function(e, t) {
"use strict";
cc._RF.push(t, "86b34BBSgxExqvJIsLWFmwQ", "Table_Record_Bet_Item");
cc.Class({
extends: e("Table_Record_Item"),
properties: {},
start: function() {},
init: function(e) {
this._itemdata = e;
Global.setLabelString("lbl_time", this.node, Global.getTimeStr(e.t));
Global.setLabelString("lbl_amount", this.node, Global.FormatNumToComma(e.bet));
var t = cc.find("lbl_win", this.node);
if (t) {
var i = "", n = cc.Color.GREEN;
if (e.win > 0) {
i = "+";
n = cc.Color.ORANGE;
}
Global.setLabelString("lbl_win", this.node, i + Global.FormatNumToComma(e.win));
t.color = n;
}
Global.setLabelString("lbl_id", this.node, e.i);
},
showGameResult: function() {}
});
cc._RF.pop();
}, {
Table_Record_Item: "Table_Record_Item"
} ],
Table_Record_Item: [ function(e, t) {
"use strict";
cc._RF.push(t, "f44a2FaxcRAY6jiFdCZLyfG", "Table_Record_Item");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
var e = cc.find("btn_detail", this.node);
Global.btnClickEvent(e, this.onClickDetail, this);
},
start: function() {},
init: function(e) {
this._itemdata = e;
Global.setLabelString("lbl_order", this.node, e.i);
Global.setLabelString("lbl_time", this.node, Global.getTimeStr(e.t));
cc.find("btn_detail", this.node) && (cc.find("lbl_time", this.node).getComponent(cc.Label).overflow = cc.Label.Overflow.NONE);
cc.find("lbl_amount", this.node) && Global.setLabelString("lbl_amount", this.node, Global.FormatNumToComma(e.bet));
var t = cc.find("lbl_win", this.node);
if (t) {
var i = "", n = cc.Color.GREEN;
if (e.win > 0) {
i = "+";
n = cc.Color.ORANGE;
}
Global.setLabelString("lbl_win", this.node, i + Global.FormatNumToComma(e.win));
t.color = n;
}
this.showGameResult(JSON.parse(e.result));
e.p ? this.showGameOption(e.p) : this.showGameOption("--");
},
setDetailPrefab: function(e) {
this._prefab_detail = e;
},
showGameResult: function() {},
showGameOption: function() {},
onClickDetail: function() {
if (this._prefab_detail) {
var e = cc.find("Canvas");
if (!e.getChildByName("history_result_detail")) {
var t = cc.instantiate(this._prefab_detail);
t.name = "history_result_detail";
t.parent = e;
t.getComponent("Table_History_Detail").setInfo(this._itemdata);
}
}
}
});
cc._RF.pop();
}, {} ],
Table_Record_Menu: [ function(e, t) {
"use strict";
cc._RF.push(t, "e2059ElHS9PN7O1Kcvfkj3X", "Table_Record_Menu");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
var e = cc.find("btn_record", this.node);
Global.btnClickEvent(e, this.onClickMenuRecord, this);
},
start: function() {},
onClickMenuRecord: function() {
StatisticsMgr.reqReport(ReportConfig.SG_BTN_RECORD);
Global.TableSoundMgr ? Global.TableSoundMgr.playCommonEff("com_click") : cc.vv.EventManager.emit("EVENT_BTN_CLICK_2_SOUNDS");
var e = cc.vv.gameData.getGameCfg(), t = e.bet_records;
e.bundleName && !e.isSlot ? window[e.bundleName].load(t, cc.Prefab, function(e, t) {
if (e) console.log("Table_Record_Menu加载预制体报错..."); else {
var i = cc.find("Canvas");
if (cc.isValid(i) && !i.getChildByName("record_pannel")) {
var n = cc.instantiate(t);
n.parent = i;
n.name = "record_pannel";
}
}
}) : cc.resources.load(t, cc.Prefab, function(e, t) {
var i = cc.find("Canvas");
if (cc.isValid(i) && !i.getChildByName("record_pannel")) {
var n = cc.instantiate(t);
n.parent = i;
n.name = "record_pannel";
}
});
}
});
cc._RF.pop();
}, {} ],
Table_Record_Pannel: [ function(e, t) {
"use strict";
cc._RF.push(t, "8f107xVFFZJJ5MySInV/K88", "Table_Record_Pannel");
var i = e("List");
cc.Class({
extends: cc.Component,
properties: {
listview: i,
listhistory: i,
prefab_detail: cc.Prefab
},
onLoad: function() {
Global.btnClickEvent(this.node, this.onClickClose, this);
cc.vv.NetManager.registerMsg(MsgId.GAME_BET_RECORDS, this.OnRcvRecords, this);
cc.vv.NetManager.registerMsg(MsgId.GAME_RESULT_HISTORY, this.OnRcvHistory, this);
var e = cc.find("tabs/tog/toggle1", this.node);
e && e.on("toggle", this.onClickToggle1, this);
var t = cc.find("tabs/tog/toggle2", this.node);
t && t.on("toggle", this.onClickToggle2, this);
},
onDestroy: function() {
cc.vv.NetManager.unregisterMsg(MsgId.GAME_BET_RECORDS, this.OnRcvRecords, !1, this);
cc.vv.NetManager.unregisterMsg(MsgId.GAME_RESULT_HISTORY, this.OnRcvHistory, !1, this);
},
start: function() {
this._showPage(1);
this.sendReq();
},
sendReq: function() {
var e = {
c: MsgId.GAME_BET_RECORDS
};
e.gameid = cc.vv.gameData.getGameId();
e.limit = 35;
cc.vv.NetManager.sendAndCache(e);
},
senHistory: function() {
var e = {
c: MsgId.GAME_RESULT_HISTORY
};
e.gameid = cc.vv.gameData.getGameId();
e.ssid = cc.vv.gameData.getTableSsid();
e.limit = 35;
cc.vv.NetManager.sendAndCache(e);
},
onClickClose: function() {
this.node.destroy();
},
_getCanShowData: function(e) {
if (cc.vv.gameData.getShowReulstFinish) {
if (cc.vv.gameData.getShowReulstFinish()) return e;
for (var t = -1, i = 0, n = cc.vv.gameData.getCurRoundIssue(), a = 0; a < e.length && e[a].i == n; a++) {
-1 == t && (t = a);
i += 1;
}
-1 != t && e.splice(t, i);
return e;
}
return e;
},
OnRcvRecords: function(e) {
if (200 == e.code && cc.vv.gameData.getGameId() == e.gameid) {
this._serverdata = this._getCanShowData(e.records);
this._showRecordsList();
}
},
OnRcvHistory: function(e) {
if (200 == e.code && cc.vv.gameData.getGameId() == e.gameid) {
this._historydata = this._getCanShowData(e.records);
this._showHistoryList();
}
},
_showMoveIn: function() {
if (0 == this.list_bg.getNumberOfRunningActions()) {
this.list_bg.x = 963;
this.list_bg.active = !0;
cc.tween(this.list_bg).to(.3, {
x: 163
}, {
easing: "quadOut"
}).start();
}
},
_showHistoryList: function() {
this.listhistory.numItems = this._historydata.length;
},
onRenderHistroyList: function(e, t) {
var i = this._historydata[t];
if (i) {
e.active = !0;
e.getComponent("Table_Record_Item").setDetailPrefab(this.prefab_detail);
e.getComponent("Table_Record_Item").init(i);
} else e.active = !1;
},
_showRecordsList: function() {
this.listview.numItems = this._serverdata.length;
},
onRenderList: function(e, t) {
var i = this._serverdata[t];
if (i) {
e.active = !0;
e.getComponent("Table_Record_Item").init(i);
} else e.active = !1;
},
onClickToggle1: function() {
Global.TableSoundMgr.playCommonEff("com_click");
this.sendReq();
this._showPage(1);
},
onClickToggle2: function() {
Global.TableSoundMgr.playCommonEff("com_click");
this.senHistory();
this._showPage(2);
},
_showPage: function(e) {
var t = cc.find("list_bg", this.node), i = cc.find("list_history", this.node);
t && (t.active = 1 == e);
i && (i.active = 2 == e);
}
});
cc._RF.pop();
}, {
List: "List"
} ],
Table_Record_Room_Pannel: [ function(e, t) {
"use strict";
cc._RF.push(t, "63ba8hhLCxDD6x01MvU9Q2U", "Table_Record_Room_Pannel");
var i = e("List");
cc.Class({
extends: cc.Component,
properties: {
listview: i
},
onLoad: function() {
Global.FixDesignScale_V(this.node);
this.list_bg = cc.find("list_bg", this.node);
Global.btnClickEvent(this.node, this.onClickClose, this);
cc.vv.NetManager.registerMsg(MsgId.GAME_BET_RECORDS, this.OnRcvRecords, this);
},
onDestroy: function() {
cc.vv.NetManager.unregisterMsg(MsgId.GAME_BET_RECORDS, this.OnRcvRecords, !1, this);
},
start: function() {
this.sendReq();
},
sendReq: function() {
var e = {
c: MsgId.GAME_BET_RECORDS
};
e.gameid = cc.vv.gameData.getGameId();
e.limit = 100;
cc.vv.NetManager.send(e);
},
onClickClose: function() {
this.node.destroy();
},
_getCanShowData: function(e) {
if (!cc.vv.gameData.getShowReulstFinish) return e;
if (cc.vv.gameData.getShowReulstFinish()) return e;
for (var t = -1, i = cc.vv.gameData.getCurRoundIssue(), n = 0; n < e.length; n++) if (e[n].i == i) {
t = n;
break;
}
-1 != t && e.splice(t, 1);
return e;
},
OnRcvRecords: function(e) {
if (200 == e.code && cc.vv.gameData.getGameId() == e.gameid) {
this._serverdata = this._getCanShowData(e.records);
this._showRecordsList();
}
},
_showRecordsList: function() {
this.listview.numItems = this._serverdata.length;
},
onRenderList: function(e, t) {
var i = this._serverdata[t];
if (i) {
e.active = !0;
e.getComponent("Table_Record_Bet_Item").init(i);
} else e.active = !1;
}
});
cc._RF.pop();
}, {
List: "List"
} ],
Table_Recount_3: [ function(e, t) {
"use strict";
cc._RF.push(t, "5120bqbIiNGNb9xfKOO8nrL", "Table_Recount_3");
cc.Class({
extends: cc.Component,
properties: {},
start: function() {},
setShow: function(e) {
var t = this.node;
t.active = e;
if (e) {
var i = cc.find("spin", t).getComponent(sp.Skeleton);
if (i) {
i.setAnimation(0, "animation", !1);
i.setCompleteListener(function() {
t.active = !1;
});
cc.tween(t).repeat(3, cc.tween().call(function() {
Global.TableSoundMgr.playCommonEff("com_timeAlarm");
}).delay(.8)).start();
}
} else t.stopAllActions();
}
});
cc._RF.pop();
}, {} ],
Table_Room_Info: [ function(e, t) {
"use strict";
cc._RF.push(t, "58cd6uoFJ9OkZPj3i6C0+Lx", "Table_Room_Info");
cc.Class({
extends: cc.Component,
properties: {
nameSpr: cc.Sprite,
compettionNode: cc.Node
},
onLoad: function() {
if (this.nameSpr) {
var e = cc.vv.gameData.getGameId();
cc.vv.UserConfig.setGameTitleFrame(this.nameSpr, e);
}
this.compettionNode && (this.compettionNode.active = !1);
this.moveIn();
},
start: function() {},
moveIn: function() {
var e = this.node.parent.convertToNodeSpaceAR(cc.v2(0, cc.winSize.height / 2 + 200)).y, t = cc.find("bg", this.node);
t.y = e;
t.opacity = 0;
cc.tween(t).delay(.3).call(function() {
t.opacity = 255;
}).to(.5, {
y: 0
}, {
easing: "backOut"
}).start();
}
});
cc._RF.pop();
}, {} ],
Table_Sound: [ function(e, t) {
"use strict";
cc._RF.push(t, "fad97/fJVpMmah8buurGTL/", "Table_Sound");
cc.Class({
extends: cc.Component,
properties: {
playingBgm: null,
soundPath: ""
},
onLoad: function() {
Global.TableSoundMgr = this;
this.soundPath || (this.soundPath = cc.vv.gameData.getGameDir());
},
onDestroy: function() {
Global.TableSoundMgr = null;
},
playEffect: function(e, t, i) {
void 0 === t && (t = !1);
void 0 === i && (i = null);
if (e && "" != e) {
var n = cc.vv.gameData.getGameCfg();
if (n.bundleName) {
var a = n.bundleName;
this.soundPath = "";
return cc.vv.AudioManager.playEff(this.soundPath, e, !0, t, i, 1, null, a);
}
return cc.vv.AudioManager.playEff(this.soundPath, e, !0, t, i);
}
},
playEffectByUnSync: function(e, t, i) {
var n = this;
void 0 === t && (t = !1);
void 0 === i && (i = null);
return new Promise(function(a) {
cc.vv.AudioManager.playEff(n.soundPath, e, !0, t, i, null, function() {
a();
});
});
},
stopEffectByName: function(e) {
cc.vv.AudioManager.stopEffectByName(e);
},
playBgm: function(e, t) {
if (this.soundPath && e && "" != e) {
this.stopBgm();
this.playingBgm = e;
t && (this.soundPath = "");
cc.vv.AudioManager.playBgm(this.soundPath, e, !0, 1, null, !0, t);
}
},
playNormalBgm: function() {
var e = cc.vv.gameData.getGameCfg();
e.normalBgm ? e.bundleName ? this.playBgm(e.normalBgm, e.bundleName) : this.playBgm(e.normalBgm, null) : cc.log("cfg未配置normalBgm");
},
stopBgm: function() {
this.playingBgm = null;
cc.vv.AudioManager.setClearBgmCall();
cc.vv.AudioManager.stopBgm();
},
playUnLoopBgm: function(e, t, i) {
var n = this;
if (t || !this.playingBgm) {
this.stopBgm();
n.playingBgm = e;
cc.vv.AudioManager.playBgm(this.soundPath, e, !0, i, function() {
n.playingBgm = null;
n.bCheckNext = !0;
}, !1);
}
},
playCommonEff: function(e) {
cc.vv.AudioManager.playEff("Table_Common/TableRes/", e, !0);
},
update: function() {}
});
cc._RF.pop();
}, {} ],
Table_menu_charge: [ function(e, t) {
"use strict";
cc._RF.push(t, "f8f22H1M0RJ7I/cPyuE8fG0", "Table_menu_charge");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
Global.btnClickEvent(this.node, function() {
if (Global.isIOSAndroidReview()) cc.vv.PopupManager.addPopup("YD_Pro/Review/yd_more_coins"); else {
var e = "YD_Pro/prefab/yd_shop";
cc.vv.UserManager.isbindphone > 0 || (e = "YD_Pro/prefab/Register");
cc.vv.PopupManager.addPopup(e, {
onShow: function() {}
});
}
}, this);
},
start: function() {}
});
cc._RF.pop();
}, {} ],
Table_menu_detail: [ function(e, t) {
"use strict";
cc._RF.push(t, "29aeb8X9rlDvbC8t5Oi5a8C", "Table_menu_detail");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.registerEvent();
Global.btnClickEvent(cc.find("btn_close", this.node), this.onBtnMenuClose, this);
Global.btnClickEvent(cc.find("btn_menu", this.node), this.onBtnMenuClose, this);
var e = cc.find("btn_sound", this.node);
Global.btnClickEvent(e, this.onMenuSoundClicked, this);
var t = cc.find("btn_music", this.node);
Global.btnClickEvent(t, this.onMenuMusicClicked, this);
this.checkSoundVal();
Global.btnClickEvent(cc.find("btn_help", this.node), this.onMenuHelpClicked, this);
},
start: function() {
var e = new cc.Node("node_out");
e.addComponent(cc.Button);
e.parent = this.node;
e.width = 10 * cc.winSize.width;
e.height = 10 * cc.winSize.height;
var t = this.node.convertToNodeSpaceAR(cc.v2(cc.winSize.width / 2, cc.winSize.height / 2));
e.x = t.x;
e.y = t.y;
e.zIndex = -1;
Global.btnClickEvent(e, this.onBtnMenuClose, this);
cc.find("btn_help", this.node).active = !this._bInHall;
},
onDestroy: function() {
this._endCall && this._endCall();
},
registerEvent: function() {},
checkSoundVal: function() {
var e = cc.find("btn_sound", this.node);
e.getChildByName("on").active = cc.vv.AudioManager.getEffVolume() > 0;
e.getChildByName("off").active = !e.getChildByName("on").active;
var t = cc.find("btn_music", this.node), i = t.getChildByName("on"), n = t.getChildByName("off");
i.active = cc.vv.AudioManager.getBgmVolume() > 0;
n.active = !i.active;
},
onMenuSoundClicked: function() {
Global.TableSoundMgr.playCommonEff("com_click");
var e = cc.find("btn_sound", this.node);
e.getChildByName("on").active = !e.getChildByName("on").active;
e.getChildByName("off").active = !e.getChildByName("on").active;
var t = e.getChildByName("on").active ? 1 : 0;
cc.vv.AudioManager.setEffVolume(t);
},
onMenuMusicClicked: function() {
Global.TableSoundMgr.playCommonEff("com_click");
var e = cc.find("btn_music", this.node);
e.getChildByName("on").active = !e.getChildByName("on").active;
e.getChildByName("off").active = !e.getChildByName("on").active;
var t = e.getChildByName("on").active ? 1 : 0;
cc.vv.AudioManager.setBgmVolume(t);
},
onMenuHelpClicked: function() {
Global.TableSoundMgr.playCommonEff("com_click");
var e = this;
if (cc.vv.gameData) {
var t, i, n;
(n = (t = cc.vv.gameData.getGameCfg()).help_prefab) || (n = "Table_Common/TableRes/prefab/Table_Help_prefab");
(i = t.help_prefab_cfg) || (i = "Table_Help_prefab");
if (!n) {
console.log("未在cfg中配置help预制的路径");
return;
}
cc.loader.loadRes(n, cc.Prefab, function(t, n) {
if (!t) {
var a = cc.find("Canvas/help_node");
if (a) a.active = !0; else {
(a = cc.instantiate(n)).getComponent(i) || a.addComponent(i);
a.name = "help_node";
a.parent = cc.find("Canvas");
a.active = !0;
}
}
e.node.destroy();
});
}
},
SetBackLobby: function(e) {
cc.find("btn_exit", this.node).getComponent(cc.Button).interactable = e;
},
onEventHideMenu: function() {
this.node.destroy();
},
onBtnMenuClose: function() {
Global.TableSoundMgr.playCommonEff("com_click");
this.node.destroy();
}
});
cc._RF.pop();
}, {} ],
Table_menu: [ function(e, t) {
"use strict";
cc._RF.push(t, "bc51bXJ56FAaZh8TBfX44B2", "Table_menu");
var i = e("../../../BalootClient/game_common/CommonStyle");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
var e = cc.find("btn_menu", this.node);
Global.btnClickEvent(e, this.onClickMenuBtn, this);
Global.btnClickEvent(cc.find("btn_exit", this.node), this.onMenuExit, this);
},
start: function() {},
onClickBackLobby: function() {
var e = this;
Global.TableSoundMgr.playCommonEff("com_click");
if (!this._bClickBack) {
this._bClickBack = !0;
this.scheduleOnce(function() {
e._bClickBack = null;
}, 1);
cc.vv.gameData && cc.vv.gameData.ReqBackLobby();
}
},
onClickMenuBtn: function(e) {
Global.TableSoundMgr.playCommonEff("com_click");
StatisticsMgr.reqReport(ReportConfig.SG_BTN_SETTING);
var t = this;
cc.loader.loadRes("Table_Common/TableRes/prefab/menu_detail", cc.Prefab, function(n, a) {
if (!n && cc.isValid(t.node)) {
var o = t.node.parent.getChildByName("menu_detail");
if (!o) {
var c = cc.instantiate(a);
Global.FixDesignScale(c);
c.name = "menu_detail";
c.parent = t.node.parent;
c.scaleY;
var s = e.target;
if (s) {
var r = s.convertToWorldSpaceAR(cc.Vec2(0, 0)), l = t.node.parent.convertToNodeSpaceAR(r);
c.position = l;
i.CommonStyle.fastShow(c);
}
o = c;
}
}
});
},
onMenuExit: function() {
var e = this;
Global.TableSoundMgr.playCommonEff("com_click");
StatisticsMgr.reqReport(ReportConfig.SG_BTN_EXITGAME);
if (!this._bClickBack) {
this._bClickBack = !0;
this.scheduleOnce(function() {
e._bClickBack = null;
}, 1);
cc.vv.gameData && cc.vv.gameData.ReqBackLobby();
}
}
});
cc._RF.pop();
}, {
"../../../BalootClient/game_common/CommonStyle": "CommonStyle"
} ],
TaskCompleteHintCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2ee52AnlOFFPaLAulVhU4Sn", "TaskCompleteHintCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.button = null;
t.infoLabel = null;
t.nextNode = null;
t.nextLabel = null;
t.progressBar = null;
t.progressLabel = null;
return t;
}
t.prototype.onLoad = function() {
var e = this.node.addComponent("NetListenerCmp");
this.button.node.on("click", this.onClickComplete, this);
e.registerMsg(MsgId.EVENT_TASK_MAIN_REWARD, this.EVENT_TASK_MAIN_REWARD, this);
this.button.interactable = !1;
};
t.prototype.run = function(e) {
var t, i = this;
if (-1 == e.nextcount) {
this.nextNode.active = !1;
t = 160;
} else {
this.nextNode.active = !0;
this.nextLabel.string = e.nextdesc;
this.progressBar.progress = Math.min(1, e.count / e.nextcount);
this.progressLabel.string = Global.FormatNumToComma(e.count) + "/" + Global.FormatNumToComma(e.nextcount);
t = 325;
}
var n = cc.sys.getSafeAreaRect(), a = cc.winSize.height / 2 - (cc.winSize.height - n.height);
this.showPos = cc.v3(0, a - t / 2);
this.hidePos = cc.v3(0, cc.winSize.height / 2 + t / 2);
this.taskid = e.taskid;
this.type = e.type;
this.infoLabel.string = e.desc;
this.node.position = this.hidePos;
cc.tween(this.node).to(.3, {
position: this.showPos
}, {
easing: "quadOut"
}).call(function() {
i.button.interactable = !0;
}).delay(8).call(function() {
i.button.interactable = !1;
}).to(.3, {
position: this.hidePos
}, {
easing: "quadIn"
}).call(function() {
i.node.destroy();
}).start();
};
t.prototype.onClickComplete = function() {
this.node.stopAllActions();
cc.vv.NetManager.send({
c: MsgId.EVENT_TASK_MAIN_REWARD,
taskid: this.taskid,
type: this.type
});
StatisticsMgr.reqReport(ReportConfig.EVENT_REWARD_GET_SG, this.taskid);
};
t.prototype.EVENT_TASK_MAIN_REWARD = function(e) {
var t = this;
this.button.interactable = !1;
cc.tween(this.node).delay(.5).to(.3, {
position: this.hidePos
}, {
easing: "quadIn"
}).call(function() {
t.node.destroy();
}).start();
200 == e.code && (e.spcode && e.spcode > 0 ? cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0) : e.rewards && Global.RewardFly(e.rewards, this.button.node.convertToWorldSpaceAR(cc.v2(0, 0))));
};
__decorate([ o(cc.Button) ], t.prototype, "button", void 0);
__decorate([ o(cc.Label) ], t.prototype, "infoLabel", void 0);
__decorate([ o(cc.Node) ], t.prototype, "nextNode", void 0);
__decorate([ o(cc.Label) ], t.prototype, "nextLabel", void 0);
__decorate([ o(cc.ProgressBar) ], t.prototype, "progressBar", void 0);
__decorate([ o(cc.Label) ], t.prototype, "progressLabel", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
TimeDownCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "73f978QrnBAbqiC0lTB6Fmz", "TimeDownCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = n.menu, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.richText = null;
t.pause = !1;
t._timelife = 0;
t.formatStr = "hh:mm:ss";
return t;
}
Object.defineProperty(t.prototype, "timelife", {
get: function() {
return this._timelife;
},
set: function(e) {
this._timelife = e;
if (this.label) {
this.label.string = e > 0 ? Global.formatSecond(e, this.formatStr) : "";
this.updateFunc && this.updateFunc(e, this.label);
}
if (this.richText) {
this.richText.string = e > 0 ? Global.formatSecond(e, this.formatStr) : "";
this.updateFunc && this.updateFunc(e, this.richText);
}
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
var e = this;
this.schedule(function() {
if (!e.pause && e.timelife > 0) {
e.timelife--;
e.timelife <= 0 && e.callback && e.callback();
}
}, 1);
};
t.prototype.setUpdateFunc = function(e) {
this.updateFunc = e;
};
t.prototype.setCallback = function(e) {
this.callback = e;
};
t.prototype.setTimeFormatStr = function(e) {
this.formatStr = e;
};
__decorate([ o(cc.Label) ], t.prototype, "label", void 0);
__decorate([ o(cc.RichText) ], t.prototype, "richText", void 0);
return __decorate([ a, c("UI/倒计时组件") ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {} ],
TimerMgr: [ function(e, t) {
"use strict";
cc._RF.push(t, "4fe7fdkgoVNsbQD/5sZTrwS", "TimerMgr");
cc.Class({
extends: cc.Component,
statics: {
_count1000: 0,
_count100: 0,
_nInter: 50,
init: function() {
setInterval(this.update.bind(this), this._nInter);
},
update: function() {
this._count1000 += this._nInter;
this._count100 += this._nInter;
if (this._count1000 >= 1e3) {
this._count1000 = 0;
if (cc.vv.UserManager) {
cc.vv.UserManager.update && cc.vv.UserManager.update(1);
cc.vv.UserManager.updateTimer && cc.vv.UserManager.updateTimer(1);
}
cc.vv.gameData && cc.vv.gameData.update(1);
}
cc.vv.PlatformApiMgr && cc.vv.PlatformApiMgr.update();
cc.vv.NetManager && (Global.reconnect_break || cc.vv.NetManager.updateTimer(this._nInter));
cc.vv.NetCacheMgr && cc.vv.NetCacheMgr.update(this._nInter);
}
}
});
cc._RF.pop();
}, {} ],
ToGameLoading: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a2f6eqHwWhLzLfJRbkQvLMb", "ToGameLoading");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.spriteCpt = null;
t.loadingNode = null;
return t;
}
t.prototype.onLoad = function() {
var e, t = this;
cc.vv.gameData && (e = cc.vv.gameData.getGameId());
if (e) if (cc.vv.UserConfig.getGameMapInfo(e).bBetSelect) {
this.loadingNode.active = !0;
this.spriteCpt.spriteFrame = "";
} else this.loadingNode.active = !0;
this.scheduleOnce(function() {
cc.vv.FloatTip.show(___("进入房间失败"));
cc.vv.PopupManager.removePopup(t.node);
}, 12);
};
__decorate([ o(cc.Sprite) ], t.prototype, "spriteCpt", void 0);
__decorate([ o(cc.Node) ], t.prototype, "loadingNode", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
TradPlusAdMgr: [ function(e, t) {
"use strict";
cc._RF.push(t, "7babbNCi4xMDYr+EiC5/HCM", "TradPlusAdMgr");
cc.Class({
extends: cc.Component,
statics: {
_adUnitId: null,
init: function() {
cc.vv.PlatformApiMgr.addCallback(this.interstitialLoadedCallBack, "interstitialLoadedCallBack");
cc.vv.PlatformApiMgr.addCallback(this.channelNameCallBack, "channelNameCallBack");
cc.vv.PlatformApiMgr.addCallback(this.rewardedVideoLoadedCallBack, "rewardedVideoLoadedCallBack");
cc.vv.PlatformApiMgr.addCallback(this.rewardedVideoRewardedCallBack, "rewardedVideoRewardedCallBack");
cc.vv.PlatformApiMgr.addCallback(this.rewardedVideoAdDismissedCallBack, "rewardedVideoAdDismissedCallBack");
},
loadAdRewardedVideo: function(e) {
cc.vv.PlatformApiMgr.loadTradPlusRewardedVideo(e);
this._adUnitId = e;
},
showTradPlusRewardedVideo: function() {
cc.vv.PlatformApiMgr.showTradPlusRewardedVideo(this._adUnitId || (Global.isIOS() ? "160AFCDF01DDA48CCE0DBDBE69C8C669" : "39DAC7EAC046676C5404004A311D1DB1"));
},
interstitialLoadedCallBack: function() {
AppLog.warn("TradPlusAdMgr.interstitialLoadedCallBack");
},
channelNameCallBack: function(e) {
AppLog.warn("TradPlusAdMgr.channelNameCallBack(" + JSON.stringify(e) + ")");
},
rewardedVideoLoadedCallBack: function() {
AppLog.warn("TradPlusAdMgr.rewardedVideoLoadedCallBack");
},
rewardedVideoRewardedCallBack: function(e) {
AppLog.warn("TradPlusAdMgr.rewardedVideoRewardedCallBack(" + JSON.stringify(e) + ")");
},
rewardedVideoAdDismissedCallBack: function() {
AppLog.warn("TradPlusAdMgr.rewardedVideoAdDismissedCallBack");
}
}
});
cc._RF.pop();
}, {} ],
TurnCmp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7f5d3u1wVtAF7BLwSQsHSvi", "TurnCmp");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.currSelectLabel = null;
t.preBtn = null;
t.nextBtn = null;
t._currSelectIndex = 0;
return t;
}
i = t;
t.prototype.onLoad = function() {
var e = this;
this.preBtn.node.on("click", function() {
e._changeIndex(-1);
}, this);
this.nextBtn.node.on("click", function() {
e._changeIndex(1);
}, this);
};
t.prototype._changeIndex = function(e) {
this._currSelectIndex += e;
this._currSelectIndex < 0 ? this._currSelectIndex = 0 : this._currSelectIndex >= this._dataList.length && (this._currSelectIndex = this._dataList.length - 1);
this.preBtn.interactable = 0 != this._currSelectIndex;
this.nextBtn.interactable = this._currSelectIndex < this._dataList.length - 1;
this._refreshView();
this._sendChangeEvt();
};
t.prototype._sendChangeEvt = function() {
var e, t = this.getCurrSelectData(), n = t;
e = n ? {
title: n.title,
value: n.value
} : t;
var a = {
currIndex: this._currSelectIndex,
msg: e
};
this.node.emit(i.EVT_CHANGE, a);
};
t.prototype._refreshView = function() {
if (this.currSelectLabel && this._dataList && !(this._dataList.length < 1)) {
var e = this._dataList[this._currSelectIndex];
this._callback && this._callback(e, this._currSelectIndex);
var t = "";
"number" == typeof e ? t = e + "" : "string" == typeof e ? t = e : e && (t = e.title);
this.currSelectLabel.string = t;
}
};
t.prototype.setDataList = function(e, t) {
void 0 === t && (t = 0);
this._dataList = e;
this.setIndex(t);
};
t.prototype.setIndex = function(e) {
this._currSelectIndex = e;
this._changeIndex(0);
};
t.prototype.getCurrSelectData = function() {
return this._dataList && this._dataList.length > 0 && this._currSelectIndex < this._dataList.length ? this._dataList[this._currSelectIndex] : null;
};
t.prototype.setSelectCallback = function(e) {
this._callback = e;
};
var i;
t.EVT_CHANGE = "evt_change";
__decorate([ o(cc.Label) ], t.prototype, "currSelectLabel", void 0);
__decorate([ o(cc.Button) ], t.prototype, "preBtn", void 0);
__decorate([ o(cc.Button) ], t.prototype, "nextBtn", void 0);
return i = __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
UIActionIn: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "eae5diadllHjqLAFa7DUTiI", "UIActionIn");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./ActionType"), a = cc._decorator, o = a.ccclass, c = a.property, s = a.menu, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.auto = !0;
t.animTime = .3;
t.actionType = n.ActionType.None;
t.easingType = n.EasingType.None;
t.offsetPos = cc.Vec3.ZERO;
t.endCallFuncs = [];
t.initPos = null;
return t;
}
t.prototype.onLoad = function() {
var e = this.getComponent(cc.Widget);
e && e.updateAlignment();
this.initPos = this.node.position;
this.actionType == n.ActionType.MOVE && (this.node.position = this.initPos.add(this.offsetPos));
};
t.prototype.start = function() {};
t.prototype.onEnable = function() {
this.auto && this.run();
};
t.prototype.onDisable = function() {};
t.prototype.run = function() {
var e = this;
this.node.stopAllActions();
var t = void 0;
this.easingType == n.EasingType.sineOut ? t = "sineOut" : this.easingType == n.EasingType.quadOut ? t = "quadOut" : this.easingType == n.EasingType.backOut ? t = "backOut" : this.easingType == n.EasingType.backIn && (t = "backIn");
var i = null;
if (this.actionType == n.ActionType.SCALE) {
this.node.scale = .2;
i = cc.tween().to(this.animTime, {
scale: 1
}, {
easing: t
});
} else if (this.actionType == n.ActionType.MOVE) {
this.node.position = this.initPos.add(this.offsetPos);
i = cc.tween().to(this.animTime, {
position: this.initPos
}, {
easing: t
});
}
cc.tween(this.node).then(i).call(function() {
for (var t = 0, i = e.endCallFuncs; t < i.length; t++) (0, i[t])(e.node);
}).start();
};
t.prototype.addEndCallFunc = function(e) {
this.endCallFuncs.push(e);
};
__decorate([ c ], t.prototype, "auto", void 0);
__decorate([ c ], t.prototype, "animTime", void 0);
__decorate([ c({
type: cc.Enum(n.ActionType),
displayName: "动作"
}) ], t.prototype, "actionType", void 0);
__decorate([ c({
type: cc.Enum(n.EasingType),
displayName: "缓动"
}) ], t.prototype, "easingType", void 0);
__decorate([ c({
type: cc.Vec3,
displayName: "起始偏移位置",
visible: function() {
return this.actionType == n.ActionType.MOVE;
}
}) ], t.prototype, "offsetPos", void 0);
return __decorate([ o, s("UI动作/进入") ], t);
}(cc.Component);
i.default = r;
cc._RF.pop();
}, {
"./ActionType": "ActionType"
} ],
UIActionLoop: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "85c72XgBbZJQKOXj4EDfvQt", "UIActionLoop");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./ActionType"), a = cc._decorator, o = a.ccclass, c = a.property, s = a.menu, r = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.auto = !0;
t.animTime = .3;
t.actionType = n.ActionType.None;
t.easingType = n.EasingType.None;
t.offsetPos = cc.Vec3.ZERO;
t.initPos = null;
return t;
}
t.prototype.onLoad = function() {
var e = this.getComponent(cc.Widget);
e && e.updateAlignment();
this.initPos = this.node.position;
this.actionType == n.ActionType.MOVE && (this.node.position = this.initPos.add(this.offsetPos));
};
t.prototype.start = function() {};
t.prototype.onEnable = function() {
this.auto && this.run();
};
t.prototype.onDisable = function() {};
t.prototype.run = function() {
this.node.stopAllActions();
var e = void 0;
this.easingType == n.EasingType.sineOut ? e = "sineOut" : this.easingType == n.EasingType.quadOut ? e = "quadOut" : this.easingType == n.EasingType.backOut ? e = "backOut" : this.easingType == n.EasingType.backIn && (e = "backIn");
var t = cc.tween(this.node);
if (this.actionType == n.ActionType.SCALE) {
this.node.scale = .2;
t.to(this.animTime, {
scale: 1
}, {
easing: e
});
} else if (this.actionType == n.ActionType.MOVE) {
this.node.position = this.initPos.add(this.offsetPos);
t.to(this.animTime, {
position: this.initPos
}, {
easing: e
});
}
t.repeatForever().start();
};
__decorate([ c ], t.prototype, "auto", void 0);
__decorate([ c ], t.prototype, "animTime", void 0);
__decorate([ c({
type: cc.Enum(n.ActionType),
displayName: "动作"
}) ], t.prototype, "actionType", void 0);
__decorate([ c({
type: cc.Enum(n.EasingType),
displayName: "缓动"
}) ], t.prototype, "easingType", void 0);
__decorate([ c({
type: cc.Vec3,
displayName: "起始偏移位置",
visible: function() {
return this.actionType == n.ActionType.MOVE;
}
}) ], t.prototype, "offsetPos", void 0);
return __decorate([ o, s("UI动作/持续") ], t);
}(cc.Component);
i.default = r;
cc._RF.pop();
}, {
"./ActionType": "ActionType"
} ],
UIActionMove: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e94e8k8g5RGo5dN2DHTAX9U", "UIActionMove");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.initPos = null;
t.offsetPos = cc.Vec3.ZERO;
t.animTime = .3;
t.auto = !1;
return t;
}
t.prototype.onLoad = function() {
this.initPos = this.node.position;
this.node.position = this.initPos.add(this.offsetPos);
};
t.prototype.onEnable = function() {
this.auto && this.run();
};
t.prototype.run = function() {
this.node.stopAllActions();
this.node.position = this.initPos.add(this.offsetPos);
cc.tween(this.node).to(this.animTime, {
position: this.initPos
}, {
easing: "sineOut"
}).start();
};
__decorate([ o(cc.Vec3) ], t.prototype, "offsetPos", void 0);
__decorate([ o ], t.prototype, "animTime", void 0);
__decorate([ o ], t.prototype, "auto", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
UIFixDesign: [ function(e, t) {
"use strict";
cc._RF.push(t, "63bb7QLBdNENZoYZiWInBAy", "UIFixDesign");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
Global.FixDesignScale_V(this.node, !0);
}
});
cc._RF.pop();
}, {} ],
UI_popwin_interface: [ function(e, t) {
"use strict";
cc._RF.push(t, "394efWCZuRG34N7/gCilePs", "UI_popwin_interface");
cc.Class({
extends: cc.Component,
properties: {
btn_close: {
default: null,
type: cc.Node,
tooltip: "关闭按钮延迟显示"
}
},
onEnable: function() {
Global.FixDesignScale_V(this.node);
var e = this.node.scale;
Global.showAlertAction(this.node, !0, .01, e, this.popWinEndCall.bind(this));
this.showCloseBtnAni();
},
onDisable: function() {
Global.showAlertAction(this.node, !1, this.node.scale, 0);
},
showCloseBtnAni: function() {
if (this.btn_close) {
this.btn_close.opacity = 0;
cc.tween(this.btn_close).delay(.8).to(.5, {
opacity: 255
}).start();
}
},
getDesignSpaceX: function() {
return 0;
},
getDegignSpaceY: function() {
return 0;
},
popWinEndCall: function() {}
});
cc._RF.pop();
}, {} ],
UserAvatar: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "439deS5KmdOF47BfcOOJ2Ww", "UserAvatar");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./NetImg"), a = cc._decorator, o = a.ccclass, c = a.property, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.icon = null;
t.spineFrame = null;
t._data = {
uid: 0,
icon: "head_0",
avatarFrame: "avatarframe_0"
};
return t;
}
t.prototype.onLoad = function() {
this.updataAvatar(this._data);
};
t.prototype.hideAvatar = function(e) {
this.icon && (this.icon.node.active = !e);
this.spineFrame && (this.spineFrame.node.active = !e);
};
t.prototype.updataAvatar = function(e) {
this.updateIcon(e.uid, e.icon);
this.updateFrame(e.avatarFrame);
};
t.prototype.updateIcon = function(e, t) {
var i = this;
if (t) {
this._data.uid = e;
this._data.icon = t + "";
if (this.icon) if (this._data.icon.startsWith("http")) if (e && e > 0) {
var a = this.icon.node, o = a.getComponent("NetHeadImg");
o || (o = a.addComponent("NetHeadImg"));
this.showLoading(!0);
o.load(e, t, function(e) {
i.showLoading(!1);
e || i.retry();
});
this.icon.setUrlValue(t);
} else {
this.showLoading(!0);
this.icon.imgType = n.NetImgType.net;
this.icon.loadUrl(this._data.icon, function() {
i.showLoading(!1);
});
} else {
this.icon.imgType = n.NetImgType.atlas;
this.icon.url = "head_" + this._data.icon;
}
}
};
t.prototype.updateFrame = function(e) {
e = (e = "avatarframe_0" == (e = e || "avatarframe_1000") ? "avatarframe_1000" : e).indexOf("avatarframe_") >= 0 ? e : "avatarframe_1000";
this._data.avatarFrame = e;
this.spineFrame && cc.vv && cc.vv.UserConfig && cc.vv.UserConfig.setAvatarFrame(this.spineFrame, this._data.avatarFrame);
};
t.prototype.showLoading = function(e) {
if (cc.isValid(this.node)) {
var t = this.node.getChildByName("mask");
if (t) {
t.active = e;
var i = t.getChildByName("loading");
i && (e ? i.runAction(cc.sequence(cc.repeat(cc.rotateBy(3, -360), 2), cc.callFunc(function() {
cc.isValid(t) && (t.active = !1);
}))) : i.stopAllActions());
}
}
};
t.prototype.retry = function() {
var e = this;
this._retrycnt = this._retrycnt || 0;
this._retrycnt += 1;
this._retrycnt <= 3 && cc.tween(this.node).delay(3).call(function() {
cc.isValid(e._data) && e.updateIcon(e._data.uid, e._data.icon);
}).start();
};
__decorate([ c({
type: n.default,
displayName: "头像"
}) ], t.prototype, "icon", void 0);
__decorate([ c({
type: sp.Skeleton,
displayName: "头像框"
}) ], t.prototype, "spineFrame", void 0);
return __decorate([ o ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {
"./NetImg": "NetImg"
} ],
UserCoinCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e47c00azNxEyqWLEMNLfqzD", "UserCoinCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.iconNode = null;
return t;
}
t.prototype.start = function() {};
__decorate([ o(cc.Label) ], t.prototype, "label", void 0);
__decorate([ o(cc.Node) ], t.prototype, "iconNode", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
UserConfig: [ function(e, t) {
"use strict";
cc._RF.push(t, "9837a5QciRNg5JrqK83UL2P", "UserConfig");
var i, n;
function a(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = o(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var n = 0;
return function() {
return n >= e.length ? {
done: !0
} : {
done: !1,
value: e[n++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function o(e, t) {
if (e) {
if ("string" == typeof e) return c(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? c(e, t) : void 0;
}
}
function c(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
cc.Class({
extends: cc.Component,
statics: {
gameMap: [ {
gameid: 265,
get title() {
return ___("Domino");
},
bBetSelect: !0,
bDownload: !0
}, {
gameid: 269,
get title() {
return ___("Ludo");
},
bBetSelect: !0,
bDownload: !0
}, {
gameid: 287,
get title() {
return ___("UNO");
},
bBetSelect: !0,
bDownload: !0
}, {
gameid: 11,
get title() {
return "Andar Bahar";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 12,
get title() {
return "Crash";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 13,
get title() {
return "Jhandi Munda";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 14,
get title() {
return "Horse Racing";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 15,
get title() {
return "Wingo Lottery";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 16,
get title() {
return "Fortune Wheel";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 17,
get title() {
return "Dragon VS Tiger";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 18,
get title() {
return "Roulette";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 19,
get title() {
return "Baccarat";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 20,
get title() {
return "7 Up Down";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 21,
get title() {
return "Aladdin's Blessing";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 22,
get title() {
return "Aviator";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 23,
get title() {
return "Aviatrix";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 24,
get title() {
return "CrashX";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 25,
get title() {
return "CricketX";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 26,
get title() {
return "JetX";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 27,
get title() {
return "Zeppelin";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 28,
get title() {
return "Dice";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 29,
get title() {
return "Limbo";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 30,
get title() {
return "PLinko";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 31,
get title() {
return "Keno";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 32,
get title() {
return "Mines";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 33,
get title() {
return "Hilo";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 34,
get title() {
return "Towers";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 35,
get title() {
return "DoubleRoll";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 36,
get title() {
return "Coins";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 37,
get title() {
return "Crypto";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 38,
get title() {
return "Triple";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 39,
get title() {
return "Cappadocia";
},
bTableSelect: !0,
bDownload: !0
}, {
gameid: 255,
get title() {
return "Black Jack";
},
bBetSelect: !0,
bDownload: !0
}, {
gameid: 291,
get title() {
return "Teen Patti";
},
bBetSelect: !0,
bDownload: !0
}, {
gameid: 292,
get title() {
return "Rummy";
},
bBetSelect: !0,
bDownload: !0
}, {
gameid: 293,
get title() {
return "Poker";
},
bBetSelect: !0,
bDownload: !0
} ],
salonGamesList: [ 292, 255, 265, 269, 287, 291, 293 ],
allGameIds: function() {
for (var e, t = [], i = a(this.gameMap); !(e = i()).done; ) {
var n = e.value;
t.push(n.gameid);
}
return t;
},
allBetSelectIds: function() {
for (var e, t = [], i = a(this.gameMap); !(e = i()).done; ) {
var n = e.value;
n.bBetSelect && t.push(n.gameid);
}
return t;
},
allTableSelectIds: function() {
for (var e, t = [], i = a(this.gameMap); !(e = i()).done; ) {
var n = e.value;
n.bTableSelect && t.push(n.gameid);
}
return t;
},
getMatchRule: function(e, t) {
for (var i = 0, n = [ {
gameid: 265,
rule: [ [ ___("累积让其他玩家pass次数"), ___("在Domino游戏中获得最多的让其他玩家pass次数"), ___("每一次pass计入一次成绩，以总pass次数进行排名"), ___("比赛总时长为{1}分钟", t) ], [ ___("累积胜利次数"), ___("在Domino游戏中获得最多的累积胜利次数"), ___("每一次胜利计入一次成绩，以总胜利次数进行排名"), ___("比赛总时长为{1}分钟", t) ] ]
}, {
gameid: 257,
rule: [ [ ___("累积go down牌张数"), ___("在Hand游戏中获得最多的累积go down牌张数"), ___("每一张牌计入一次成绩，以总张数进行排名"), ___("比赛总时长为{1}分钟", t) ], [ ___("累积获得分数"), ___("在Hand游戏中获得最多的累积分数"), ___("每一次胜利分数计入成绩，以总分数进行排名"), ___("比赛总时长为{1}分钟", t) ] ]
}, {
gameid: 256,
rule: [ [ ___("累积获得分数"), ___("在Baloot游戏中获得最多的累积分数"), ___("每一小局分数计入成绩，以总分数进行排名"), ___("比赛总时长为{1}分钟", t) ], [ ___("累积比牌获胜次数"), ___("在Baloot游戏中获得最多的累积比牌获胜次数"), ___("每比牌获胜计入一次成绩，以总分数进行排名"), ___("比赛总时长为{1}分钟", t) ] ]
}, {
gameid: 264,
rule: [ [ ___("累积获得分数"), ___("在Estimation游戏中获得最多的累积分数"), ___("每一小局分数计入成绩，以总分数进行排名"), ___("比赛总时长为{1}分钟", t) ], [ ___("累积获得分数"), ___("在Estimation游戏中获得最多的累积分数"), ___("每一小局分数计入成绩，以总分数进行排名"), ___("比赛总时长为{1}分钟", t) ] ]
}, {
gameid: 291,
rule: [ [ "Cumulative wins", "Get the most cumulative wins in a Teenpatti game", "Each victory counts as a score, and the ranking is based the total number of victories", "The total duration of the game is " + t + " minutes" ], [ "Accumulate the number of pairs of cards obtained", "Get the most passes in a Teenpatti game", "Each pass counts as a score,and the ranking is based the total number of pairs of cards", "The total duration of the game is " + t + " minutes" ] ]
} ]; i < n.length; i++) {
var a = n[i];
if (a.gameid === e) return a.rule;
}
return null;
},
leagueRewardConfig: [ {
level: 7,
get name() {
return ___("传奇");
},
rewards: [ {
type: 1,
count: 1e5
}, {
type: 25,
count: 500
}, {
type: 43,
img: "avatarframe_s_c_1",
count: 1,
days: 7
} ]
}, {
level: 6,
get name() {
return ___("大师");
},
rewards: [ {
type: 1,
count: 5e4
}, {
type: 25,
count: 400
}, {
type: 43,
img: "avatarframe_s_d_1",
count: 1,
days: 7
} ]
}, {
level: 5,
get name() {
return ___("钻石");
},
rewards: [ {
type: 1,
count: 3e4
}, {
type: 25,
count: 300
} ]
}, {
level: 4,
get name() {
return ___("铂金");
},
rewards: [ {
type: 1,
count: 2e4
}, {
type: 25,
count: 200
} ]
}, {
level: 3,
get name() {
return ___("黄金");
},
rewards: [ {
type: 1,
count: 1e4
}, {
type: 25,
count: 100
} ]
}, {
level: 2,
get name() {
return ___("白银");
},
rewards: [ {
type: 1,
count: 5e3
}, {
type: 25,
count: 50
} ]
}, {
level: 1,
get name() {
return ___("青铜");
},
rewards: [ {
type: 1,
count: 1e3
} ]
} ],
getLeagueRewards: function(e) {
for (var t, i = a(this.leagueRewardConfig); !(t = i()).done; ) {
var n = t.value;
if (n.level == e) return n.rewards;
}
},
rankConfig: [ {
get text() {
return ___("青铜");
},
stage: 1,
level: 1,
score: 0,
levelStr: ""
}, {
get text() {
return ___("白银");
},
stage: 2,
level: 1,
score: 1e3,
levelStr: ""
}, {
get text() {
return ___("黄金");
},
stage: 3,
level: 1,
score: 1e4,
levelStr: ""
}, {
get text() {
return ___("铂金");
},
stage: 4,
level: 1,
score: 2e4,
levelStr: ""
}, {
get text() {
return ___("钻石_");
},
stage: 5,
level: 1,
score: 4e4,
levelStr: ""
}, {
get text() {
return ___("大师");
},
stage: 6,
level: 1,
score: 6e4,
levelStr: ""
}, {
get text() {
return ___("传奇");
},
stage: 7,
level: 1,
score: 1e5,
levelStr: ""
} ],
max_vip: 20,
vipInfoConfig: [ {
expup: 0,
friendadd: 0,
freeRank: 1,
room: 2,
emoj: "1_sz",
gift: {
img: "gift_cake",
count: 1
},
tickets: 1,
rewards: [ {
type: 25,
count: 5
} ],
view: [ 0, 2, 4, 5, 6 ]
}, {
expup: 1e3,
friendadd: 0,
freeRank: 1,
room: 3,
emoj: "1_sz",
avatarframe: "avatarframe_v_0",
tickets: 1,
rewards: [ {
type: 25,
count: 8
} ],
view: [ 0, 2, 4, 5, 6 ]
}, {
expup: 2e3,
friendadd: 0,
freeRank: 1,
room: 3,
emoj: "1_sz",
gift: {
img: "gift_hookah",
count: 1
},
tickets: 1,
rewards: [ {
type: 25,
count: 10
} ],
view: [ 0, 2, 4, 5, 6 ]
}, {
expup: 3e3,
friendadd: 0,
freeRank: 1,
room: 3,
emoj: "1_sz",
gift: {
img: "gift_kiss",
count: 1
},
tickets: 2,
rewards: [ {
type: 25,
count: 12
} ],
view: [ 0, 2, 4, 5, 6 ]
}, {
expup: 5e3,
friendadd: 0,
freeRank: 1,
room: 3,
emoj: "1_sz",
gift: {
img: "gift_cake",
count: 2
},
tickets: 2,
rewards: [ {
type: 25,
count: 15
} ],
view: [ 0, 2, 4, 5, 6 ]
}, {
expup: 1e4,
friendadd: 150,
freeRank: 1,
room: 3,
emoj: "2_gp",
gift: {
img: "gift_hookah",
count: 2
},
tickets: 3,
rewards: [ {
type: 25,
count: 18
} ],
view: [ 0, 2, 4, 5, 6, 7, 8 ],
chatSkin: "chat_205"
}, {
expup: 2e4,
friendadd: 150,
freeRank: 1,
room: 4,
emoj: "2_gp",
avatarframe: "avatarframe_v_6",
tickets: 3,
rewards: [ {
type: 25,
count: 20
} ],
view: [ 0, 2, 4, 5, 6, 7, 8 ],
chatSkin: "chat_206"
}, {
expup: 5e4,
friendadd: 200,
freeRank: 1,
room: 4,
emoj: "3_zd",
gift: {
img: "gift_kiss",
count: 2
},
tickets: 3,
rewards: [ {
type: 25,
count: 25
} ],
view: [ 0, 2, 4, 5, 6, 7, 8 ],
chatSkin: "chat_207"
}, {
expup: 9e4,
friendadd: 200,
freeRank: 1,
room: 4,
emoj: "3_zd",
gift: {
img: "gift_ring",
count: 1
},
tickets: 3,
rewards: [ {
type: 25,
count: 30
} ],
view: [ 0, 2, 4, 5, 6, 7, 8 ],
chatSkin: "chat_208"
}, {
expup: 3e5,
friendadd: 300,
freeRank: 1,
room: 5,
emoj: "5_st",
avatarframe: "avatarframe_v_9",
tickets: 4,
rewards: [ {
type: 25,
count: 40
} ],
view: [ 0, 2, 4, 5, 6, 7, 8 ],
chatSkin: "chat_209"
}, {
expup: 6e5,
friendadd: 300,
freeRank: 1,
room: 5,
emoj: "5_st",
gift: {
img: "gift_ring",
count: 2
},
tickets: 4,
rewards: [ {
type: 25,
count: 50
} ],
view: [ 0, 2, 4, 5, 6, 7, 8 ],
chatSkin: "chat_210"
}, {
expup: 1e6,
friendadd: 400,
freeRank: 1,
room: 5,
emoj: "6_ax",
gift: {
img: "gift_car",
count: 1
},
tickets: 5,
rewards: [ {
type: 25,
count: 80
} ],
view: [ 0, 2, 4, 5, 6, 7, 8 ],
chatSkin: "chat_211"
}, {
expup: 16e5,
friendadd: 400,
freeRank: 1,
room: 8,
emoj: "4_zj",
avatarframe: "avatarframe_v_12",
tickets: 5,
rewards: [ {
type: 25,
count: 100
} ],
view: [ 0, 2, 4, 5, 6, 7, 8 ],
chatSkin: "chat_212"
} ],
exp_cfg: [ [ 1, 0 ], [ 2, 70 ], [ 3, 150 ], [ 4, 240 ], [ 5, 340 ], [ 6, 460 ], [ 7, 590 ], [ 8, 730 ], [ 9, 890 ], [ 10, 1060 ], [ 11, 1260 ], [ 12, 1480 ], [ 13, 1720 ], [ 14, 1990 ], [ 15, 2280 ], [ 16, 2610 ], [ 17, 2970 ], [ 18, 3370 ], [ 19, 3800 ], [ 20, 4270 ], [ 21, 4770 ], [ 22, 5310 ], [ 23, 5880 ], [ 24, 6490 ], [ 25, 7140 ], [ 26, 7830 ], [ 27, 8570 ], [ 28, 9350 ], [ 29, 10170 ], [ 30, 11040 ], [ 31, 11950 ], [ 32, 12950 ], [ 33, 14030 ], [ 34, 15200 ], [ 35, 16460 ], [ 36, 17800 ], [ 37, 19270 ], [ 38, 20870 ], [ 39, 22600 ], [ 40, 24460 ], [ 41, 26450 ], [ 42, 28570 ], [ 43, 30820 ], [ 44, 33200 ], [ 45, 35610 ], [ 46, 38040 ], [ 47, 40490 ], [ 48, 42960 ], [ 49, 45470 ], [ 50, 48030 ], [ 51, 50630 ], [ 52, 53250 ], [ 53, 55890 ], [ 54, 58560 ], [ 55, 61250 ], [ 56, 63960 ], [ 57, 66710 ], [ 58, 69510 ], [ 59, 72350 ], [ 60, 75230 ], [ 61, 78130 ], [ 62, 81060 ], [ 63, 84010 ], [ 64, 86980 ], [ 65, 89970 ], [ 66, 93e3 ], [ 67, 96080 ], [ 68, 99200 ], [ 69, 102360 ], [ 70, 105550 ], [ 71, 108760 ], [ 72, 111990 ], [ 73, 115240 ], [ 74, 118510 ], [ 75, 121830 ], [ 76, 125190 ], [ 77, 128590 ], [ 78, 132040 ], [ 79, 135510 ], [ 80, 139e3 ], [ 81, 142510 ], [ 82, 146040 ], [ 83, 149590 ], [ 84, 153170 ], [ 85, 156770 ], [ 86, 160410 ], [ 87, 164090 ], [ 88, 167820 ], [ 89, 171570 ], [ 90, 175340 ], [ 91, 179130 ], [ 92, 182940 ], [ 93, 186780 ], [ 94, 190640 ], [ 95, 194520 ], [ 96, 198440 ], [ 97, 202410 ], [ 98, 206420 ], [ 99, 210450 ], [ 100, 214500 ], [ 101, 218570 ], [ 102, 222670 ], [ 103, 226810 ], [ 104, 230990 ], [ 105, 235220 ], [ 106, 239490 ], [ 107, 243780 ], [ 108, 248090 ], [ 109, 252420 ], [ 110, 256780 ], [ 111, 261180 ], [ 112, 265620 ], [ 113, 270110 ], [ 114, 274640 ], [ 115, 279190 ], [ 116, 283760 ], [ 117, 288350 ], [ 118, 292970 ], [ 119, 297630 ], [ 120, 302330 ], [ 121, Number.MAX_VALUE ] ],
max_level: 121,
totalExp2Level: function(e) {
for (var t = this.exp_cfg.length - 1; t >= 0; t--) {
var i = this.exp_cfg[t];
if (e >= i[1]) return i[0];
}
return 1;
},
getLevelNeedExp: function(e) {
e = e || 1;
e = Math.min(e, this.max_level);
return this.exp_cfg[e - 1][1];
},
getCmpLevelNeedExp: function(e) {
e = e || 1;
var t = Math.min(e + 1, this.max_level);
return t == this.max_level ? "∞" : Math.min(this.exp_cfg[t - 1][1] - this.exp_cfg[e - 1][1], this.exp_cfg[this.exp_cfg.length - 1][1] - this.exp_cfg[this.exp_cfg.length - 2][1]);
},
getLevelRemainingExp: function(e) {
var t = this.totalExp2Level(e);
return e - this.exp_cfg[t - 1][1];
},
getLevelProgress: function(e) {
var t = this.totalExp2Level(e), i = this.getCmpLevelNeedExp(t);
return this.getLevelRemainingExp(e) / i;
},
spineNameMap: [ {
level: 0,
animtion: "LV_10"
}, {
level: 10,
animtion: "LV_20"
}, {
level: 20,
animtion: "LV_30"
}, {
level: 30,
animtion: "LV_40"
}, {
level: 40,
animtion: "LV_50"
}, {
level: 50,
animtion: "LV_60"
}, {
level: 60,
animtion: "LV_70"
}, {
level: 70,
animtion: "LV_80"
}, {
level: 80,
animtion: "LV_90"
}, {
level: 90,
animtion: "LV_100"
}, {
level: 100,
animtion: "LV_110"
}, {
level: 110,
animtion: "LV_120"
}, {
level: 120,
animtion: "LV_130"
}, {
level: 130,
animtion: "LV_140"
}, {
level: 140,
animtion: "LV_150"
} ],
getLevelSpineName: function(e) {
for (var t = this.spineNameMap[0].animtion, i = 0; i < this.spineNameMap.length; i++) {
var n = this.spineNameMap[i];
e > n.level && (t = n.animtion);
}
return t;
},
getRank: function(e) {
for (var t = 0, i = 0; i < this.rankConfig.length; i++) e >= this.rankConfig[i].score && (t = i);
var n = this.rankConfig[t], a = this.rankConfig[t + 1];
n.next = a || null;
return n;
},
getRankByLevel: function(e) {
for (var t, i = a(this.rankConfig); !(t = i()).done; ) {
var n = t.value;
if (n.stage == e) return n;
}
return null;
},
vipConfig: (i = {}, i[0] = {
text: ""
}, i[1] = {
get text() {
return ___("骑士");
}
}, i[2] = {
get text() {
return ___("男爵");
}
}, i),
vipExp2Level: function(e) {
for (var t = 0, i = 0; i < this.vipInfoConfig.length; i++) e >= this.vipInfoConfig[i].expup && (t = i);
return t;
},
getVip: function(e) {
return e < 0 ? this.vipConfig[0] : e >= 2 ? this.vipConfig[2] : this.vipConfig[e];
},
countryConfig: [ {
id: 0,
get name() {
return ___("世界");
}
}, {
id: 1,
get name() {
return ___("卡塔尔");
}
}, {
id: 2,
get name() {
return ___("阿联酋");
}
}, {
id: 3,
get name() {
return ___("科威特");
}
}, {
id: 4,
get name() {
return ___("巴林岛");
}
}, {
id: 5,
get name() {
return ___("沙特阿拉伯");
}
}, {
id: 6,
get name() {
return ___("阿曼");
}
}, {
id: 7,
get name() {
return ___("黎巴嫩");
}
}, {
id: 8,
get name() {
return ___("约旦");
}
}, {
id: 9,
get name() {
return ___("伊拉克");
}
}, {
id: 10,
get name() {
return ___("利比亚");
}
}, {
id: 11,
get name() {
return ___("埃及");
}
}, {
id: 12,
get name() {
return ___("突尼斯");
}
}, {
id: 13,
get name() {
return ___("吉布提");
}
}, {
id: 14,
get name() {
return ___("阿尔及利亚");
}
}, {
id: 15,
get name() {
return ___("巴勒斯坦");
}
}, {
id: 16,
get name() {
return ___("摩洛哥");
}
}, {
id: 17,
get name() {
return ___("毛里塔尼亚");
}
}, {
id: 18,
get name() {
return ___("科摩罗");
}
}, {
id: 19,
get name() {
return ___("叙利亚");
}
}, {
id: 20,
get name() {
return ___("也门");
}
}, {
id: 21,
get name() {
return ___("苏丹");
}
}, {
id: 22,
get name() {
return ___("索马里");
}
} ],
getCountry: function(e) {
return this.countryConfig[e] || this.countryConfig[0];
},
colorConfig: {
chat_free: cc.color(255, 255, 255),
chat_knight: cc.color(247, 199, 50),
chat_sir: cc.color(66, 167, 219),
chat_spring1: cc.color(231, 60, 154),
chat_spring2: cc.color(231, 60, 154),
chat_spring3: cc.color(242, 102, 105),
chat_spring4: cc.color(208, 60, 60),
chat_summer1: cc.color(61, 195, 101),
chat_summer2: cc.color(61, 194, 101),
chat_summer3: cc.color(62, 196, 101),
chat_summer4: cc.color(13, 232, 54),
chat_autumn1: cc.color(237, 144, 37),
chat_autumn2: cc.color(237, 144, 37),
chat_autumn3: cc.color(247, 199, 50),
chat_autumn4: cc.color(247, 155, 82),
chat_winter1: cc.color(73, 173, 219),
chat_winter2: cc.color(73, 173, 219),
chat_winter3: cc.color(136, 104, 220),
chat_winter4: cc.color(155, 171, 170)
},
getChatBoxColor: function(e) {
var t = this.colorConfig[e];
t || (t = cc.color(255, 255, 255));
return t;
},
colorMap: (n = {}, n.font_color_0 = new cc.Color(0, 0, 0), n.font_color_1 = new cc.Color(0, 0, 0), 
n.font_color_2 = new cc.Color(0, 0, 0), n.font_color_3 = new cc.Color(0, 0, 0), 
n.font_color_4 = new cc.Color(0, 0, 0), n.font_color_5 = new cc.Color(0, 0, 0), 
n),
getColor: function(e) {
return this.colorMap[e || "font_color_0"];
},
spcode2String: function(e) {
804 == e && cc.vv.AlertView.show(___("金币不足"), function() {
cc.vv.EventManager.emit("HALL_OPEN_SHOP", {
open: 1
});
}, function() {}, !1, function() {}, ___("提示"), ___("取消"), ___("Deposit"));
for (var t = 0, i = [ {
spcode: 625,
get errMsg() {
return ___("VIP等级不够");
}
}, {
spcode: 649,
get errMsg() {
return ___("房间号错误或者游戏已经开始");
}
}, {
spcode: 651,
get errMsg() {
return ___("您还不是VIP");
}
}, {
spcode: 652,
get errMsg() {
return ___("钻石不足");
}
}, {
spcode: 814,
get errMsg() {
return ___("商品不存在");
}
}, {
spcode: 653,
get errMsg() {
return ___("今日已不能参加排位赛");
}
}, {
spcode: 654,
get errMsg() {
return ___("队友金币不足");
}
}, {
spcode: 655,
get errMsg() {
return ___("队友钻石不足");
}
}, {
spcode: 656,
get errMsg() {
return ___("队友今日已不能参加排位赛");
}
}, {
spcode: 657,
get errMsg() {
return ___("队友已离开");
}
}, {
spcode: 665,
get errMsg() {
return ___("好友不是VIP");
}
}, {
spcode: 950,
get errMsg() {
return ___("道具不存在");
}
}, {
spcode: 815,
get errMsg() {
return ___("兑换码已被使用");
}
}, {
spcode: 816,
get errMsg() {
return ___("兑换码不存在");
}
}, {
spcode: 817,
get errMsg() {
return ___("兑换错误次数太多，请稍后再试");
}
}, {
spcode: 818,
get errMsg() {
return ___("使用过于频繁，请稍后再试");
}
}, {
spcode: 1094,
get errMsg() {
return ___("找不到该用户");
}
}, {
spcode: 925,
get errMsg() {
return ___("房主才可以解散");
}
}, {
spcode: 659,
get errMsg() {
return ___("房间号不存在");
}
}, {
spcode: 660,
get errMsg() {
return ___("房间已满");
}
}, {
spcode: 661,
get errMsg() {
return ___("房间已开始");
}
}, {
spcode: 662,
get errMsg() {
return ___("还在游戏中,不能加入其它房间");
}
}, {
spcode: 649,
get errMsg() {
return ___("游戏已开始,无法解散");
}
}, {
spcode: 636,
get errMsg() {
return ___("商品不存在");
}
}, {
spcode: 637,
get errMsg() {
return ___("rp值不足");
}
}, {
spcode: 974,
get errMsg() {
return ___("已投票,不能重复投票");
}
}, {
spcode: 753,
get errMsg() {
return ___("用户已报名联赛");
}
}, {
spcode: 9933,
get errMsg() {
return ___("获取免费类型错误");
}
}, {
spcode: 9934,
get errMsg() {
return ___("今日已经领取");
}
}, {
spcode: 423,
get errMsg() {
return ___("未找到好友信息");
}
}, {
spcode: 1096,
get errMsg() {
return ___("没有可以参加的房间");
}
}, {
spcode: 1093,
get errMsg() {
return ___("任务未完成");
}
}, {
spcode: 1451,
get errMsg() {
return ___("道具不存在");
}
}, {
spcode: 1073,
get errMsg() {
return ___("This username is not available");
}
}, {
spcode: 638,
get errMsg() {
return ___("未完成");
}
}, {
spcode: 945,
get errMsg() {
return ___("玩家等级不够");
}
}, {
spcode: 819,
get errMsg() {
return ___("您被禁言了");
}
}, {
spcode: 1098,
get errMsg() {
return ___("玩家已在房间内");
}
}, {
spcode: 923,
get errMsg() {
return ___("房间人数已满");
}
}, {
spcode: 1452,
get errMsg() {
return ___("已经绑定过邀请码");
}
}, {
spcode: 1453,
get errMsg() {
return ___("不能绑定自己的邀请码");
}
}, {
spcode: 1454,
get errMsg() {
return ___("不能绑定下级的邀请码");
}
}, {
spcode: 1455,
get errMsg() {
return ___("绑定错误");
}
}, {
spcode: 398,
get errMsg() {
return ___("已发送过邀请,请稍后再试");
}
}, {
spcode: 3008,
get errMsg() {
return ___("无法重复领取沙龙体验卡");
}
}, {
spcode: 1102,
get errMsg() {
return ___("已发送过邀请,请10s后再试");
}
}, {
spcode: 976,
get errMsg() {
return ___("无法重复领取");
}
}, {
spcode: 754,
get errMsg() {
return ___("破产金币已领完");
}
}, {
spcode: 551,
get errMsg() {
return ___("绑定手机号不能为空");
}
}, {
spcode: 552,
get errMsg() {
return ___("Invalid OTP");
}
}, {
spcode: 553,
get errMsg() {
return ___("密码错误");
}
}, {
spcode: 554,
get errMsg() {
return ___("绑定手机的账号已经绑定过");
}
}, {
spcode: 555,
get errMsg() {
return ___("The phone number has been bound");
}
}, {
spcode: 333,
get errMsg() {
return ___("Wrong password!");
}
}, {
spcode: 955,
get errMsg() {
return ___("Account does not exist!");
}
}, {
spcode: 1055,
get errMsg() {
return ___("Parameters are missing!");
}
}, {
spcode: 484,
get errMsg() {
return ___("You are prohibited from adding friends");
}
}, {
spcode: 490,
get errMsg() {
return ___("Friends don't exist!");
}
}, {
spcode: 495,
get errMsg() {
return ___("添加好友，错误次数过于频繁");
}
}, {
spcode: 619,
get errMsg() {
return ___("您的好友数量已达上限");
}
}, {
spcode: 620,
get errMsg() {
return ___("好友关系已经存在");
}
}, {
spcode: 621,
get errMsg() {
return ___("对方好友数量已达上限");
}
}, {
spcode: 622,
get errMsg() {
return ___("对方已经是你的好友了");
}
}, {
spcode: 623,
get errMsg() {
return ___("不能加自己为好友");
}
}, {
spcode: 557,
get errMsg() {
return ___("Need to bind phone!");
}
}, {
spcode: 664,
get errMsg() {
return ___("Your friend is offline!");
}
}, {
spcode: 535,
get errMsg() {
return ___("Have abstained!");
}
} ]; t < i.length; t++) {
var n = i[t];
if (n.spcode == e) return n.errMsg;
}
return "";
},
getCreateMenuCfg: function() {
for (var e, t = [], i = a(cc.vv.UserManager.gameList); !(e = i()).done; ) {
var n = e.value;
if (this.salonGamesList.indexOf(n.id) >= 0) for (var o, c = a(this.gameMap); !(o = c()).done; ) {
var s = o.value;
n.id == s.gameid && t.push(s);
}
}
return t;
},
getGameName: function(e) {
for (var t, i = a(this.gameMap); !(t = i()).done; ) {
var n = t.value;
if (n.gameid == e) return n.title;
}
return "";
},
getGameMapInfo: function(e) {
for (var t, i = a(this.gameMap); !(t = i()).done; ) {
var n = t.value;
if (n.gameid == e) return n;
}
return "";
},
getUnPinGameIds: function(e) {
for (var t, i = [], n = a(this.allGameIds()); !(t = n()).done; ) {
var o = t.value;
e.indexOf(o) < 0 && i.push(o);
}
return i.filter(function(e) {
for (var t, i = a(cc.vv.UserManager.gameList); !(t = i()).done; ) if (t.value.id == e) return !0;
return !1;
});
},
getCafeMenuConfig: function() {
for (var e, t = [], i = a(this.gameMap); !(e = i()).done; ) {
var n = e.value;
this.salonGamesList.indexOf(n.gameid) >= 0 && t.push(n);
}
return t;
},
setExpBuffFrame: function(e, t) {
cc.vv.ResManager.setSpriteFrame(e, "BalootClient/BaseRes/textures/texture_usercommon", "exp_buffer_" + t);
},
setCountryFrame: function(e, t) {
cc.vv.ResManager.setSpriteFrame(e, "BalootClient/BaseRes/textures/texture_usercommon", "icon_country_" + t);
},
setHeadFrame: function(e, t, i) {
cc.vv.ResManager.setSpriteFrame(e, "BalootClient/BaseRes/textures/texture_usercommon", "head_" + t, i);
},
setRankFrame: function(e, t) {
cc.vv.ResManager.setSpriteFrame(e, "BalootClient/BaseRes/textures/texture_usercommon", "rank_" + t);
},
setRankBigFrame: function(e, t) {
cc.vv.ResManager.setSpriteFrame(e, "BalootClient/BaseRes/textures/texture_usercommon", "icon_league_big_" + t);
},
setVipFrame: function(e, t) {
t = Math.min(20, t);
cc.vv.ResManager.setSpriteFrame(e, "BalootClient/BaseRes/textures/texture_usercommon", "vip_" + t);
},
setVipTextFrame: function(e, t) {
cc.vv.ResManager.setSpriteFrame(e, "BalootClient/BaseRes/textures/texture_usercommon", "text_vip_" + t);
},
setTaskTypeFrame: function(e, t) {
cc.vv.ResManager.setSpriteFrame(e, "BalootClient/BaseRes/textures/texture_usercommon", "icon_task_type_" + t);
},
setGameIconFrame: function(e, t) {
cc.vv.ResManager.setSpriteFrame(e, "BalootClient/BaseRes/textures/game_info_texture", "btn_hall_game_" + t);
},
setGameTitleFrame: function(e, t) {
var i = cc.vv.i18nManager.getConfig();
cc.vv.ResManager.setSpriteFrame(e, "BalootClient/BaseRes/textures/game_info_texture", "text_hall_game_" + t + "_" + i.lang);
},
setGameCafeFrame: function(e, t) {
t = [ 258 ].indexOf(t) >= 0 ? 257 : t;
t = [ 263, 273, 280 ].indexOf(t) >= 0 ? 262 : t;
t = [ 270 ].indexOf(t) >= 0 ? 259 : t;
t = [ 271 ].indexOf(t) >= 0 ? 285 : t;
t = [ 274, 275, 276, 277, 278 ].indexOf(t) >= 0 ? 256 : t;
cc.vv.ResManager.setSpriteFrame(e, "BalootClient/BaseRes/textures/game_info_texture", "icon_cafe_" + t);
},
setEmoji: function(e, t, i) {
if (t) {
var n = 0, a = 0;
if (Global.isRealNum(t)) {
n = 0;
a = t;
} else {
var o = t.split("_");
n = o[1];
a = o[2];
}
cc.vv.ResManager.setSkeleton(e, "BalootClient/BaseRes/spines/emoji_" + n + "/emoji_" + n + "_" + a, function(e) {
e.setAnimation(0, "animation", !0);
e.node.scale = .4;
e.node.y = -155;
i && i(e, n);
});
}
},
setAvatarFrame: function(e, t) {
cc.vv.ResManager.setSkeleton(e, "BalootClient/BaseRes/spines/avatarframe/" + t + "/" + t, function(e) {
e.setAnimation(0, "animation", !0);
});
},
getAppName: function() {
var e = "YONO Games";
Global.appId == Global.APPID.RummyVIP && (e = "RummyVIP");
return e;
}
}
});
cc._RF.pop();
}, {} ],
UserDiamondCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ce5b97zc4lIMLAj/d9LEh/O", "UserDiamondCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.label = null;
t.iconNode = null;
return t;
}
t.prototype.start = function() {};
__decorate([ o(cc.Label) ], t.prototype, "label", void 0);
__decorate([ o(cc.Node) ], t.prototype, "iconNode", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
UserExpRule: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "765fdiq9WpO8bBVL8/MYT/m", "UserExpRule");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.titleLabel = null;
t.titleLabel2 = null;
t.listViewNode = null;
t.tipStr = null;
t.listData = [];
return t;
}
t.prototype.onLoad = function() {
this.listView = this.listViewNode.getComponent("ListView");
};
t.prototype.setType = function(e, t) {
this.type = e;
if ("coin" != this.type) {
this.tipStr.node.active = !1;
"vip" == this.type ? this.titleLabel.string = "VIP" : "league" == this.type ? this.titleLabel.string = ___("段位") : "level" == this.type && (this.titleLabel.string = ___("等级"));
if ("vip" == this.type) {
this.listData = Global.deepClone(cc.vv.UserConfig.vipInfoConfig);
this.listData.shift();
} else if ("league" == this.type) {
this.listData = Global.deepClone(cc.vv.UserConfig.rankConfig);
this.listData.shift();
} else if ("level" == this.type) {
this.listData = Global.deepClone(cc.vv.UserConfig.exp_cfg);
this.listData.shift();
this.listData.pop();
}
this.listView.numItems = this.listData.length;
} else {
this.titleLabel.node.active = !1;
this.titleLabel2.node.active = !1;
this.listViewNode.active = !1;
this.tipStr.node.active = !0;
this.tipStr.string = t;
}
};
t.prototype.onUpdataItem = function(e, t) {
var i = this.listData[t];
if ("vip" == this.type) {
cc.find("name", e).getComponent(cc.Label).string = "VIP" + (t + 1);
cc.find("value", e).getComponent(cc.Label).string = Global.FormatNumToComma(i.expup);
} else if ("league" == this.type) {
cc.find("name", e).getComponent(cc.Label).string = i.text;
cc.find("value", e).getComponent(cc.Label).string = Global.FormatNumToComma(i.score);
} else if ("level" == this.type) {
cc.find("name", e).getComponent(cc.Label).string = "Level" + i[0];
cc.find("value", e).getComponent(cc.Label).string = Global.FormatNumToComma(i[1]);
}
};
__decorate([ o(cc.Label) ], t.prototype, "titleLabel", void 0);
__decorate([ o(cc.Label) ], t.prototype, "titleLabel2", void 0);
__decorate([ o(cc.Node) ], t.prototype, "listViewNode", void 0);
__decorate([ o(cc.Label) ], t.prototype, "tipStr", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
UserGiftListCmp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9f74dt71YhI55ntb9iy2/Xz", "UserGiftListCmp");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.tabbarNode = null;
t.listNode = null;
t.listView = null;
t.tipNameLabel = null;
t.nodeDataNode = null;
t.texture = null;
t.dataList = [];
return t;
}
t.prototype.onLoad = function() {
this.listView = this.listNode.getComponent("ListView");
var e = this.node.addComponent("NetListenerCmp");
e.registerMsg(MsgId.USER_GIFT_SEND_LIST, this.USER_GIFT_SEND_LIST, this);
e.registerMsg(MsgId.USER_GIFT_GET_LIST, this.USER_GIFT_GET_LIST, this);
this.tabbarCpt = this.tabbarNode.getComponent("Tabbar");
this.tabbarCpt.setChangeCallback(this.onChangeTabbar.bind(this));
};
t.prototype.onChangeTabbar = function(e) {
if (0 == e) {
this.tipNameLabel.string = ___("赠送玩家");
cc.vv.NetManager.sendAndCache({
c: MsgId.USER_GIFT_GET_LIST
}, !0);
} else {
this.tipNameLabel.string = ___("接受玩家");
cc.vv.NetManager.sendAndCache({
c: MsgId.USER_GIFT_SEND_LIST
}, !0);
}
};
t.prototype.USER_GIFT_SEND_LIST = function(e) {
if (200 == e.code && !(e.spcode && e.spcode > 0)) {
this.dataList = e.data;
this.updateView();
}
};
t.prototype.USER_GIFT_GET_LIST = function(e) {
if (200 == e.code && !(e.spcode && e.spcode > 0)) {
this.dataList = e.data;
this.updateView();
}
};
t.prototype.updateView = function() {
this.nodeDataNode.active = this.dataList.length <= 0;
this.listView.numItems = this.dataList.length;
};
t.prototype.onUpdataItem = function(e, t) {
var i = this.dataList[t];
cc.find("name", e).getComponent(cc.Label).string = i.playername;
cc.find("icon", e).getComponent(cc.Sprite).spriteFrame = this.texture.getSpriteFrame(i.img);
cc.find("price", e).getComponent(cc.Label).string = i.coin;
cc.find("UserHead", e).getComponent("HeadCmp").setHead(i.uid, i.usericon);
cc.find("UserHead", e).getComponent("HeadCmp").setAvatarFrame(i.avatarframe);
};
__decorate([ o(cc.Node) ], t.prototype, "tabbarNode", void 0);
__decorate([ o(cc.Node) ], t.prototype, "listNode", void 0);
__decorate([ o(cc.Label) ], t.prototype, "tipNameLabel", void 0);
__decorate([ o(cc.Node) ], t.prototype, "nodeDataNode", void 0);
__decorate([ o(cc.SpriteAtlas) ], t.prototype, "texture", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
UserHead: [ function(e, t) {
"use strict";
cc._RF.push(t, "c9400rbeRtCXrcKajIO69OZ", "UserHead");
cc.Class({
extends: cc.Component,
properties: {
frame_head: {
default: [],
type: cc.SpriteFrame
},
frame_headBg: {
default: [],
type: cc.SpriteFrame
},
default_head: cc.SpriteFrame,
spr_head_bg: cc.Sprite,
spr_head: cc.Sprite,
spr_headFrame: cc.Sprite,
_curUrl: null,
_pClickCall: null,
_uid: 0
},
onLoad: function() {
cc.vv.EventManager.on(EventId.REFRESH_PLAYER_HEAD, this.onRcvEventRefeshHead, this);
},
onDestroy: function() {
cc.vv.EventManager.off(EventId.REFRESH_PLAYER_HEAD, this.onRcvEventRefeshHead, this);
},
onRcvEventRefeshHead: function(e) {
if (this._uid == e.uid) {
cc.log("onRcvEventRefeshHead", e.uid);
var t = jsb.fileUtils.getWritablePath() + "headimgs/" + md5(e.url) + ".jpg";
this._loadHeadImageFromFile(e.uid, t);
}
},
setHead: function(e, t, i) {
this._uid = e;
if (this._curUrl != t) {
var n = this;
n.reset();
if (n._isRealNum(t)) {
var a = Number(t);
if (a < 1e3) {
var o = n.frame_head[a - 1];
o && (i ? i(n._uid, o) : n.spr_head.spriteFrame = o);
} else {
var c = cc.vv.HerocardManager.getCardCfg(a);
cc.vv.HerocardManager.loadHeroCircleHead(n.spr_head, a);
cc.vv.HerocardManager.loadHeroHeadBg(n.spr_head_bg, "bg_" + c.campid);
}
} else if (t && t.indexOf("http") > -1) this.loadHeadImage(e, t, i); else if (t && Global.isNative() && jsb.fileUtils.isFileExist(t)) {
var s = {
url: t,
ignoreMaxConcurrency: !0
};
cc.loader.load(s, function(e, t) {
if (!e) {
var a = new cc.SpriteFrame();
a.setTexture(t);
i ? i(n._uid, a) : n.spr_head.spriteFrame = a;
}
});
}
}
},
setHeadMask: function(e) {
var t = this.frame_headBg[e];
t && this.spr_headFrame && (this.spr_headFrame.spriteFrame = t);
},
setHeadGray: function() {
Global.showSpriteGray(this.spr_head, !0);
},
setScale: function(e) {
this.node.scale = e;
},
setClickCall: function(e) {
this._pClickCall = e;
var t = !1;
e && (t = !0);
var i = this.node.getComponent(cc.Button);
i && (i.enabled = t);
},
reset: function() {
this.default_head && (this.spr_head.spriteFrame = this.default_head);
},
getHeadSpr: function() {
return this.spr_head;
},
onClickHead: function() {
this._pClickCall && this._pClickCall();
},
_isRealNum: function(e) {
return "" !== e && null != e && !isNaN(e);
},
_loadHeadImageWeb: function(e, t, i) {
var n = this, a = this.spr_head, o = t, c = t.split("/");
c[c.length - 1].indexOf(".") < 0 && (o = {
url: t,
type: "jpg",
ignoreMaxConcurrency: !0
});
Global._downing_list = Global._downing_list || [];
Global._downing_list.push(e);
this._startDownloadImage();
cc.loader.load(o, function(o, c) {
if (o) cc.log("download head image fail", t, o); else {
if (cc.isValid(a) && c) {
var s = new cc.SpriteFrame(c);
i ? i(e, s) : a.spriteFrame = s;
}
n._removeFromDowningList(e);
n._finishDownloadImage();
}
});
},
_loadHeadImageFromFile: function(e, t, i) {
var n = this.spr_head;
cc.loader.load(t, function(a, o) {
if (a) cc.log("load image from file fail: " + t); else if (cc.isValid(n) && o) {
var c = new cc.SpriteFrame(o);
i ? i(e, c) : n.spriteFrame = c;
}
});
},
_removeFromDowningList: function(e) {
if (Global._downing_list) {
var t = Global._downing_list.indexOf(e);
t > -1 && Global._downing_list.splice(t, 1);
}
},
_downloadImage: function(e, t) {
var i = this, n = cc.loader.getXMLHttpRequest();
n.open("GET", t, !0);
n.responseType = "arraybuffer";
n.onreadystatechange = function() {
console.log("download xhr.status " + n.status, n.readyState);
if (4 === n.readyState) if (n.status >= 200 && n.status < 300) if ("undefined" != typeof n.response) {
if (i._saveFile(e, t, n.response)) {
Global._downed_list.indexOf(e) < 0 && Global._downed_list.push(e);
cc.vv.EventManager.emit(EventId.REFRESH_PLAYER_HEAD, {
uid: e,
url: t
});
i._removeFromDowningList(e);
} else {
console.log("save image file fail:" + t);
i._removeFromDowningList(e);
}
i._finishDownloadImage();
} else {
cc.log("download image is null:" + t);
i._removeFromDowningList(e);
} else if (n.status >= 300 && n.status <= 303 || 307 == n.status) {
var a = n.getResponseHeader("Location");
if (a) {
console.log("redirect location: " + a);
i._downloadImage(e, a);
} else {
cc.log("download image fail:" + t);
i._removeFromDowningList(e);
}
} else {
cc.log("download image fail:" + t);
i._removeFromDowningList(e);
}
};
n.onerror = function() {
i._removeFromDowningList(e);
cc.log("download image error:" + t);
};
n.send();
},
_loadHeadImageLocal: function(e, t, i) {
var n = jsb.fileUtils.getWritablePath() + "headimgs/" + md5(t) + ".jpg", a = !1;
if (jsb.fileUtils.isFileExist(n)) {
this._loadHeadImageFromFile(e, n, i);
cc.log("load image from file succ", n);
a = !0;
}
Global._downed_list = Global._downed_list || [];
Global._downing_list = Global._downing_list || [];
if (a && Global._downed_list.indexOf(e) > -1) cc.log("no need download: " + e); else if (Global._downing_list.indexOf(e) > -1) cc.log("image is downing:" + e); else {
Global._downing_list.push(e);
cc.log("begin down load image", e, t);
this._startDownloadImage();
this._downloadImage(e, t);
}
},
_saveFile: function(e, t, i) {
var n = jsb.fileUtils.getWritablePath() + "headimgs/", a = n + md5(t) + ".jpg";
jsb.fileUtils.isDirectoryExist(n) || jsb.fileUtils.createDirectory(n);
return !("undefined" == typeof i || !jsb.fileUtils.writeDataToFile(new Uint8Array(i), a));
},
loadHeadImage: function(e, t, i) {
this._loadHeadImageLocal(e, t, i);
},
_startDownloadImage: function() {},
_finishDownloadImage: function() {}
});
cc._RF.pop();
}, {} ],
UserInfoCmp: [ function(e, t) {
"use strict";
cc._RF.push(t, "eda44fVmtJABYpcn85sAlVy", "UserInfoCmp");
cc.Class({
extends: cc.Component,
properties: {
userHead: e("HeadCmp"),
progressLevel: cc.ProgressBar,
nameLabel: cc.Label,
uidLabel: cc.Label,
vipExpNode: cc.Node,
coinNode: cc.Node,
cashNode: cc.Node,
withdrawalNode: cc.Node
},
onLoad: function() {
this._svip = cc.vv.UserManager.svip;
this._svipexp = cc.vv.UserManager.svipexp;
var e = this.node.addComponent("NetListenerCmp"), t = this.node.addComponent("EventListenerCmp");
t.registerEvent(EventId.UPATE_COINS, this.updateCoin, this);
t.registerEvent("USER_INFO_CHANGE", this.updateInfo, this);
t.registerEvent("USER_EXP_CHANGE", this.updateExp, this);
t.registerEvent("USER_VIP_EXP_CHANGE", this.updateVipExp, this);
e.registerMsg(MsgId.REQ_REFRESH_VIP, this.REQ_REFRESH_VIP, this);
Global.btnClickEvent(cc.find("btn_add", this.coinNode), function() {
if (Global.isIOSAndroidReview()) cc.vv.EventManager.emit("HALL_OPEN_SHOP", {
open: 1
}); else {
var e = "YD_Pro/prefab/yd_shop";
cc.vv.UserManager.isbindphone > 0 || (e = "YD_Pro/prefab/Register");
cc.vv.PopupManager.addPopup(e, {
onShow: function() {}
});
}
}, this);
},
updateInfo: function() {
if (this.userHead) {
var e = cc.vv.UserManager.uid, t = cc.vv.UserManager.userIcon, i = cc.vv.UserManager.avatarframe || 0;
this.userHead.setHead(e, t);
this.userHead.setAvatarFrame(i);
}
this.nameLabel && (this.nameLabel.string = cc.vv.UserManager.nickName);
this.uidLabel && (this.uidLabel.string = cc.vv.UserManager.uid);
this.rpLabel && (this.rpLabel.string = cc.vv.UserManager.rp);
this.updateVipExp();
this.updateCashBonus();
this.updatewithdrawal();
},
updateCoin: function() {
console.log("updateCoin: function ()", cc.vv.UserManager.coin);
cc.find("lbl_coin", this.coinNode).getComponent(cc.Label).string = Global.FormatNumToComma(cc.vv.UserManager.coin);
},
updateExp: function() {
var e = cc.vv.UserManager.level();
this.levelNode && this.levelNode.getComponent("LevelCpt").setLevel(e);
var t = cc.vv.UserManager.getCurExp() / cc.vv.UserConfig.getCmpLevelNeedExp(e);
t = Math.min(t, 1);
t = Math.max(t, 0);
this.progressLevel && (this.progressLevel.progress = t);
},
updateVipExp: function() {
this.vipExpNode.getComponent("VipExpCpt").updateVipExp();
},
REQ_REFRESH_VIP: function() {},
updateCashBonus: function() {
var e = cc.vv.UserManager.dcashbonus, t = cc.vv.UserManager.cashbonus;
cc.find("progress", this.cashNode).getComponent(cc.ProgressBar).progress = 0 == t ? 0 : e / t;
cc.find("value", this.cashNode).getComponent(cc.Label).string = e + "/" + t;
},
updatewithdrawal: function() {
cc.find("lbl_val", this.withdrawalNode).getComponent(cc.Label).string = Global.FormatNumToComma(cc.vv.UserManager.dcoin);
Global.btnClickEvent(cc.find("btn_add", this.withdrawalNode), function() {
cc.vv.PopupManager.showTopWin("YD_Pro/prefab/yd_charge", {
onShow: function(e) {
e.getComponent("yd_charge").setURL(cc.vv.UserManager.payurl);
}
});
}, this);
},
updateAll: function() {
this.updateInfo();
this.updateExp();
this.updateCoin();
this.updateVipExp();
this.updateCashBonus();
this.updatewithdrawal();
},
start: function() {
this.updateAll();
}
});
cc._RF.pop();
}, {
HeadCmp: "HeadCmp"
} ],
UserManagerEx: [ function(e, t) {
"use strict";
cc._RF.push(t, "5e8e95GnVtEUaawqzZYjGpZ", "UserManagerEx");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
cc.Class({
extends: e("UserManager"),
statics: {
gameNewerGuide: 0,
avatarframe: "avatarframe_1000",
chatskin: "chat_000",
tableskin: "desk_000",
pokerskin: "poker_free",
frontskin: "font_color_0",
emojiskin: "emoji_0",
faceskin: "poker_face_000",
salonskin: null,
salontesttime: 0,
newbiedone: 0,
charmpack: 0,
tmpvip: 0,
signrewards: 0,
voice: 0,
charm: 0,
leagueexp: 0,
rp: 0,
country: 0,
sess: {},
sharelink: "",
uploadlink: "",
rateios: "",
rateandroid: "",
club: {},
whatapplink: "",
adtime: null,
emojilist: [],
verifyfriend: 0,
contactus: "",
feedback: "",
charmList: [],
charmDataList: [],
pinlist: [],
fgamelist: [],
moneybag: 0,
nextbag: 0,
roomcnt: 0,
viproomcnt: [],
favorite_games: [],
slotsList: [],
redem: 0,
sender: 0,
report: 0,
shoptimeout: 0,
fbrewards: [],
blockuids: [],
offlineaward: 0,
offlinetime: 0,
isbindapple: 0,
isbindfb: 0,
isbindgoogle: 0,
isbindhuawei: 0,
isbindphone: 0,
getviplv: [],
leagueRmindTime: 0,
novice: 0,
slotVoteCountry: 0,
namerewards: 0,
adpics: 0,
productids: [],
pinmsg: [],
hasPopNotice: !1,
hasPopRewardToday: !1,
newapp: null,
bonus_prom: null,
bindbank: 0,
init: function() {
Global.playerData = this;
this.switch = [];
cc.vv.NetManager.registerMsg(MsgId.GAME_LIST, this.recvGameList, this);
cc.vv.NetManager.registerMsg(MsgId.PULL_CH_LESSCOIN_ACTIVELIST, this.onRcvLessCoinPoplist, this);
cc.vv.NetManager.registerMsg(MsgId.PULL_MODIFY_LOCALVAL, this.onRcvPullModifyLocalval, this);
cc.vv.NetManager.registerMsg(MsgId.REQ_SYNC_HALLINFO, this.onRecvRefreshHallInfo, this);
cc.vv.NetManager.registerMsg(MsgId.REQ_REFRESH_VIP, this.REQ_REFRESH_VIP, this);
cc.vv.NetManager.registerMsg(MsgId.MONEY_CHANGED, this.MONEY_CHANGED, this);
cc.vv.NetManager.registerMsg(MsgId.SYNC_COIN, this.SYNC_COIN, this);
cc.vv.NetManager.registerMsg(MsgId.CHANGE_BONUS_LIST, this.CHANGE_BONUS_LIST, this);
cc.vv.NetManager.registerMsg(MsgId.PULL_LEVEL_UP_EXP, this.PULL_LEVEL_UP_EXP, this);
cc.vv.NetManager.registerMsg(MsgId.UPDATE_USER_INFO, this.UPDATE_USER_INFO, this, !0);
cc.vv.NetManager.registerMsg(MsgId.CLUB_UPDATE_INFO, this.CLUB_UPDATE_INFO, this);
cc.vv.NetManager.registerMsg(MsgId.NOTIFY_CLUB_JOIN, this.NOTIFY_CLUB_JOIN, this);
cc.vv.NetManager.registerMsg(MsgId.NOTIFY_CLUB_REMOVE, this.NOTIFY_CLUB_REMOVE, this);
cc.vv.NetManager.registerMsg(MsgId.USER_GIFT_BROADCAST, this.USER_GIFT_BROADCAST, this);
cc.vv.NetManager.registerMsg(MsgId.GLOBAL_SPEAKER_NOTIFY, this.GLOBAL_SPEAKER_NOTIFY, this);
cc.vv.NetManager.registerMsg(MsgId.GLOBAL_MAIL_NOTIFY, this.GLOBAL_MAIL_NOTIFY, this);
cc.vv.NetManager.registerMsg(MsgId.PIGGY_BANK_NOTIFY, this.PIGGY_BANK_NOTIFY, this);
cc.vv.NetManager.registerMsg(MsgId.TASK_COMPLETE_NOTIFY, this.TASK_COMPLETE_NOTIFY, this);
cc.vv.NetManager.registerMsg(MsgId.SOCIAL_FRIEND_MSG_REV, this.SOCIAL_FRIEND_MSG_REV, this);
cc.vv.NetManager.registerMsg(MsgId.GAME_SHARE_REWARD, this.GAME_SHARE_REWARD, this);
cc.vv.NetManager.registerMsg(MsgId.LEAGUE_LEVEL_UP, this.LEAGUE_LEVEL_UP, this);
cc.vv.NetManager.registerMsg(MsgId.LEAGUE_EXP_CHANGE, this.LEAGUE_EXP_CHANGE, this);
cc.vv.NetManager.registerMsg(MsgId.COUNTRY_TOP_CHANGE, this.COUNTRY_TOP_CHANGE, this);
cc.vv.NetManager.registerMsg(MsgId.REQ_KNOCKOUT_READY, this.REQ_KNOCKOUT_READY, this);
cc.vv.NetManager.registerMsg(MsgId.REQ_KNOCKOUT_EXIT, this.REQ_KNOCKOUT_EXIT, this);
cc.vv.NetManager.registerMsg(MsgId.REQ_KNOCKOUT_JOIN, this.REQ_KNOCKOUT_JOIN, this);
cc.vv.NetManager.registerMsg(MsgId.UPDATE_PINMSG, this.UPDATE_PINMSG, this, !0);
setInterval(this.update.bind(this), 100);
},
initPlayerData: function(e, t) {
console.log("UserManagerEx.initPlayerData(serverData, loginConfig)", e);
var i = e.playerInfo;
this.gameList = t.gamelist || [];
this.gameList.sort(function(e, t) {
return e.ord - t.ord;
});
this.slotsList = t.slotslist || [];
this.slotsList.sort(function(e, t) {
return e.ord - t.ord;
});
this.productids = t.productids || [];
this.pinmsg = t.pinmsg;
this.slotVoteCountry = e.country || 0;
this.namerewards = t.namerewards || [];
this.adpics = t.adpics || {};
this.newbiedone = e.newbiedone || 0;
this.charmpack = i.charmpack || 0;
this.voice = e.voice || 0;
this.tmpvip = i.tmpvip || 0;
this.newapp = e.newappurl;
this.vipsign = e.vipsign;
this.redem = e.verify.redem || 0;
this.sender = e.verify.sender || 0;
this.report = e.verify.report || 0;
this.shoptimeout = t.shoptimeout || 0;
this.novice = i.novice || 0;
this.rate = t.rate || 0;
this.guide = i.guide || [];
this.club = e.club || {};
this.sess = e.sess;
this.sharelink = t.sharelink;
this.uploadlink = t.uploadlink || "";
this.rateios = t.rateios || "";
this.rateandroid = t.rateandroid || "";
this.contactus = t.contactus || "";
Global.saveLocal("contacturl", this.contactus);
this.reg_bonus_coin = t.reg_bonus_coin;
this.sign_bonus_coin = t.sign_bonus_coin;
this.feedback = t.feedback || "";
this.charmList = t.charmList || [];
this.charmList.sort(function(e, t) {
return e.count - t.count;
});
this.charmDataList = i.charmlist || [];
this.pinlist = i.pinlist || [];
this.fgamelist = i.fgamelist || [];
this.bindfbcoin = i.bindfbcoin;
this.bindfbdiamond = i.bindfbdiamond;
this.newerpack = i.newerpack;
this.avatarframe = i.avatarframe;
this.chatskin = i.chatskin;
this.tableskin = i.tableskin;
this.pokerskin = i.pokerskin;
this.frontskin = i.frontskin;
this.emojiskin = i.emojiskin;
this.emojilist = i.emojilist;
this.faceskin = i.faceskin;
this.salonskin = i.salonskin;
this.salontesttime = i.salontesttime;
this.verifyfriend = i.verifyfriend;
this.charm = i.charm;
this.leagueexp = i.leagueexp;
this.rp = i.rp || 0;
this.country = i.country || 0;
this.getviplv = i.getviplv || [];
this.moneybag = i.moneybag;
this.nextbag = i.nextbag;
this.roomcnt = i.roomcnt;
this.viproomcnt = i.viproomcnt || [];
this.favorite_games = t.favorite_games || [];
this.product_cfg = t.product_cfg || [];
this.uid = i.uid;
this.coin = i.coin;
this.userIcon = i.usericon;
this.sex = i.sex;
this.agent = i.agent;
this.nickName = i.playername;
this.memo = i.memo;
this.inviteCode = i.code;
this.bindcode = i.bindcode;
this.ip = i.ip;
this.onlinestate = i.onlinestate;
this.lrwardstate = i.lrwardstate;
this.upcoin = e.upcoin;
this.ispayer = i.ispayer;
this.account = i.account;
this.logincoin = i.logincoin;
this.switch = i.switch || [];
this.logintype = i.logintype;
this.isbindfb = i.isbindfb || 0;
this.isbindapple = i.isbindapple || 0;
this.isbindgoogle = i.isbindgoogle || 0;
this.isbindghuawei = i.isbindghuawei || 0;
this.isbindphone = i.isbindphone || 0;
this.fbrewards = i.fbrewards || [];
this.blockuids = i.blockuids || [];
this.fbicon = i.fbicon;
this.spread = i.spread || 0;
this.luckRedvelopesNum = i.luckRedvelopesNum;
this.growup = e.growup;
this.evo = e.evo;
this._curExp = i.levelexp;
this.initgift = i.initgift;
this.svip = i.svip || 0;
this.svipexp = i.svipexp || 0;
this.nextvipexp = i.nextvipexp || 0;
this.svipup = i.svipup || 0;
this.leftdays = i.leftdays || 0;
this.bonusList = t.bonuslist || [];
this.activityList = e.activitylist;
this.offlineaward = i.offlineaward;
this.offlinetime = i.offlinetime;
this.popLuckySpin = e.fbshare || e.bonuswheel;
this.ecoin = i.ecoin;
this.dcoin = i.dcoin;
this.cashbonus = i.cashbonus;
this.dcashbonus = i.dcashbonus;
this.bankcoin = i.bankcoin;
this.todaybonus = i.todaybonus;
this.invit_uid = i.invit_uid;
this.bindbank = i.bindbank;
this.logonTime = new Date().getTime();
this.serverTime = e.servertime;
this._levelGift = 0;
this._richpoint = i.upoint;
this._diamond = i.diamond || 0;
this.kyc = i.kyc || 0;
this.payurl = t.payurl;
this.contactus = t.contactus;
this.kycUrl = t.kyc;
this.drawUrl = t.drawurl;
this.transactionUrl = t.transaction;
this.paymentUrl = t.payment;
this.addInvite = i.invits;
this.emotionProplist = t.proplist;
this.lepordgames = t.lbgames;
this.salonVip = t.salonvip;
this.notice = t.notice;
this.rebatGames = t.rbgameids;
this.todayrewards = t.todayrewards;
this.bonus_prom = t.promoopen;
Global.saveLocal(Global.SAVE_KEY_LOGIN_TYPE, this.logintype);
this._preLoad = [];
var n = Global.getLocal(Global.SAVE_PLAYER_TOKEN);
n = void 0 === n ? {} : JSON.parse(n);
if (this.logintype !== Global.LoginType.Guest) if (this.rememberPsw) {
n[this.nickName] || (n[this.nickName] = {});
n[this.nickName].token = this.token;
} else n[this.nickName] && (n[this.nickName] = {});
n.curr_account = this.nickName;
Global.saveLocal(Global.SAVE_PLAYER_TOKEN, JSON.stringify(n));
if (Global.IsHuawei()) if (e.reg) {
var a = {
$AcountType: "hw_account",
$RegistMethod: "hw_account",
$OccurredTime: cc.sys.now(),
$Inviter: "none"
};
cc.vv.PlatformApiMgr.KoSDKTrackEvent("$RegisterAccount", JSON.stringify(a));
} else {
var o = {
$RoleClass: "NewPlayer",
$RoleName: this.nickName,
$FirstSignIn: 0,
$RoleGender: this.sex || "w",
$Server: "s1",
$Combat: "0",
$LevelId: this.getCurLv()
};
cc.vv.PlatformApiMgr.KoSDKTrackEvent("$SignInRole", JSON.stringify(o));
}
},
isNoNeedDownGame: function(e) {
for (var t, i = cc.vv.UserConfig.gameMap, n = 0; n < i.length; n++) {
var a = i[n];
if (a.gameid == e) {
t = !a.bDownload;
break;
}
}
return t;
},
recvGameList: function(e) {
if (200 === e.code) {
if (e.gamelist[0]) {
this.gameList = e.gamelist[0];
this.gameList.sort(function(e, t) {
return e.ord - t.ord;
});
}
if (e.gamelist[1]) {
this.slotsList = e.gamelist[1];
this.slotsList.sort(function(e, t) {
return e.ord - t.ord;
});
}
Global.dispatchEvent("GAME_LIST_UPDATE");
}
},
MONEY_CHANGED: function(e) {
console.log("UserManagerEx.MONEY_CHANGED: function (msg)", e);
if (200 === e.code) {
null != e.bankcoin && cc.vv.UserManager.setBankCoin(e.bankcoin);
null != e.coin && cc.vv.UserManager.SetCoin(e.coin, !0);
null != e.diamond && cc.vv.UserManager.setDiamond(e.diamond, !0);
}
},
SYNC_COIN: function(e) {
console.log("UserManagerEx.SYNC_COIN: function (msg)", e);
if (200 === e.code) {
cc.vv.UserManager.SetCoin(e.coin, !0);
cc.vv.UserManager.setDiamond(e.diamond, !0);
cc.vv.UserManager.setCurExp(e.levelexp);
Global.dispatchEvent("USER_EXP_CHANGE");
}
},
SetCoin: function(e, t) {
console.log("SetCoin(val, bRefushHall)", e);
this.coin = Number(e.toFixed(2));
t && Global.dispatchEvent(EventId.UPATE_COINS);
},
CHANGE_BONUS_LIST: function(e) {
if (200 == e.code) {
cc.vv.UserManager.bonusList = e.bonuslist;
Global.dispatchEvent("BONUS_CHANGE");
}
},
updateUserInfo: function(e) {
var t = {
code: 200,
user: e
};
this.UPDATE_USER_INFO(t);
},
UPDATE_USER_INFO: function(e) {
if (200 == e.code) if (e.spcode) 1073 == e.spcode && cc.vv.FloatTip.show("This username is not available"); else {
var t = e.user;
null != t.playername && (cc.vv.UserManager.nickName = t.playername);
null != t.sex && (cc.vv.UserManager.sex = t.sex);
null != t.redem && (cc.vv.UserManager.redem = t.redem);
null != t.sender && (cc.vv.UserManager.sender = t.sender);
null != t.report && (cc.vv.UserManager.report = t.report);
null != t.usericon && (cc.vv.UserManager.userIcon = t.usericon);
null != t.avatarframe && (cc.vv.UserManager.avatarframe = t.avatarframe);
null != t.chatskin && (cc.vv.UserManager.chatskin = t.chatskin);
null != t.tableskin && (cc.vv.UserManager.tableskin = t.tableskin);
null != t.pokerskin && (cc.vv.UserManager.pokerskin = t.pokerskin);
null != t.frontskin && (cc.vv.UserManager.frontskin = t.frontskin);
null != t.emojiskin && (cc.vv.UserManager.emojiskin = t.emojiskin);
null != t.faceskin && (cc.vv.UserManager.faceskin = t.faceskin);
null != t.salonskin && (cc.vv.UserManager.salonskin = t.salonskin);
null != t.salontesttime && (cc.vv.UserManager.salontesttime = t.salontesttime);
null != t.svip && (cc.vv.UserManager.svip = t.svip);
null != t.svipexp && (cc.vv.UserManager.svipexp = t.svipexp);
null != t.nextvipexp && (cc.vv.UserManager.nextvipexp = t.nextvipexp);
null != t.svipup && (cc.vv.UserManager.svipup = t.svipup);
null != t.leftdays && (cc.vv.UserManager.leftdays = t.leftdays);
null != t.emojilist && (cc.vv.UserManager.emojilist = t.emojilist);
null != t.verifyfriend && (cc.vv.UserManager.verifyfriend = t.verifyfriend);
null != t.viproomcnt && (cc.vv.UserManager.viproomcnt = t.viproomcnt);
null != t.charm && (cc.vv.UserManager.charm = t.charm);
null != t.leagueexp && (cc.vv.UserManager.leagueexp = t.leagueexp);
null != t.fgamelist && (cc.vv.UserManager.fgamelist = t.fgamelist);
null != t.blockuids && (cc.vv.UserManager.blockuids = t.blockuids);
null != t.roomcnt && (cc.vv.UserManager.roomcnt = t.roomcnt);
null != t.rp && (cc.vv.UserManager.rp = t.rp);
null != t.country && (cc.vv.UserManager.country = t.country);
null != t.getviplv && (cc.vv.UserManager.getviplv = t.getviplv);
null != t.tmpvip && (cc.vv.UserManager.tmpvip = t.tmpvip);
null != t.nextbag && (cc.vv.UserManager.nextbag = t.nextbag);
null != t.charmlist && (cc.vv.UserManager.charmDataList = t.charmlist);
null != t.coin && cc.vv.UserManager.SetCoin(t.coin, !0);
null != t.ecoin && (cc.vv.UserManager.ecoin = t.ecoin);
null != t.dcoin && (cc.vv.UserManager.dcoin = t.dcoin);
null != t.cashbonus && (cc.vv.UserManager.cashbonus = t.cashbonus);
null != t.dcashbonus && (cc.vv.UserManager.dcashbonus = t.dcashbonus);
null != t.bankcoin && (cc.vv.UserManager.bankcoin = t.bankcoin);
null != t.todaybonus && (cc.vv.UserManager.todaybonus = t.todaybonus);
null != t.kyc && (cc.vv.UserManager.kyc = t.kyc);
null != t.isbindphone && (cc.vv.UserManager.isbindphone = t.isbindphone);
null != t.drawinfo && (cc.vv.UserManager.drawinfo = t.drawinfo);
if (null != t.moneybag) {
cc.vv.UserManager.moneybag = t.moneybag;
t.moneybag > 0 && Global.dispatchEvent("USER_PIGGY_BANK_HINT_NEW");
Global.dispatchEvent("USER_PIGGY_BANK_CHANGE");
}
t.invits && Global.dispatchEvent("EVENT_ADD_REFFER", t.invits);
Global.dispatchEvent("USER_INFO_CHANGE");
}
},
CLUB_UPDATE_INFO: function(e) {
if (200 == e.code && !(e.spcode && e.spcode > 0)) {
var t = e.club || {};
null != t.name && (cc.vv.UserManager.club.name = t.name);
null != t.avatar && (cc.vv.UserManager.club.avatar = t.avatar);
null != t.detail && (cc.vv.UserManager.club.detail = t.detail);
null != t.cap && (cc.vv.UserManager.club.cap = t.cap);
null != t.join_type && (cc.vv.UserManager.club.join_type = t.join_type);
Global.dispatchEvent("CLUB_INFO_CHANGE");
}
},
NOTIFY_CLUB_JOIN: function(e) {
cc.vv.UserManager.club = e.club;
},
NOTIFY_CLUB_REMOVE: function() {
cc.vv.UserManager.club = {};
},
PULL_LEVEL_UP_EXP: function(e) {
if (200 == e.code) {
cc.vv.UserManager.setCurExp(e.info.levelexp);
Global.dispatchEvent("USER_EXP_CHANGE");
}
},
LEAGUE_LEVEL_UP: function(e) {
e.code;
},
REQ_REFRESH_VIP: function(e) {
e.code;
},
USER_GIFT_BROADCAST: function(e) {
if (200 == e.code && (1 != Global.getLocal("REFUSE_GIFT_ANIM", 0) || e.send.uid == cc.vv.UserManager.uid || e.receive.uid == cc.vv.UserManager.uid)) if (cc.director.getScene().name == Global.SCENE_NAME.HALL) cc.vv.BroadcastManager.addGiftAnim(e); else {
window.facade && window.facade.commonProxy && window.facade.commonProxy.checkPlayerInTable && (window.facade.commonProxy.checkPlayerInTable(e.send.uid) || window.facade.commonProxy.checkPlayerInTable(e.receive.uid)) && cc.vv.BroadcastManager.addGiftAnim(e);
cc.vv.gameData && cc.vv.gameData.getGameId && cc.vv.gameData.getGameId() > 600 && e.receive.uid == cc.vv.UserManager.uid && cc.vv.BroadcastManager.addGiftAnim(e);
}
},
GLOBAL_SPEAKER_NOTIFY: function(e) {
200 == e.code && cc.vv.BroadcastManager.addBroadcast({
content: e.notices.msg,
extra_info: e.notices.extra_info,
direction: cc.vv.i18nManager.getLanguage() == cc.vv.i18nLangEnum.AR ? 2 : 1,
level: e.level
});
},
GLOBAL_MAIL_NOTIFY: function(e) {
200 == e.code && cc.vv.RedHitManager.setKeyVal("mail_notify", cc.vv.RedHitManager.data.mail_notify + 1);
},
PIGGY_BANK_NOTIFY: function(e) {
if (200 == e.code) {
this.moneybag = e.moneybag;
this.nextbag = e.nextbag;
Global.dispatchEvent("USER_PIGGY_BANK_CHANGE");
}
},
TASK_COMPLETE_NOTIFY: function(e) {
cc.director.getScene().name != Global.SCENE_NAME.HALL && cc.loader.loadRes("YD_Pro/TaskCompleteHint/TaskCompleteHint", cc.Prefab, function(t, i) {
if (!t) if (cc.find("Canvas/TaskCompleteHint")) ; else {
var n = cc.instantiate(i);
n.parent = cc.find("Canvas");
n.name = "TaskCompleteHint";
n.zIndex = 1e3;
n.getComponent("TaskCompleteHintCpt").run(e);
}
});
},
SOCIAL_FRIEND_MSG_REV: function(e) {
if (e.data.uid != cc.vv.UserManager.uid) {
var t = cc.vv.PopupManager.getTop();
if (t) {
var i = t.getComponent("PopupPrivateChatView");
if (i && i.uid == e.data.uid) return;
}
cc.loader.loadRes("BalootClient/Social/PrivateChatMsgHint", cc.Prefab, function(t, i) {
if (!t) {
var n = cc.instantiate(i);
n.parent = cc.find("Canvas");
n.zIndex = 1e3;
n.getComponent("PrivateChatMsgHintCpt").run(e.data);
}
});
}
},
GAME_SHARE_REWARD: function(e) {
200 == e.code && (e.spcode && e.spcode > 0 ? cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0) : e.rewards && Global.RewardFly(e.rewards, cc.find("Canvas").convertToWorldSpaceAR(cc.v2(0, -cc.winSize.height / 2 + 700))));
},
REC_GAME_SETTLE: function(e) {
var t = this;
if (e.fbshare) {
var i = e.fbshare[cc.vv.UserManager.uid];
if (i) {
var n = window.facade;
n && cc.loader.loadRes("games/PokerBase/prefabs/settlement_btn_share_fb", cc.Prefab, function(e, a) {
if (!e) {
var o = cc.instantiate(a);
o.parent = cc.find("Canvas/safe_node");
o.y = -cc.winSize.height / 2 + 700;
o.active = !1;
cc.find("layout/multiple", o).getComponent(cc.Label).string = "x" + i.times;
o.getComponent(cc.Button).node.on("click", function() {
o.getComponent(cc.Button).interactable = !1;
var e = null, t = n.dm.tableInfo.gameId, a = cc.vv.i18nManager.getLanguage();
1 == i.type ? e = "http://inter.sekiengame.com/fb/win/total/?uid=" + cc.vv.UserManager.uid + "&lang=" + a + "&gameid=" + t : 2 == i.type ? e = "http://inter.sekiengame.com/fb/win/cumulative/?uid=" + cc.vv.UserManager.uid + "&lang=" + a + "&gameid=" + t : 3 == i.type && (e = "http://inter.sekiengame.com/fb/win/card/?uid=" + cc.vv.UserManager.uid + "&lang=" + a + "&gameid=" + t);
e && Global.isNative() && cc.vv.FBMgr.fbShareWeb(e, null, "", function() {
cc.vv.NetManager.send({
c: MsgId.GAME_SHARE_REWARD,
gameid: t,
cat: i.type
});
});
}, t);
cc.tween(o).delay(3.5).call(function() {
o.active = !0;
o.getComponent(cc.Button).interactable = !0;
}).delay(5).call(function() {
o.destroy();
}).start();
}
});
}
}
},
LEAGUE_EXP_CHANGE: function(e) {
if (200 == e.code) for (var t, n = i(this.gameList); !(t = n()).done; ) {
var a = t.value;
a.id == e.gameid && (a.leagueexp = e.exp);
}
},
COUNTRY_TOP_CHANGE: function(e) {
if (200 == e.code) for (var t, n = i(this.gameList); !(t = n()).done; ) {
var a = t.value;
a.id == e.gameid && (a.topCountry = e.topCountry);
}
},
REQ_KNOCKOUT_READY: function(e) {
cc.director.getScene().name == Global.SCENE_NAME.HALL && cc.vv.PopupManager.addPopup("BalootClient/KnockoutMatch/prefabs/KnockoutHintStart", {
scaleIn: !0,
noCloseHit: !0,
onShow: function(t) {
t.getComponent("KnockoutHintStartView").onInit(e);
}
});
},
REQ_KNOCKOUT_EXIT: function(e) {
if (cc.director.getScene().name == Global.SCENE_NAME.HALL) {
var t;
cc.vv.PopupManager.removeAll();
cc.vv.PopupManager.addPopup("BalootClient/KnockoutMatch/prefabs/KnockoutHintNotJoin", ((t = {
scaleIn: !0,
noCloseHit: !0,
noTouchClose: !0
}).noCloseHit = !0, t.onShow = function(t) {
cc.find("node_time/value", t).getComponent(cc.Label).string = Global.formatTime("hh:mm", e.start_time || 0);
cc.find("btn_ok", t).on("click", function() {
cc.vv.PopupManager.removePopup(t);
});
}, t));
} else {
cc.vv.PopupManager.removeAll();
if (cc.vv.gameData && cc.vv.gameData.deskInfo && cc.vv.gameData.deskInfo.conf && cc.vv.gameData.deskInfo.conf.tn_id && cc.vv.gameData.deskInfo.conf.tn_id == e.tn_id) {
var i;
cc.vv.PopupManager.addPopup("BalootClient/KnockoutMatch/prefabs/KnockoutHintNotJoin", ((i = {
scaleIn: !0,
noCloseHit: !0,
noTouchClose: !0
}).noCloseHit = !0, i.onShow = function(t) {
cc.find("node_time/value", t).getComponent(cc.Label).string = Global.formatTime("hh:mm", e.start_time || 0);
cc.find("btn_ok", t).on("click", function() {
cc.vv.PopupManager.removePopup(t);
window.facade && window.facade.gotoHall ? window.facade.gotoHall() : cc.vv.gameData.doExitRoom && cc.vv.gameData.doExitRoom();
});
}, i));
}
}
},
REQ_KNOCKOUT_JOIN: function(e) {
if (200 == e.code && e.spcode && e.spcode > 0) {
cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0);
cc.vv.PopupManager.removeAll();
}
},
UPDATE_PINMSG: function(e) {
200 == e.code && (this.pinmsg = e.pinmsg);
},
setLeagueRemindTime: function(e) {
this.leagueRmindTime = e;
},
leagueexpTime: function() {
if (this.leagueRmindTime) {
this.leagueRmindTime -= 1;
this.leagueRmindTime < 0 && (this.leagueRmindTime = 0);
}
},
updateTimer: function() {
this.leagueexpTime();
},
level: function() {
return cc.vv.UserConfig.totalExp2Level(this._curExp);
},
getCurLv: function() {
return this.level();
},
getVip: function() {
return cc.vv.UserConfig.vipExp2Level(cc.vv.UserManager.svipexp);
},
getAddInvite: function() {
return this.addInvite;
},
setShakeStatus: function(e) {
e ? Global.saveLocal("ROOM_SHAKE_STAUS", "1") : Global.saveLocal("ROOM_SHAKE_STAUS", "0");
},
getSkateStatus: function() {
var e = Global.getLocal("ROOM_SHAKE_STAUS", "1");
return !(!e || "1" != e);
},
getRegisterCoin: function() {
return this.reg_bonus_coin;
},
getSignTotalCoin: function() {
return this.sign_bonus_coin;
},
isGameOpen: function(e) {
for (var t, n = i(cc.vv.UserManager.gameList); !(t = n()).done; ) if (t.value.id == e || 9999 == e) return !0;
return !1;
},
showChargeUI: function() {
var e = "YD_Pro/prefab/yd_shop";
cc.vv.UserManager.isbindphone > 0 || (e = "YD_Pro/prefab/Register");
cc.vv.PopupManager.addPopup(e, {
onShow: function() {}
});
},
getLepGames: function() {
return this.lepordgames;
},
isInLepGames: function(e) {
var t = !1;
if (this.lepordgames) for (var i = 0; i < this.lepordgames.length; i++) if (e == this.lepordgames[i]) {
t = !0;
break;
}
return t;
},
getSalonVip: function() {
return this.salonVip;
},
isInRebateGames: function(e) {
for (var t = !1, i = 0; i < this.rebatGames.length; i++) if (e == this.rebatGames[i]) {
t = !0;
break;
}
return t;
},
isBonusPromOpen: function() {
return this.bonus_prom;
},
update: function() {
cc.vv.ChipPool && cc.vv.ChipPool.update();
}
}
});
cc._RF.pop();
}, {
UserManager: "UserManager"
} ],
UserManager: [ function(e, t) {
"use strict";
cc._RF.push(t, "a7772rp2E5D3IIknLMJZcjO", "UserManager");
cc.Class({
extends: cc.Component,
statics: {
gameServer: "",
token: "",
serverId: "",
subId: "",
uid: 0,
openid: 0,
totalcoin: 0,
dcoin: 0,
cashbonus: 0,
dcashbonus: 0,
bankcoin: 0,
coin: {
get: function() {
return this._coin ? this._coin : 0;
},
set: function(e) {
this._coin = e;
}
},
level: 1,
userIcon: "",
sex: 1,
agent: 0,
nickName: "",
inviteCode: "",
bindcode: "",
ip: "192.168.0.1",
memo: "",
onlinestate: 0,
syotime: 0,
lrwardstate: 0,
switch: null,
showActivity: !0,
lat: 0,
lng: 0,
unionid: "",
bank_token: null,
bank_info: {},
rememberPsw: !1,
gameList: null,
isAutoLogin: !1,
luckRedvelopesNum: 0,
growup: null,
red_envelop: 0,
areaCode: null,
evo: 0,
_stampInfo: null,
svip: 0,
svipexp: 28,
svipup: 1,
logonTime: 0,
serverTime: 0,
bonusList: null,
guides: null,
favorite_games: [],
_notEnoughCoinPopList: null,
activityTipsInGame: !1,
questmaxcoin: 0,
_dailygift: null,
_richpoint: 0,
_hallIconSpin: [],
_firstBuyGift: {},
_diamond: 0,
_noticerewards: 0,
_questroundid: 1,
_bingoFrom: 1,
_popParams: null,
_betData: {},
playedGameIds: [],
_bonusTab: 0,
_hallRankData: {},
_pvpRank: "",
_pvpScore: "",
_pvpCC: "",
_pvp_defend_team: [],
init: function() {
Global.playerData = this;
this.switch = [];
cc.vv.NetManager.registerMsg(MsgId.GAME_LIST, this.recvGameList, this);
cc.vv.NetManager.registerMsg(MsgId.PULL_CH_LESSCOIN_ACTIVELIST, this.onRcvLessCoinPoplist, this);
cc.vv.NetManager.registerMsg(MsgId.REQ_REFRESH_VIP, this.onEventRefreshVip, this);
cc.vv.NetManager.registerMsg(MsgId.PULL_MODIFY_LOCALVAL, this.onRcvPullModifyLocalval, this);
cc.vv.NetManager.registerMsg(MsgId.REQ_SYNC_HALLINFO, this.onRecvRefreshHallInfo, this);
cc.vv.NetManager.registerMsg(MsgId.REQ_FRIENDS_LIST, this.onRcvFriendsList, this);
cc.vv.NetManager.registerMsg(MsgId.REQ_ADD_FRIENDS, this.onFriendAdded, this);
cc.vv.NetManager.registerMsg(MsgId.REQ_DELETE_FRIENDS, this.onFriendRemoved, this);
this.registerExMsg();
},
registerExMsg: function() {},
initLoginServer: function(e) {
this.gameServer = e.net;
this.token = e.token;
this.serverId = e.server;
this.subId = e.subId;
this.uid = e.uid;
this.unionid = e.unionid;
},
recvGameList: function(e) {
if (200 === e.code) {
this.gameList = e.gamelist;
cc.log(this.gameList.length);
for (var t in this.gameList) this.gameList[t].sort(function(e, t) {
return e.ord - t.ord;
});
Global.dispatchEvent(EventId.UPDATE_GAME_LIST);
}
},
initPlayerData: function(e) {
console.log("initPlayerData: function (serverData)");
var t = e.playerInfo;
this.clubInvitePop = e.clubInvitePop;
e.actlist;
this.setCurLv(t.level);
this.uid = t.uid;
this.coin = t.coin;
this.userIcon = t.usericon;
this.sex = t.sex;
this.agent = t.agent;
this.nickName = t.playername;
this.memo = t.memo;
this.inviteCode = t.code;
this.bindcode = t.bindcode;
this.ip = t.ip;
this.onlinestate = t.onlinestate;
this.lrwardstate = t.lrwardstate;
this.upcoin = e.upcoin;
this.ispayer = t.ispayer;
this.account = t.account;
this.logincoin = t.logincoin;
this.switch = t.switch || [];
this.logintype = t.logintype;
this.isbindfb = t.isbindfb;
this.fbIcon = t.fb_icon;
this.isbindgoogle = t.isbindgg;
this.spread = t.spread || 0;
this.gameList = e.gamelist;
this.luckRedvelopesNum = t.luckRedvelopesNum;
this.growup = e.growup;
this.red_envelope = t.red_envelope;
this.evo = e.evo;
this._curExp = t.levelexp;
this._updateExp = t.levelup;
this._nextLvReward = t.next_level_reward;
this.initgift = t.initgift;
this.svip = t.svip || 0;
this.svipexp = t.svipexp || 0;
this.svipup = t.svipup || Global.VIP_INFO[this.svip].upNeedExp;
this.bonusList = e.bonuslist;
this.activityList = e.activitylist;
this.offlineAward = t.offlineaward;
this.offlineTime = t.offlinetime;
this.guides = t.guide;
this.questmaxcoin = e.questmaxcoin;
this.logonTime = new Date().getTime();
this.serverTime = e.servertime;
this._levelGift = 0;
this.pvp_card_exp = t.pvp_card_exp;
this._pvp_defend_team = t.pvp_defend_team;
this.charm = t.charm;
this.charmList = e.charmList;
this._richpoint = t.upoint;
this._diamond = t.diamond || 0;
this.favorite_games = e.favorite_games;
this._noticerewards = e.backGameCoin;
this._questroundid = e.questroundid;
this._popParams = e.popParams;
this.setBetData(t.palace);
e.redPoint && this.setSliverHarm(e.redPoint.dailyGift);
if (e.bingo) {
this.countData = Math.floor((1e3 * e.bingo.endTime - new Date().getTime()) / 1e3);
this.bingoData = e.bingo;
}
this._journey = e.journey;
this._firstBuyGift = e.firstPayGift;
if (cc.vv.PopUIMgr) {
var i = !1;
if (Global.isIOSReview()) for (var n = 0; n < e.poplist.length; n++) if (1 == e.poplist[n]) {
i = !0;
break;
}
if (i) cc.vv.PopUIMgr.setLoginPopList([ 1 ]); else if (Global.isIOSReview()) cc.vv.PopUIMgr.setLoginPopList([]); else {
cc.vv.PopUIMgr.setLoginPopList(e.poplist);
this.clubInvitePop && cc.vv.PopUIMgr.addLoginPopList(101);
}
}
for (var a in this.gameList) {
var o = this.gameList[a];
o && o instanceof Array && o.sort(function(e, t) {
return e.ord - t.ord;
});
}
Global.saveLocal(Global.SAVE_KEY_LOGIN_TYPE, this.logintype);
var c = Global.getLocal(Global.SAVE_PLAYER_TOKEN);
c = void 0 === c ? {} : JSON.parse(c);
if (this.logintype !== Global.LoginType.Guest) if (this.rememberPsw) {
c[this.nickName] || (c[this.nickName] = {});
c[this.nickName].token = this.token;
} else c[this.nickName] && (c[this.nickName] = {});
c.curr_account = this.nickName;
Global.saveLocal(Global.SAVE_PLAYER_TOKEN, JSON.stringify(c));
},
SetUserIcon: function(e) {
this.userIcon = e;
},
AddCoin: function(e, t) {
console.log("加钱AddCoin(val,bRefushHall)");
this.coin += e;
t && Global.dispatchEvent(EventId.UPATE_COINS);
},
SetCoin: function(e, t) {
console.log("设置:SetCoin(val,bRefushHall)");
this.coin = e;
this.totalcoin = this.coin + this.cashbonus + this.bankcoin;
t && Global.dispatchEvent(EventId.UPATE_COINS);
},
setBankCoin: function(e) {
this.bankcoin = e;
},
getGameList: function() {
return this.gameList;
},
getFavourList: function() {
return this.favorite_games;
},
setFavourList: function(e) {
this.favorite_games = e;
},
isFavourGame: function(e) {
var t;
if (this.favorite_games) for (var i = 0; i < this.favorite_games.length; i++) if (this.favorite_games[i] == e) {
t = !0;
break;
}
return t;
},
getUnlockGames: function() {
var e = [];
for (var t in this.gameList) for (var i = this.gameList[t], n = 0; n < i.length; n++) {
var a = i[n];
cc.vv.GameItemCfg[a.id] && a.level < this.level && 1 == a.status && e.push(a);
}
return e;
},
getGameListById: function(e) {
var t = null;
for (var i in this.gameList) for (var n = this.gameList[i], a = 0; a < n.length; a++) if (Number(e) == Number(n[a].id)) {
t = n[a];
break;
}
return t;
},
setRemember: function(e) {
this.rememberPsw = e;
},
setNickName: function(e) {
this.nickName = e;
},
getNickName: function() {
return this.nickName;
},
getNocticeRewards: function() {
return this._noticerewards;
},
clearNoticeRewards: function() {
this._noticerewards = 0;
},
setLoginType: function(e) {
this.logintype = e;
},
getLoginType: function() {
return this.logintype;
},
getClubInvitePop: function() {
return this.clubInvitePop;
},
setIsBindFb: function(e) {
this.isbindfb = !!e;
},
isBindFb: function() {
return this.isbindfb;
},
setIsBindGoogle: function(e) {
this.isbindgoogle = e;
},
getIsBindGoogle: function() {
return this.isbindgoogle;
},
getNotEncoughCoinPoplist: function() {
return this._notEnoughCoinPopList;
},
setNotEncoughPopForceFlag: function(e) {
this._notEnoughCoinPopList && (this._notEnoughCoinPopList.bforse = e);
},
getDiamond: function() {
return this._diamond;
},
setDiamond: function(e, t) {
this._diamond = e;
t && Global.dispatchEvent(EventId.UPATE_DIAMOND);
},
AddDiamond: function(e, t) {
this._diamond += e;
t && Global.dispatchEvent(EventId.UPATE_DIAMOND);
},
getCurQuestId: function() {
return this._questroundid;
},
setCurQuestId: function(e) {
this._questroundid = e;
},
isCasioSatusOnHall: function() {
return this.evo;
},
isGameLock: function(e) {
var t = this.getGameListById(e);
return !t || t.level > this.level;
},
setGameUnlock: function(e) {
var t = this.getGameListById(e);
if (t) {
t.level = 0;
Global.dispatchEvent(EventId.REFUSH_GAME_ITEM, e);
}
},
isServerOpenGame: function(e) {
return 1 == this.getGameListById(e).status;
},
isDownloadSubGame: function(e) {
if (Global.isNative()) {
var t = cc.vv.GameItemCfg[e];
if (t) {
var i = t.name;
return !!cc.sys.localStorage.getItem(i);
}
AppLog.warn("没有配置入口" + e);
return !0;
}
return !0;
},
isNoNeedDownGame: function(e) {
for (var t, i = this.getNoNeedDownGames(), n = 0; n < i.length; n++) if (i[n] == e) {
t = !0;
break;
}
return t;
},
getNoNeedDownGames: function() {
Global.appId === Global.APPID.SouthAmerica || (Global.appId, Global.APPID.HuaweiDRM);
Global.appId == Global.APPID.Indian || (Global.appId, Global.APPID.Poly);
return [ 611, 659, 631, 657 ];
},
getCurExp: function() {
return this._curExp;
},
setCurExp: function(e) {
this._curExp = e;
},
getUpdateExp: function() {
return this._updateExp;
},
setUpdateExp: function(e) {
this._updateExp = e;
},
getCurLv: function() {
return this.level;
},
setCurLv: function(e) {
this.level = e;
Global.saveLocal("userlv", e);
},
getNextLvReward: function() {
return this._nextLvReward;
},
setNextLvReward: function(e) {
this._nextLvReward = e;
},
setHallTab: function(e) {
this._hallTab = e;
},
getHallTab: function() {
return this._hallTab;
},
setBonusTab: function(e) {
this._bonusTab = e;
},
getBonusTab: function() {
return this._bonusTab;
},
getHallOffset: function() {
return this._scrollOff;
},
setHallOffset: function(e) {
this._scrollOff = e;
},
setLevelGift: function(e) {
this._levelGift = e;
},
getLevelGift: function() {
return this._levelGift;
},
getVipLevel: function() {
return this.svip;
},
setVipLevel: function(e) {
this.svip = e;
},
setVipUp: function(e) {
this.svipup = e;
},
setVipExp: function(e) {
this.svipexp = e;
},
getVipExp: function() {
return this.svipexp;
},
getVipPro: function() {
return this.svipup <= 0 ? 1 : this.svipexp / this.svipup;
},
getOfflineAward: function() {
return this.offlineAward;
},
getOfflineTime: function() {
return this.offlineTime;
},
getRichPoint: function() {
return this._richpoint;
},
addRichPoint: function(e) {
this._richpoint += e;
},
getPvpCardExp: function() {
return this.pvp_card_exp;
},
setPvpCardExp: function(e) {
this.pvp_card_exp = e;
},
getPvpDefendTeam: function() {
return this._pvp_defend_team;
},
setPvpDefendTeam: function(e) {
this._pvp_defend_team = e;
},
getCharm: function() {
return this.charm;
},
getCharmList: function() {
return this.charmList;
},
getHallBonusList: function() {
return this.bonusList;
},
isHallBonusOpen: function(e) {
var t = !1;
if (this.bonusList) for (var i = 0; i < this.bonusList.length; i++) if (e == this.bonusList[i]) {
t = !0;
break;
}
return t;
},
isActivityOpen: function(e) {
if (this.activityList) for (var t = 0; t < this.activityList.length; t++) if (e == this.activityList[t]) return !0;
return !1;
},
onRcvLessCoinPoplist: function(e) {
if (200 == e.code) {
this._notEnoughCoinPopList = {};
this._notEnoughCoinPopList.list = e.poplist;
this._notEnoughCoinPopList.bforse = e.forcepop;
this._notEnoughCoinPopList.first = e.first;
this.updatePopParams(e.popParams);
}
},
setPigbankData: function(e) {
this._pigbankData = e;
},
getPigbankData: function() {
return this._pigbankData;
},
getCompleteGuide: function() {
this.guides = this.guides || [];
return this.guides;
},
saveCompleteGuideId: function(e) {
if (Array.isArray(e)) for (var t = 0; t < e.length; t++) e[t] && this.guides.push(e[t]); else e && this.guides.push(e);
},
setQuestInfo: function(e) {
this._questInfo = e;
},
getQuestInfo: function() {
return this._questInfo;
},
updateQuestInfoData: function(e) {
this._questInfo && (this._questInfo.data = e);
},
updateQuestInfoCfg: function(e) {
this._questInfo && (this._questInfo.roundCfg = e);
},
isOpenQuestServer: function() {
return !0;
},
onEventRefreshVip: function() {},
isOpen: function(e) {
var t = this.getCurLv();
return e >= 0 && t >= e;
},
setEnterHallAction: function(e) {
this._hallAciton = e;
},
getEnterHallAction: function() {
return this._hallAciton;
},
setGoSpinGame: function(e) {
this._goGame = e;
},
getGoSpinGame: function() {
return this._goGame;
},
setHallIconSpin: function(e) {
for (var t = !1, i = 0; i < this._hallIconSpin.length; i++) if (this._hallIconSpin[i].res == e.res) {
t = !0;
break;
}
if (!t) {
this._hallIconSpin.push(e);
for (var n = this._hallIconSpin.length - 2; n >= 0; n--) {
var a = this._hallIconSpin[n];
if (Math.abs(a.idx - e.idx) > 8) {
cc.loader.releaseResDir(a.dir);
cc.loader.release(a.res);
this._hallIconSpin.splice(n, 1);
cc.log("=======释放:" + a.dir);
}
}
}
},
releaseHallIconSpin: function() {
for (var e = 0; e < this._hallIconSpin.length; e++) {
var t = this._hallIconSpin[e];
cc.loader.releaseResDir(t.dir);
cc.loader.release(t.res);
}
this._hallIconSpin = [];
},
loadSlotIconByQueue: function(e, t, i, n) {
this._loadlist = this._loadlist || [];
var a = {};
a.obj = e;
a.url = t;
a.loadType = i;
a.loadCall = n;
this._loadlist.push(a);
this._doLoadlist();
},
_doLoadlist: function() {
var e = this;
if (!this._listloading) {
this._listloading = !0;
var t = this._loadlist.shift();
if (t) {
var i = t.obj;
cc.loader.loadRes(t.url, t.loadType, function(n, a) {
cc.isValid(i, !0) && t.loadCall && t.loadCall(n, a);
e._listloading = !1;
e._doLoadlist();
});
} else this._listloading = !1;
}
},
onRcvPullModifyLocalval: function(e) {
if (200 == e.code && e.data) {
e.data.questmaxcoin && (this.questmaxcoin = e.data.questmaxcoin);
var t = e.data.poplist;
t && cc.vv.PopUIMgr.updateLoginPopList(t);
e.data.palace && this.setBetData(e.data.palace);
}
},
getServerTime: function() {
return this.serverTime + (new Date().getTime() - this.logonTime) / 1e3;
},
isHaveSliverHarm: function() {
return this._dailygift;
},
setSliverHarm: function(e) {
this._dailygift = e;
Global.dispatchEvent(EventId.SLIVERICON_SHOW);
},
setEnterSelectBet: function(e) {
this._betVal = e;
},
getEnterSelectBet: function() {
return this._betVal;
},
setEnterMaxBet: function(e) {
this._maxbetVal = e;
},
getEnterMaxBet: function() {
return this._maxbetVal;
},
getPopParams: function(e) {
return !!this._popParams && this._popParams[e];
},
updatePopParams: function(e) {
if (this._popParams) for (var t in e) this._popParams[t] = e[t]; else this._popParams = e;
},
getBetData: function() {
if (this._betData) return this._betData;
},
setBetData: function(e) {
this._betData = e;
},
getHallRankData: function() {
return !!this._hallRankData && this._hallRankData;
},
setHallRankData: function(e) {
this._hallRankData = e;
},
update: function() {
this.bingoUpdate();
this.exploreUpdate();
},
bingoUpdate: function() {
if (Global.SYS_OPEN && this.isOpen(Global.SYS_OPEN.BINGO) && this.countData > 1) {
this.countData--;
if (1 == this.countData) {
this.countData = null;
this.getBingoPop();
return;
}
}
},
getBingoPop: function() {
var e = this;
cc.loader.loadRes("CashHero/prefab/bingo/bingo_pop", cc.Prefab, function(t, i) {
var n = cc.find("Canvas");
if (!t && cc.isValid(n) && !n.getChildByName("bingo_pop")) {
var a = cc.instantiate(i);
a.parent = n;
a.getComponent("Bingo_Pop").firstDay(e.bingoData);
}
});
},
getJourney: function() {
return this._journey;
},
exploreUpdate: function() {
Global.SYS_OPEN && this.isOpen(Global.SYS_OPEN.EXPLORATION) && this._journey && this._journey.endTime === Math.floor(new Date().getTime() / 1e3) && cc.loader.loadRes("CashHero/prefab/exploration/explore_pop", cc.Prefab, function(e, t) {
var i = cc.find("Canvas");
if (!e && cc.isValid(i) && !i.getChildByName("explore_pop")) {
var n = cc.instantiate(t);
n.parent = i;
n.getComponent("Explore_Pop").popNewSeason();
}
});
},
getFirstBuyGift: function() {
return this._firstBuyGift;
},
delFirstBuyGift: function() {
this._firstBuyGift = null;
},
getFbIconPath: function() {
return this.fbIcon;
},
setBingoFrom: function(e) {
e && (this._bingoFrom = e);
},
getBingoFrom: function() {
return this._bingoFrom;
},
setHeroData: function(e) {
this.curHeroData = e;
},
getHeroData: function() {
return this.curHeroData ? this.curHeroData : null;
},
clearHeroData: function() {
this.curHeroData = null;
},
setPvpRank: function(e) {
this._pvpRank = e;
},
getPvpRank: function() {
return this._pvpRank;
},
setPvpScore: function(e) {
this._pvpScore = e;
},
getPvpScore: function() {
return this._pvpScore;
},
setPvpCC: function(e) {
this._pvpCC = e;
},
getPvpCC: function() {
return this._pvpCC;
},
getOpenActiveType: function() {
var e;
this.bingoData && (e = 1);
this.getJourney() && (e = 2);
return e;
},
syncHallInfo: function() {
cc.vv.NetManager.sendAndCache({
c: MsgId.REQ_SYNC_HALLINFO
}, !0);
},
onRecvRefreshHallInfo: function(e) {
console.log("onRecvRefreshHallInfo:function(msg)", e);
if (200 == e.code) {
this.SetCoin(e.coin, !0);
this.setDiamond(e.diamond, !0);
this.setFavourList(e.favorite_games);
}
},
isFriend: function(e) {
if (this._friendData) return this._friendData.some(function(t) {
if (t.uid == e) return !0;
});
},
reqFriendList: function() {
var e = {
c: MsgId.REQ_FRIENDS_LIST,
curPage: 1,
recommends: 0
};
cc.vv.NetManager.sendAndCache(e);
},
onRcvFriendsList: function(e) {
if (200 == e.code && !this._hasGetList) {
this._hasGetList = !0;
this._friendData = [];
for (var t = 0; t < e.items; t++) this._friendData.push(e.items[t]);
}
},
onFriendAdded: function(e) {
if (200 == e.code && !e.spcode) {
if (!this._friendData) return;
this._friendData.push(e.friend);
}
},
onFriendRemoved: function(e) {
if (200 == e.code) {
if (!this._friendData) return;
if (!e.frienduids || e.frienduids.length <= 0) return;
for (var t = 0; t < e.frienduids.length; t++) for (var i = e.frienduids[t], n = 0; n < this._friendData.length; n++) if (i == this._friendData[n].uid) {
this._friendData.splice(n, 1);
break;
}
}
},
isMySelf: function(e) {
return e == this.uid;
}
}
});
cc._RF.pop();
}, {} ],
Utils: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "952f0nKhjFH4Lwlh+yqwCZM", "Utils");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = [ {
len: 3,
mark: "K"
}, {
len: 6,
mark: "M"
}, {
len: 9,
mark: "B"
}, {
len: 12,
mark: "T"
} ], a = function() {
function e() {}
e.formatNumWithSymbol = function(e, t, i, n) {
void 0 === t && (t = ",");
void 0 === i && (i = !1);
void 0 === n && (n = 2);
if (!e) return e + "";
var a = "";
e < 0 && (a = "-");
for (var o = Math.abs(e), c = Math.floor(o), s = o - c, r = c + "", l = [], d = r.length - 1; d >= 0; d -= 3) l.unshift(r.slice(Math.max(0, d - 2), d + 1));
var h = "";
(i || s >= 1 / Math.pow(10, n)) && (h = s.toFixed(n).slice(1));
return a + l.join(t) + h;
};
e.formatBigNum = function(t, i, a) {
void 0 === i && (i = 5);
void 0 === a && (a = 2);
if ("number" != typeof t || 0 === t) return t + "";
var o = "";
t < 0 && (o = "-");
var c = Math.abs(t), s = Math.floor(c) + "";
if (s.length < i) return e.formatNumWithSymbol(t);
var r = null;
n.some(function(e) {
if (!(s.length > e.len)) return !0;
r = e;
return !1;
});
if (!r) return o + s;
var l = s.length - r.len, d = s.substring(0, l), h = s.substring(l, s.length), _ = new RegExp("[0]{" + h.length.toString() + "}", "g");
return h.length > 0 && !_.test(h) ? o + d + "." + (h = h.substring(0, Math.min(a, h.length))) + r.mark : o + d + r.mark;
};
e.randomBy = function(e, t, i) {
void 0 === e && (e = 0);
void 0 === t && (t = 1);
void 0 === i && (i = !0);
var n;
"number" == typeof e && "number" == typeof t ? n = Math.random() * (t - e + 1) + e : "number" == typeof e && (n = Math.random() * e + 1);
i && (n = Math.min(Math.max(Math.round(n), e), t));
return n;
};
e.merge = function(e, t, i, n) {
void 0 === i && (i = !1);
var a;
if (i) {
a = {};
for (var o in e) a[o] = e[o];
} else a = e;
for (var o in t) n && n(o, a[o], t[o]), a[o] = t[o];
return a;
};
e.randomColor = function() {
return cc.color(e.randomBy(0, 255), e.randomBy(0, 255), e.randomBy(0, 255));
};
e.randomCardUint = function() {
return 256 * e.randomBy(1, 4) + e.randomBy(2, 14);
};
e.getQueryVariable = function(e) {
for (var t = window.location.search.substring(1).split("&"), i = 0; i < t.length; i++) {
var n = t[i].split("=");
if (n[0] == e) return n[1];
}
};
e.prefixInteger = function(e, t) {
return (Array(t).join("0") + e).slice(-t);
};
e.formatDate = function(e, t) {
var i = new Date();
t && i.setTime(t);
var n = {
"M+": i.getMonth() + 1,
"d+": i.getDate(),
"h+": i.getHours(),
"m+": i.getMinutes(),
"s+": i.getSeconds(),
"q+": Math.floor((i.getMonth() + 3) / 3),
S: i.getMilliseconds()
};
/(y+)/.test(e) && (e = e.replace(RegExp.$1, (i.getFullYear() + "").substr(4 - RegExp.$1.length)));
for (var a in n) new RegExp("(" + a + ")").test(e) && (e = e.replace(RegExp.$1, 1 == RegExp.$1.length ? n[a] : ("00" + n[a]).substr(("" + n[a]).length)));
return e;
};
e.playSkeAnims = function(e, t, i, n) {
return __awaiter(this, void 0, void 0, function() {
return __generator(this, function() {
return [ 2, new Promise(function(a) {
var o = e.setAnimation(0, t, !1);
if (o) e.setTrackCompleteListener(o, function() {
n && n();
a();
i && e.setAnimation(0, i, !0);
}); else {
n && n();
a();
}
}) ];
});
});
};
e.getPromise = function(e, t) {
var i;
return {
promise: new Promise(function(t, n) {
i = n;
e(t, n);
}),
abort: function() {
t && t();
i({
message: "the promise is aborted"
});
}
};
};
e.formatString = function() {
for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
for (var i = e[0], n = 1; n < e.length; ++n) i = i.replace("{" + n + "}", e[n]);
return i;
};
e.limitScaleTo = function(e, t) {
var i = 1, n = 1;
t.w && (i = t.w / e.width);
t.h && (n = t.h / e.height);
var a = Math.min(i, n);
t.force ? e.scale = a : a < 1 && (e.scale = a);
};
e.getCardValue = function(e) {
return e > 255 ? e % 256 : (15 & e) % 16;
};
e.getCardVariety = function(e) {
return e > 255 ? Math.floor(e / 256) : (240 & e) / 16;
};
e.base64Encode = function(e) {
var t, i, n, a, o, c = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", s = 0, r = 0, l = "", d = [];
if (!e) return e;
e = unescape(encodeURIComponent(e));
do {
t = (o = e.charCodeAt(s++) << 16 | e.charCodeAt(s++) << 8 | e.charCodeAt(s++)) >> 18 & 63;
i = o >> 12 & 63;
n = o >> 6 & 63;
a = 63 & o;
d[r++] = c.charAt(t) + c.charAt(i) + c.charAt(n) + c.charAt(a);
} while (s < e.length);
l = d.join("");
var h = e.length % 3;
return (h ? l.slice(0, h - 3) : l) + "===".slice(h || 3);
};
e.stringlimit = function(e, t) {
if (null == e || null == e) return "";
for (var i = 0, n = "", a = /[^\x00-\xff]/g, o = "", c = e.replace(a, "**").length, s = 0; s < c; s++) {
null != (o = e.charAt(s).toString()).match(a) ? i += 2 : i++;
if (i > t) break;
n += o;
}
c > t && (n += "...");
return n;
};
e.deepClone = function(t) {
var i = Array.isArray(t), n = "[object Object]" === Object.prototype.toString.call(t);
if (i) {
for (var a = [], o = 0; o < t.length; o++) a[o] = e.deepClone(t[o]);
return a;
}
if (n) {
a = {};
for (var o in t) a[o] = e.deepClone(t[o]);
return a;
}
return t;
};
return e;
}();
i.default = a;
cc._RF.pop();
}, {} ],
VipExpCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "342e7XipZVHaYKeV80YlBsK", "VipExpCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.icon = null;
t.label = null;
t.progress = null;
t.animNode = null;
return t;
}
t.prototype.onLoad = function() {
this._svip = cc.vv.UserManager.svip;
this._svipexp = cc.vv.UserManager.svipexp;
this._nextvipexp = cc.vv.UserManager.nextvipexp;
};
t.prototype.updateVipNoAnim = function() {
var e = this._nextvipexp, t = this._svipexp, i = e ? t / e : 1;
i = Math.min(i, 1);
i = Math.max(i, 0);
this.label.string = e ? Global.formatNumShort(t) + "/" + Global.formatNumShort(e) : Global.FormatNumToComma(t);
cc.vv.UserConfig.setVipFrame(this.icon, cc.vv.UserManager.svip);
this.progress.progress = i;
};
t.prototype.updateVipExp = function() {
var e = this;
null == this._svipexp && (this._svipexp = cc.vv.UserManager.svipexp);
var t = cc.find("lock", this.icon.node);
t && (t.active = cc.vv.UserManager.svip <= 0);
var i = cc.vv.UserManager.nextvipexp, n = cc.vv.UserManager.svipexp, a = n / i;
a = Math.min(a, 1);
a = Math.max(a, 0);
var o = Global.FormatCommaNumToNum(this.label.string);
Global.doRoallNumEff(this.label.node, Math.max(o, 0), n, 1.2, function() {
Global.dispatchEvent("USER_VIP_EXP_CHANGE_END");
e.label.string = Global.FormatNumToComma(n) + "/" + Global.FormatNumToComma(i);
}, function(t) {
e.label.string = Global.FormatNumToComma(parseInt(t)) + "/" + Global.FormatNumToComma(i);
}, 0, !0);
if (cc.vv.UserManager.svip != this._svip || cc.vv.UserManager.svipexp != this._svipexp) {
if (this.animNode && this.icon) {
var c = cc.tween().call(function() {
e.animNode.active = !0;
}).to(1, {
progress: a
}, {
progress: function(t, i, n, a) {
e.animNode.position = e.progress.barSprite.node.position.add(cc.v3(e.progress.barSprite.node.width * n, 0));
return t + (i - t) * a;
}
}).call(function() {
e.animNode.active = !1;
}), s = null;
cc.vv.UserManager.svip > this._svip && (s = cc.tween().call(function() {
e.animNode.active = !0;
}).to(.5, {
progress: 1
}, {
progress: function(t, i, n, a) {
e.animNode.position = e.progress.barSprite.node.position.add(cc.v3(e.progress.barSprite.node.width * n, 0));
return t + (i - t) * a;
}
}).call(function() {
e.progress.progress = 0;
var t = e.icon.node.scale;
cc.tween(e.icon.node).to(.1, {
scale: 1.2 * t
}).call(function() {
cc.vv.UserConfig.setVipFrame(e.icon, cc.vv.UserManager.svip);
}).to(.1, {
scale: 1 * t
}).start();
}).call(function() {
e.animNode.active = !1;
}));
if (s) cc.tween(this.progress).then(s).then(c).start(); else {
cc.tween(this.progress).then(c).start();
cc.vv.UserConfig.setVipFrame(this.icon, cc.vv.UserManager.svip);
}
} else if (this.icon) {
cc.vv.UserConfig.setVipFrame(this.icon, cc.vv.UserManager.svip);
this.progress.progress = a;
}
this._svip = cc.vv.UserManager.svip;
this._svipexp = cc.vv.UserManager.svipexp;
this._nextvipexp = cc.vv.UserManager.nextvipexp;
} else {
cc.vv.UserConfig.setVipFrame(this.icon, cc.vv.UserManager.svip);
this.progress.progress = a;
}
};
__decorate([ o(cc.Sprite) ], t.prototype, "icon", void 0);
__decorate([ o(cc.Label) ], t.prototype, "label", void 0);
__decorate([ o(cc.ProgressBar) ], t.prototype, "progress", void 0);
__decorate([ o(cc.Node) ], t.prototype, "animNode", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
VipUserBgCpt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a031520CVdC0bpfQxIi0PAp", "VipUserBgCpt");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.bg = null;
t.normal = null;
t.level_1 = null;
t.level_2 = null;
t.level_3 = null;
t.level_4 = null;
return t;
}
t.prototype.onLoad = function() {
this.bg.spriteFrame = this.normal;
};
t.prototype.setLevel = function(e) {
this.bg.spriteFrame = 1 == e ? this.level_1 : 2 == e ? this.level_2 : 3 == e ? this.level_3 : e >= 4 ? this.level_4 : this.normal;
};
__decorate([ o(cc.Sprite) ], t.prototype, "bg", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "normal", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "level_1", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "level_2", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "level_3", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "level_4", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
WSReqest: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "86678ZninhPpYZpPUMAngkl", "WSReqest");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.SyncReqest = void 0;
var n = function() {
function e() {
this.cmd = 0;
this.timeOut = 10;
this.timeOutId = null;
this._dataHandler = null;
}
e.prototype.post = function(e, t, i) {
var n = this;
void 0 === t && (t = 10);
void 0 === i && (i = !0);
this.cmd = e.c;
this.timeOut = t;
cc.vv.NetManager.registerMsg(e.c, this._onMsg, this, !1);
cc.vv.NetManager.send(e, i);
this._startTimeOut();
return new Promise(function(e) {
n._dataHandler = e;
});
};
e.prototype._startTimeOut = function() {
var e = this;
this.timeOutId = setTimeout(function() {
console.log("请求超时:", e.cmd);
cc.vv.NetManager.unregisterMsg(e.cmd, e._onMsg, !1, !1);
e._dataHandler && e._dataHandler(null);
e.destroy();
}, 1e3 * this.timeOut);
};
e.prototype._onMsg = function(e) {
clearTimeout(this.timeOutId);
cc.vv.NetManager.unregisterMsg(this.cmd, this._onMsg, !1, !1);
this._dataHandler && this._dataHandler(e);
this.destroy();
};
e.prototype.destroy = function() {
this._dataHandler = null;
};
return e;
}();
i.SyncReqest = n;
cc._RF.pop();
}, {} ],
WebView_Ex: [ function(e, t) {
"use strict";
cc._RF.push(t, "a2a9b4J0JtPPaEfTlJdTTT7", "WebView_Ex");
cc.Class({
extends: cc.WebView,
properties: {},
onEnable: function() {
var e = this._impl;
e.createDomElementIfNeeded(this.node.width, this.node.height);
e.setEventListener(cc.WebView.EventType.LOADED, this._onWebViewLoaded.bind(this));
e.setEventListener(cc.WebView.EventType.LOADING, this._onWebViewLoading.bind(this));
e.setEventListener(cc.WebView.EventType.ERROR, this._onWebViewLoadError.bind(this));
e.setVisible(!0);
}
});
cc._RF.pop();
}, {} ],
World: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0935bUf4JREBoiTU6fGuOdm", "World");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./components/AudioCfgCpt"), a = e("./components/KeyCpt"), o = e("./components/PrefabCfgCpt"), c = e("./System"), s = e("./Utils"), r = cc._decorator, l = r.ccclass, d = (r.property, 
function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.timeScale = 1;
t.systemList = [];
return t;
}
t.prototype.onLoad = function() {
this.systemList = this.node.getComponentsInChildren(c.default);
for (var e = 0, t = this.systemList; e < t.length; e++) {
var i = t[e];
cc.log("挂载System : ", i.name);
i.world = this;
i.onInit();
}
this.onInit();
};
t.prototype.start = function() {};
t.prototype.update = function(e) {
e *= this.timeScale;
this.onUpdate(e);
for (var t = 0, i = this.systemList; t < i.length; t++) i[t].onUpdate(e);
};
t.prototype.getSystem = function(e) {
var t = this.node.getComponent(e);
t || (t = this.node.getComponentInChildren(e));
return t;
};
t.prototype.getCpt = function(e, t) {
return this.getCpts(e, t)[0];
};
t.prototype.getCpts = function(e, t) {
for (var i = [], n = 0, a = cc.director.getScene().getComponentsInChildren(e); n < a.length; n++) {
var o = a[n];
t ? t(o) && i.push(o) : i.push(o);
}
return i;
};
t.prototype.getCptByKey = function(e, t) {
return this.getCpt(e, function(e) {
var i = e.getComponent(a.default);
return !(!i || i.key != t) || !(!e.key || e.key != t) || void 0;
});
};
t.prototype.getCptsByKey = function(e, t) {
return this.getCpts(e, function(e) {
var i = e.getComponent(a.default);
return !(!i || i.key != t) || !(!e.key || e.key != t) || void 0;
});
};
t.prototype.delay = function(e, t) {
var i = this, n = s.default.getPromise(function(t) {
i.scheduleOnce(function() {
t();
}, e);
}), a = n.promise, o = n.abort;
t && t.push(o);
return a;
};
t.prototype.getPrefab = function(e) {
var t = this.getComponent(o.default);
if (t) for (var i = 0, n = t.config; i < n.length; i++) {
var a = n[i];
if (a.key == e) return a.prefab;
} else cc.warn("没有发现预制体配置组件");
};
t.prototype.getAudio = function(e) {
var t = this.getComponent(n.default);
if (t) for (var i = 0, a = t.config; i < a.length; i++) {
var o = a[i];
if (o.key == e) return o.audio;
} else cc.warn("没有发现声音配置组件");
};
t.prototype.onInit = function() {};
t.prototype.onUpdate = function() {};
return __decorate([ l ], t);
}(cc.Component));
i.default = d;
cc._RF.pop();
}, {
"./System": "System",
"./Utils": "Utils",
"./components/AudioCfgCpt": "AudioCfgCpt",
"./components/KeyCpt": "KeyCpt",
"./components/PrefabCfgCpt": "PrefabCfgCpt"
} ],
WxMgr: [ function(e, t) {
"use strict";
cc._RF.push(t, "4b7ceAy/GBH5KpGCRIG+KFG", "WxMgr");
cc.Class({
extends: cc.Component,
statics: {
init: function() {
this.registerAllMsg();
},
registerAllMsg: function() {},
isWXAppInstalled: function() {
var e = !1, t = cc.vv.PlatformApiMgr.isInstallWXApp();
1 == Number(t) && (e = !0);
return e;
},
wxLogin: function(e) {
this._loginResultCall = e;
cc.vv.PlatformApiMgr.addCallback(this.loginSdkCallback.bind(this), "loginSdkCallback");
cc.vv.PlatformApiMgr.wxLogin();
},
wxPay: function() {},
wxShareText: function(e, t, i) {
this._shareEndCall = i;
var n = {};
n.shareScene = e;
n.shareType = 1;
n.textMsg = t;
cc.vv.PlatformApiMgr.addCallback(this.shareResultCall.bind(this), "shareResultCall");
cc.vv.PlatformApiMgr.wxShare(JSON.stringify(n));
},
wxShareImg: function(e, t, i) {
this._shareEndCall = i;
var n = {};
n.shareScene = e;
n.shareType = 2;
n.imgPath = t;
cc.vv.PlatformApiMgr.addCallback(this.shareResultCall.bind(this), "shareResultCall");
cc.vv.PlatformApiMgr.wxShare(JSON.stringify(n));
},
wxShareWeb: function(e, t, i, n, a, o) {
this._shareEndCall = o;
var c = {};
c.shareScene = e;
c.shareType = 3;
c.linkUrl = a;
c.imgUrl = n;
c.title = t;
c.des = i;
cc.vv.PlatformApiMgr.addCallback(this.shareResultCall.bind(this), "shareResultCall");
cc.vv.PlatformApiMgr.wxShare(JSON.stringify(c));
},
openWxApp: function() {
return cc.vv.PlatformApiMgr.openWXApp();
},
shareResultCall: function(e) {
this._shareEndCall && this._shareEndCall(e);
},
loginSdkCallback: function(e) {
e.result, e.token, e.uid;
this._loginResultCall && this._loginResultCall(e);
},
getWXToken: function() {
var e = Global.getLocal("wxToken");
return e && e.length > 0 ? e : null;
},
saveWXToken: function(e) {
e && Global.saveLocal("wxToken", e);
},
delWXToken: function() {
this.saveWXToken("");
}
}
});
cc._RF.pop();
}, {} ],
YDAppShow: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3b9d0cp9zpFNae8JEaidBH0", "YDAppShow");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = n.menu, s = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.reverse = !1;
return t;
}
t.prototype.onLoad = function() {
this.reverse ? this.node.active = !Global.isYDApp() : this.node.active = Global.isYDApp();
};
t.prototype.start = function() {
this.reverse ? this.node.active = !Global.isYDApp() : this.node.active = Global.isYDApp();
};
__decorate([ o ], t.prototype, "reverse", void 0);
return __decorate([ a, c("兼容/YDApp") ], t);
}(cc.Component);
i.default = s;
cc._RF.pop();
}, {} ],
YD_Pro: [ function(e, t) {
"use strict";
cc._RF.push(t, "1cd20SYnhFGjIgElvjDiU6/", "YD_Pro");
cc.Class({
extends: cc.Component,
statics: {
init: function() {},
doPay: function(e, t) {
var i = "https://pay.yonogames.com/#/?", n = "uid=%s&token=%s&amount=%s&t=%s", a = cc.vv.UserManager.uid, o = cc.vv.UserManager.token;
i += n = cc.js.formatStr(n, a, o, t, e);
cc.vv.PlatformApiMgr.openURL(i);
}
}
});
cc._RF.pop();
}, {} ],
YD_Safe: [ function(e, t) {
"use strict";
cc._RF.push(t, "56549fZz89FjZ8fDgxKUxHF", "YD_Safe");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this._editInput = cc.find("node_editBox/editBox", this.node).getComponent(cc.EditBox);
Global.btnClickEvent(cc.find("tog_select/toggle1", this.node), this.onClickSave, this);
Global.btnClickEvent(cc.find("tog_select/toggle2", this.node), this.onClickTake, this);
Global.btnClickEvent(cc.find("btn_reset", this.node), this.onClickReset, this);
Global.btnClickEvent(cc.find("btn_yes", this.node), this.onClickYes, this);
var e = cc.find("btn_close", this.node);
Global.btnClickEvent(e, this.onClickClose, this);
},
start: function() {
cc.vv.NetManager.send({
c: MsgId.REQ_ENTER_SAFE,
passwd: 888888
});
},
onEnable: function() {
var e = this.node.addComponent("NetListenerCmp");
e.registerMsg(MsgId.REQ_ENTER_SAFE, this.REQ_ENTER_SAFE, this);
e.registerMsg(MsgId.REQ_SAFE_SAVE, this.REQ_SAFE_SAVE, this);
e.registerMsg(MsgId.REQ_SAFE_TAKE, this.REQ_SAFE_TAKE, this);
},
onClickClose: function() {
cc.vv.PopupManager.removePopup(this.node);
},
REQ_ENTER_SAFE: function(e) {
if (200 == e.code) {
this._selfCoin = e.coin;
this._bankCoin = e.bankcoin || 0;
this._token = e.token;
this._canOpr = !0;
this.showPanel(1);
}
e.spcode && this.showSpcode(e.spcode);
},
REQ_SAFE_SAVE: function(e) {
if (200 == e.code) {
this._selfCoin = e.coin;
this._bankCoin = e.bankcoin;
this._editInput.string = "";
this._canOpr = !0;
this.showPanel(this._panelType);
}
e.spcode && this.showSpcode(e.spcode);
},
REQ_SAFE_TAKE: function(e) {
if (200 == e.code) {
this._selfCoin = e.coin;
this._bankCoin = e.bankcoin;
this._editInput.string = "";
this._canOpr = !0;
this.showPanel(this._panelType);
}
e.spcode && this.showSpcode(e.spcode);
},
showSpcode: function(e) {
614 == e ? cc.vv.FloatTip.show("wrong password") : 615 == e ? cc.vv.FloatTip.show("Error exceeds the number of times, lock for 10 minutes") : 616 == e ? cc.vv.FloatTip.show("The login information has expired, please restart the login") : 617 == e && cc.vv.FloatTip.show("Not enough coins to use");
},
showPanel: function(e) {
this._panelType = e;
var t = cc.find("node_editBox/title", this.node).getComponent(cc.Label);
if (1 == e) {
t.string = "Transfer In";
cc.find("jiantou", this.node).scaleX = -1;
} else {
t.string = "Transfer Out";
cc.find("jiantou", this.node).scaleX = 1;
}
cc.find("node_safe/coin", this.node).getComponent(cc.Label).string = Global.FormatNumToComma(this._selfCoin);
cc.find("node_cure/coin", this.node).getComponent(cc.Label).string = Global.FormatNumToComma(this._bankCoin);
},
showSavePanel: function() {},
onClickSave: function() {
cc.find("tog_select/toggle1", this.node).getComponent(cc.Toggle).isChecked;
this.showPanel(1);
},
onClickTake: function() {
cc.find("tog_select/toggle2", this.node).getComponent(cc.Toggle).isChecked;
this.showPanel(2);
this._canOpr = !0;
},
onClickReset: function() {
this._editInput.string = "";
},
onClickYes: function() {
if (this._canOpr) {
var e = this._editInput.string;
if (e) if (0 == Number(e)) cc.vv.FloatTip.show("Please enter the correct amount"); else if (Number(e) % 1 != 0) cc.vv.FloatTip.show("Please fill in whole numbers"); else if (1 == this._panelType) if (Number(e) > this._selfCoin) cc.vv.FloatTip.show("Please enter correct amount"); else {
this._canOpr = !1;
cc.vv.NetManager.send({
c: MsgId.REQ_SAFE_SAVE,
coin: Number(e),
gameid: 0,
deskid: 0,
token: this._token
});
} else if (Number(e) > this._bankCoin) cc.vv.FloatTip.show("Please enter correct amount"); else {
this._canOpr = !1;
cc.vv.NetManager.send({
c: MsgId.REQ_SAFE_TAKE,
coin: Number(e),
gameid: 0,
deskid: 0,
token: this._token
});
} else cc.vv.FloatTip.show("Please enter the amount");
}
}
});
cc._RF.pop();
}, {} ],
YD_Withdraw: [ function(e, t) {
"use strict";
cc._RF.push(t, "8b07a93f9BOAqkFU7/69K9g", "YD_Withdraw");
cc.Class({
extends: cc.Component,
properties: {
_curTab: 1
},
onLoad: function() {
var e = cc.find("tog_select/toggle1", this.node);
Global.btnClickEvent(e, this.onClickTabBank, this);
var t = cc.find("tog_select/toggle2", this.node);
Global.btnClickEvent(t, this.onClickTabUpi, this);
var i = cc.find("tog_select/toggle3", this.node);
Global.btnClickEvent(i, this.onClickTabUsdt, this);
var n = cc.find("btn_withdraw", this.node);
Global.btnClickEvent(n, this.onClickDraw, this);
this._way_bank = cc.find("node_bank", this.node);
this._way_upi = cc.find("node_upi", this.node);
this._way_usdt = cc.find("node_usdt", this.node);
var a = cc.find("btn_add", this._way_bank);
Global.btnClickEvent(a, this.onClickAddBank, this);
var o = cc.find("btn_add", this._way_upi);
Global.btnClickEvent(o, this.onClickAddUpi, this);
var c = cc.find("btn_add", this._way_usdt);
Global.btnClickEvent(c, this.onClickAddusdt, this);
var s = cc.find("btn_record", this.node);
Global.btnClickEvent(s, this.onClickRecord, this);
var r = cc.find("btn_rule", this.node);
Global.btnClickEvent(r, this.onClickRule, this);
cc.vv.NetManager.registerMsg(MsgId.YD_WITHDRAW_GET, this.OnRcvWithDrawInfo, this);
cc.vv.NetManager.registerMsg(MsgId.YD_WITHDRAW_DRAW, this.OnRcvDrawAction, this);
Global.registerEvent("draw_way_change", this.onEventDrawWayChange, this);
},
onDestroy: function() {
cc.vv.NetManager.unregisterMsg(MsgId.YD_WITHDRAW_GET, this.OnRcvWithDrawInfo, !1, this);
cc.vv.NetManager.unregisterMsg(MsgId.YD_WITHDRAW_DRAW, this.OnRcvDrawAction, !1, this);
},
start: function() {
var e = {
c: MsgId.YD_WITHDRAW_GET
};
cc.vv.NetManager.send(e);
this._curTab = 1;
this._showTab();
},
onClickRule: function() {
cc.vv.PopupManager.addPopup("YD_Pro/withdraw/yd_withdraw_rule", {
weight: 998,
scaleIn: !0
});
},
onClickRecord: function() {
cc.vv.PopupManager.addPopup("YD_Pro/withdraw/yd_withdraw_record", {
weight: 998,
scaleIn: !0
});
},
onClickTabBank: function() {
this._curTab = 1;
this._showTab();
},
onClickTabUpi: function() {
this._curTab = 2;
this._showTab();
},
onClickTabUsdt: function() {
this._curTab = 3;
this._showTab();
},
onClickAddBank: function() {
cc.vv.PopupManager.addPopup("YD_Pro/withdraw/yd_withdraw_addBank", {
weight: 998,
scaleIn: !0
});
},
onClickAddUpi: function() {
cc.vv.PopupManager.addPopup("YD_Pro/withdraw/yd_withdraw_addupi", {
weight: 998,
scaleIn: !0
});
},
onClickAddusdt: function() {
cc.vv.PopupManager.addPopup("YD_Pro/withdraw/yd_withdraw_addusdt", {
weight: 998,
scaleIn: !0
});
},
_showTab: function() {
this._way_bank.active = 1 == this._curTab;
this._way_upi.active = 2 == this._curTab;
this._way_usdt.active = 3 == this._curTab;
},
_showChips: function() {
if (this._baseInfo) {
var e = Global.FormatNumToComma(this._baseInfo.coin), t = Global.FormatNumToComma(this._baseInfo.dcoin);
Global.setLabelString("node_have/chip_total/val", this.node, e);
Global.setLabelString("node_have/chip_withdraw/val", this.node, t);
}
},
showUI: function() {
if (this._baseInfo) {
var e = this._baseInfo.bankList;
e && this._setBankInfo(e[e.length - 1]);
var t = this._baseInfo.upiList;
t && this._setUpiInfo(t[t.length - 1]);
var i = this._baseInfo.usdtList;
i && this._setUsdtInfo(i[i.length - 1]);
this._showChips();
}
},
onEventDrawWayChange: function(e) {
var t = e.detail;
1 == t.type && this._baseInfo && (this._baseInfo.bankList = t.val);
2 == t.type && this._baseInfo && (this._baseInfo.upiList = t.val);
3 == t.type && this._baseInfo && (this._baseInfo.usdtList = t.val);
this.showUI();
},
_setBankInfo: function(e) {
if (e) {
Global.setLabelString("via_way/val", this._way_bank, e.bankname);
Global.setLabelString("via_account/val", this._way_bank, e.account);
}
},
_setUpiInfo: function(e) {
if (e) {
Global.setLabelString("via_way/val", this._way_upi, e.upi);
Global.setLabelString("via_account/val", this._way_upi, e.username);
}
},
_setUsdtInfo: function(e) {
e && Global.setLabelString("via_account/val", this._way_usdt, e.addr);
},
OnRcvWithDrawInfo: function(e) {
if (200 == e.code) {
this._baseInfo = e;
this.showUI();
}
},
onClickDraw: function() {
var e;
if (1 == this._curTab) {
if (this._baseInfo && 0 == this._baseInfo.bankList.length) {
cc.vv.FloatTip.show("Bind bank account first!");
return;
}
var t = this._baseInfo.bankList.length;
e = this._baseInfo.bankList[t - 1].id;
} else if (2 == this._curTab) {
if (this._baseInfo && 0 == this._baseInfo.upiList.length) {
cc.vv.FloatTip.show("Bind UPI first!");
return;
}
var i = this._baseInfo.upiList.length;
e = this._baseInfo.upiList[i - 1].id;
} else if (3 == this._curTab) {
if (this._baseInfo && 0 == this._baseInfo.usdtList.length) {
cc.vv.FloatTip.show("Bind USTD first!");
return;
}
var n = this._baseInfo.usdtList.length;
e = this._baseInfo.usdtList[n - 1].id;
}
var a = cc.find("node_amount/edit", this.node).getComponent(cc.EditBox).string;
if (a) if (Number(a) > this._baseInfo.dcoin) cc.vv.FloatTip.show("Withdraw more than own !"); else {
var o = {
c: MsgId.YD_WITHDRAW_DRAW
};
o.coin = a;
o.bankid = e;
cc.vv.NetManager.send(o);
} else cc.vv.FloatTip.show("Input Withdraw number !");
},
OnRcvDrawAction: function(e) {
if (200 == e.code) {
if (e.spcode) {
cc.vv.FloatTip.show("Draw:" + e.spcode);
return;
}
cc.vv.FloatTip.show("Withdraw Success!");
cc.find("node_amount/edit", this.node).getComponent(cc.EditBox).string = "0";
this._baseInfo.coin = e.coin;
this._baseInfo.dcoin = e.dcoin;
this._showChips();
}
}
});
cc._RF.pop();
}, {} ],
YD_float_service: [ function(e, t) {
"use strict";
cc._RF.push(t, "33edeCl1tFKlbyvRkkXfbtS", "YD_float_service");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
Global.btnClickEvent(this.node, this.init, this);
},
start: function() {},
onEnable: function() {},
init: function() {
var e = cc.vv.UserManager.contactus;
e && cc.vv.PlatformApiMgr.openURL(e);
}
});
cc._RF.pop();
}, {} ],
balance_record_item: [ function(e, t) {
"use strict";
cc._RF.push(t, "94a6716pyVLL4yGEXJWF6pw", "balance_record_item");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {},
init: function(e) {
var t = cc.vv.GameItemCfg[e.gameid];
Global.setLabelString("game", this.node, t.title);
Global.setLabelString("amount", this.node, "Bet:" + e.bet);
Global.setLabelString("time", this.node, Global.getTimeStr(e.t));
var i = cc.find("balance_icon", this.node);
if (e.win > 0) {
cc.find("win", i).active = !0;
cc.find("lose", i).active = !1;
Global.setLabelString("win", this.node, "Win:" + e.win);
} else {
cc.find("win", i).active = !1;
cc.find("lose", i).active = !0;
Global.setLabelString("win", this.node, "");
}
},
start: function() {}
});
cc._RF.pop();
}, {} ],
btn_h5_download: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4e3712qVSdOxIcz8Ui8iAih", "btn_h5_download");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = (n.property, n.requireComponent), c = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
cc.vv.LoginData ? this.node.active = !0 : this.node.active = !1;
this.node.on("click", function() {
var e = Global.getLocal("h5_reqData", "");
e && Global.webCopyString(e);
window.toDownload && window.toDownload(cc.vv.UserManager.token, cc.vv.UserManager.subid);
}, this);
};
t.prototype.start = function() {};
return __decorate([ a, o(cc.Button) ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
btn_h5_fb: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "48482u5ZoFBz7wNzTIjc2hc", "btn_h5_fb");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = (n.property, n.requireComponent), c = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
var e = this.node.addComponent("EventListenerCmp");
cc.vv.LoginData ? this.node.active = cc.vv.UserManager.isbindfb <= 0 : this.node.active = !1;
this.node.on("click", function() {
window.toLoginFB && window.toLoginFB();
}, this);
e.registerEvent(EventId.FB_BIND_SUCCESS, this.FB_BIND_SUCCESS, this);
};
t.prototype.onEnable = function() {
window.toLoginFBComplete = function(e, t) {
cc.vv.NetManager.send({
c: MsgId.REQ_BIND_FACEBOOK,
accesstoken: e,
token: e,
user: t,
type: Global.LoginType.FB
});
};
};
t.prototype.onDisable = function() {
window.toLoginFBComplete = void 0;
};
t.prototype.FB_BIND_SUCCESS = function() {
cc.vv.AlertView.showTips(___("绑定FB成功,推荐下载App可以体验到完整的游戏体验"));
this.node.active = cc.vv.LoginData && cc.vv.UserManager.isbindfb <= 0;
};
return __decorate([ a, o(cc.Button) ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
deposit_record_item: [ function(e, t) {
"use strict";
cc._RF.push(t, "81e01xrR8hAuoWZLaUiQTZO", "deposit_record_item");
cc.Class({
extends: e("Table_Record_Item"),
properties: {},
onLoad: function() {},
init: function(e) {
this.copyStr = e.orderid;
Global.setLabelString("amount", this.node, e.coin);
Global.setLabelString("time", this.node, Global.getTimeStr(e.create_time));
Global.setLabelString("state", this.node, this.getDepositStatus(e.status));
Global.setLabelString("order", this.node, e.orderid);
var t = cc.find("copy", this.node);
Global.btnClickEvent(t, this.onClickCopy, this);
var i = cc.find("deposit_icon", this.node);
cc.find("process", i).active = e.status < 2;
cc.find("suc", i).active = e.status > 1;
},
onClickCopy: function() {
cc.vv.PlatformApiMgr.Copy(this.copyStr);
cc.vv.FloatTip.show("copy orderid!");
},
getDepositStatus: function(e) {
return 0 === e ? "created" : 1 === e ? "being processed" : 2 === e ? "successful" : 3 === e ? "successful" : void 0;
},
start: function() {}
});
cc._RF.pop();
}, {
Table_Record_Item: "Table_Record_Item"
} ],
hall_pre_loading: [ function(e, t) {
"use strict";
cc._RF.push(t, "ec3d433jz1FEYbBuF2T2zzu", "hall_pre_loading");
function i() {
i = function() {
return e;
};
var e = {}, t = Object.prototype, n = t.hasOwnProperty, a = "function" == typeof Symbol ? Symbol : {}, o = a.iterator || "@@iterator", c = a.asyncIterator || "@@asyncIterator", s = a.toStringTag || "@@toStringTag";
function r(e, t, i) {
return Object.defineProperty(e, t, {
value: i,
enumerable: !0,
configurable: !0,
writable: !0
}), e[t];
}
try {
r({}, "");
} catch (e) {
r = function(e, t, i) {
return e[t] = i;
};
}
function l(e, t, i, n) {
var a = t && t.prototype instanceof _ ? t : _, o = Object.create(a.prototype), c = new L(n || []);
return o._invoke = function(e, t, i) {
var n = "suspendedStart";
return function(a, o) {
if ("executing" === n) throw new Error("Generator is already running");
if ("completed" === n) {
if ("throw" === a) throw o;
return {
value: void 0,
done: !0
};
}
for (i.method = a, i.arg = o; ;) {
var c = i.delegate;
if (c) {
var s = b(c, i);
if (s) {
if (s === h) continue;
return s;
}
}
if ("next" === i.method) i.sent = i._sent = i.arg; else if ("throw" === i.method) {
if ("suspendedStart" === n) throw n = "completed", i.arg;
i.dispatchException(i.arg);
} else "return" === i.method && i.abrupt("return", i.arg);
n = "executing";
var r = d(e, t, i);
if ("normal" === r.type) {
if (n = i.done ? "completed" : "suspendedYield", r.arg === h) continue;
return {
value: r.arg,
done: i.done
};
}
"throw" === r.type && (n = "completed", i.method = "throw", i.arg = r.arg);
}
};
}(e, i, c), o;
}
function d(e, t, i) {
try {
return {
type: "normal",
arg: e.call(t, i)
};
} catch (e) {
return {
type: "throw",
arg: e
};
}
}
e.wrap = l;
var h = {};
function _() {}
function p() {}
function u() {}
var f = {};
r(f, o, function() {
return this;
});
var g = Object.getPrototypeOf, m = g && g(g(T([])));
m && m !== t && n.call(m, o) && (f = m);
var v = u.prototype = _.prototype = Object.create(f);
function S(e) {
[ "next", "throw", "return" ].forEach(function(t) {
r(e, t, function(e) {
return this._invoke(t, e);
});
});
}
function C(e, t) {
function i(a, o, c, s) {
var r = d(e[a], e, o);
if ("throw" !== r.type) {
var l = r.arg, h = l.value;
return h && "object" == typeof h && n.call(h, "__await") ? t.resolve(h.__await).then(function(e) {
i("next", e, c, s);
}, function(e) {
i("throw", e, c, s);
}) : t.resolve(h).then(function(e) {
l.value = e, c(l);
}, function(e) {
return i("throw", e, c, s);
});
}
s(r.arg);
}
var a;
this._invoke = function(e, n) {
function o() {
return new t(function(t, a) {
i(e, n, t, a);
});
}
return a = a ? a.then(o, o) : o();
};
}
function b(e, t) {
var i = e.iterator[t.method];
if (void 0 === i) {
if (t.delegate = null, "throw" === t.method) {
if (e.iterator.return && (t.method = "return", t.arg = void 0, b(e, t), "throw" === t.method)) return h;
t.method = "throw", t.arg = new TypeError("The iterator does not provide a 'throw' method");
}
return h;
}
var n = d(i, e.iterator, t.arg);
if ("throw" === n.type) return t.method = "throw", t.arg = n.arg, t.delegate = null, 
h;
var a = n.arg;
return a ? a.done ? (t[e.resultName] = a.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", 
t.arg = void 0), t.delegate = null, h) : a : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), 
t.delegate = null, h);
}
function E(e) {
var t = {
tryLoc: e[0]
};
1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), 
this.tryEntries.push(t);
}
function y(e) {
var t = e.completion || {};
t.type = "normal", delete t.arg, e.completion = t;
}
function L(e) {
this.tryEntries = [ {
tryLoc: "root"
} ], e.forEach(E, this), this.reset(!0);
}
function T(e) {
if (e) {
var t = e[o];
if (t) return t.call(e);
if ("function" == typeof e.next) return e;
if (!isNaN(e.length)) {
var i = -1, a = function t() {
for (;++i < e.length; ) if (n.call(e, i)) return t.value = e[i], t.done = !1, t;
return t.value = void 0, t.done = !0, t;
};
return a.next = a;
}
}
return {
next: I
};
}
function I() {
return {
value: void 0,
done: !0
};
}
return p.prototype = u, r(v, "constructor", u), r(u, "constructor", p), p.displayName = r(u, s, "GeneratorFunction"), 
e.isGeneratorFunction = function(e) {
var t = "function" == typeof e && e.constructor;
return !!t && (t === p || "GeneratorFunction" === (t.displayName || t.name));
}, e.mark = function(e) {
return Object.setPrototypeOf ? Object.setPrototypeOf(e, u) : (e.__proto__ = u, r(e, s, "GeneratorFunction")), 
e.prototype = Object.create(v), e;
}, e.awrap = function(e) {
return {
__await: e
};
}, S(C.prototype), r(C.prototype, c, function() {
return this;
}), e.AsyncIterator = C, e.async = function(t, i, n, a, o) {
void 0 === o && (o = Promise);
var c = new C(l(t, i, n, a), o);
return e.isGeneratorFunction(i) ? c : c.next().then(function(e) {
return e.done ? e.value : c.next();
});
}, S(v), r(v, s, "Generator"), r(v, o, function() {
return this;
}), r(v, "toString", function() {
return "[object Generator]";
}), e.keys = function(e) {
var t = [];
for (var i in e) t.push(i);
return t.reverse(), function i() {
for (;t.length; ) {
var n = t.pop();
if (n in e) return i.value = n, i.done = !1, i;
}
return i.done = !0, i;
};
}, e.values = T, L.prototype = {
constructor: L,
reset: function(e) {
if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, 
this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(y), 
!e) for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0);
},
stop: function() {
this.done = !0;
var e = this.tryEntries[0].completion;
if ("throw" === e.type) throw e.arg;
return this.rval;
},
dispatchException: function(e) {
if (this.done) throw e;
var t = this;
function i(i, n) {
return c.type = "throw", c.arg = e, t.next = i, n && (t.method = "next", t.arg = void 0), 
!!n;
}
for (var a = this.tryEntries.length - 1; a >= 0; --a) {
var o = this.tryEntries[a], c = o.completion;
if ("root" === o.tryLoc) return i("end");
if (o.tryLoc <= this.prev) {
var s = n.call(o, "catchLoc"), r = n.call(o, "finallyLoc");
if (s && r) {
if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
if (this.prev < o.finallyLoc) return i(o.finallyLoc);
} else if (s) {
if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
} else {
if (!r) throw new Error("try statement without catch or finally");
if (this.prev < o.finallyLoc) return i(o.finallyLoc);
}
}
}
},
abrupt: function(e, t) {
for (var i = this.tryEntries.length - 1; i >= 0; --i) {
var a = this.tryEntries[i];
if (a.tryLoc <= this.prev && n.call(a, "finallyLoc") && this.prev < a.finallyLoc) {
var o = a;
break;
}
}
o && ("break" === e || "continue" === e) && o.tryLoc <= t && t <= o.finallyLoc && (o = null);
var c = o ? o.completion : {};
return c.type = e, c.arg = t, o ? (this.method = "next", this.next = o.finallyLoc, 
h) : this.complete(c);
},
complete: function(e, t) {
if ("throw" === e.type) throw e.arg;
return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, 
this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), 
h;
},
finish: function(e) {
for (var t = this.tryEntries.length - 1; t >= 0; --t) {
var i = this.tryEntries[t];
if (i.finallyLoc === e) return this.complete(i.completion, i.afterLoc), y(i), h;
}
},
catch: function(e) {
for (var t = this.tryEntries.length - 1; t >= 0; --t) {
var i = this.tryEntries[t];
if (i.tryLoc === e) {
var n = i.completion;
if ("throw" === n.type) {
var a = n.arg;
y(i);
}
return a;
}
}
throw new Error("illegal catch attempt");
},
delegateYield: function(e, t, i) {
return this.delegate = {
iterator: T(e),
resultName: t,
nextLoc: i
}, "next" === this.method && (this.arg = void 0), h;
}
}, e;
}
function n(e, t, i, n, a, o, c) {
try {
var s = e[o](c), r = s.value;
} catch (e) {
i(e);
return;
}
s.done ? t(r) : Promise.resolve(r).then(n, a);
}
var a = e("Md5"), o = e("GameItemCfg");
cc.Class({
extends: cc.Component,
properties: {
lbl_precent: cc.Label,
pro_precent: cc.ProgressBar,
_pro: 0,
_light: null,
_openGames: [],
_enterType: 1
},
onLoad: function() {
Global.autoAdaptDevices(!1);
StatisticsMgr && StatisticsMgr.reqReport(StatisticsMgr.REQ_HALL_LOADING_START);
this.node.name = Global.SCENE_NAME.HALL_PRELOAD;
this._light = this.pro_precent.node.getChildByName("light");
this._light && (this._light.active = !1);
AppLog.ShowScreen("大厅预加载启动");
},
start: function() {
this.initUI();
this.preloadHall();
if (2 == this._enterType) {
cc.vv.UserManager.syncHallInfo();
this._hotupdateFinish = !0;
this._loadResFinish = !0;
} else {
this.checkUnusedSubgame();
this.loadAtlas();
this.checkSubGameByMd5();
this.loadMsgCache();
}
},
setEnterType: function(e) {
this._enterType = e;
},
initUI: function() {
this._loadBaseMsgFInish = !0;
this._loadResFinish = null;
this._hotupdateFinish = null;
this._curDt = 0;
this._curCount = 0;
cc.vv.AppData && (this._curCount = Math.floor(100 * cc.vv.AppData.getLaunchProgress()) || 0);
this._enterHall = null;
this._totalCheckTime = 0;
this.loadProgress(this._curCount, 100);
},
loadMsgCache: function() {
cc.vv.NetCacheMgr.loadBasicMsg();
},
loadAtlas: function() {
for (var e = this, t = [], i = cc.vv.PopUIMgr.getLoginPopList(), n = 0; n < i.length; n++) {
var a = void 0, o = i[n];
2 == o ? a = "common/prefab/one_time_only" : 15 == o ? a = "CashHero/prefab/growth_fund/growth_fund_ad" : 16 == o ? a = "CashHero/prefab/firstBuyGift" : 12 == o ? a = "CashHero/prefab/month_card" : 11 == o ? a = "CashHero/prefab/quest_loginpop" : 5 == o ? a = "hall_prefab/SignIn" : 10 == o ? a = "CashHero/prefab/offline_reward" : 1 == o ? a = "hall_prefab/NewerGift" : 18 == o && (a = "CashHero/prefab/notice_rewards");
a && t.push(a);
}
t.push("CashHero/prefab/Bet_Select");
Global.LoadByQueue(t, cc.Prefab, null, function() {
AppLog.ShowScreen("大厅预加载-预加载资源完成");
e._loadResFinish = !0;
});
},
checkSubGameByMd5: function() {
var e, t = this;
return (e = i().mark(function e() {
var n, a;
return i().wrap(function(e) {
for (;;) switch (e.prev = e.next) {
case 0:
if (!(n = cc.vv.AppData.getSubverMd5())) {
e.next = 9;
break;
}
e.t0 = i().keys(n);

case 3:
if ((e.t1 = e.t0()).done) {
e.next = 9;
break;
}
a = e.t1.value;
e.next = 7;
return t._compareSubgameLocalMd5(a, n[a]);

case 7:
e.next = 3;
break;

case 9:
t._hotupdateFinish = !0;
AppLog.ShowScreen("大厅预加载-子包检查完成");

case 11:
case "end":
return e.stop();
}
}, e);
}), function() {
var t = this, i = arguments;
return new Promise(function(a, o) {
var c = e.apply(t, i);
function s(e) {
n(c, a, o, s, r, "next", e);
}
function r(e) {
n(c, a, o, s, r, "throw", e);
}
s(void 0);
});
})();
},
_compareSubgameLocalMd5: function(e, t) {
var i = this;
return new Promise(function(n) {
var o = i._getGameIdByName(e);
if (o) {
if (cc.vv.UserManager.isDownloadSubGame(o)) {
var c = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "/") + "game-remote-asset/" + e + "/project.manifest", s = jsb.fileUtils.getStringFromFile(c);
if (s) {
var r = JSON.parse(s), l = [];
for (var d in r.assets) l.push(r.assets[d].md5);
l.sort();
for (var h = "", _ = 0; _ < l.length; _++) h += l[_];
var p = a(i.stringToUint8Array(h));
AppLog.warn("子游戏：" + e + "L:" + p + "  R:" + t);
p == t ? cc.vv.SubGameUpdateNode.getComponent("subGameMgr")._addToNewList(o) : cc.vv.SubGameUpdateNode.getComponent("subGameMgr")._addCheckNeedDown(o);
}
}
} else AppLog.warn("未找到子游戏目录配置：" + e);
n();
});
},
stringToUint8Array: function(e) {
for (var t = [], i = 0, n = e.length; i < n; ++i) t.push(e.charCodeAt(i));
return new Uint8Array(t);
},
_getGameIdByName: function(e) {
for (var t in o) if (o[t].name == e) return t;
},
preloadHall: function() {
var e = this;
this._preLoadHallFinish = !1;
cc.director.preloadScene(Global.SCENE_NAME.HALL, function() {
e._preLoadHallFinish = !0;
AppLog.ShowScreen("大厅预加载-大厅场景加载完成");
});
},
checkUnusedSubgame: function() {
for (var e = cc.vv.UserManager.getNoNeedDownGames(), t = 0; t < e.length; t++) {
var i = e[t], n = o[i];
n && cc.vv.SubGameUpdateNode.getComponent("subGameMgr").deleteSubgameDir(n.name);
}
},
loadProgress: function(e, t) {
this._pro = Number(e / t);
isNaN(this._pro) && (this._pro = .01);
this._pro >= 1 && (this._pro = 1);
this.pro_precent.progress = this._pro;
this.lbl_precent.string = Global.S2P(100 * this._pro, 0) + "%";
if (this._light) {
this._light.active = this._pro < 1;
this._light.x = -this.pro_precent.totalLength / 2 + this.pro_precent.totalLength * this._pro;
this._light.y = 0;
}
},
_enterNext: function() {
StatisticsMgr && StatisticsMgr.reqReport(StatisticsMgr.REQ_HALL_LOADING_END);
cc.vv.EventManager.emit(EventId.ENTER_HALL);
},
update: function(e) {
this._curDt += e;
this._totalCheckTime += e;
if (this._curDt > .05) {
this._curDt = 0;
this._curCount += 1;
if (this._curCount >= 100) if (this._hotupdateFinish && this._loadResFinish && this._preLoadHallFinish && this._loadBaseMsgFInish) {
AppLog.ShowScreen("一切就绪，准备切换大厅场景");
if (!this._enterHall) {
this._enterHall = !0;
this._enterNext();
}
} else this._curCount = 100; else this._hotupdateFinish && this._loadResFinish && this._preLoadHallFinish && this._loadBaseMsgFInish && this._totalCheckTime > 2 && (this._curCount += 1 + 10 * Math.random(0, 1));
this.loadProgress(this._curCount, 100);
}
if (this._totalCheckTime > 20) {
this._hotupdateFinish || cc.log("条件1");
this._loadResFinish || cc.log("条件2");
this._preLoadHallFinish || cc.log("条件3");
this._loadBaseMsgFInish || cc.log("条件4");
if (!this._enterHall) {
AppLog.ShowScreen("超时直接进入大厅");
this._enterHall = !0;
this._enterNext();
}
}
}
});
cc._RF.pop();
}, {
GameItemCfg: "GameItemCfg",
Md5: "Md5"
} ],
hotupdate: [ function(e, t) {
"use strict";
cc._RF.push(t, "12917XLxXRKlacdMHGtn3n3", "hotupdate");
var i = e("../../script/global/Md5");
cc.Class({
extends: cc.Component,
properties: {
progressBar: cc.ProgressBar,
lblTips: cc.Label,
_updating: !1,
_failCount: 0,
_canRetry: !1,
_checkListener: null,
_updateListener: null,
_storagePath: "",
_assManager: null,
_checkOver: !1,
_countdownSec: 0,
_overtimeCount: 0,
_light: null,
_proVal: 0,
_newPackUrl: null
},
onLoad: function() {
Global.autoAdaptDevices(!1);
this.node.parent.name = Global.SCENE_NAME.HOTUPDATE;
Global.isNative() && this.initHotupdate();
},
start: function() {
Global.isNative() ? this.checkForceAppUpdate() : this.enterLoginScene();
},
initHotupdate: function() {
AppLog.ShowScreen("初始化热更");
StatisticsMgr.httpReport(StatisticsMgr.HTTP_START_HOTUPDATE);
AppLog.log("#####################-------------------");
var e = cc.sys.localStorage.getItem("HotUpdateSearchPaths");
AppLog.log(JSON.stringify(e));
this._storagePath = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "/") + "remote-asset";
this._assManager = new jsb.AssetsManager("", this._storagePath, this.versionComHandle.bind(this));
Global.retain(this._assManager);
this._assManager.setVerifyCallback(this.verifyCallback.bind(this));
cc.sys.os === cc.sys.OS_ANDROID && this._assManager.setMaxConcurrentTask(4);
},
update: function(e) {
if (!this._checkOver && this._sendVersion) {
this._countdownSec += e;
if (this._countdownSec > 3) {
this._countdownSec = 0;
if (this._overtimeCount >= 3) {
this._checkOver = !0;
this.enterLoginScene();
} else {
this._overtimeCount += 1;
AppLog.ShowScreen("开始检查热更-Http请求重试" + this._overtimeCount);
this.checkForceAppUpdate();
}
}
}
this.ReportUpdateTime(e);
},
ShowUpdateProcess: function(e) {
cc.isValid(this.progressBar, !0) && this.progressBar.node && (this.progressBar.node.active = e);
},
SetUpdateProcess: function(e) {
cc.isValid(this.progressBar, !0) && (this.progressBar.progress = e);
if (cc.isValid(this.lblTips, !0)) {
console.log("hotupdate里面显示进度:", e);
this.lblTips.string = Math.floor(100 * e) + "%";
}
},
ReportUpdateTime: function(e) {
if (this.bStartUpdateing) {
this._updateDuring || (this._updateDuring = 0);
this.updateCount || (this.updateCount = 0);
this._updateDuring += e;
if (this._updateDuring >= 1) {
this._updateDuring = 0;
this.updateCount += 1;
}
15 == this.updateCount && StatisticsMgr.httpReport(StatisticsMgr.HTTP_HOTUPDATE_PRO_TIME15);
30 == this.updateCount && StatisticsMgr.httpReport(StatisticsMgr.HTTP_HOTUPDATE_PRO_TIME30);
45 == this.updateCount && StatisticsMgr.httpReport(StatisticsMgr.HTTP_HOTUPDATE_PRO_TIME45);
60 == this.updateCount && StatisticsMgr.httpReport(StatisticsMgr.HTTP_HOTUPDATE_PRO_TIME60);
90 == this.updateCount && StatisticsMgr.httpReport(StatisticsMgr.HTTP_HOTUPDATE_PRO_TIME90);
180 == this.updateCount && StatisticsMgr.httpReport(StatisticsMgr.HTTP_HOTUPDATE_PRO_TIME180);
}
},
onDestroy: function() {
if (this._updateListener) {
cc.eventManager.removeListener(this._updateListener);
this._updateListener = null;
}
Global.release(this._assManager);
},
enterLoginScene: function() {
var e = new Date().getTime();
Global.saveLocal("last_hotupdate", e);
if (this._assManager.getLocalManifest()) {
Global.resVersion = this._assManager.getLocalManifest().getVersion();
Global.saveLocal("c_resv", Global.resVersion);
AppLog.ShowScreen("1resvision：" + Global.resVersion);
}
cc.vv.GameManager.nativeSkipHotupdate();
},
loadFile: function(e, t, i) {
var n = "Manifest/Main/" + e;
cc.loader.loadRes(n, cc.Asset, function(e, n) {
if (e) cc.log("loadFile:" + e); else {
var a = jsb.fileUtils.getStringFromFile(n.nativeUrl), o = a;
i && (o = JSON.parse(a));
t && t(o);
}
});
},
checkForceAppUpdate: function() {
var e = this;
AppLog.log("检测App强制更新！");
AppLog.ShowScreen("开始检查热更-load本地version");
this.loadFile("version", function(t) {
AppLog.ShowScreen("开始请求remoteversion");
AppLog.log("##############url:" + t.remoteVersionUrl);
e._checkOver = !1;
e._sendVersion = !0;
cc.vv.NetManager.requestHttp("", {}, function(t, i) {
if (t) {
e._sendVersion = !1;
AppLog.ShowScreen("请求remoteversion完成");
AppLog.log("请求remoteversion完成");
if (e._checkOver) {
AppLog.log("已经检测完成...");
return;
}
e._checkOver = !0;
e._checkRemoteVisionAction(i);
} else {
AppLog.ShowScreen("开始检查热更-Http请求version失败");
AppLog.log("请求remoteversion完成");
}
}.bind(e), t.remoteVersionUrl, "GET", !1);
}, !0);
},
_reTryGetVisioninfo: function() {
this._reTryCount = this._reTryCount || 0;
if (this._reTryCount > 2) this.startCheckHotUpdate(); else {
this._reTryCount += 1;
this.checkForceAppUpdate();
}
},
_checkRemoteVisionAction: function(e) {
var t = "string" == typeof e ? JSON.parse(e) : e;
Global.resVersion = t.version;
AppLog.log("远端Version:" + Global.resVersion);
AppLog.ShowScreen("远端Version:" + Global.resVersion);
Global.saveLocal("c_resv", Global.resVersion);
var i = parseInt("1.0.0".split(".").join(""));
AppLog.log("本地Version:" + i);
var n = parseInt("1.0.0".split(".").join("")), a = !1, o = t.androidAppUrl;
if (Global.isIOS()) {
n = parseInt(t.ios_app_version.split(".").join(""));
a = t.force_update_ios;
o = t.iosAppUrl;
}
Global.appId == Global.APPID.SouthAmerica && (o = "https://appgallery.cloud.huawei.com/ag/n/app/C103558397?locale=zh_CN&source=appshare&subsource=C103558397");
AppLog.log("@@@@@@@@@@@@@localAppVersion: " + i);
AppLog.log("@@@@@@@@@remoteAppVersion: " + n);
AppLog.log("@@@@@@@@@@@@isNeedForceUpdate: " + a);
AppLog.log("@@@@@@@@@@@@@@app_update_url: " + o);
if (i < n) {
AppLog.log("需要更新App");
if (a) {
AppLog.log("需要强制更新App");
this.deleteSubgameDir();
cc.vv.AlertView.show("Update the APP version to enjoy the game!", function() {
cc.vv.PlatformApiMgr.openURL(o);
cc.game.end();
}.bind(this), null, !1, null, null, "null", "Confirm");
} else cc.vv.AlertView.show("Update the APP version to enjoy the game!", function() {
cc.vv.PlatformApiMgr.openURL(o);
cc.game.end();
}.bind(this), function() {
AppLog.log("非强制更新，检测热更新！");
this.startCheckHotUpdate();
}.bind(this), !1, null, null, null, "Confirm");
} else {
AppLog.log("不需要更新App！");
this.startCheckHotUpdate();
}
},
startCheckHotUpdate: function() {
AppLog.ShowScreen("开始checkupdate");
StatisticsMgr.httpReport(StatisticsMgr.HTTP_HOTUPDATE_PRO_CHECK);
this.checkHotUpdate();
},
checkHotUpdate: function() {
if (this._updating) AppLog.log("Checking or Updating ..."); else {
AppLog.ShowScreen("开始load本地project");
this.loadFile("project", function(e) {
AppLog.ShowScreen("load本地project完成");
AppLog.log("load本地project完成");
if (this._assManager.getState() === jsb.AssetsManager.State.UNINITED) {
var t = new jsb.Manifest(e, this._storagePath);
this._assManager.loadLocalManifest(t, this._storagePath);
}
if (this._assManager.getLocalManifest() && this._assManager.getLocalManifest().isLoaded()) {
StatisticsMgr.httpReport(StatisticsMgr.HTTP_HOTUPDATE_PRO_ENTER);
this._assManager.setEventCallback(this.checkCallback.bind(this));
this._assManager.checkUpdate();
} else AppLog.warn("Failed to load local manifest ...");
}.bind(this));
}
},
startHotupdate: function() {
if (this._assManager && !this._updating) {
this._assManager.setEventCallback(this.updateCallback.bind(this));
this._failCount = 0;
this._assManager.update();
this._updating = !0;
}
},
checkCallback: function(e) {
var t = this, i = !1, n = e.getEventCode();
StatisticsMgr.httpReport(StatisticsMgr.HTTP_HOTUPDATE_PRO_CHECKRESULT, n);
switch (n) {
case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
AppLog.log("【check】No local manifest file found, hot update skipped.");
break;

case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
AppLog.log("【check】Fail to download manifest file, hot update skipped.");
break;

case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
AppLog.log("【check】Already up to date with the latest remote version.");
i = !0;
break;

case jsb.EventAssetsManager.NEW_VERSION_FOUND:
AppLog.log("New version found, please try to update.");
this.checkNewVisionFound();
return;

default:
return;
}
this._assManager.setEventCallback(null);
this._checkListener = null;
this._updating = !1;
i ? this.enterLoginScene() : cc.vv.AlertView.show("check failed! please check network.", function() {
t.checkHotUpdate();
});
},
checkNewVisionFound: function() {
var e = this, t = 0;
AppLog.ShowScreen("checkupdate完成,发现新版准备下载");
this._assManager && (t = this._assManager.getTotalBytes());
if (t && t > 52428800 && cc.sys.getNetworkType() == cc.sys.NetworkType.WWAN) {
var i = this._getUpdateStartTip(t);
cc.vv.AlertView.show(i, function() {
e.startHotupdate();
}, function() {
cc.game.end();
});
} else this.startHotupdate();
},
_getUpdateStartTip: function(e) {
var t = (e / 1024 / 1024).toFixed(2);
return cc.js.formatStr("It is detected that the resource pack of %sM needs to be updated. Do you want to download it now?", t);
},
updateCallback: function(e) {
var t = !1, i = !1;
switch (e.getEventCode()) {
case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
AppLog.warn("No local manifest file found, hot update skipped.");
i = !0;
break;

case jsb.EventAssetsManager.UPDATE_PROGRESSION:
this.bStartUpdateing || AppLog.ShowScreen("开始下载");
this.bStartUpdateing = !0;
var n = e.getDownloadedBytes(), a = e.getTotalBytes(), o = Math.floor(n / a * 100);
if ((o = isNaN(o) ? 0 : o) <= 100) {
this._proVal = o / 100;
this.ShowUpdateProcess(!0);
this.SetUpdateProcess(o / 100, n, a);
}
var c = e.getMessage();
c && AppLog.log(e.getPercent() / 100 + "% : " + c);
break;

case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
var s = "Fail to download manifest file";
AppLog.warn(s);
StatisticsMgr.httpReport(StatisticsMgr.HTTP_HOTUPDATE_PRO_FAILED, s);
i = !0;
break;

case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
AppLog.warn("Already up to date with the latest remote version.");
i = !0;
break;

case jsb.EventAssetsManager.UPDATE_FINISHED:
AppLog.log("Update finished. " + e.getMessage());
Global.saveLocal("c_resv", Global.resVersion);
Global.saveLocal("has_hot_res", "true");
t = !0;
break;

case jsb.EventAssetsManager.UPDATE_FAILED:
var r = e.getMessage();
AppLog.warn("UpdateFailed:" + r);
this.lblTips.string = r;
this._updating = !1;
this._canRetry = !0;
StatisticsMgr.httpReport(StatisticsMgr.HTTP_HOTUPDATE_PRO_FAILED, r);
break;

case jsb.EventAssetsManager.ERROR_UPDATING:
var l = "Asset update error: " + e.getAssetId() + ", " + e.getMessage();
AppLog.warn(l);
StatisticsMgr.httpReport(StatisticsMgr.HTTP_HOTUPDATE_PRO_FAILED, l);
break;

case jsb.EventAssetsManager.ERROR_DECOMPRESS:
AppLog.log(e.getMessage());
}
if (this._canRetry) {
console.log("#################download update failed files");
this._nRetrCount || (this._nRetrCount = 0);
this._nRetrCount++;
if (this._nRetrCount > 5) {
cc.vv.AlertView.show("Oops! Something went wrong. Please try again.", function() {
cc.game.restart();
}, null, !0, function() {
cc.game.end();
});
return;
}
this._canRetry = !1;
this._assManager.downloadFailedAssets();
this.lblTips.string = cc.js.formatStr("Wait a minute, I am working hard to update~(%s)", this._nRetrCount);
}
if (i) {
this._assManager.setEventCallback(null);
this._updateListener = null;
this._updating = !1;
cc.vv.AlertView.show("update failed! please check network.", function() {
cc.game.end();
});
}
if (t) {
var d = new Date().getTime();
Global.saveLocal("last_hotupdate", d);
AppLog.ShowScreen("完成下载，准备重启");
StatisticsMgr.httpReport(StatisticsMgr.HTTP_SUCCESS_HOTUPDATE);
this._assManager.setEventCallback(null);
this._updateListener = null;
var h = jsb.fileUtils.getSearchPaths();
if (this._assManager.getLocalManifest()) {
var _ = this._assManager.getLocalManifest().getSearchPaths();
AppLog.warn(JSON.stringify(_));
Array.prototype.unshift(h, _);
}
cc.sys.localStorage.setItem("HotUpdateSearchPaths", JSON.stringify(h));
jsb.fileUtils.setSearchPaths(h);
Global.saveLocal("app_pro", this._proVal);
cc.audioEngine.stopAll();
cc.game.restart();
}
},
versionComHandle: function(e, t) {
AppLog.log("JS Custom Version Compare: version A is " + e + ", version B is " + t);
for (var i = e.split("."), n = t.split("."), a = 0; a < i.length; ++a) if (parseInt(i[a]) !== parseInt(n[a])) return -1;
return n.length > i.length ? -1 : 0;
},
verifyCallback: function(e, t) {
var n = t.compressed, a = (t.md5, t.path), o = t.size;
o > 102400 && AppLog.warn("[download file] : " + a + " size:" + o);
if (n) {
AppLog.log("Verification passed : " + a);
return !0;
}
if (Global.APPID.TestCashHero == Global.appId) return !0;
if (".manifest" == cc.path.extname(a)) return !0;
var c = jsb.fileUtils.getWritablePath() + "remote-asset_temp/" + a;
return !!jsb.fileUtils.isFileExist(c) && i(jsb.fileUtils.getDataFromFile(c)) === t.md5;
},
checktNewPackUrl: function(e) {
if (e) {
if (!this._newPackUrl || Global.packageUrl == this._newPackUrl) {
AppLog.warn("不用替换热更地址");
return e;
}
if (cc.js.isString(e)) e = e.replace(new RegExp(Global.packageUrl, "g"), this._newPackUrl); else {
e.packageUrl && (e.packageUrl = e.packageUrl.replace(Global.packageUrl, this._newPackUrl));
e.remoteVersionUrl && (e.remoteVersionUrl = e.remoteVersionUrl.replace(Global.packageUrl, this._newPackUrl));
e.remoteManifestUrl && (e.remoteManifestUrl = e.remoteManifestUrl.replace(Global.packageUrl, this._newPackUrl));
}
}
return e;
},
deleteSubgameDir: function() {
if (Global.isNative()) {
var e = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "/") + "remote-asset/";
if (jsb.fileUtils.isDirectoryExist(e)) {
jsb.fileUtils.removeDirectory(e);
AppLog.warn("[删除热更缓存]");
}
}
}
});
cc._RF.pop();
}, {
"../../script/global/Md5": "Md5"
} ],
i18SpriteButton: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bec54SLjm5EIZDnfMMxs5G5", "i18SpriteButton");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.i18SpriteButton = void 0;
var n = e("./i18nManager"), a = e("./i18nSprite"), o = cc._decorator, c = o.ccclass, s = o.property, r = o.requireComponent, l = o.menu, d = o.disallowMultiple, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.normalSpriteFrameSets = [];
t.pressedSpriteFrameSets = [];
t.hoverSpriteFrameSets = [];
t.disabledSpriteFrameSets = [];
t.button = null;
return t;
}
t.prototype.onLoad = function() {
n.i18nManager.register(this);
this.button = this.node.getComponent(cc.Button);
this.updateView();
};
t.prototype.onDestroy = function() {
n.i18nManager.unregister(this);
this.normalSpriteFrameSets = null;
this.pressedSpriteFrameSets = null;
this.hoverSpriteFrameSets = null;
this.disabledSpriteFrameSets = null;
this.button = null;
};
t.prototype.onEnable = function() {
this.updateView();
};
t.prototype.updateView = function() {
var e = this;
if (this.button && this.button.transition == cc.Button.Transition.SPRITE) {
this.normalSpriteFrameSets && n.i18nManager.getSprite(this.normalSpriteFrameSets, "", function(t) {
cc.isValid(e.button.normalSprite) && t && (e.button.normalSprite = t);
});
this.pressedSpriteFrameSets && n.i18nManager.getSprite(this.pressedSpriteFrameSets, "", function(t) {
cc.isValid(e.button.normalSprite) && t && (e.button.pressedSprite = t);
});
this.hoverSpriteFrameSets && n.i18nManager.getSprite(this.hoverSpriteFrameSets, "", function(t) {
cc.isValid(e.button.normalSprite) && t && (e.button.hoverSprite = t);
});
this.disabledSpriteFrameSets && n.i18nManager.getSprite(this.disabledSpriteFrameSets, "", function(t) {
cc.isValid(e.button.normalSprite) && t && (e.button.disabledSprite = t);
});
}
};
__decorate([ s([ a.i18nSpriteFrameSet ]) ], t.prototype, "normalSpriteFrameSets", void 0);
__decorate([ s([ a.i18nSpriteFrameSet ]) ], t.prototype, "pressedSpriteFrameSets", void 0);
__decorate([ s([ a.i18nSpriteFrameSet ]) ], t.prototype, "hoverSpriteFrameSets", void 0);
__decorate([ s([ a.i18nSpriteFrameSet ]) ], t.prototype, "disabledSpriteFrameSets", void 0);
return __decorate([ c, r(cc.Button), d, l("多语言/i18SpriteButton") ], t);
}(cc.Component);
i.i18SpriteButton = h;
cc._RF.pop();
}, {
"./i18nManager": "i18nManager",
"./i18nSprite": "i18nSprite"
} ],
i18nComEx: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8651e97jtNFQLQi0l9CB3ye", "i18nComEx");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("../_FWExpand/i18n/i18nConst"), a = e("../_FWExpand/i18n/i18nManager"), o = cc._decorator, c = o.ccclass, s = o.property, r = o.menu, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._currLanguage = n.i18nLangEnum.AR;
t.jsonAsset_ar = null;
t.jsonAsset_en = null;
return t;
}
Object.defineProperty(t.prototype, "language", {
set: function(e) {
this._currLanguage = e;
a.i18nManager.setLanguage(this._currLanguage);
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
this.language = n.i18nLangEnum.EN;
};
t.prototype.onDestroy = function() {};
__decorate([ s({
visible: !1
}) ], t.prototype, "_currLanguage", void 0);
__decorate([ s({
type: cc.JsonAsset,
displayName: "预加载Json"
}) ], t.prototype, "jsonAsset_ar", void 0);
__decorate([ s({
type: cc.JsonAsset,
displayName: "预加载Json"
}) ], t.prototype, "jsonAsset_en", void 0);
return __decorate([ c, r("多语言/i18nCom") ], t);
}(cc.Component);
i.default = l;
cc._RF.pop();
}, {
"../_FWExpand/i18n/i18nConst": "i18nConst",
"../_FWExpand/i18n/i18nManager": "i18nManager"
} ],
i18nCom: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "39880fqDlNNGLVJAY0UaFeD", "i18nCom");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./i18nConst"), a = e("./i18nManager"), o = cc._decorator, c = o.ccclass, s = o.property, r = o.menu, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._currLanguage = n.i18nLangEnum.AR;
t.jsonAsset_ar = null;
t.jsonAsset_en = null;
return t;
}
Object.defineProperty(t.prototype, "language", {
set: function(e) {
this._currLanguage = e;
a.i18nManager.setLanguage(this._currLanguage);
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
var e = a.i18nManager.getLanguage();
e ? this.language = e : [ "en", "en-au", "en-bz", "en-ca", "en-gb", "en-ie", "en-jm", "en-nz", "en-ph", "en-tt", "en-us", "en-za", "en-zw" ].indexOf(cc.sys.languageCode) >= 0 ? this.language = n.i18nLangEnum.EN : this.language = n.i18nLangEnum.AR;
};
t.prototype.onDestroy = function() {};
__decorate([ s({
visible: !1
}) ], t.prototype, "_currLanguage", void 0);
__decorate([ s({
type: cc.JsonAsset,
displayName: "预加载Json"
}) ], t.prototype, "jsonAsset_ar", void 0);
__decorate([ s({
type: cc.JsonAsset,
displayName: "预加载Json"
}) ], t.prototype, "jsonAsset_en", void 0);
return __decorate([ c, r("多语言/i18nCom") ], t);
}(cc.Component);
i.default = l;
cc._RF.pop();
}, {
"./i18nConst": "i18nConst",
"./i18nManager": "i18nManager"
} ],
i18nConst: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8a126GgQqxCsZy5aCbbynTu", "i18nConst");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.i18nLanguage = i.i18nLangEnum = void 0;
var n;
(function(e) {
e[e.AR = 1] = "AR";
e[e.EN = 2] = "EN";
})(n = i.i18nLangEnum || (i.i18nLangEnum = {}));
i.i18nLanguage = {
AR: {
enum: n.AR,
name: "عربي",
lang: "ar",
unit: "AED",
id: 1
},
EN: {
enum: n.EN,
name: "English",
lang: "en",
unit: "$",
id: 2
}
};
cc._RF.pop();
}, {} ],
i18nLabel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "aaffabCRcpLyqXd9ReiHVw6", "i18nLabel");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.i18nLabel = void 0;
var n = e("./i18nManager"), a = cc._decorator, o = a.ccclass, c = a.property, s = a.executeInEditMode, r = a.disallowMultiple, l = a.requireComponent, d = a.menu, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._srcKey = "";
return t;
}
t.prototype.onLoad = function() {
n.i18nManager.register(this);
this._srcKey || (this._srcKey = this.getComponent(cc.Label).string);
this.updateView();
};
Object.defineProperty(t.prototype, "string", {
get: function() {
return this._srcKey;
},
set: function(e) {
this._srcKey = e;
var t = this.getComponent(cc.Label);
!Global.noI18n && cc.isValid(t) && (t.string = n.i18nManager.getLabel(e));
},
enumerable: !1,
configurable: !0
});
t.prototype.updateView = function() {
this.string = this._srcKey;
};
t.prototype.onDestroy = function() {
n.i18nManager.unregister(this);
};
__decorate([ c({
visible: !1
}) ], t.prototype, "_srcKey", void 0);
__decorate([ c({
type: cc.String,
multiline: !0
}) ], t.prototype, "string", null);
return __decorate([ o, s, l(cc.Label), r, d("多语言/i18nLabel") ], t);
}(cc.Component);
i.i18nLabel = h;
cc._RF.pop();
}, {
"./i18nManager": "i18nManager"
} ],
i18nManager: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8a7cdJoktdBhYGdfdYuspyH", "i18nManager");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.i18nManager = void 0;
var n = e("./i18nLabel"), a = e("./i18nSprite"), o = e("./i18nConst"), c = e("./i18nTransform"), s = e("./i18nRichLabel"), r = e("./i18SpriteButton"), l = function() {
function e() {}
e.setLanguage = function(e) {
if (this.lang !== e) {
this.lang = e;
cc.sys.localStorage.setItem("i18n_lang", this.lang);
this.reloadAll();
}
};
e.getLanguage = function(e) {
var t = cc.sys.localStorage.getItem("i18n_lang");
null != t && null != t || (t = e);
return t;
};
e.getLanguageConfig = function(e) {
var t = null;
for (var i in o.i18nLanguage) if (e == o.i18nLanguage[i].enum) {
t = o.i18nLanguage[i];
break;
}
return t;
};
e.getConfig = function() {
return this.getLanguageConfig(this.getLanguage(o.i18nLangEnum.AR));
};
e.getLabel = function() {
for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
if (!e) return "";
var i, n = e[0], a = this._langCache[this.lang] || {};
i = a[n];
!Global.noI18n && i || (i = n);
for (var o = 1; o < e.length; o++) i = i.replace("{" + o + "}", e[o]);
return i;
};
e.getSprite = function(e, t, i) {
if (e instanceof cc.SpriteAtlas) {
var n = e, a = n.getSpriteFrame((1 == this.lang ? "ar" : "en") + "_" + t);
a || (a = n.getSpriteFrame(this.lang + "-" + t));
i(a);
} else {
for (var o = void 0, c = 0, s = e; c < s.length; c++) {
var r = s[c];
if (r.language == this.lang) {
o = r.spriteFrame;
break;
}
}
i(o);
}
};
e.getString = function() {
for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
var i = "";
this.getLanguage() == o.i18nLangEnum.AR && (e = e.reverse());
for (var n = 0, a = e; n < a.length; n++) {
var c = a[n];
i += c;
}
return i;
};
e.register = function(e) {
this.cmpList.indexOf(e) < 0 && this.cmpList.push(e);
};
e.unregister = function(e) {
var t = this.cmpList.indexOf(e);
t >= 0 && this.cmpList.splice(t, 1);
};
e.reloadAll = function() {
var e = this, t = "i18n/" + this.getLanguageConfig(this.lang).lang;
cc.loader.loadRes(t, cc.JsonAsset, function(t, i) {
if (t) {
e._langCache[e.lang] = null;
cc.error(t);
} else {
e._langCache[e.lang] = i.json;
for (var a = 0, o = e.cmpList; a < o.length; a++) {
var c = o[a], r = c.node.getComponent(n.i18nLabel);
r && r.updateView();
var l = c.node.getComponent(s.i18nRichLabel);
l && l.updateView();
}
}
});
for (var i = 0, o = this.cmpList; i < o.length; i++) {
var l = o[i], d = l.node.getComponent(a.i18nSprite);
d && d.updateView();
var h = l.node.getComponent(c.default);
h && h.updateView();
var _ = l.node.getComponent(r.i18SpriteButton);
_ && _.updateView();
}
};
e._langCache = {};
e.cmpList = [];
return e;
}();
i.i18nManager = l;
window.___ || (window.___ = function() {
return l.getLabel.apply(l, arguments);
});
window.__ || (window.__ = function() {
return l.getString.apply(l, arguments);
});
cc._RF.pop();
}, {
"./i18SpriteButton": "i18SpriteButton",
"./i18nConst": "i18nConst",
"./i18nLabel": "i18nLabel",
"./i18nRichLabel": "i18nRichLabel",
"./i18nSprite": "i18nSprite",
"./i18nTransform": "i18nTransform"
} ],
i18nRichLabel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3b338uHvFVCqKa0O4Pofi7u", "i18nRichLabel");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.i18nRichLabel = void 0;
var n = e("./i18nManager"), a = cc._decorator, o = a.ccclass, c = a.property, s = a.executeInEditMode, r = a.disallowMultiple, l = a.requireComponent, d = a.menu, h = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._srcKey = "";
return t;
}
t.prototype.onLoad = function() {
n.i18nManager.register(this);
this._srcKey || (this._srcKey = this.getComponent(cc.RichText).string);
this.updateView();
};
Object.defineProperty(t.prototype, "string", {
get: function() {
return this._srcKey;
},
set: function(e) {
this._srcKey = e;
var t = this.getComponent(cc.RichText);
!Global.noI18n && cc.isValid(t) && (t.string = n.i18nManager.getLabel(e));
},
enumerable: !1,
configurable: !0
});
t.prototype.updateView = function() {
this.string = this._srcKey;
};
t.prototype.onDestroy = function() {
n.i18nManager.unregister(this);
};
__decorate([ c({
visible: !1
}) ], t.prototype, "_srcKey", void 0);
__decorate([ c({
type: cc.String,
multiline: !0
}) ], t.prototype, "string", null);
return __decorate([ o, s, l(cc.RichText), r, d("多语言/i18nRichLabel") ], t);
}(cc.Component);
i.i18nRichLabel = h;
cc._RF.pop();
}, {
"./i18nManager": "i18nManager"
} ],
i18nSkeleton: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2eae9mCvNhFM4KugfjjLJif", "i18nSkeleton");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.i18nSkeleton = void 0;
var n = e("./i18nManager"), a = cc._decorator, o = a.ccclass, c = (a.property, a.executeInEditMode), s = a.disallowMultiple, r = a.requireComponent, l = a.menu, d = function(e) {
__extends(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.onLoad = function() {
n.i18nManager.register(this);
this.ske = this.getComponent(sp.Skeleton);
this.updateView();
};
t.prototype.onDestroy = function() {
n.i18nManager.unregister(this);
};
t.prototype.updateView = function() {
var e = n.i18nManager.getConfig().lang, t = e[0].toUpperCase() + e.substr(1);
this.ske && cc.isValid(this.ske) && this.ske.setSkin(t);
};
return __decorate([ o, c, r(sp.Skeleton), s, l("多语言/i18nSkeleton") ], t);
}(cc.Component);
i.i18nSkeleton = d;
cc._RF.pop();
}, {
"./i18nManager": "i18nManager"
} ],
i18nSprite: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "eee09lib2VGWrBz2mqKLjhc", "i18nSprite");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.i18nSprite = i.i18nSpriteFrameSet = void 0;
var n, a = e("./i18nConst"), o = e("./i18nManager"), c = cc._decorator, s = c.ccclass, r = c.property, l = c.executeInEditMode, d = c.disallowMultiple, h = c.requireComponent, _ = c.menu;
(function(e) {
e[e.Texture = 0] = "Texture";
e[e.Atlas = 1] = "Atlas";
})(n || (n = {}));
var p = function() {
function e() {
this.language = a.i18nLangEnum.AR;
this.spriteFrame = null;
}
__decorate([ r({
type: cc.Enum(a.i18nLangEnum),
displayName: "语言"
}) ], e.prototype, "language", void 0);
__decorate([ r(cc.SpriteFrame) ], e.prototype, "spriteFrame", void 0);
return __decorate([ s("i18nSpriteFrameSet") ], e);
}();
i.i18nSpriteFrameSet = p;
var u = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.spriteType = n.Texture;
t.spriteFrameSets = [];
t.atlas = null;
t._frameName = "";
return t;
}
Object.defineProperty(t.prototype, "frameName", {
get: function() {
return this._frameName || "";
},
set: function(e) {
this._frameName = e;
this._updateSpriteFrame();
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
o.i18nManager.register(this);
this.updateView();
};
t.prototype._updateSpriteFrame = function() {
var e = this.getComponent(cc.Sprite);
if (cc.isValid(e)) {
var t;
switch (this.spriteType) {
case n.Texture:
t = this.spriteFrameSets;
o.i18nManager.getSprite(t, this.frameName, function(t) {
cc.isValid(e) && t && (e.spriteFrame = t);
});
break;

default:
if (!this.atlas || 0 === this.frameName.length) return;
o.i18nManager.getSprite(this.atlas, this.frameName, function(t) {
cc.isValid(e) && t && (e.spriteFrame = t);
});
}
}
};
t.prototype.updateView = function() {
this.frameName = this._frameName;
};
t.prototype.onDestroy = function() {
o.i18nManager.unregister(this);
};
__decorate([ r({
type: cc.Enum(n)
}) ], t.prototype, "spriteType", void 0);
__decorate([ r({
type: p,
visible: function() {
return this.spriteType == n.Texture;
}
}) ], t.prototype, "spriteFrameSets", void 0);
__decorate([ r({
type: cc.SpriteAtlas,
visible: function() {
return this.spriteType == n.Atlas;
}
}) ], t.prototype, "atlas", void 0);
__decorate([ r ], t.prototype, "_frameName", void 0);
__decorate([ r({
type: cc.String,
visible: function() {
return this.spriteType == n.Atlas;
}
}) ], t.prototype, "frameName", null);
return __decorate([ s, l, h(cc.Sprite), d, _("多语言/i18nSprite") ], t);
}(cc.Component);
i.i18nSprite = u;
cc._RF.pop();
}, {
"./i18nConst": "i18nConst",
"./i18nManager": "i18nManager"
} ],
i18nTransform: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "74257ExVoNP55p2xntkzECe", "i18nTransform");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./i18nConst"), a = e("./i18nManager"), o = cc._decorator, c = o.ccclass, s = o.property, r = o.menu, l = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.scaleX = !1;
t.angle = !1;
t.auto = !0;
t.L2R = !1;
t.posX = !1;
t.anchorX = !1;
t.labelAlign = !1;
t.layoutDir = !1;
t.widgetAlgin = !1;
t.editBoxAlign = !1;
t.listDir = !1;
t.progressReverse = !1;
t.richTextlAlign = !1;
return t;
}
t.prototype.onLoad = function() {
a.i18nManager.register(this);
this.label = this.getComponent(cc.Label);
this.layout = this.getComponent(cc.Layout);
this.widget = this.getComponent(cc.Widget);
this.editBox = this.getComponent(cc.EditBox);
this.list = this.getComponent("List");
this.progress = this.getComponent(cc.ProgressBar);
this.richText = this.getComponent(cc.RichText);
this.tempPosX = this.node.x;
this.tempAnchorX = this.node.anchorX;
this.tempScaleX = this.node.scaleX;
this.tempAngle = this.node.angle;
(this.labelAlign || this.auto) && this.label && (this.labelHorizontalAlign = this.label.horizontalAlign);
(this.layoutDir || this.auto) && this.layout && (this.layoutHorizontalDirection = this.layout.horizontalDirection);
if ((this.widgetAlgin || this.auto) && this.widget) {
this.widgetIsAlignLeft = this.widget.isAlignLeft;
this.widgetIsAlignRight = this.widget.isAlignRight;
this.widgetLeft = this.widget.left;
this.widgetRight = this.widget.right;
}
if ((this.editBoxAlign || this.auto) && this.editBox) {
this.editBox_horizontalAlign = this.editBox.textLabel.horizontalAlign;
this.editBox_horizontalAlignPlaceholder = this.editBox.placeholderLabel.horizontalAlign;
}
(this.listDir || this.auto) && this.list && (this.listHorizontalDirection = this.list._layout.horizontalDirection);
(this.progressReverse || this.auto) && this.progress && (this.tempProgressReverse = this.progress.reverse);
(this.richTextlAlign || this.auto) && this.richText && (this.tempRichHorizontalAlign = this.richText.horizontalAlign);
this.updateView();
};
t.prototype.onDestroy = function() {
a.i18nManager.unregister(this);
};
t.prototype.updateView = function() {
var e = a.i18nManager.getLanguage(), t = e == n.i18nLangEnum.AR;
this.L2R && (t = e == n.i18nLangEnum.EN);
if (t) {
this.scaleX && (this.node.scaleX = this.tempScaleX);
this.angle && (this.node.angle = this.tempAngle);
(this.posX || this.auto) && (this.node.x = this.tempPosX);
(this.anchorX || this.auto) && (this.node.anchorX = this.tempAnchorX);
(this.labelAlign || this.auto) && this.label && (this.label.horizontalAlign = this.labelHorizontalAlign);
(this.layoutDir || this.auto) && this.layout && (this.layout.horizontalDirection = this.layoutHorizontalDirection);
if ((this.widgetAlgin || this.auto) && this.widget) {
this.widget.isAlignLeft = this.widgetIsAlignLeft;
this.widget.isAlignRight = this.widgetIsAlignRight;
this.widget.left = this.widgetLeft;
this.widget.right = this.widgetRight;
}
if ((this.editBoxAlign || this.auto) && this.editBox) {
this.editBox.textLabel.horizontalAlign = this.editBox_horizontalAlign;
this.editBox.placeholderLabel.horizontalAlign = this.editBox_horizontalAlignPlaceholder;
}
(this.listDir || this.auto) && this.list && (this.list._layout.horizontalDirection = this.listHorizontalDirection);
(this.progressReverse || this.auto) && this.progress && (this.progress.reverse = this.tempProgressReverse);
(this.richTextlAlign || this.auto) && this.richText && (this.richText.horizontalAlign = this.tempRichHorizontalAlign);
} else {
this.scaleX && (this.node.scaleX = -this.tempScaleX);
this.angle && (this.node.angle = -this.tempAngle);
(this.posX || this.auto) && (this.node.x = -this.tempPosX);
(this.anchorX || this.auto) && (this.node.anchorX = 1 - this.tempAnchorX);
(this.labelAlign || this.auto) && this.label && (this.label.horizontalAlign = this.getFlipLabelAlign(this.labelHorizontalAlign));
(this.layoutDir || this.auto) && this.layout && (this.layout.horizontalDirection = this.getFlipLayoutDir(this.layoutHorizontalDirection));
if ((this.widgetAlgin || this.auto) && this.widget) {
this.widget.isAlignLeft = this.widgetIsAlignRight;
this.widget.isAlignRight = this.widgetIsAlignLeft;
this.widget.left = this.widgetRight;
this.widget.right = this.widgetLeft;
}
if ((this.editBoxAlign || this.auto) && this.editBox) {
this.editBox.textLabel.horizontalAlign = this.getFlipLabelAlign(this.editBox_horizontalAlign);
this.editBox.placeholderLabel.horizontalAlign = this.getFlipLabelAlign(this.editBox_horizontalAlignPlaceholder);
}
(this.listDir || this.auto) && this.list && (this.list._layout.horizontalDirection = this.getFlipLayoutDir(this.listHorizontalDirection));
(this.progressReverse || this.auto) && this.progress && (this.progress.reverse = !this.tempProgressReverse);
(this.richTextlAlign || this.auto) && this.richText && (this.richText.horizontalAlign = this.getFlipRichTextAlign(this.richText.horizontalAlign));
}
};
t.prototype.getFlipLabelAlign = function(e) {
return e == cc.Label.HorizontalAlign.LEFT ? cc.Label.HorizontalAlign.RIGHT : e == cc.Label.HorizontalAlign.RIGHT ? cc.Label.HorizontalAlign.LEFT : e;
};
t.prototype.getFlipRichTextAlign = function(e) {
return e == cc.macro.TextAlignment.LEFT ? cc.macro.TextAlignment.RIGHT : e == cc.macro.TextAlignment.RIGHT ? cc.macro.TextAlignment.LEFT : e;
};
t.prototype.getFlipLayoutDir = function(e) {
return e == cc.Layout.HorizontalDirection.LEFT_TO_RIGHT ? cc.Layout.HorizontalDirection.RIGHT_TO_LEFT : cc.Layout.HorizontalDirection.LEFT_TO_RIGHT;
};
__decorate([ s ], t.prototype, "scaleX", void 0);
__decorate([ s ], t.prototype, "angle", void 0);
__decorate([ s ], t.prototype, "auto", void 0);
__decorate([ s ], t.prototype, "L2R", void 0);
__decorate([ s({
visible: function() {
return !this.auto;
}
}) ], t.prototype, "posX", void 0);
__decorate([ s({
visible: function() {
return !this.auto;
}
}) ], t.prototype, "anchorX", void 0);
__decorate([ s({
visible: function() {
return !this.auto;
}
}) ], t.prototype, "labelAlign", void 0);
__decorate([ s({
visible: function() {
return !this.auto;
}
}) ], t.prototype, "layoutDir", void 0);
__decorate([ s({
visible: function() {
return !this.auto;
}
}) ], t.prototype, "widgetAlgin", void 0);
__decorate([ s({
visible: function() {
return !this.auto;
}
}) ], t.prototype, "editBoxAlign", void 0);
__decorate([ s({
visible: function() {
return !this.auto;
}
}) ], t.prototype, "listDir", void 0);
__decorate([ s({
visible: function() {
return !this.auto;
}
}) ], t.prototype, "progressReverse", void 0);
__decorate([ s({
visible: function() {
return !this.auto;
}
}) ], t.prototype, "richTextlAlign", void 0);
return __decorate([ c, r("多语言/i18nTransform") ], t);
}(cc.Component);
i.default = l;
cc._RF.pop();
}, {
"./i18nConst": "i18nConst",
"./i18nManager": "i18nManager"
} ],
"msgpack.min": [ function(e, t, i) {
(function(n) {
"use strict";
cc._RF.push(t, "f576cRIh65PKbdy/zzZGZ+u", "msgpack.min");
!function(e) {
"object" == typeof i && "undefined" != typeof t ? t.exports = e() : "function" == typeof define && define.amd ? define([], e) : ("undefined" != typeof window ? window : "undefined" != typeof n ? n : "undefined" != typeof self ? self : this).msgpack = e();
}(function() {
return function t(i, n, a) {
function o(s, r) {
if (!n[s]) {
if (!i[s]) {
var l = "function" == typeof e && e;
if (!r && l) return l(s, !0);
if (c) return c(s, !0);
var d = new Error("Cannot find module '" + s + "'");
throw d.code = "MODULE_NOT_FOUND", d;
}
var h = n[s] = {
exports: {}
};
i[s][0].call(h.exports, function(e) {
return o(i[s][1][e] || e);
}, h, h.exports, t, i, n, a);
}
return n[s].exports;
}
for (var c = "function" == typeof e && e, s = 0; s < a.length; s++) o(a[s]);
return o;
}({
1: [ function(e, t, i) {
i.encode = e("./encode").encode, i.decode = e("./decode").decode, i.Encoder = e("./encoder").Encoder, 
i.Decoder = e("./decoder").Decoder, i.createCodec = e("./ext").createCodec, i.codec = e("./codec").codec;
}, {
"./codec": 10,
"./decode": 12,
"./decoder": 13,
"./encode": 15,
"./encoder": 16,
"./ext": 20
} ],
2: [ function(e, t) {
(function(e) {
function i(e) {
return e && e.isBuffer && e;
}
t.exports = i("undefined" != typeof e && e) || i(this.Buffer) || i("undefined" != typeof window && window.Buffer) || this.Buffer;
}).call(this, e("buffer").Buffer);
}, {
buffer: 29
} ],
3: [ function(e, t, i) {
i.copy = function(e, t, i, n) {
var a;
i || (i = 0), n || 0 === n || (n = this.length), t || (t = 0);
var o = n - i;
if (e === this && i < t && t < n) for (a = o - 1; a >= 0; a--) e[a + t] = this[a + i]; else for (a = 0; a < o; a++) e[a + t] = this[a + i];
return o;
}, i.toString = function(e, t, i) {
var n = this, a = 0 | t;
i || (i = n.length);
for (var o = "", c = 0; a < i; ) (c = n[a++]) < 128 ? o += String.fromCharCode(c) : (192 == (224 & c) ? c = (31 & c) << 6 | 63 & n[a++] : 224 == (240 & c) ? c = (15 & c) << 12 | (63 & n[a++]) << 6 | 63 & n[a++] : 240 == (248 & c) && (c = (7 & c) << 18 | (63 & n[a++]) << 12 | (63 & n[a++]) << 6 | 63 & n[a++]), 
c >= 65536 ? (c -= 65536, o += String.fromCharCode(55296 + (c >>> 10), 56320 + (1023 & c))) : o += String.fromCharCode(c));
return o;
}, i.write = function(e, t) {
for (var i = this, n = t || (t |= 0), a = e.length, o = 0, c = 0; c < a; ) (o = e.charCodeAt(c++)) < 128 ? i[n++] = o : o < 2048 ? (i[n++] = 192 | o >>> 6, 
i[n++] = 128 | 63 & o) : o < 55296 || o > 57343 ? (i[n++] = 224 | o >>> 12, i[n++] = 128 | o >>> 6 & 63, 
i[n++] = 128 | 63 & o) : (o = 65536 + (o - 55296 << 10 | e.charCodeAt(c++) - 56320), 
i[n++] = 240 | o >>> 18, i[n++] = 128 | o >>> 12 & 63, i[n++] = 128 | o >>> 6 & 63, 
i[n++] = 128 | 63 & o);
return n - t;
};
}, {} ],
4: [ function(e, t, i) {
function n(e) {
return new Array(e);
}
var a = e("./bufferish");
(i = t.exports = n(0)).alloc = n, i.concat = a.concat, i.from = function(e) {
if (!a.isBuffer(e) && a.isView(e)) e = a.Uint8Array.from(e); else if (a.isArrayBuffer(e)) e = new Uint8Array(e); else {
if ("string" == typeof e) return a.from.call(i, e);
if ("number" == typeof e) throw new TypeError('"value" argument must not be a number');
}
return Array.prototype.slice.call(e);
};
}, {
"./bufferish": 8
} ],
5: [ function(e, t, i) {
function n(e) {
return new o(e);
}
var a = e("./bufferish"), o = a.global;
(i = t.exports = a.hasBuffer ? n(0) : []).alloc = a.hasBuffer && o.alloc || n, i.concat = a.concat, 
i.from = function(e) {
if (!a.isBuffer(e) && a.isView(e)) e = a.Uint8Array.from(e); else if (a.isArrayBuffer(e)) e = new Uint8Array(e); else {
if ("string" == typeof e) return a.from.call(i, e);
if ("number" == typeof e) throw new TypeError('"value" argument must not be a number');
}
return o.from && 1 !== o.from.length ? o.from(e) : new o(e);
};
}, {
"./bufferish": 8
} ],
6: [ function(e, t, i) {
function n(e, t, i, n) {
var s = c.isBuffer(this), r = c.isBuffer(e);
if (s && r) return this.copy(e, t, i, n);
if (l || s || r || !c.isView(this) || !c.isView(e)) return o.copy.call(this, e, t, i, n);
var d = i || null != n ? a.call(this, i, n) : this;
return e.set(d, t), d.length;
}
function a(e, t) {
var i = this.slice || !l && this.subarray;
if (i) return i.call(this, e, t);
var a = c.alloc.call(this, t - e);
return n.call(this, a, 0, e, t), a;
}
var o = e("./buffer-lite");
i.copy = n, i.slice = a, i.toString = function(e, t, i) {
return (!r && c.isBuffer(this) ? this.toString : o.toString).apply(this, arguments);
}, i.write = function(e) {
return function() {
return (this[e] || o[e]).apply(this, arguments);
};
}("write");
var c = e("./bufferish"), s = c.global, r = c.hasBuffer && "TYPED_ARRAY_SUPPORT" in s, l = r && !s.TYPED_ARRAY_SUPPORT;
}, {
"./buffer-lite": 3,
"./bufferish": 8
} ],
7: [ function(e, t, i) {
function n(e) {
return new Uint8Array(e);
}
var a = e("./bufferish");
(i = t.exports = a.hasArrayBuffer ? n(0) : []).alloc = n, i.concat = a.concat, i.from = function(e) {
if (a.isView(e)) {
var t = e.byteOffset, n = e.byteLength;
(e = e.buffer).byteLength !== n && (e.slice ? e = e.slice(t, t + n) : (e = new Uint8Array(e)).byteLength !== n && (e = Array.prototype.slice.call(e, t, t + n)));
} else {
if ("string" == typeof e) return a.from.call(i, e);
if ("number" == typeof e) throw new TypeError('"value" argument must not be a number');
}
return new Uint8Array(e);
};
}, {
"./bufferish": 8
} ],
8: [ function(e, t, i) {
function n(e) {
return o(this).alloc(e);
}
function a(e) {
var t = 3 * e.length, i = n.call(this, t), a = m.write.call(i, e);
return t !== a && (i = m.slice.call(i, 0, a)), i;
}
function o(e) {
return _(e) ? f : p(e) ? g : h(e) ? u : l ? f : d ? g : u;
}
function c() {
return !1;
}
function s(e, t) {
return e = "[object " + e + "]", function(i) {
return null != i && {}.toString.call(t ? i[t] : i) === e;
};
}
var r = i.global = e("./buffer-global"), l = i.hasBuffer = r && !!r.isBuffer, d = i.hasArrayBuffer = "undefined" != typeof ArrayBuffer, h = i.isArray = e("isarray");
i.isArrayBuffer = d ? function(e) {
return e instanceof ArrayBuffer || v(e);
} : c;
var _ = i.isBuffer = l ? r.isBuffer : c, p = i.isView = d ? ArrayBuffer.isView || s("ArrayBuffer", "buffer") : c;
i.alloc = n, i.concat = function(e, t) {
t || (t = 0, Array.prototype.forEach.call(e, function(e) {
t += e.length;
}));
var a = this !== i && this || e[0], o = n.call(a, t), c = 0;
return Array.prototype.forEach.call(e, function(e) {
c += m.copy.call(e, o, c);
}), o;
}, i.from = function(e) {
return "string" == typeof e ? a.call(this, e) : o(this).from(e);
};
var u = i.Array = e("./bufferish-array"), f = i.Buffer = e("./bufferish-buffer"), g = i.Uint8Array = e("./bufferish-uint8array"), m = i.prototype = e("./bufferish-proto"), v = s("ArrayBuffer");
}, {
"./buffer-global": 2,
"./bufferish-array": 4,
"./bufferish-buffer": 5,
"./bufferish-proto": 6,
"./bufferish-uint8array": 7,
isarray: 34
} ],
9: [ function(e, t, i) {
function n(e) {
return this instanceof n ? (this.options = e, void this.init()) : new n(e);
}
function a(e, t) {
return e && t ? function() {
return e.apply(this, arguments), t.apply(this, arguments);
} : e || t;
}
function o(e) {
function t(e, t) {
return t(e);
}
return e = e.slice(), function(i) {
return e.reduce(t, i);
};
}
function c(e) {
return new n(e);
}
var s = e("isarray");
i.createCodec = c, i.install = function(e) {
for (var t in e) n.prototype[t] = a(n.prototype[t], e[t]);
}, i.filter = function(e) {
return s(e) ? o(e) : e;
};
var r = e("./bufferish");
n.prototype.init = function() {
var e = this.options;
return e && e.uint8array && (this.bufferish = r.Uint8Array), this;
}, i.preset = c({
preset: !0
});
}, {
"./bufferish": 8,
isarray: 34
} ],
10: [ function(e, t, i) {
e("./read-core"), e("./write-core"), i.codec = {
preset: e("./codec-base").preset
};
}, {
"./codec-base": 9,
"./read-core": 22,
"./write-core": 25
} ],
11: [ function(e, t, i) {
function n(e) {
if (!(this instanceof n)) return new n(e);
if (e && (this.options = e, e.codec)) {
var t = this.codec = e.codec;
t.bufferish && (this.bufferish = t.bufferish);
}
}
i.DecodeBuffer = n;
var a = e("./read-core").preset;
e("./flex-buffer").FlexDecoder.mixin(n.prototype), n.prototype.codec = a, n.prototype.fetch = function() {
return this.codec.decode(this);
};
}, {
"./flex-buffer": 21,
"./read-core": 22
} ],
12: [ function(e, t, i) {
i.decode = function(e, t) {
var i = new n(t);
return i.write(e), i.read();
};
var n = e("./decode-buffer").DecodeBuffer;
}, {
"./decode-buffer": 11
} ],
13: [ function(e, t, i) {
function n(e) {
return this instanceof n ? void o.call(this, e) : new n(e);
}
i.Decoder = n;
var a = e("event-lite"), o = e("./decode-buffer").DecodeBuffer;
n.prototype = new o(), a.mixin(n.prototype), n.prototype.decode = function(e) {
arguments.length && this.write(e), this.flush();
}, n.prototype.push = function(e) {
this.emit("data", e);
}, n.prototype.end = function(e) {
this.decode(e), this.emit("end");
};
}, {
"./decode-buffer": 11,
"event-lite": 31
} ],
14: [ function(e, t, i) {
function n(e) {
if (!(this instanceof n)) return new n(e);
if (e && (this.options = e, e.codec)) {
var t = this.codec = e.codec;
t.bufferish && (this.bufferish = t.bufferish);
}
}
i.EncodeBuffer = n;
var a = e("./write-core").preset;
e("./flex-buffer").FlexEncoder.mixin(n.prototype), n.prototype.codec = a, n.prototype.write = function(e) {
this.codec.encode(this, e);
};
}, {
"./flex-buffer": 21,
"./write-core": 25
} ],
15: [ function(e, t, i) {
i.encode = function(e, t) {
var i = new n(t);
return i.write(e), i.read();
};
var n = e("./encode-buffer").EncodeBuffer;
}, {
"./encode-buffer": 14
} ],
16: [ function(e, t, i) {
function n(e) {
return this instanceof n ? void o.call(this, e) : new n(e);
}
i.Encoder = n;
var a = e("event-lite"), o = e("./encode-buffer").EncodeBuffer;
n.prototype = new o(), a.mixin(n.prototype), n.prototype.encode = function(e) {
this.write(e), this.emit("data", this.read());
}, n.prototype.end = function(e) {
arguments.length && this.encode(e), this.flush(), this.emit("end");
};
}, {
"./encode-buffer": 14,
"event-lite": 31
} ],
17: [ function(e, t, i) {
i.ExtBuffer = function e(t, i) {
return this instanceof e ? (this.buffer = n.from(t), void (this.type = i)) : new e(t, i);
};
var n = e("./bufferish");
}, {
"./bufferish": 8
} ],
18: [ function(e, t, i) {
function n(t) {
return s || (s = e("./encode").encode), s(t);
}
function a(e) {
return e.valueOf();
}
function o(e) {
(e = RegExp.prototype.toString.call(e).split("/")).shift();
var t = [ e.pop() ];
return t.unshift(e.join("/")), t;
}
function c(e) {
var t = {};
for (var i in h) t[i] = e[i];
return t;
}
i.setExtPackers = function(e) {
e.addExtPacker(14, Error, [ c, n ]), e.addExtPacker(1, EvalError, [ c, n ]), e.addExtPacker(2, RangeError, [ c, n ]), 
e.addExtPacker(3, ReferenceError, [ c, n ]), e.addExtPacker(4, SyntaxError, [ c, n ]), 
e.addExtPacker(5, TypeError, [ c, n ]), e.addExtPacker(6, URIError, [ c, n ]), e.addExtPacker(10, RegExp, [ o, n ]), 
e.addExtPacker(11, Boolean, [ a, n ]), e.addExtPacker(12, String, [ a, n ]), e.addExtPacker(13, Date, [ Number, n ]), 
e.addExtPacker(15, Number, [ a, n ]), "undefined" != typeof Uint8Array && (e.addExtPacker(17, Int8Array, d), 
e.addExtPacker(18, Uint8Array, d), e.addExtPacker(19, Int16Array, d), e.addExtPacker(20, Uint16Array, d), 
e.addExtPacker(21, Int32Array, d), e.addExtPacker(22, Uint32Array, d), e.addExtPacker(23, Float32Array, d), 
"undefined" != typeof Float64Array && e.addExtPacker(24, Float64Array, d), "undefined" != typeof Uint8ClampedArray && e.addExtPacker(25, Uint8ClampedArray, d), 
e.addExtPacker(26, ArrayBuffer, d), e.addExtPacker(29, DataView, d)), r.hasBuffer && e.addExtPacker(27, l, r.from);
};
var s, r = e("./bufferish"), l = r.global, d = r.Uint8Array.from, h = {
name: 1,
message: 1,
stack: 1,
columnNumber: 1,
fileName: 1,
lineNumber: 1
};
}, {
"./bufferish": 8,
"./encode": 15
} ],
19: [ function(e, t, i) {
function n(t) {
return r || (r = e("./decode").decode), r(t);
}
function a(e) {
return RegExp.apply(null, e);
}
function o(e) {
return function(t) {
var i = new e();
for (var n in h) i[n] = t[n];
return i;
};
}
function c(e) {
return function(t) {
return new e(t);
};
}
function s(e) {
return new Uint8Array(e).buffer;
}
i.setExtUnpackers = function(e) {
e.addExtUnpacker(14, [ n, o(Error) ]), e.addExtUnpacker(1, [ n, o(EvalError) ]), 
e.addExtUnpacker(2, [ n, o(RangeError) ]), e.addExtUnpacker(3, [ n, o(ReferenceError) ]), 
e.addExtUnpacker(4, [ n, o(SyntaxError) ]), e.addExtUnpacker(5, [ n, o(TypeError) ]), 
e.addExtUnpacker(6, [ n, o(URIError) ]), e.addExtUnpacker(10, [ n, a ]), e.addExtUnpacker(11, [ n, c(Boolean) ]), 
e.addExtUnpacker(12, [ n, c(String) ]), e.addExtUnpacker(13, [ n, c(Date) ]), e.addExtUnpacker(15, [ n, c(Number) ]), 
"undefined" != typeof Uint8Array && (e.addExtUnpacker(17, c(Int8Array)), e.addExtUnpacker(18, c(Uint8Array)), 
e.addExtUnpacker(19, [ s, c(Int16Array) ]), e.addExtUnpacker(20, [ s, c(Uint16Array) ]), 
e.addExtUnpacker(21, [ s, c(Int32Array) ]), e.addExtUnpacker(22, [ s, c(Uint32Array) ]), 
e.addExtUnpacker(23, [ s, c(Float32Array) ]), "undefined" != typeof Float64Array && e.addExtUnpacker(24, [ s, c(Float64Array) ]), 
"undefined" != typeof Uint8ClampedArray && e.addExtUnpacker(25, c(Uint8ClampedArray)), 
e.addExtUnpacker(26, s), e.addExtUnpacker(29, [ s, c(DataView) ])), l.hasBuffer && e.addExtUnpacker(27, c(d));
};
var r, l = e("./bufferish"), d = l.global, h = {
name: 1,
message: 1,
stack: 1,
columnNumber: 1,
fileName: 1,
lineNumber: 1
};
}, {
"./bufferish": 8,
"./decode": 12
} ],
20: [ function(e, t, i) {
e("./read-core"), e("./write-core"), i.createCodec = e("./codec-base").createCodec;
}, {
"./codec-base": 9,
"./read-core": 22,
"./write-core": 25
} ],
21: [ function(e, t, i) {
function n() {
if (!(this instanceof n)) return new n();
}
function a() {
if (!(this instanceof a)) return new a();
}
function o() {
return this.buffers && this.buffers.length ? (this.flush(), this.pull()) : this.fetch();
}
function c(e) {
(this.buffers || (this.buffers = [])).push(e);
}
function s(e) {
return function(t) {
for (var i in e) t[i] = e[i];
return t;
};
}
i.FlexDecoder = n, i.FlexEncoder = a;
var r = e("./bufferish"), l = "BUFFER_SHORTAGE";
n.mixin = s({
bufferish: r,
write: function(e) {
var t = this.offset ? r.prototype.slice.call(this.buffer, this.offset) : this.buffer;
this.buffer = t ? e ? this.bufferish.concat([ t, e ]) : t : e, this.offset = 0;
},
fetch: function() {
throw new Error("method not implemented: fetch()");
},
flush: function() {
for (;this.offset < this.buffer.length; ) {
var e, t = this.offset;
try {
e = this.fetch();
} catch (e) {
if (e && e.message != l) throw e;
this.offset = t;
break;
}
this.push(e);
}
},
push: c,
pull: function() {
return (this.buffers || (this.buffers = [])).shift();
},
read: o,
reserve: function(e) {
var t = this.offset, i = t + e;
if (i > this.buffer.length) throw new Error(l);
return this.offset = i, t;
},
offset: 0
}), n.mixin(n.prototype), a.mixin = s({
bufferish: r,
write: function() {
throw new Error("method not implemented: write()");
},
fetch: function() {
var e = this.start;
if (e < this.offset) {
var t = this.start = this.offset;
return r.prototype.slice.call(this.buffer, e, t);
}
},
flush: function() {
for (;this.start < this.offset; ) {
var e = this.fetch();
e && this.push(e);
}
},
push: c,
pull: function() {
var e = this.buffers || (this.buffers = []), t = e.length > 1 ? this.bufferish.concat(e) : e[0];
return e.length = 0, t;
},
read: o,
reserve: function(e) {
var t = 0 | e;
if (this.buffer) {
var i = this.buffer.length, n = 0 | this.offset, a = n + t;
if (a < i) return this.offset = a, n;
this.flush(), e = Math.max(e, Math.min(2 * i, this.maxBufferSize));
}
return e = Math.max(e, this.minBufferSize), this.buffer = this.bufferish.alloc(e), 
this.start = 0, this.offset = t, 0;
},
send: function(e) {
var t = e.length;
if (t > this.minBufferSize) this.flush(), this.push(e); else {
var i = this.reserve(t);
r.prototype.copy.call(e, this.buffer, i);
}
},
maxBufferSize: 65536,
minBufferSize: 2048,
offset: 0,
start: 0
}), a.mixin(a.prototype);
}, {
"./bufferish": 8
} ],
22: [ function(e, t, i) {
function n(e) {
var t = r.getReadToken(e);
return function(e) {
var i = s(e), n = t[i];
if (!n) throw new Error("Invalid type: " + (i ? "0x" + i.toString(16) : i));
return n(e);
};
}
function a() {
var e = this.options;
return this.decode = n(e), e && e.preset && c.setExtUnpackers(this), this;
}
var o = e("./ext-buffer").ExtBuffer, c = e("./ext-unpacker"), s = e("./read-format").readUint8, r = e("./read-token"), l = e("./codec-base");
l.install({
addExtUnpacker: function(e, t) {
(this.extUnpackers || (this.extUnpackers = []))[e] = l.filter(t);
},
getExtUnpacker: function(e) {
return (this.extUnpackers || (this.extUnpackers = []))[e] || function(t) {
return new o(t, e);
};
},
init: a
}), i.preset = a.call(l.preset);
}, {
"./codec-base": 9,
"./ext-buffer": 17,
"./ext-unpacker": 19,
"./read-format": 23,
"./read-token": 24
} ],
23: [ function(e, t, i) {
function n(e, t) {
var i, n = {}, a = new Array(t), o = new Array(t), c = e.codec.decode;
for (i = 0; i < t; i++) a[i] = c(e), o[i] = c(e);
for (i = 0; i < t; i++) n[a[i]] = o[i];
return n;
}
function a(e, t) {
var i, n = new Map(), a = new Array(t), o = new Array(t), c = e.codec.decode;
for (i = 0; i < t; i++) a[i] = c(e), o[i] = c(e);
for (i = 0; i < t; i++) n.set(a[i], o[i]);
return n;
}
function o(e, t) {
for (var i = new Array(t), n = e.codec.decode, a = 0; a < t; a++) i[a] = n(e);
return i;
}
function c(e, t) {
var i = e.reserve(t), n = i + t;
return N.toString.call(e.buffer, "utf-8", i, n);
}
function s(e, t) {
var i = e.reserve(t), n = i + t, a = N.slice.call(e.buffer, i, n);
return A.from(a);
}
function r(e, t) {
var i = e.reserve(t), n = i + t, a = N.slice.call(e.buffer, i, n);
return A.Uint8Array.from(a).buffer;
}
function l(e, t) {
var i = e.reserve(t + 1), n = e.buffer[i++], a = i + t, o = e.codec.getExtUnpacker(n);
if (!o) throw new Error("Invalid ext type: " + (n ? "0x" + n.toString(16) : n));
return o(N.slice.call(e.buffer, i, a));
}
function d(e) {
var t = e.reserve(1);
return e.buffer[t];
}
function h(e) {
var t = e.reserve(1), i = e.buffer[t];
return 128 & i ? i - 256 : i;
}
function _(e) {
var t = e.reserve(2), i = e.buffer;
return i[t++] << 8 | i[t];
}
function p(e) {
var t = e.reserve(2), i = e.buffer, n = i[t++] << 8 | i[t];
return 32768 & n ? n - 65536 : n;
}
function u(e) {
var t = e.reserve(4), i = e.buffer;
return 16777216 * i[t++] + (i[t++] << 16) + (i[t++] << 8) + i[t];
}
function f(e) {
var t = e.reserve(4), i = e.buffer;
return i[t++] << 24 | i[t++] << 16 | i[t++] << 8 | i[t];
}
function g(e, t) {
return function(i) {
var n = i.reserve(e);
return t.call(i.buffer, n, O);
};
}
function m(e) {
return new T(this, e).toNumber();
}
function v(e) {
return new I(this, e).toNumber();
}
function S(e) {
return new T(this, e);
}
function C(e) {
return new I(this, e);
}
function b(e) {
return y.read(this, e, !1, 23, 4);
}
function E(e) {
return y.read(this, e, !1, 52, 8);
}
var y = e("ieee754"), L = e("int64-buffer"), T = L.Uint64BE, I = L.Int64BE;
i.getReadFormat = function(e) {
var t = A.hasArrayBuffer && e && e.binarraybuffer, i = e && e.int64;
return {
map: R && e && e.usemap ? a : n,
array: o,
str: c,
bin: t ? r : s,
ext: l,
uint8: d,
uint16: _,
uint32: u,
uint64: g(8, i ? S : m),
int8: h,
int16: p,
int32: f,
int64: g(8, i ? C : v),
float32: g(4, b),
float64: g(8, E)
};
}, i.readUint8 = d;
var A = e("./bufferish"), N = e("./bufferish-proto"), R = "undefined" != typeof Map, O = !0;
}, {
"./bufferish": 8,
"./bufferish-proto": 6,
ieee754: 32,
"int64-buffer": 33
} ],
24: [ function(e, t, i) {
function n(e) {
var t, i = new Array(256);
for (t = 0; t <= 127; t++) i[t] = o(t);
for (t = 128; t <= 143; t++) i[t] = s(t - 128, e.map);
for (t = 144; t <= 159; t++) i[t] = s(t - 144, e.array);
for (t = 160; t <= 191; t++) i[t] = s(t - 160, e.str);
for (i[192] = o(null), i[193] = null, i[194] = o(!1), i[195] = o(!0), i[196] = c(e.uint8, e.bin), 
i[197] = c(e.uint16, e.bin), i[198] = c(e.uint32, e.bin), i[199] = c(e.uint8, e.ext), 
i[200] = c(e.uint16, e.ext), i[201] = c(e.uint32, e.ext), i[202] = e.float32, i[203] = e.float64, 
i[204] = e.uint8, i[205] = e.uint16, i[206] = e.uint32, i[207] = e.uint64, i[208] = e.int8, 
i[209] = e.int16, i[210] = e.int32, i[211] = e.int64, i[212] = s(1, e.ext), i[213] = s(2, e.ext), 
i[214] = s(4, e.ext), i[215] = s(8, e.ext), i[216] = s(16, e.ext), i[217] = c(e.uint8, e.str), 
i[218] = c(e.uint16, e.str), i[219] = c(e.uint32, e.str), i[220] = c(e.uint16, e.array), 
i[221] = c(e.uint32, e.array), i[222] = c(e.uint16, e.map), i[223] = c(e.uint32, e.map), 
t = 224; t <= 255; t++) i[t] = o(t - 256);
return i;
}
function a(e) {
var t, i = n(e).slice();
for (i[217] = i[196], i[218] = i[197], i[219] = i[198], t = 160; t <= 191; t++) i[t] = s(t - 160, e.bin);
return i;
}
function o(e) {
return function() {
return e;
};
}
function c(e, t) {
return function(i) {
var n = e(i);
return t(i, n);
};
}
function s(e, t) {
return function(i) {
return t(i, e);
};
}
var r = e("./read-format");
i.getReadToken = function(e) {
var t = r.getReadFormat(e);
return e && e.useraw ? a(t) : n(t);
};
}, {
"./read-format": 23
} ],
25: [ function(e, t, i) {
function n(e) {
var t = s.getWriteType(e);
return function(e, i) {
var n = t[typeof i];
if (!n) throw new Error('Unsupported type "' + typeof i + '": ' + i);
n(e, i);
};
}
function a() {
var e = this.options;
return this.encode = n(e), e && e.preset && c.setExtPackers(this), this;
}
var o = e("./ext-buffer").ExtBuffer, c = e("./ext-packer"), s = e("./write-type"), r = e("./codec-base");
r.install({
addExtPacker: function(e, t, i) {
function n(t) {
return i && (t = i(t)), new o(t, e);
}
i = r.filter(i);
var a = t.name;
a && "Object" !== a ? (this.extPackers || (this.extPackers = {}))[a] = n : (this.extEncoderList || (this.extEncoderList = [])).unshift([ t, n ]);
},
getExtPacker: function(e) {
var t = this.extPackers || (this.extPackers = {}), i = e.constructor, n = i && i.name && t[i.name];
if (n) return n;
for (var a = this.extEncoderList || (this.extEncoderList = []), o = a.length, c = 0; c < o; c++) {
var s = a[c];
if (i === s[0]) return s[1];
}
},
init: a
}), i.preset = a.call(r.preset);
}, {
"./codec-base": 9,
"./ext-buffer": 17,
"./ext-packer": 18,
"./write-type": 27
} ],
26: [ function(e, t, i) {
function n() {
var e = a();
return e[202] = l(202, 4, _), e[203] = l(203, 8, p), e;
}
function a() {
var e = v.slice();
return e[196] = c(196), e[197] = s(197), e[198] = r(198), e[199] = c(199), e[200] = s(200), 
e[201] = r(201), e[202] = l(202, 4, E.writeFloatBE || _, !0), e[203] = l(203, 8, E.writeDoubleBE || p, !0), 
e[204] = c(204), e[205] = s(205), e[206] = r(206), e[207] = l(207, 8, d), e[208] = c(208), 
e[209] = s(209), e[210] = r(210), e[211] = l(211, 8, h), e[217] = c(217), e[218] = s(218), 
e[219] = r(219), e[220] = s(220), e[221] = r(221), e[222] = s(222), e[223] = r(223), 
e;
}
function o() {
var e = v.slice();
return e[196] = l(196, 1, C.prototype.writeUInt8), e[197] = l(197, 2, C.prototype.writeUInt16BE), 
e[198] = l(198, 4, C.prototype.writeUInt32BE), e[199] = l(199, 1, C.prototype.writeUInt8), 
e[200] = l(200, 2, C.prototype.writeUInt16BE), e[201] = l(201, 4, C.prototype.writeUInt32BE), 
e[202] = l(202, 4, C.prototype.writeFloatBE), e[203] = l(203, 8, C.prototype.writeDoubleBE), 
e[204] = l(204, 1, C.prototype.writeUInt8), e[205] = l(205, 2, C.prototype.writeUInt16BE), 
e[206] = l(206, 4, C.prototype.writeUInt32BE), e[207] = l(207, 8, d), e[208] = l(208, 1, C.prototype.writeInt8), 
e[209] = l(209, 2, C.prototype.writeInt16BE), e[210] = l(210, 4, C.prototype.writeInt32BE), 
e[211] = l(211, 8, h), e[217] = l(217, 1, C.prototype.writeUInt8), e[218] = l(218, 2, C.prototype.writeUInt16BE), 
e[219] = l(219, 4, C.prototype.writeUInt32BE), e[220] = l(220, 2, C.prototype.writeUInt16BE), 
e[221] = l(221, 4, C.prototype.writeUInt32BE), e[222] = l(222, 2, C.prototype.writeUInt16BE), 
e[223] = l(223, 4, C.prototype.writeUInt32BE), e;
}
function c(e) {
return function(t, i) {
var n = t.reserve(2), a = t.buffer;
a[n++] = e, a[n] = i;
};
}
function s(e) {
return function(t, i) {
var n = t.reserve(3), a = t.buffer;
a[n++] = e, a[n++] = i >>> 8, a[n] = i;
};
}
function r(e) {
return function(t, i) {
var n = t.reserve(5), a = t.buffer;
a[n++] = e, a[n++] = i >>> 24, a[n++] = i >>> 16, a[n++] = i >>> 8, a[n] = i;
};
}
function l(e, t, i, n) {
return function(a, o) {
var c = a.reserve(t + 1);
a.buffer[c++] = e, i.call(a.buffer, o, c, n);
};
}
function d(e, t) {
new g(this, t, e);
}
function h(e, t) {
new m(this, t, e);
}
function _(e, t) {
u.write(this, e, t, !1, 23, 4);
}
function p(e, t) {
u.write(this, e, t, !1, 52, 8);
}
var u = e("ieee754"), f = e("int64-buffer"), g = f.Uint64BE, m = f.Int64BE, v = e("./write-uint8").uint8, S = e("./bufferish"), C = S.global, b = S.hasBuffer && "TYPED_ARRAY_SUPPORT" in C && !C.TYPED_ARRAY_SUPPORT, E = S.hasBuffer && C.prototype || {};
i.getWriteToken = function(e) {
return e && e.uint8array ? n() : b || S.hasBuffer && e && e.safe ? o() : a();
};
}, {
"./bufferish": 8,
"./write-uint8": 28,
ieee754: 32,
"int64-buffer": 33
} ],
27: [ function(e, t, i) {
var n = e("isarray"), a = e("int64-buffer"), o = a.Uint64BE, c = a.Int64BE, s = e("./bufferish"), r = e("./bufferish-proto"), l = e("./write-token"), d = e("./write-uint8").uint8, h = e("./ext-buffer").ExtBuffer, _ = "undefined" != typeof Uint8Array, p = "undefined" != typeof Map, u = [];
u[1] = 212, u[2] = 213, u[4] = 214, u[8] = 215, u[16] = 216, i.getWriteType = function(e) {
function t(e, t) {
b[207](e, t.toArray());
}
function i(e, t) {
b[211](e, t.toArray());
}
function a(e, a) {
if (null === a) return f(e, a);
if (L(a)) return T(e, a);
if (n(a)) return g(e, a);
if (o.isUint64BE(a)) return t(e, a);
if (c.isInt64BE(a)) return i(e, a);
var s = e.codec.getExtPacker(a);
return s && (a = s(a)), a instanceof h ? v(e, a) : void I(e, a);
}
function f(e, t) {
b[192](e, t);
}
function g(e, t) {
var i = t.length;
b[i < 16 ? 144 + i : i <= 65535 ? 220 : 221](e, i);
for (var n = e.codec.encode, a = 0; a < i; a++) n(e, t[a]);
}
function m(e, t) {
var i = t.length;
b[i < 255 ? 196 : i <= 65535 ? 197 : 198](e, i), e.send(t);
}
function v(e, t) {
var i = t.buffer, n = i.length, a = u[n] || (n < 255 ? 199 : n <= 65535 ? 200 : 201);
b[a](e, n), d[t.type](e), e.send(i);
}
function S(e, t) {
var i = Object.keys(t), n = i.length;
b[n < 16 ? 128 + n : n <= 65535 ? 222 : 223](e, n);
var a = e.codec.encode;
i.forEach(function(i) {
a(e, i), a(e, t[i]);
});
}
function C(e, t) {
var i = t.length;
b[i < 32 ? 160 + i : i <= 65535 ? 218 : 219](e, i), e.send(t);
}
var b = l.getWriteToken(e), E = e && e.useraw, y = _ && e && e.binarraybuffer, L = y ? s.isArrayBuffer : s.isBuffer, T = y ? function(e, t) {
m(e, new Uint8Array(t));
} : m, I = p && e && e.usemap ? function(e, t) {
if (!(t instanceof Map)) return S(e, t);
var i = t.size;
b[i < 16 ? 128 + i : i <= 65535 ? 222 : 223](e, i);
var n = e.codec.encode;
t.forEach(function(t, i) {
n(e, i), n(e, t);
});
} : S;
return {
boolean: function(e, t) {
b[t ? 195 : 194](e, t);
},
function: f,
number: function(e, t) {
var i = 0 | t;
return t !== i ? void b[203](e, t) : void b[-32 <= i && i <= 127 ? 255 & i : 0 <= i ? i <= 255 ? 204 : i <= 65535 ? 205 : 206 : -128 <= i ? 208 : -32768 <= i ? 209 : 210](e, i);
},
object: E ? function(e, t) {
return L(t) ? C(e, t) : void a(e, t);
} : a,
string: function(e) {
return function(t, i) {
var n = i.length, a = 5 + 3 * n;
t.offset = t.reserve(a);
var o = t.buffer, c = e(n), s = t.offset + c;
n = r.write.call(o, i, s);
var l = e(n);
if (c !== l) {
var d = s + l - c, h = s + n;
r.copy.call(o, o, d, s, h);
}
b[1 === l ? 160 + n : l <= 3 ? 215 + l : 219](t, n), t.offset += n;
};
}(E ? function(e) {
return e < 32 ? 1 : e <= 65535 ? 3 : 5;
} : function(e) {
return e < 32 ? 1 : e <= 255 ? 2 : e <= 65535 ? 3 : 5;
}),
symbol: f,
undefined: f
};
};
}, {
"./bufferish": 8,
"./bufferish-proto": 6,
"./ext-buffer": 17,
"./write-token": 26,
"./write-uint8": 28,
"int64-buffer": 33,
isarray: 34
} ],
28: [ function(e, t, i) {
function n(e) {
return function(t) {
var i = t.reserve(1);
t.buffer[i] = e;
};
}
for (var a = i.uint8 = new Array(256), o = 0; o <= 255; o++) a[o] = n(o);
}, {} ],
29: [ function(e, t, i) {
(function(t) {
function n() {
return o.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
}
function a(e, t) {
if (n() < t) throw new RangeError("Invalid typed array length");
return o.TYPED_ARRAY_SUPPORT ? (e = new Uint8Array(t)).__proto__ = o.prototype : (null === e && (e = new o(t)), 
e.length = t), e;
}
function o(e, t, i) {
if (!(o.TYPED_ARRAY_SUPPORT || this instanceof o)) return new o(e, t, i);
if ("number" == typeof e) {
if ("string" == typeof t) throw new Error("If encoding is specified then the first argument must be a string");
return l(this, e);
}
return c(this, e, t, i);
}
function c(e, t, i, n) {
if ("number" == typeof t) throw new TypeError('"value" argument must not be a number');
return "undefined" != typeof ArrayBuffer && t instanceof ArrayBuffer ? _(e, t, i, n) : "string" == typeof t ? d(e, t, i) : p(e, t);
}
function s(e) {
if ("number" != typeof e) throw new TypeError('"size" argument must be a number');
if (e < 0) throw new RangeError('"size" argument must not be negative');
}
function r(e, t, i, n) {
return s(t), t <= 0 ? a(e, t) : void 0 !== i ? "string" == typeof n ? a(e, t).fill(i, n) : a(e, t).fill(i) : a(e, t);
}
function l(e, t) {
if (s(t), e = a(e, t < 0 ? 0 : 0 | u(t)), !o.TYPED_ARRAY_SUPPORT) for (var i = 0; i < t; ++i) e[i] = 0;
return e;
}
function d(e, t, i) {
if ("string" == typeof i && "" !== i || (i = "utf8"), !o.isEncoding(i)) throw new TypeError('"encoding" must be a valid string encoding');
var n = 0 | f(t, i), c = (e = a(e, n)).write(t, i);
return c !== n && (e = e.slice(0, c)), e;
}
function h(e, t) {
var i = t.length < 0 ? 0 : 0 | u(t.length);
e = a(e, i);
for (var n = 0; n < i; n += 1) e[n] = 255 & t[n];
return e;
}
function _(e, t, i, n) {
if (t.byteLength, i < 0 || t.byteLength < i) throw new RangeError("'offset' is out of bounds");
if (t.byteLength < i + (n || 0)) throw new RangeError("'length' is out of bounds");
return t = void 0 === i && void 0 === n ? new Uint8Array(t) : void 0 === n ? new Uint8Array(t, i) : new Uint8Array(t, i, n), 
o.TYPED_ARRAY_SUPPORT ? (e = t).__proto__ = o.prototype : e = h(e, t), e;
}
function p(e, t) {
if (o.isBuffer(t)) {
var i = 0 | u(t.length);
return 0 === (e = a(e, i)).length ? e : (t.copy(e, 0, 0, i), e);
}
if (t) {
if ("undefined" != typeof ArrayBuffer && t.buffer instanceof ArrayBuffer || "length" in t) return "number" != typeof t.length || Q(t.length) ? a(e, 0) : h(e, t);
if ("Buffer" === t.type && X(t.data)) return h(e, t.data);
}
throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
}
function u(e) {
if (e >= n()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + n().toString(16) + " bytes");
return 0 | e;
}
function f(e, t) {
if (o.isBuffer(e)) return e.length;
if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)) return e.byteLength;
"string" != typeof e && (e = "" + e);
var i = e.length;
if (0 === i) return 0;
for (var n = !1; ;) switch (t) {
case "ascii":
case "latin1":
case "binary":
return i;

case "utf8":
case "utf-8":
case void 0:
return W(e).length;

case "ucs2":
case "ucs-2":
case "utf16le":
case "utf-16le":
return 2 * i;

case "hex":
return i >>> 1;

case "base64":
return j(e).length;

default:
if (n) return W(e).length;
t = ("" + t).toLowerCase(), n = !0;
}
}
function g(e, t, i) {
var n = !1;
if ((void 0 === t || t < 0) && (t = 0), t > this.length) return "";
if ((void 0 === i || i > this.length) && (i = this.length), i <= 0) return "";
if ((i >>>= 0) <= (t >>>= 0)) return "";
for (e || (e = "utf8"); ;) switch (e) {
case "hex":
return P(this, t, i);

case "utf8":
case "utf-8":
return A(this, t, i);

case "ascii":
return R(this, t, i);

case "latin1":
case "binary":
return O(this, t, i);

case "base64":
return I(this, t, i);

case "ucs2":
case "ucs-2":
case "utf16le":
case "utf-16le":
return M(this, t, i);

default:
if (n) throw new TypeError("Unknown encoding: " + e);
e = (e + "").toLowerCase(), n = !0;
}
}
function m(e, t, i) {
var n = e[t];
e[t] = e[i], e[i] = n;
}
function v(e, t, i, n, a) {
if (0 === e.length) return -1;
if ("string" == typeof i ? (n = i, i = 0) : i > 2147483647 ? i = 2147483647 : i < -2147483648 && (i = -2147483648), 
i = +i, isNaN(i) && (i = a ? 0 : e.length - 1), i < 0 && (i = e.length + i), i >= e.length) {
if (a) return -1;
i = e.length - 1;
} else if (i < 0) {
if (!a) return -1;
i = 0;
}
if ("string" == typeof t && (t = o.from(t, n)), o.isBuffer(t)) return 0 === t.length ? -1 : S(e, t, i, n, a);
if ("number" == typeof t) return t &= 255, o.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? a ? Uint8Array.prototype.indexOf.call(e, t, i) : Uint8Array.prototype.lastIndexOf.call(e, t, i) : S(e, [ t ], i, n, a);
throw new TypeError("val must be string, number or Buffer");
}
function S(e, t, i, n, a) {
function o(e, t) {
return 1 === s ? e[t] : e.readUInt16BE(t * s);
}
var c, s = 1, r = e.length, l = t.length;
if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
if (e.length < 2 || t.length < 2) return -1;
s = 2, r /= 2, l /= 2, i /= 2;
}
if (a) {
var d = -1;
for (c = i; c < r; c++) if (o(e, c) === o(t, -1 === d ? 0 : c - d)) {
if (-1 === d && (d = c), c - d + 1 === l) return d * s;
} else -1 !== d && (c -= c - d), d = -1;
} else for (i + l > r && (i = r - l), c = i; c >= 0; c--) {
for (var h = !0, _ = 0; _ < l; _++) if (o(e, c + _) !== o(t, _)) {
h = !1;
break;
}
if (h) return c;
}
return -1;
}
function C(e, t, i, n) {
i = Number(i) || 0;
var a = e.length - i;
n ? (n = Number(n)) > a && (n = a) : n = a;
var o = t.length;
if (o % 2 != 0) throw new TypeError("Invalid hex string");
n > o / 2 && (n = o / 2);
for (var c = 0; c < n; ++c) {
var s = parseInt(t.substr(2 * c, 2), 16);
if (isNaN(s)) return c;
e[i + c] = s;
}
return c;
}
function b(e, t, i, n) {
return z(W(t, e.length - i), e, i, n);
}
function E(e, t, i, n) {
return z(Y(t), e, i, n);
}
function y(e, t, i, n) {
return E(e, t, i, n);
}
function L(e, t, i, n) {
return z(j(t), e, i, n);
}
function T(e, t, i, n) {
return z(K(t, e.length - i), e, i, n);
}
function I(e, t, i) {
return 0 === t && i === e.length ? J.fromByteArray(e) : J.fromByteArray(e.slice(t, i));
}
function A(e, t, i) {
i = Math.min(e.length, i);
for (var n = [], a = t; a < i; ) {
var o = e[a], c = null, s = o > 239 ? 4 : o > 223 ? 3 : o > 191 ? 2 : 1;
if (a + s <= i) {
var r, l, d, h;
switch (s) {
case 1:
o < 128 && (c = o);
break;

case 2:
128 == (192 & (r = e[a + 1])) && (h = (31 & o) << 6 | 63 & r) > 127 && (c = h);
break;

case 3:
r = e[a + 1], l = e[a + 2], 128 == (192 & r) && 128 == (192 & l) && (h = (15 & o) << 12 | (63 & r) << 6 | 63 & l) > 2047 && (h < 55296 || h > 57343) && (c = h);
break;

case 4:
r = e[a + 1], l = e[a + 2], d = e[a + 3], 128 == (192 & r) && 128 == (192 & l) && 128 == (192 & d) && (h = (15 & o) << 18 | (63 & r) << 12 | (63 & l) << 6 | 63 & d) > 65535 && h < 1114112 && (c = h);
}
}
null === c ? (c = 65533, s = 1) : c > 65535 && (c -= 65536, n.push(c >>> 10 & 1023 | 55296), 
c = 56320 | 1023 & c), n.push(c), a += s;
}
return N(n);
}
function N(e) {
var t = e.length;
if (t <= Z) return String.fromCharCode.apply(String, e);
for (var i = "", n = 0; n < t; ) i += String.fromCharCode.apply(String, e.slice(n, n += Z));
return i;
}
function R(e, t, i) {
var n = "";
i = Math.min(e.length, i);
for (var a = t; a < i; ++a) n += String.fromCharCode(127 & e[a]);
return n;
}
function O(e, t, i) {
var n = "";
i = Math.min(e.length, i);
for (var a = t; a < i; ++a) n += String.fromCharCode(e[a]);
return n;
}
function P(e, t, i) {
var n = e.length;
(!t || t < 0) && (t = 0), (!i || i < 0 || i > n) && (i = n);
for (var a = "", o = t; o < i; ++o) a += V(e[o]);
return a;
}
function M(e, t, i) {
for (var n = e.slice(t, i), a = "", o = 0; o < n.length; o += 2) a += String.fromCharCode(n[o] + 256 * n[o + 1]);
return a;
}
function w(e, t, i) {
if (e % 1 != 0 || e < 0) throw new RangeError("offset is not uint");
if (e + t > i) throw new RangeError("Trying to access beyond buffer length");
}
function D(e, t, i, n, a, c) {
if (!o.isBuffer(e)) throw new TypeError('"buffer" argument must be a Buffer instance');
if (t > a || t < c) throw new RangeError('"value" argument is out of bounds');
if (i + n > e.length) throw new RangeError("Index out of range");
}
function G(e, t, i, n) {
t < 0 && (t = 65535 + t + 1);
for (var a = 0, o = Math.min(e.length - i, 2); a < o; ++a) e[i + a] = (t & 255 << 8 * (n ? a : 1 - a)) >>> 8 * (n ? a : 1 - a);
}
function B(e, t, i, n) {
t < 0 && (t = 4294967295 + t + 1);
for (var a = 0, o = Math.min(e.length - i, 4); a < o; ++a) e[i + a] = t >>> 8 * (n ? a : 3 - a) & 255;
}
function k(e, t, i, n) {
if (i + n > e.length) throw new RangeError("Index out of range");
if (i < 0) throw new RangeError("Index out of range");
}
function F(e, t, i, n, a) {
return a || k(e, 0, i, 4), q.write(e, t, i, n, 23, 4), i + 4;
}
function U(e, t, i, n, a) {
return a || k(e, 0, i, 8), q.write(e, t, i, n, 52, 8), i + 8;
}
function x(e) {
if ((e = H(e).replace($, "")).length < 2) return "";
for (;e.length % 4 != 0; ) e += "=";
return e;
}
function H(e) {
return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, "");
}
function V(e) {
return e < 16 ? "0" + e.toString(16) : e.toString(16);
}
function W(e, t) {
t = t || 1 / 0;
for (var i, n = e.length, a = null, o = [], c = 0; c < n; ++c) {
if ((i = e.charCodeAt(c)) > 55295 && i < 57344) {
if (!a) {
if (i > 56319) {
(t -= 3) > -1 && o.push(239, 191, 189);
continue;
}
if (c + 1 === n) {
(t -= 3) > -1 && o.push(239, 191, 189);
continue;
}
a = i;
continue;
}
if (i < 56320) {
(t -= 3) > -1 && o.push(239, 191, 189), a = i;
continue;
}
i = 65536 + (a - 55296 << 10 | i - 56320);
} else a && (t -= 3) > -1 && o.push(239, 191, 189);
if (a = null, i < 128) {
if ((t -= 1) < 0) break;
o.push(i);
} else if (i < 2048) {
if ((t -= 2) < 0) break;
o.push(i >> 6 | 192, 63 & i | 128);
} else if (i < 65536) {
if ((t -= 3) < 0) break;
o.push(i >> 12 | 224, i >> 6 & 63 | 128, 63 & i | 128);
} else {
if (!(i < 1114112)) throw new Error("Invalid code point");
if ((t -= 4) < 0) break;
o.push(i >> 18 | 240, i >> 12 & 63 | 128, i >> 6 & 63 | 128, 63 & i | 128);
}
}
return o;
}
function Y(e) {
for (var t = [], i = 0; i < e.length; ++i) t.push(255 & e.charCodeAt(i));
return t;
}
function K(e, t) {
for (var i, n, a, o = [], c = 0; c < e.length && !((t -= 2) < 0); ++c) n = (i = e.charCodeAt(c)) >> 8, 
a = i % 256, o.push(a), o.push(n);
return o;
}
function j(e) {
return J.toByteArray(x(e));
}
function z(e, t, i, n) {
for (var a = 0; a < n && !(a + i >= t.length || a >= e.length); ++a) t[a + i] = e[a];
return a;
}
function Q(e) {
return e != e;
}
var J = e("base64-js"), q = e("ieee754"), X = e("isarray");
i.Buffer = o, i.SlowBuffer = function(e) {
return +e != e && (e = 0), o.alloc(+e);
}, i.INSPECT_MAX_BYTES = 50, o.TYPED_ARRAY_SUPPORT = void 0 !== t.TYPED_ARRAY_SUPPORT ? t.TYPED_ARRAY_SUPPORT : function() {
try {
var e = new Uint8Array(1);
return e.__proto__ = {
__proto__: Uint8Array.prototype,
foo: function() {
return 42;
}
}, 42 === e.foo() && "function" == typeof e.subarray && 0 === e.subarray(1, 1).byteLength;
} catch (e) {
return !1;
}
}(), i.kMaxLength = n(), o.poolSize = 8192, o._augment = function(e) {
return e.__proto__ = o.prototype, e;
}, o.from = function(e, t, i) {
return c(null, e, t, i);
}, o.TYPED_ARRAY_SUPPORT && (o.prototype.__proto__ = Uint8Array.prototype, o.__proto__ = Uint8Array, 
"undefined" != typeof Symbol && Symbol.species && o[Symbol.species] === o && Object.defineProperty(o, Symbol.species, {
value: null,
configurable: !0
})), o.alloc = function(e, t, i) {
return r(null, e, t, i);
}, o.allocUnsafe = function(e) {
return l(null, e);
}, o.allocUnsafeSlow = function(e) {
return l(null, e);
}, o.isBuffer = function(e) {
return !(null == e || !e._isBuffer);
}, o.compare = function(e, t) {
if (!o.isBuffer(e) || !o.isBuffer(t)) throw new TypeError("Arguments must be Buffers");
if (e === t) return 0;
for (var i = e.length, n = t.length, a = 0, c = Math.min(i, n); a < c; ++a) if (e[a] !== t[a]) {
i = e[a], n = t[a];
break;
}
return i < n ? -1 : n < i ? 1 : 0;
}, o.isEncoding = function(e) {
switch (String(e).toLowerCase()) {
case "hex":
case "utf8":
case "utf-8":
case "ascii":
case "latin1":
case "binary":
case "base64":
case "ucs2":
case "ucs-2":
case "utf16le":
case "utf-16le":
return !0;

default:
return !1;
}
}, o.concat = function(e, t) {
if (!X(e)) throw new TypeError('"list" argument must be an Array of Buffers');
if (0 === e.length) return o.alloc(0);
var i;
if (void 0 === t) for (t = 0, i = 0; i < e.length; ++i) t += e[i].length;
var n = o.allocUnsafe(t), a = 0;
for (i = 0; i < e.length; ++i) {
var c = e[i];
if (!o.isBuffer(c)) throw new TypeError('"list" argument must be an Array of Buffers');
c.copy(n, a), a += c.length;
}
return n;
}, o.byteLength = f, o.prototype._isBuffer = !0, o.prototype.swap16 = function() {
var e = this.length;
if (e % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
for (var t = 0; t < e; t += 2) m(this, t, t + 1);
return this;
}, o.prototype.swap32 = function() {
var e = this.length;
if (e % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
for (var t = 0; t < e; t += 4) m(this, t, t + 3), m(this, t + 1, t + 2);
return this;
}, o.prototype.swap64 = function() {
var e = this.length;
if (e % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
for (var t = 0; t < e; t += 8) m(this, t, t + 7), m(this, t + 1, t + 6), m(this, t + 2, t + 5), 
m(this, t + 3, t + 4);
return this;
}, o.prototype.toString = function() {
var e = 0 | this.length;
return 0 === e ? "" : 0 === arguments.length ? A(this, 0, e) : g.apply(this, arguments);
}, o.prototype.equals = function(e) {
if (!o.isBuffer(e)) throw new TypeError("Argument must be a Buffer");
return this === e || 0 === o.compare(this, e);
}, o.prototype.inspect = function() {
var e = "", t = i.INSPECT_MAX_BYTES;
return this.length > 0 && (e = this.toString("hex", 0, t).match(/.{2}/g).join(" "), 
this.length > t && (e += " ... ")), "<Buffer " + e + ">";
}, o.prototype.compare = function(e, t, i, n, a) {
if (!o.isBuffer(e)) throw new TypeError("Argument must be a Buffer");
if (void 0 === t && (t = 0), void 0 === i && (i = e ? e.length : 0), void 0 === n && (n = 0), 
void 0 === a && (a = this.length), t < 0 || i > e.length || n < 0 || a > this.length) throw new RangeError("out of range index");
if (n >= a && t >= i) return 0;
if (n >= a) return -1;
if (t >= i) return 1;
if (this === e) return 0;
for (var c = (a >>>= 0) - (n >>>= 0), s = (i >>>= 0) - (t >>>= 0), r = Math.min(c, s), l = this.slice(n, a), d = e.slice(t, i), h = 0; h < r; ++h) if (l[h] !== d[h]) {
c = l[h], s = d[h];
break;
}
return c < s ? -1 : s < c ? 1 : 0;
}, o.prototype.includes = function(e, t, i) {
return -1 !== this.indexOf(e, t, i);
}, o.prototype.indexOf = function(e, t, i) {
return v(this, e, t, i, !0);
}, o.prototype.lastIndexOf = function(e, t, i) {
return v(this, e, t, i, !1);
}, o.prototype.write = function(e, t, i, n) {
if (void 0 === t) n = "utf8", i = this.length, t = 0; else if (void 0 === i && "string" == typeof t) n = t, 
i = this.length, t = 0; else {
if (!isFinite(t)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
t |= 0, isFinite(i) ? (i |= 0, void 0 === n && (n = "utf8")) : (n = i, i = void 0);
}
var a = this.length - t;
if ((void 0 === i || i > a) && (i = a), e.length > 0 && (i < 0 || t < 0) || t > this.length) throw new RangeError("Attempt to write outside buffer bounds");
n || (n = "utf8");
for (var o = !1; ;) switch (n) {
case "hex":
return C(this, e, t, i);

case "utf8":
case "utf-8":
return b(this, e, t, i);

case "ascii":
return E(this, e, t, i);

case "latin1":
case "binary":
return y(this, e, t, i);

case "base64":
return L(this, e, t, i);

case "ucs2":
case "ucs-2":
case "utf16le":
case "utf-16le":
return T(this, e, t, i);

default:
if (o) throw new TypeError("Unknown encoding: " + n);
n = ("" + n).toLowerCase(), o = !0;
}
}, o.prototype.toJSON = function() {
return {
type: "Buffer",
data: Array.prototype.slice.call(this._arr || this, 0)
};
};
var Z = 4096;
o.prototype.slice = function(e, t) {
var i, n = this.length;
(e = ~~e) < 0 ? (e += n) < 0 && (e = 0) : e > n && (e = n), (t = void 0 === t ? n : ~~t) < 0 ? (t += n) < 0 && (t = 0) : t > n && (t = n), 
t < e && (t = e);
if (o.TYPED_ARRAY_SUPPORT) (i = this.subarray(e, t)).__proto__ = o.prototype; else {
var a = t - e;
i = new o(a, void 0);
for (var c = 0; c < a; ++c) i[c] = this[c + e];
}
return i;
}, o.prototype.readUIntLE = function(e, t, i) {
e |= 0, t |= 0, i || w(e, t, this.length);
for (var n = this[e], a = 1, o = 0; ++o < t && (a *= 256); ) n += this[e + o] * a;
return n;
}, o.prototype.readUIntBE = function(e, t, i) {
e |= 0, t |= 0, i || w(e, t, this.length);
for (var n = this[e + --t], a = 1; t > 0 && (a *= 256); ) n += this[e + --t] * a;
return n;
}, o.prototype.readUInt8 = function(e, t) {
return t || w(e, 1, this.length), this[e];
}, o.prototype.readUInt16LE = function(e, t) {
return t || w(e, 2, this.length), this[e] | this[e + 1] << 8;
}, o.prototype.readUInt16BE = function(e, t) {
return t || w(e, 2, this.length), this[e] << 8 | this[e + 1];
}, o.prototype.readUInt32LE = function(e, t) {
return t || w(e, 4, this.length), (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3];
}, o.prototype.readUInt32BE = function(e, t) {
return t || w(e, 4, this.length), 16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]);
}, o.prototype.readIntLE = function(e, t, i) {
e |= 0, t |= 0, i || w(e, t, this.length);
for (var n = this[e], a = 1, o = 0; ++o < t && (a *= 256); ) n += this[e + o] * a;
return n >= (a *= 128) && (n -= Math.pow(2, 8 * t)), n;
}, o.prototype.readIntBE = function(e, t, i) {
e |= 0, t |= 0, i || w(e, t, this.length);
for (var n = t, a = 1, o = this[e + --n]; n > 0 && (a *= 256); ) o += this[e + --n] * a;
return o >= (a *= 128) && (o -= Math.pow(2, 8 * t)), o;
}, o.prototype.readInt8 = function(e, t) {
return t || w(e, 1, this.length), 128 & this[e] ? -1 * (255 - this[e] + 1) : this[e];
}, o.prototype.readInt16LE = function(e, t) {
t || w(e, 2, this.length);
var i = this[e] | this[e + 1] << 8;
return 32768 & i ? 4294901760 | i : i;
}, o.prototype.readInt16BE = function(e, t) {
t || w(e, 2, this.length);
var i = this[e + 1] | this[e] << 8;
return 32768 & i ? 4294901760 | i : i;
}, o.prototype.readInt32LE = function(e, t) {
return t || w(e, 4, this.length), this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24;
}, o.prototype.readInt32BE = function(e, t) {
return t || w(e, 4, this.length), this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3];
}, o.prototype.readFloatLE = function(e, t) {
return t || w(e, 4, this.length), q.read(this, e, !0, 23, 4);
}, o.prototype.readFloatBE = function(e, t) {
return t || w(e, 4, this.length), q.read(this, e, !1, 23, 4);
}, o.prototype.readDoubleLE = function(e, t) {
return t || w(e, 8, this.length), q.read(this, e, !0, 52, 8);
}, o.prototype.readDoubleBE = function(e, t) {
return t || w(e, 8, this.length), q.read(this, e, !1, 52, 8);
}, o.prototype.writeUIntLE = function(e, t, i, n) {
(e = +e, t |= 0, i |= 0, n) || D(this, e, t, i, Math.pow(2, 8 * i) - 1, 0);
var a = 1, o = 0;
for (this[t] = 255 & e; ++o < i && (a *= 256); ) this[t + o] = e / a & 255;
return t + i;
}, o.prototype.writeUIntBE = function(e, t, i, n) {
(e = +e, t |= 0, i |= 0, n) || D(this, e, t, i, Math.pow(2, 8 * i) - 1, 0);
var a = i - 1, o = 1;
for (this[t + a] = 255 & e; --a >= 0 && (o *= 256); ) this[t + a] = e / o & 255;
return t + i;
}, o.prototype.writeUInt8 = function(e, t, i) {
return e = +e, t |= 0, i || D(this, e, t, 1, 255, 0), o.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)), 
this[t] = 255 & e, t + 1;
}, o.prototype.writeUInt16LE = function(e, t, i) {
return e = +e, t |= 0, i || D(this, e, t, 2, 65535, 0), o.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, 
this[t + 1] = e >>> 8) : G(this, e, t, !0), t + 2;
}, o.prototype.writeUInt16BE = function(e, t, i) {
return e = +e, t |= 0, i || D(this, e, t, 2, 65535, 0), o.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8, 
this[t + 1] = 255 & e) : G(this, e, t, !1), t + 2;
}, o.prototype.writeUInt32LE = function(e, t, i) {
return e = +e, t |= 0, i || D(this, e, t, 4, 4294967295, 0), o.TYPED_ARRAY_SUPPORT ? (this[t + 3] = e >>> 24, 
this[t + 2] = e >>> 16, this[t + 1] = e >>> 8, this[t] = 255 & e) : B(this, e, t, !0), 
t + 4;
}, o.prototype.writeUInt32BE = function(e, t, i) {
return e = +e, t |= 0, i || D(this, e, t, 4, 4294967295, 0), o.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24, 
this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e) : B(this, e, t, !1), 
t + 4;
}, o.prototype.writeIntLE = function(e, t, i, n) {
if (e = +e, t |= 0, !n) {
var a = Math.pow(2, 8 * i - 1);
D(this, e, t, i, a - 1, -a);
}
var o = 0, c = 1, s = 0;
for (this[t] = 255 & e; ++o < i && (c *= 256); ) e < 0 && 0 === s && 0 !== this[t + o - 1] && (s = 1), 
this[t + o] = (e / c >> 0) - s & 255;
return t + i;
}, o.prototype.writeIntBE = function(e, t, i, n) {
if (e = +e, t |= 0, !n) {
var a = Math.pow(2, 8 * i - 1);
D(this, e, t, i, a - 1, -a);
}
var o = i - 1, c = 1, s = 0;
for (this[t + o] = 255 & e; --o >= 0 && (c *= 256); ) e < 0 && 0 === s && 0 !== this[t + o + 1] && (s = 1), 
this[t + o] = (e / c >> 0) - s & 255;
return t + i;
}, o.prototype.writeInt8 = function(e, t, i) {
return e = +e, t |= 0, i || D(this, e, t, 1, 127, -128), o.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)), 
e < 0 && (e = 255 + e + 1), this[t] = 255 & e, t + 1;
}, o.prototype.writeInt16LE = function(e, t, i) {
return e = +e, t |= 0, i || D(this, e, t, 2, 32767, -32768), o.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, 
this[t + 1] = e >>> 8) : G(this, e, t, !0), t + 2;
}, o.prototype.writeInt16BE = function(e, t, i) {
return e = +e, t |= 0, i || D(this, e, t, 2, 32767, -32768), o.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8, 
this[t + 1] = 255 & e) : G(this, e, t, !1), t + 2;
}, o.prototype.writeInt32LE = function(e, t, i) {
return e = +e, t |= 0, i || D(this, e, t, 4, 2147483647, -2147483648), o.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, 
this[t + 1] = e >>> 8, this[t + 2] = e >>> 16, this[t + 3] = e >>> 24) : B(this, e, t, !0), 
t + 4;
}, o.prototype.writeInt32BE = function(e, t, i) {
return e = +e, t |= 0, i || D(this, e, t, 4, 2147483647, -2147483648), e < 0 && (e = 4294967295 + e + 1), 
o.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, 
this[t + 3] = 255 & e) : B(this, e, t, !1), t + 4;
}, o.prototype.writeFloatLE = function(e, t, i) {
return F(this, e, t, !0, i);
}, o.prototype.writeFloatBE = function(e, t, i) {
return F(this, e, t, !1, i);
}, o.prototype.writeDoubleLE = function(e, t, i) {
return U(this, e, t, !0, i);
}, o.prototype.writeDoubleBE = function(e, t, i) {
return U(this, e, t, !1, i);
}, o.prototype.copy = function(e, t, i, n) {
if (i || (i = 0), n || 0 === n || (n = this.length), t >= e.length && (t = e.length), 
t || (t = 0), n > 0 && n < i && (n = i), n === i) return 0;
if (0 === e.length || 0 === this.length) return 0;
if (t < 0) throw new RangeError("targetStart out of bounds");
if (i < 0 || i >= this.length) throw new RangeError("sourceStart out of bounds");
if (n < 0) throw new RangeError("sourceEnd out of bounds");
n > this.length && (n = this.length), e.length - t < n - i && (n = e.length - t + i);
var a, c = n - i;
if (this === e && i < t && t < n) for (a = c - 1; a >= 0; --a) e[a + t] = this[a + i]; else if (c < 1e3 || !o.TYPED_ARRAY_SUPPORT) for (a = 0; a < c; ++a) e[a + t] = this[a + i]; else Uint8Array.prototype.set.call(e, this.subarray(i, i + c), t);
return c;
}, o.prototype.fill = function(e, t, i, n) {
if ("string" == typeof e) {
if ("string" == typeof t ? (n = t, t = 0, i = this.length) : "string" == typeof i && (n = i, 
i = this.length), 1 === e.length) {
var a = e.charCodeAt(0);
a < 256 && (e = a);
}
if (void 0 !== n && "string" != typeof n) throw new TypeError("encoding must be a string");
if ("string" == typeof n && !o.isEncoding(n)) throw new TypeError("Unknown encoding: " + n);
} else "number" == typeof e && (e &= 255);
if (t < 0 || this.length < t || this.length < i) throw new RangeError("Out of range index");
if (i <= t) return this;
t >>>= 0, i = void 0 === i ? this.length : i >>> 0, e || (e = 0);
var c;
if ("number" == typeof e) for (c = t; c < i; ++c) this[c] = e; else {
var s = o.isBuffer(e) ? e : W(new o(e, n).toString()), r = s.length;
for (c = 0; c < i - t; ++c) this[c + t] = s[c % r];
}
return this;
};
var $ = /[^+\/0-9A-Za-z-_]/g;
}).call(this, "undefined" != typeof n ? n : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
}, {
"base64-js": 30,
ieee754: 32,
isarray: 34
} ],
30: [ function(e, t, i) {
function n(e) {
var t = e.length;
if (t % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
return "=" === e[t - 2] ? 2 : "=" === e[t - 1] ? 1 : 0;
}
function a(e) {
return c[e >> 18 & 63] + c[e >> 12 & 63] + c[e >> 6 & 63] + c[63 & e];
}
function o(e, t, i) {
for (var n, o = [], c = t; c < i; c += 3) n = (e[c] << 16) + (e[c + 1] << 8) + e[c + 2], 
o.push(a(n));
return o.join("");
}
i.byteLength = function(e) {
return 3 * e.length / 4 - n(e);
}, i.toByteArray = function(e) {
var t, i, a, o, c, l, d = e.length;
c = n(e), l = new r(3 * d / 4 - c), a = c > 0 ? d - 4 : d;
var h = 0;
for (t = 0, i = 0; t < a; t += 4, i += 3) o = s[e.charCodeAt(t)] << 18 | s[e.charCodeAt(t + 1)] << 12 | s[e.charCodeAt(t + 2)] << 6 | s[e.charCodeAt(t + 3)], 
l[h++] = o >> 16 & 255, l[h++] = o >> 8 & 255, l[h++] = 255 & o;
return 2 === c ? (o = s[e.charCodeAt(t)] << 2 | s[e.charCodeAt(t + 1)] >> 4, l[h++] = 255 & o) : 1 === c && (o = s[e.charCodeAt(t)] << 10 | s[e.charCodeAt(t + 1)] << 4 | s[e.charCodeAt(t + 2)] >> 2, 
l[h++] = o >> 8 & 255, l[h++] = 255 & o), l;
}, i.fromByteArray = function(e) {
for (var t, i = e.length, n = i % 3, a = "", s = [], r = 16383, l = 0, d = i - n; l < d; l += r) s.push(o(e, l, l + r > d ? d : l + r));
return 1 === n ? (t = e[i - 1], a += c[t >> 2], a += c[t << 4 & 63], a += "==") : 2 === n && (t = (e[i - 2] << 8) + e[i - 1], 
a += c[t >> 10], a += c[t >> 4 & 63], a += c[t << 2 & 63], a += "="), s.push(a), 
s.join("");
};
for (var c = [], s = [], r = "undefined" != typeof Uint8Array ? Uint8Array : Array, l = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", d = 0, h = l.length; d < h; ++d) c[d] = l[d], 
s[l.charCodeAt(d)] = d;
s["-".charCodeAt(0)] = 62, s["_".charCodeAt(0)] = 63;
}, {} ],
31: [ function(e, t) {
!function(e) {
function i(e) {
for (var t in c) e[t] = c[t];
return e;
}
function n(e, t) {
var i, c = this;
if (arguments.length) {
if (t) {
if (i = a(c, e, !0)) {
if (!(i = i.filter(function(e) {
return e !== t && e.originalListener !== t;
})).length) return n.call(c, e);
c[o][e] = i;
}
} else if ((i = c[o]) && (delete i[e], !Object.keys(i).length)) return n.call(c);
} else delete c[o];
return c;
}
function a(e, t, i) {
if (!i || e[o]) {
var n = e[o] || (e[o] = {});
return n[t] || (n[t] = []);
}
}
"undefined" != typeof t && (t.exports = e);
var o = "listeners", c = {
on: function(e, t) {
return a(this, e).push(t), this;
},
once: function(e, t) {
function i() {
n.call(o, e, i), t.apply(this, arguments);
}
var o = this;
return i.originalListener = t, a(o, e).push(i), o;
},
off: n,
emit: function(e, t) {
var i = this, n = a(i, e, !0);
if (!n) return !1;
var o = arguments.length;
if (1 === o) n.forEach(function(e) {
e.call(i);
}); else if (2 === o) n.forEach(function(e) {
e.call(i, t);
}); else {
var c = Array.prototype.slice.call(arguments, 1);
n.forEach(function(e) {
e.apply(i, c);
});
}
return !!n.length;
}
};
i(e.prototype), e.mixin = i;
}(function e() {
if (!(this instanceof e)) return new e();
});
}, {} ],
32: [ function(e, t, i) {
i.read = function(e, t, i, n, a) {
var o, c, s = 8 * a - n - 1, r = (1 << s) - 1, l = r >> 1, d = -7, h = i ? a - 1 : 0, _ = i ? -1 : 1, p = e[t + h];
for (h += _, o = p & (1 << -d) - 1, p >>= -d, d += s; d > 0; o = 256 * o + e[t + h], 
h += _, d -= 8) ;
for (c = o & (1 << -d) - 1, o >>= -d, d += n; d > 0; c = 256 * c + e[t + h], h += _, 
d -= 8) ;
if (0 === o) o = 1 - l; else {
if (o === r) return c ? NaN : 1 / 0 * (p ? -1 : 1);
c += Math.pow(2, n), o -= l;
}
return (p ? -1 : 1) * c * Math.pow(2, o - n);
}, i.write = function(e, t, i, n, a, o) {
var c, s, r, l = 8 * o - a - 1, d = (1 << l) - 1, h = d >> 1, _ = 23 === a ? Math.pow(2, -24) - Math.pow(2, -77) : 0, p = n ? 0 : o - 1, u = n ? 1 : -1, f = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;
for (t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (s = isNaN(t) ? 1 : 0, c = d) : (c = Math.floor(Math.log(t) / Math.LN2), 
t * (r = Math.pow(2, -c)) < 1 && (c--, r *= 2), (t += c + h >= 1 ? _ / r : _ * Math.pow(2, 1 - h)) * r >= 2 && (c++, 
r /= 2), c + h >= d ? (s = 0, c = d) : c + h >= 1 ? (s = (t * r - 1) * Math.pow(2, a), 
c += h) : (s = t * Math.pow(2, h - 1) * Math.pow(2, a), c = 0)); a >= 8; e[i + p] = 255 & s, 
p += u, s /= 256, a -= 8) ;
for (c = c << a | s, l += a; l > 0; e[i + p] = 255 & c, p += u, c /= 256, l -= 8) ;
e[i + p - u] |= 128 * f;
};
}, {} ],
33: [ function(e, t, i) {
(function(e) {
!function(t) {
function i(e, i, S) {
function E(e, t, i, n) {
return this instanceof E ? y(this, e, t, i, n) : new E(e, t, i, n);
}
function y(e, t, i, n, a) {
if (g && m && (t instanceof m && (t = new g(t)), n instanceof m && (n = new g(n))), 
t || i || n || p) {
c(t, i) || (a = i, n = t, i = 0, t = new (p || Array)(8));
e.buffer = t, e.offset = i |= 0, u !== typeof n && ("string" == typeof n ? L(t, i, n, a || 10) : c(n, a) ? s(t, i, n, a) : "number" == typeof a ? (I(t, i + N, n), 
I(t, i + R, a)) : n > 0 ? D(t, i, n) : n < 0 ? G(t, i, n) : s(t, i, v, 0));
} else e.buffer = r(v, 0);
}
function L(e, t, i, n) {
var a = 0, o = i.length, c = 0, s = 0;
"-" === i[0] && a++;
for (var r = a; a < o; ) {
var l = parseInt(i[a++], n);
if (!(l >= 0)) break;
s = s * n + l, c = c * n + Math.floor(s / C), s %= C;
}
r && (c = ~c, s ? s = C - s : c++), I(e, t + N, c), I(e, t + R, s);
}
function T() {
var e = this.buffer, t = this.offset, i = A(e, t + N), n = A(e, t + R);
return S || (i |= 0), i ? i * C + n : n;
}
function I(e, t, i) {
e[t + w] = 255 & i, i >>= 8, e[t + M] = 255 & i, i >>= 8, e[t + P] = 255 & i, i >>= 8, 
e[t + O] = 255 & i;
}
function A(e, t) {
return e[t + O] * b + (e[t + P] << 16) + (e[t + M] << 8) + e[t + w];
}
var N = i ? 0 : 4, R = i ? 4 : 0, O = i ? 0 : 3, P = i ? 1 : 2, M = i ? 2 : 1, w = i ? 3 : 0, D = i ? l : h, G = i ? d : _, B = E.prototype, k = "is" + e, F = "_" + k;
return B.buffer = void 0, B.offset = 0, B[F] = !0, B.toNumber = T, B.toString = function(e) {
var t = this.buffer, i = this.offset, n = A(t, i + N), a = A(t, i + R), o = "", c = !S && 2147483648 & n;
for (c && (n = ~n, a = C - a), e = e || 10; ;) {
var s = n % e * C + a;
if (n = Math.floor(n / e), a = Math.floor(s / e), o = (s % e).toString(e) + o, !n && !a) break;
}
return c && (o = "-" + o), o;
}, B.toJSON = T, B.toArray = n, f && (B.toBuffer = a), g && (B.toArrayBuffer = o), 
E[k] = function(e) {
return !(!e || !e[F]);
}, t[e] = E, E;
}
function n(e) {
var t = this.buffer, i = this.offset;
return p = null, !1 !== e && 0 === i && 8 === t.length && S(t) ? t : r(t, i);
}
function a(t) {
var i = this.buffer, n = this.offset;
if (p = f, !1 !== t && 0 === n && 8 === i.length && e.isBuffer(i)) return i;
var a = new f(8);
return s(a, 0, i, n), a;
}
function o(e) {
var t = this.buffer, i = this.offset, n = t.buffer;
if (p = g, !1 !== e && 0 === i && n instanceof m && 8 === n.byteLength) return n;
var a = new g(8);
return s(a, 0, t, i), a.buffer;
}
function c(e, t) {
var i = e && e.length;
return t |= 0, i && t + 8 <= i && "string" != typeof e[t];
}
function s(e, t, i, n) {
t |= 0, n |= 0;
for (var a = 0; a < 8; a++) e[t++] = 255 & i[n++];
}
function r(e, t) {
return Array.prototype.slice.call(e, t, t + 8);
}
function l(e, t, i) {
for (var n = t + 8; n > t; ) e[--n] = 255 & i, i /= 256;
}
function d(e, t, i) {
var n = t + 8;
for (i++; n > t; ) e[--n] = 255 & -i ^ 255, i /= 256;
}
function h(e, t, i) {
for (var n = t + 8; t < n; ) e[t++] = 255 & i, i /= 256;
}
function _(e, t, i) {
var n = t + 8;
for (i++; t < n; ) e[t++] = 255 & -i ^ 255, i /= 256;
}
var p, u = "undefined", f = u !== typeof e && e, g = u !== typeof Uint8Array && Uint8Array, m = u !== typeof ArrayBuffer && ArrayBuffer, v = [ 0, 0, 0, 0, 0, 0, 0, 0 ], S = Array.isArray || function(e) {
return !!e && "[object Array]" == Object.prototype.toString.call(e);
}, C = 4294967296, b = 16777216;
i("Uint64BE", !0, !0), i("Int64BE", !0, !1), i("Uint64LE", !1, !0), i("Int64LE", !1, !1);
}("object" == typeof i && "string" != typeof i.nodeName ? i : this || {});
}).call(this, e("buffer").Buffer);
}, {
buffer: 29
} ],
34: [ function(e, t) {
var i = {}.toString;
t.exports = Array.isArray || function(e) {
return "[object Array]" == i.call(e);
};
}, {} ]
}, {}, [ 1 ])(1);
});
cc._RF.pop();
}).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
}, {} ],
newergift_rule: [ function(e, t) {
"use strict";
cc._RF.push(t, "c44bamjILBBiql0oXnJEdRL", "newergift_rule");
cc.Class({
extends: cc.Component,
properties: {
coinLbl: cc.Label,
coinLbl2: cc.Label
},
start: function() {},
init: function(e) {
this.coinLbl && (this.coinLbl.string = e);
this.coinLbl2 && (this.coinLbl2.string = e);
}
});
cc._RF.pop();
}, {} ],
node_downing: [ function(e, t) {
"use strict";
cc._RF.push(t, "6ad08rNbNdNpaxSt1EujdzV", "node_downing");
cc.Class({
extends: cc.Component,
properties: {
gameInEdit: 0,
_gameId: null
},
initGameId: function(e) {
this._gameId = e;
if (cc.vv.SubGameUpdateNode.getComponent("subGameMgr")._isWaitToDownload(e)) this._showUIStage(5); else {
var t = cc.vv.UserManager.isDownloadSubGame(e);
cc.vv.UserManager.isNoNeedDownGame(e) ? this._showUIStage(4) : t ? cc.vv.SubGameUpdateNode.getComponent("subGameMgr").isInCheckDownlist(e) ? this._showUIStage(2) : this._showUIStage(4) : this._showUIStage(2);
}
},
onLoad: function() {
cc.vv.SubGameUpdateNode.on("update_subgame_pro", this.downloadingPro.bind(this));
Global.registerEvent("checkSubStart", this.downloadingStart, this);
Global.registerEvent("checkSubFinish", this.downloadingFinish, this);
Global.registerEvent("SubGameWaiting", this.downloadWaiting, this);
Global.registerEvent("update_subgame_fail", this.downloadFail, this);
Global.registerEvent(EventId.SHOW_LOCK_TIP, this.showLocktip, this);
this.gameInEdit && this.initGameId(this.gameInEdit);
},
start: function() {},
downloadingStart: function(e) {
if (cc.isValid(this.node) && e.detail == this._gameId) {
this._showUIStage(3);
this.setProVal(0);
this.setLblVal(Math.floor(0) + "%");
}
},
downloadingPro: function(e) {
if (cc.isValid(this.node)) {
var t = e.gameId, i = e.per;
if (t == this._gameId) {
this._showUIStage(3);
this.setProVal(i);
this.setLblVal(Math.floor(i) + "%");
}
}
},
downloadingFinish: function(e) {
if (cc.isValid(this.node) && e.detail == this._gameId) {
this._showUIStage(4);
this._showTipText("Download Success!");
}
},
downloadWaiting: function(e) {
var t = e.detail;
if (t == this._gameId) {
cc.log("下载等待：" + t);
this._showUIStage(5);
}
},
downloadFail: function(e) {
var t = e.detail;
if (t && t.id == this._gameId) {
this._showUIStage(4);
t.code && this._showTipText(cc.js.formatStr("Download Failed!(%s)", t.code));
}
},
setProVal: function(e) {
var t = cc.find("node_mask/pro", this.node), i = cc.find("bar", t);
e = Math.max(.01, e / 100);
i.width = e * (t.width - 15);
},
setLblVal: function(e) {
var t = cc.find("node_mask/pro/lbl_pro", this.node);
t && (t.getComponent(cc.Label).string = e);
},
_showUIStage: function(e) {
if (cc.isValid(this.node)) {
var t = this.node.getChildByName("node_mask");
t.active = !0;
var i = cc.find("icon/spr_down_icon", this.node), n = cc.find("icon/spr_lock_icon", this.node), a = cc.find("icon/spr_wait_icon", this.node);
a.active = !1;
var o = this.node.getChildByName("spr_tip_bg");
o.active = !1;
if (1 == e) {
n.active = !0;
i.active = !1;
t.active = !1;
this.setProVal(0);
var c = cc.vv.UserManager.getGameListById(this._gameId);
if (c) {
var s = "Unlock at LV." + c.level;
cc.find("text_tip", o).getComponent(cc.Label).string = s;
}
} else if (2 == e) {
i.active = !0;
n.active = !1;
t.active = !1;
this.setProVal(0);
this.setLblVal(0);
} else if (3 == e) {
n.active = !1;
i.active = !0;
var r = Global.random(0, 100);
this.setProVal(r);
this.setLblVal(r);
} else if (4 == e) {
t.active = !1;
i.active = !1;
n.active = !1;
} else if (5 == e) {
n.active = !1;
i.active = !1;
a.active = !0;
this.setProVal(0);
this.setLblVal("0%");
}
}
},
showLocktip: function(e) {
if (e.detail == this._gameId) {
this._showUIStage(1);
this._showTipText();
}
},
_showTipText: function(e) {
Global.playCashEff("hall/game_lock");
var t = cc.find("spr_tip_bg", this.node);
e && (cc.find("text_tip", t).getComponent(cc.Label).string = e);
t.stopAllActions();
t.active = !0;
t.opacity = 0;
cc.tween(t).to(.2, {
opacity: 255
}).delay(3.5).to(.2, {
opacity: 0
}).start();
}
});
cc._RF.pop();
}, {} ],
randomText_tip: [ function(e, t) {
"use strict";
cc._RF.push(t, "f0653aoZA1CR619SDKlJpRn", "randomText_tip");
var i = [ "loading_tip1", "loading_tip2", "loading_tip3", "loading_tip4", "loading_tip5", "loading_tip6", "loading_tip7", "loading_tip8" ];
cc.Class({
extends: cc.Component,
properties: {
_tipIndex: [],
_nowTipIndex: -1
},
onLoad: function() {
for (var e = this, t = 0; t < i.length; t++) this._tipIndex.push(t);
this.showRandomTips();
cc.tween(this.node).delay(8).call(function() {
e.showRandomTips();
}).start();
},
start: function() {},
showRandomTips: function() {
if (cc.isValid(this.node, !0)) {
var e = this._tipIndex[Global.random(0, this._tipIndex.length - 1)];
I18N.setI18nLabel(this.node, cc.vv.Language[i[e]]);
this.removeItemByVal(e);
this._nowTipIndex >= 0 && this._tipIndex.push(this._nowTipIndex);
this._nowTipIndex = e;
}
},
removeItemByVal: function(e) {
for (var t = 0; t < this._tipIndex.length; t++) if (this._tipIndex[t] === e) {
this._tipIndex.splice(t, 1);
break;
}
}
});
cc._RF.pop();
}, {} ],
subGameMgr: [ function(e, t) {
"use strict";
cc._RF.push(t, "423c1ScuTVFHKFdG2CwN7T/", "subGameMgr");
e("Md5");
cc.Class({
extends: cc.Component,
properties: {
_curCheckId: null,
_downList: [],
_newList: [],
_checkNeedDown: []
},
onLoad: function() {
Global.isNative();
},
start: function() {},
setLoadingCheckModel: function(e, t) {
this._bOnlyCheck = e;
this._nextCheckCall = t;
},
notiyNextCheck: function(e) {
AppLog.warn("【检查】完成：" + e);
this._curCheckId = null;
this._updateGameId = null;
this._nextCheckCall && this._nextCheckCall();
},
_addCheckNeedDown: function(e) {
AppLog.warn("【检查】添加到下载列表：" + e);
e && this._checkNeedDown.push(e);
},
isInCheckDownlist: function(e) {
for (var t = !1, i = 0; i < this._checkNeedDown.length; i++) if (e == this._checkNeedDown[i]) {
t = !0;
break;
}
return t;
},
_delCheckNeedDown: function(e) {
for (var t = -1, i = 0; i < this._checkNeedDown.length; i++) if (this._checkNeedDown[i] == e) {
t = i;
break;
}
t > -1 && this._checkNeedDown.splice(t, 1);
},
onCheckSubGame: function(e) {
var t = e;
AppLog.warn("检查热更：" + t);
this.coustomCheck(t);
},
coustomCheck: function(e) {
if (cc.vv.GameItemCfg[e]) {
if (this._isAreadyNew(e)) {
if (this._bOnlyCheck) {
AppLog.warn("已经是最新了，检查下一个");
this.notiyNextCheck(5);
} else {
AppLog.warn("已经是最新了，直接进入");
Global.dispatchEvent("enter_game", e);
}
return;
}
if (this._isInDownList(e)) {
AppLog.warn("已经在下载列表中了");
return;
}
this._curCheckId = e;
if (cc.vv.UserManager.isDownloadSubGame(e)) this.addGameToDownlist(e); else {
AppLog.warn("没下载过：" + e);
this._bOnlyCheck ? this.notiyNextCheck(6) : this.addGameToDownlist(e);
}
} else {
AppLog.warn("未找到下载游戏配置:" + e);
this.notiyNextCheck(7);
}
},
addGameToDownlist: function(e) {
this._curCheckId = null;
AppLog.warn("需要添加到下载列表:" + e);
this._downList.push(e);
if (this._updateGameId) {
AppLog.warn("等待下载" + this._updateGameId);
Global.dispatchEvent("SubGameWaiting", e);
} else this.startOneSub();
},
_isInDownList: function(e) {
for (var t = !1, i = 0; i < this._downList.length; i++) if (e == this._downList[i]) {
t = !0;
break;
}
return t;
},
_isWaitToDownload: function(e) {
return !(!this._isInDownList(e) || e == this._updateGameId);
},
_isAreadyNew: function(e) {
for (var t = !1, i = 0; i < this._newList.length; i++) if (this._newList[i] == e) {
t = !0;
break;
}
return t;
},
_addToNewList: function(e) {
AppLog.warn("添加到最新：" + e);
this._isAreadyNew(e) || this._newList.push(e);
this._delCheckNeedDown(e);
},
startOneSub: function() {
this._needUpdate = !1;
this._ckfailCount = 0;
this._failCount = 0;
var e = this._downList[0];
this._updateGameId = e;
Global.dispatchEvent("checkSubStart", e);
this.startCheck(e);
},
checkNextSub: function() {
this._assManager && this._assManager.setEventCallback(null);
this._assManager = null;
this._updating = !1;
this._failCount = 0;
this._ckfailCount = 0;
this._downList.shift();
this._delCheckNeedDown(this._updateGameId);
this._updateGameId = null;
this._downList[0] && this.startOneSub();
},
startCheck: function(e) {
var t = this, i = cc.vv.GameItemCfg[e];
if (i) {
var n = i.name;
t._subGameName = n;
var a = "Manifest/" + n + "/" + n;
cc.loader.loadRes(a, cc.Asset, function(i, a) {
if (i) {
t._updateGameId = null;
AppLog.warn("加载本地project失败:" + n);
Global.dispatchEvent("update_subgame_fail", {
id: e,
code: 1
});
t.checkNextSub();
} else t.checkHotUpdate(a);
});
} else {
t._updateGameId = null;
t.checkNextSub();
AppLog.warn("未找到游戏配置");
}
},
checkHotUpdate: function(e) {
StatisticsMgr.reqReport(StatisticsMgr.REQ_SUBGAME_DOWNLOAD_START, null, this._updateGameId);
this._storagePath = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "/") + "remote-asset/" + this._subGameName;
AppLog.log("this._storagePath = " + this._storagePath);
if (!this._assManager) {
this._assManager = new jsb.AssetsManager("", this._storagePath, this.versionComHandle.bind(this));
this._assManager.setVerifyCallback(this.verifyCallback.bind(this));
this._assManager.setMaxConcurrentTask(8);
}
var t = jsb.fileUtils.getStringFromFile(e.nativeUrl);
AppLog.log("fileStr = " + t);
this.loadCustomManifest(this._assManager, t);
this._SubGameStatic(StatisticsMgr.HTTP_SUBGAME_HOT_START);
this._assManager.setEventCallback(this.updateCallback.bind(this));
this._assManager.update();
this._updating = !0;
},
loadCustomManifest: function(e, t) {
if (e.getState() === jsb.AssetsManager.State.UNINITED) {
AppLog.warn("custommanifest:" + t);
var i = new jsb.Manifest(t, this._storagePath);
e.loadLocalManifest(i, this._storagePath);
}
},
checkCallback: function(e) {
var t = e.getEventCode();
AppLog.warn("Code: " + t);
this._isDownloading = !0;
var i = !1;
switch (t) {
case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
AppLog.warn("No local manifest file found, hot update skipped.");
i = !1;
break;

case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
AppLog.warn("Fail to download manifest file, hot update skipped.");
i = !1;
break;

case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
AppLog.warn("Already up to date with the latest remote version.");
this._isTry || cc.vv.SubGameUpdateNode.emit("already_update_to_date", this._updateGameId);
i = !0;
break;

case jsb.EventAssetsManager.NEW_VERSION_FOUND:
this.startHotupdate();
return;

default:
return;
}
this._assManager.setEventCallback(null);
this._updating = !1;
AppLog.warn("-------------------finish: " + t);
if (i) if (this._bOnlyCheck) {
this._addToNewList(this._updateGameId);
this.checkNextSub();
this.notiyNextCheck(1);
} else this.enterGame(); else if (this._bOnlyCheck) {
this.checkNextSub();
this.notiyNextCheck(2);
} else {
Global.dispatchEvent("update_subgame_fail", {
id: this._updateGameId,
code: t
});
++this._ckfailCount;
console.log("**************fail count:" + this._ckfailCount);
if (this._ckfailCount < 5) this.startCheck(this._updateGameId); else {
this._updateGameId = null;
console.log("**************fail Show faildlg" + this._ckfailCount);
this.showFailDlg();
}
}
},
startHotupdate: function() {
if (this._assManager && !this._updating) {
this._assManager.setEventCallback(null);
if (this._bOnlyCheck) {
this._addCheckNeedDown(this._updateGameId);
this.checkNextSub();
this.notiyNextCheck(3);
} else {
this._assManager.setEventCallback(this.updateCallback.bind(this));
this._assManager.update();
this._updating = !0;
}
}
},
showFailDlg: function(e) {
void 0 === e && (e = 0);
StatisticsMgr.reqReport(StatisticsMgr.REQ_SUBGAME_DOWNLOAD_FAILE, null, this._updateGameId);
Global.dispatchEvent("update_subgame_fail", {
id: this._updateGameId,
code: e
});
this._bOnlyCheck ? this.notiyNextCheck(4) : this.checkNextSub();
},
updateCallback: function(e) {
var t = this, i = !1, n = !1, a = !1;
this._isDownloading = !0;
AppLog.log("subGameHotUpdateEventCode:" + e.getEventCode());
switch (e.getEventCode()) {
case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
AppLog.warn("No local manifest file found, hot update skipped.");
a = !0;
break;

case jsb.EventAssetsManager.UPDATE_PROGRESSION:
this._needUpdate = !0;
var o = e.getDownloadedBytes() / e.getTotalBytes() * 100;
o = isNaN(o) ? 0 : o;
cc.vv.SubGameUpdateNode.emit("update_subgame_pro", {
per: Global.S2P(o, 0),
gameId: this._updateGameId
});
break;

case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
AppLog.warn("Fail to download manifest file, hot update skipped.");
a = !0;
break;

case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
AppLog.warn("@@@@@@@@@updateCallback Already up to date with the latest remote version.");
n = !0;
break;

case jsb.EventAssetsManager.UPDATE_FINISHED:
AppLog.warn("Update finished. " + e.getMessage());
cc.vv.SubGameUpdateNode.emit("update_subgame_status", {
txt: "更新完成!",
gameId: this._updateGameId
});
n = !0;
i = !0;
this._canRetry = !1;
break;

case jsb.EventAssetsManager.UPDATE_FAILED:
AppLog.warn("Update failed. " + e.getMessage());
this._SubGameStatic(StatisticsMgr.HTTP_SUBGAME_HOT_RESULT, "Fail");
this._updating = !1;
this._canRetry = !0;
break;

case jsb.EventAssetsManager.ERROR_UPDATING:
var c = e.getAssetId() + ", " + e.getMessage();
AppLog.warn("Asset update error: " + c);
this._SubGameStatic(StatisticsMgr.HTTP_SUBGAME_HOT_PROCESS, c);
break;

case jsb.EventAssetsManager.ERROR_DECOMPRESS:
AppLog.warn(e.getMessage());
a = !0;
}
if (this._canRetry) {
++this._failCount;
if (this._failCount < 3) {
this._canRetry = !1;
var s = cc.isValid(this._assManager);
AppLog.warn("update Faile,retry:" + s);
if (s) {
setTimeout(function() {
t._assManager.downloadFailedAssets();
}, 1e3);
return;
}
this.showFailDlg(3);
return;
}
this.showFailDlg(4);
} else if (a) this.showFailDlg(5); else if (cc.isValid(this._assManager)) {
if (i) {
i = !1;
for (var r = jsb.fileUtils.getSearchPaths(), l = this._assManager.getLocalManifest().getSearchPaths(), d = [], h = 0; h < l.length; h++) d.push(l[h]);
for (var _ = 0; _ < r.length; _++) d.push(r[_]);
cc.sys.localStorage.setItem("HotUpdateSearchPaths", JSON.stringify(d));
}
if (n) {
this._assManager.setEventCallback(null);
cc.sys.localStorage.setItem(this._subGameName, "1");
this.enterGame();
}
}
},
enterGame: function() {
StatisticsMgr.reqReport(StatisticsMgr.REQ_SUBGAME_DOWNLOAD_SUCCESS, null, this._updateGameId);
this._addToNewList(this._updateGameId);
if (this._needUpdate) {
this._needUpdate = null;
this._SubGameStatic(StatisticsMgr.HTTP_SUBGAME_HOT_RESULT, "Success");
Global.dispatchEvent("checkSubFinish", this._updateGameId);
cc.vv.EventManager.emit("checkSubFinish", this._updateGameId);
this._updateGameId = null;
this.checkNextSub();
} else {
var e = this._updateGameId;
this.checkNextSub();
AppLog.warn("子包热更检查完成，准备进入游戏:" + e);
Global.dispatchEvent("enter_game", e);
this._updateGameId = null;
}
},
_SubGameStatic: function(e, t) {
if (!this._bOnlyCheck) {
var i = {
key: "gameid"
};
i.val = this._updateGameId;
StatisticsMgr.httpReport(e, t, i);
}
},
versionComHandle: function(e, t) {
AppLog.log("JS Custom Version Compare: version A is " + e + ", version B is " + t);
for (var i = e.split("."), n = t.split("."), a = 0; a < i.length; ++a) if (parseInt(i[a]) !== parseInt(n[a])) return -1;
return n.length > i.length ? -1 : 0;
},
verifyCallback: function(e, t) {
var i = t.compressed, n = (t.md5, t.path);
t.size;
if (i) {
AppLog.log("Verification passed : " + n);
return !0;
}
return !0;
},
checktNewPackUrl: function(e) {
if (e) {
this._newPackUrl || (this._newPackUrl = cc.sys.localStorage.getItem("newpackurl"));
if (!this._newPackUrl || Global.packageUrl == this._newPackUrl) {
AppLog.warn("不用替换子游戏热更地址");
return e;
}
if (cc.js.isString(e)) e = e.replace(new RegExp(Global.packageUrl, "g"), this._newPackUrl); else {
e.packageUrl && (e.packageUrl = e.packageUrl.replace(Global.packageUrl, this._newPackUrl));
e.remoteVersionUrl && (e.remoteVersionUrl = e.remoteVersionUrl.replace(Global.packageUrl, this._newPackUrl));
e.remoteManifestUrl && (e.remoteManifestUrl = e.remoteManifestUrl.replace(Global.packageUrl, this._newPackUrl));
}
}
return e;
},
deleteSubgameDir: function(e) {
if (Global.isNative()) {
var t = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "/") + "remote-asset/" + e;
if (jsb.fileUtils.isDirectoryExist(t)) {
jsb.fileUtils.removeDirectory(t);
cc.sys.localStorage.removeItem(e);
AppLog.warn("[删除子游戏]" + e);
}
}
}
});
cc._RF.pop();
}, {
Md5: "Md5"
} ],
use_reversed_rotateBy: [ function(e, t) {
"use strict";
cc._RF.push(t, "fd7dcjOqbtN9aAgw4ZsKpcl", "use_reversed_rotateBy");
cc.RotateBy._reverse = !0;
cc._RF.pop();
}, {} ],
withdraw_record_item: [ function(e, t) {
"use strict";
cc._RF.push(t, "3fe623XXFJOfqxvQ6Zy/ucK", "withdraw_record_item");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {},
init: function(e) {
this.copyStr = e.orderid;
Global.setLabelString("time", this.node, Global.getTimeStr(e.create_time));
var t = cc.find("copy", this.node);
Global.btnClickEvent(t, this.onClickCopy, this);
Global.setLabelString("order", this.node, e.orderid);
Global.setLabelString("state", this.node, this.getWithdrawStatus(e.status));
Global.setLabelString("amount", this.node, e.coin);
var i = cc.find("withdraw_icon", this.node);
cc.find("process", i).active = e.status < 2;
cc.find("suc", i).active = 2 === e.status;
cc.find("fail", i).active = e.status > 2;
},
onClickCopy: function() {
cc.vv.PlatformApiMgr.Copy(this.copyStr);
cc.vv.FloatTip.show("copy orderid!");
},
getWithdrawStatus: function(e) {
return 0 === e || 1 === e || 4 === e ? "being processed" : 2 === e ? "successful" : 3 === e ? "denied" : void 0;
},
start: function() {}
});
cc._RF.pop();
}, {} ],
yd_Record_Item: [ function(e, t) {
"use strict";
cc._RF.push(t, "ab77cmq9qVBm6RFhPcKNXQo", "yd_Record_Item");
var i, n = ((i = {})[1] = {
symbol: 1,
mult: 2
}, i[2] = {
symbol: 3,
mult: 10
}, i[3] = {
symbol: 5,
mult: 2
}, i[4] = {
symbol: 2,
mult: 8
}, i[5] = {
symbol: 4,
mult: 2
}, i[6] = {
symbol: 1,
mult: 5
}, i[7] = {
symbol: 3,
mult: 2
}, i[8] = {
symbol: 5,
mult: 50
}, i[9] = {
symbol: 2,
mult: 2
}, i[10] = {
symbol: 4,
mult: 20
}, i), a = [ [ 1 ], [ 2 ], [ 3 ], [ 4 ], [ 5 ], [ 6 ], [ 7 ], [ 8 ], [ 9 ], [ 10 ], [ 11 ], [ 12 ], [ 13 ], [ 14 ], [ 15 ], [ 16 ], [ 17 ], [ 18 ], [ 19 ], [ 20 ], [ 21 ], [ 22 ], [ 23 ], [ 24 ], [ 25 ], [ 26 ], [ 27 ], [ 28 ], [ 29 ], [ 30 ], [ 31 ], [ 32 ], [ 33 ], [ 34 ], [ 35 ], [ 36 ], [ 0 ], [ 0, 3 ], [ 0, 2 ], [ 0, 1 ], [ 2, 3 ], [ 2, 1 ], [ 3, 6 ], [ 2, 5 ], [ 1, 4 ], [ 5, 6 ], [ 5, 4 ], [ 6, 9 ], [ 5, 8 ], [ 4, 7 ], [ 9, 8 ], [ 8, 7 ], [ 9, 12 ], [ 8, 11 ], [ 7, 10 ], [ 12, 11 ], [ 11, 10 ], [ 12, 15 ], [ 11, 14 ], [ 10, 13 ], [ 15, 14 ], [ 14, 13 ], [ 15, 18 ], [ 14, 17 ], [ 13, 16 ], [ 18, 17 ], [ 17, 16 ], [ 18, 21 ], [ 17, 20 ], [ 16, 19 ], [ 21, 20 ], [ 20, 19 ], [ 21, 24 ], [ 20, 23 ], [ 19, 22 ], [ 24, 23 ], [ 23, 22 ], [ 24, 27 ], [ 23, 26 ], [ 22, 25 ], [ 27, 26 ], [ 26, 25 ], [ 27, 30 ], [ 26, 29 ], [ 25, 28 ], [ 30, 29 ], [ 29, 28 ], [ 30, 33 ], [ 29, 32 ], [ 28, 31 ], [ 33, 32 ], [ 32, 31 ], [ 33, 36 ], [ 32, 35 ], [ 31, 34 ], [ 36, 35 ], [ 35, 34 ], [ 0, 3, 2 ], [ 0, 2, 1 ], [ 1, 3, 2 ], [ 6, 5, 4 ], [ 9, 8, 7 ], [ 12, 11, 10 ], [ 15, 14, 13 ], [ 18, 17, 16 ], [ 21, 20, 19 ], [ 24, 23, 22 ], [ 27, 26, 25 ], [ 30, 29, 28 ], [ 33, 32, 31 ], [ 36, 35, 34 ], [ 3, 6, 2, 5 ], [ 2, 5, 1, 4 ], [ 6, 9, 5, 8 ], [ 5, 8, 4, 7 ], [ 9, 12, 8, 11 ], [ 8, 11, 7, 10 ], [ 12, 15, 11, 14 ], [ 11, 14, 10, 13 ], [ 15, 18, 14, 17 ], [ 14, 17, 13, 16 ], [ 18, 21, 17, 20 ], [ 17, 20, 16, 19 ], [ 21, 24, 20, 23 ], [ 20, 23, 19, 22 ], [ 24, 27, 23, 26 ], [ 23, 26, 22, 25 ], [ 27, 30, 26, 29 ], [ 26, 29, 25, 28 ], [ 30, 33, 29, 32 ], [ 29, 32, 28, 31 ], [ 33, 36, 32, 35 ], [ 32, 35, 31, 34 ], [ 1, 2, 3, 4, 5, 6 ], [ 4, 5, 6, 7, 8, 9 ], [ 7, 8, 9, 10, 11, 12 ], [ 10, 11, 12, 13, 14, 15 ], [ 13, 14, 15, 16, 17, 18 ], [ 16, 17, 18, 19, 20, 21 ], [ 19, 20, 21, 22, 23, 24 ], [ 22, 23, 24, 25, 26, 27 ], [ 25, 26, 27, 28, 29, 30 ], [ 28, 29, 30, 31, 32, 33 ], [ 31, 32, 33, 34, 35, 36 ], [ 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36 ], [ 2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35 ], [ 1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31, 34 ], [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ], [ 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 ], [ 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 ], [ 1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36 ], [ 2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35 ], [ 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35 ], [ 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36 ], [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 ], [ 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 ] ];
cc.Class({
extends: e("Table_Record_Item"),
properties: {
atlas: cc.SpriteAtlas
},
onLoad: function() {
this._super();
},
setGameId: function(e) {
this.gameId = e;
},
showGameResult: function(e) {
var t = this.getShowConf(this.gameId), i = cc.find("node_result", this.node);
i.children.forEach(function(e) {
e.active = !1;
});
var n = cc.find(t.result_node, i);
n.active = !0;
t.result(e, n, this.atlas);
},
showGameOption: function(e) {
var t = this.getShowConf(this.gameId), i = cc.find("node_option", this.node);
i.children.forEach(function(e) {
e.active = !1;
});
var n = cc.find(t.option_node, i);
n.active = !0;
n.scale = t.option_scale || 1;
t.option(e, n, this.atlas);
},
getShowConf: function(e) {
var t = this;
return {
0: {
result_node: "",
option_node: "",
result: function() {},
option: function() {}
},
11: {
result_node: "11",
option_node: "lbl",
result: function(e, t) {
var i = cc.color(108, 153, 255), n = cc.color(243, 50, 50), a = [ "", "Ander", "Bahar", "1-5", "6-10", "11-15", "16-25", "26-30", "31-35", "36-40", "41 or more" ], o = cc.find("lbl_res1", t), c = cc.find("lbl_res2", t);
o.getComponent(cc.Label).string = a[e.winplace[0]];
c.getComponent(cc.Label).string = a[e.winplace[1]];
if (1 == e.res) {
o.color = i;
c.color = i;
} else {
o.color = n;
c.color = n;
}
},
option: function(e, t) {
t.getComponent(cc.Label).string = [ "", "Ander", "Bahar", "1-5", "6-10", "11-15", "16-25", "26-30", "31-35", "36-40", "41 or more" ][e];
}
},
12: {
result_node: "12",
option_node: "lbl",
result: function(e, t, i) {
var n = e.mult, a = cc.find("item", t), o = n >= 2 ? "Crash_hj_l" : "Crash_Guess2", c = n >= 2 ? "Crash_red" : "Crash_green";
a.getComponent(cc.Sprite).spriteFrame = i.getSpriteFrame(o);
cc.find("color", a).getComponent(cc.Sprite).spriteFrame = i.getSpriteFrame(c);
Global.setLabelString("val", a, n + "x");
},
option: function(e, t) {
t.getComponent(cc.Label).string = e;
}
},
13: {
result_node: "13",
option_node: "spr",
result: function(e, t, i) {
t.children.forEach(function(e) {
e.active = !1;
});
for (var n = 0, a = 0; a < e.res.length; a++) if (e.res[a] >= 2) {
cc.find("item" + (n + 1), t).active = !0;
cc.find("item" + (n + 1) + "/spr", t).getComponent(cc.Sprite).spriteFrame = i.getSpriteFrame("JhandiMunda_record" + (a + 1));
n += 1;
}
},
option: function(e, t, i) {
t.getComponent(cc.Sprite).spriteFrame = i.getSpriteFrame("JhandiMunda_record" + e);
}
},
14: {
result_node: "14",
option_node: "lbl",
result: function(e, t, i) {
cc.find("paoma_result", t).getComponent(cc.Sprite).spriteFrame = i.getSpriteFrame("HorseRacing_paoma_result" + e.res);
},
option: function(e, t) {
t.getComponent(cc.Label).string = e;
}
},
15: {
result_node: "15",
option_node: "lbl",
result: function(e, t, i) {
var n = "";
0 == e.ball || 5 == e.ball ? n = "WingoLottery_x1" : e.ball < 5 ? n = "WingoLottery_x5" : e.ball > 5 && (n = "WingoLottery_x3");
var a = cc.find("spr", t);
a.getComponent(cc.Sprite).spriteFrame = i.getSpriteFrame(n);
a.getChildByName("lbl").getComponent(cc.Label).string = e.ball;
},
option: function(e, t) {
t.getComponent(cc.Label).string = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "1-4", "0/5", "6-9" ][e - 1];
}
},
16: {
result_node: "16",
option_node: "spr",
option_scale: .8,
result: function(e, t, i) {
var a = n[e.res];
if (a) {
cc.find("symbol", t).getComponent(cc.Sprite).spriteFrame = i.getSpriteFrame("FortuneWheel_symbol_" + a.symbol);
cc.find("mult", t).getComponent(cc.Sprite).spriteFrame = i.getSpriteFrame("FortuneWheel_x" + a.mult);
}
},
option: function(e, t, i) {
t.getComponent(cc.Sprite).spriteFrame = i.getSpriteFrame("FortuneWheel_symbol_" + e);
}
},
17: {
result_node: "17",
option_node: "lbl",
result: function(e, t, i) {
var n = e.res;
cc.find("item", t).getComponent(cc.Sprite).spriteFrame = i.getSpriteFrame([ "Lhdz_zoushi_icon01", "Lhdz_zoushi_icon02", "Lhdz_zoushi_icon03" ][n - 1]);
},
option: function(e, t) {
t.getComponent(cc.Label).string = [ "Dragon", "Tiger", "Tie" ][e - 1];
}
},
18: {
result_node: "18",
option_node: "lbl",
result: function(e, t, i) {
var n, o = e.res, c = cc.find("ball", t);
Global.setLabelString("val", c, o);
n = 0 == o ? "Roulette_end_lingbg" : 1 == function(e) {
for (var t = 1, i = a[150], n = 0; n < i.length; n++) if (e == i[n]) {
t = 2;
break;
}
return t;
}(o) ? "Roulette_end_heibg" : "Roulette_end_hongbg";
c.getComponent(cc.Sprite).spriteFrame = i.getSpriteFrame(n);
},
option: function(e, t) {
t.getComponent(cc.Label).string = e;
}
},
19: {
result_node: "19",
option_node: "lbl",
result: function(e, t, i) {
t.active = !0;
var n = cc.find("zhuzi", t);
n.getComponent(cc.Sprite).spriteFrame = i.getSpriteFrame([ "Baccarat_zoushi_icon02", "Baccarat_zoushi_icon01", "Baccarat_zoushi_icon03" ][e.res - 1]);
cc.find("p_p", n).active = e.winplace.indexOf(5) >= 0;
cc.find("b_p", n).active = e.winplace.indexOf(4) >= 0;
},
option: function(e, t) {
t.getComponent(cc.Label).string = [ "Banker", "Player", "Tie", "Banker Pair", "Player Pair" ][e - 1];
}
},
20: {
result_node: "20",
option_node: "lbl",
result: function(e, t, i) {
var n = cc.find("item", t);
e.gold ? n.getComponent(cc.Sprite).spriteFrame = i.getSpriteFrame("SevenUpDown_r_h") : n.getComponent(cc.Sprite).spriteFrame = i.getSpriteFrame([ "SevenUpDown_r_hong", "SevenUpDown_r_lv", "SevenUpDown_r_lan" ][e.res - 1]);
cc.find("lbl", n).getComponent(cc.Label).string = e.point;
},
option: function(e, t) {
t.getComponent(cc.Label).string = [ "2-6", "8-12", "7" ][e - 1];
}
},
21: {
result_node: "21",
option_node: "spr",
option_scale: .8,
result: function(e, t, i) {
if (e.win.length > 1) {
cc.find("icon_deng", t).active = !0;
cc.find("symbol", t).active = !1;
cc.find("mult", t).getComponent(cc.Label).string = "";
} else {
cc.find("icon_deng", t).active = !1;
cc.find("symbol", t).active = !0;
cc.find("symbol", t).getComponent(cc.Sprite).spriteFrame = i.getSpriteFrame("laba_bet_" + (e.win[0].place - 1));
cc.find("mult", t).getComponent(cc.Label).string = "x" + e.win[0].mult;
}
},
option: function(e, t, i) {
t.getComponent(cc.Sprite).spriteFrame = i.getSpriteFrame("laba_bet_" + (e - 1));
}
},
22: {
result_node: "22",
option_node: "lbl",
result: function(e, t) {
var i = t, n = e.mult;
i.getComponent(cc.Label).string = n.toFixed(2) + "x";
i.color = n > 1.5 ? cc.color().fromHEX("#8C3EF7") : cc.color().fromHEX("#04A1E6");
},
option: function(e, t) {
t.getComponent(cc.Label).string = e;
}
},
23: {
result_node: "22",
option_node: "lbl",
result: function(e, t) {
var i = t, n = e.mult;
i.getComponent(cc.Label).string = n.toFixed(2) + "x";
i.color = n > 1.5 ? cc.Color.GREEN : cc.Color.BLUE;
},
option: function(e, t) {
t.getComponent(cc.Label).string = e;
}
},
24: {
result_node: "22",
option_node: "lbl",
result: function(e, t) {
var i = t, n = e.mult;
i.getComponent(cc.Label).string = n.toFixed(2) + "x";
i.color = n > 1.5 ? cc.color(72, 209, 163) : cc.color(90, 118, 207);
},
option: function(e, t) {
t.getComponent(cc.Label).string = e;
}
},
25: {
result_node: "22",
option_node: "lbl",
result: function(e, t) {
var i = t, n = e.mult;
i.getComponent(cc.Label).string = n.toFixed(2) + "x";
i.color = n > 1.5 ? cc.color(72, 209, 163) : cc.color(90, 118, 207);
},
option: function(e, t) {
t.getComponent(cc.Label).string = e;
}
},
26: {
result_node: "22",
option_node: "lbl",
result: function(e, t) {
var i = t, n = e.mult;
i.getComponent(cc.Label).string = n.toFixed(2) + "x";
i.color = n > 1.5 ? cc.Color.GREEN : cc.color().fromHEX("#9d1918");
},
option: function(e, t) {
t.getComponent(cc.Label).string = e;
}
},
27: {
result_node: "22",
option_node: "lbl",
result: function(e, t) {
var i = t, n = e.mult;
i.getComponent(cc.Label).string = n.toFixed(2) + "x";
i.color = n > 1.5 ? cc.Color.GREEN : cc.Color.RED;
},
option: function(e, t) {
t.getComponent(cc.Label).string = e;
}
},
28: {
result_node: "22",
option_node: "lbl",
result: function(e, t) {
var i = t, n = e;
i.getComponent(cc.Label).string = Global.SavePoints(n.num);
i.color = n.res > 0 ? cc.Color.GREEN : cc.Color.WHITE;
},
option: function(e, i) {
var n = e, a = JSON.parse(t._itemdata.result);
1 == a.roll ? n = "UNDER" : 2 == a.roll && (n = "OVER");
i.getComponent(cc.Label).string = n;
}
},
29: {
result_node: "22",
option_node: "lbl",
result: function(e, t) {
var i = e;
t.getComponent(cc.Label).string = i.mult + "x";
},
option: function(e, i) {
var n = JSON.parse(t._itemdata.result);
i.getComponent(cc.Label).string = n.multiplier + "x";
i.color = 1 == n.res ? cc.Color.GREEN : cc.Color.RED;
}
},
30: {
result_node: "22",
option_node: "lbl",
result: function(e, t) {
var i = t, n = e;
i.getComponent(cc.Label).string = Global.SavePoints(n.mult);
i.color = n.mult > 1 ? cc.Color.GREEN : cc.Color.WHITE;
},
option: function(e, i) {
var n = e, a = JSON.parse(t._itemdata.result);
1 == a.color ? n = "GREEN" : 2 == a.color ? n = "YELLOW" : 3 == a.color && (n = "RED");
i.getComponent(cc.Label).string = n;
}
},
31: {
result_node: "31",
option_node: "31",
result: function(e, t) {
for (var i = e, n = t, a = 0; a < 10; a++) {
var o = cc.find("item" + (a + 1), n);
if (cc.js.isNumber(i.lottery_nums[a])) {
o.active = !0;
Global.setLabelString("num", o, i.lottery_nums[a]);
} else o.active = !1;
}
},
option: function(e, i, n) {
for (var a = JSON.parse(t._itemdata.result), o = function(e) {
for (var t = 0; t < a.lottery_nums.length; t++) if (e == a.lottery_nums[t]) return !0;
return !1;
}, c = i, s = 0; s < 10; s++) {
var r = cc.find("item" + (s + 1), c);
if (cc.js.isNumber(a.nums[s])) {
r.active = !0;
var l = a.nums[s];
Global.setLabelString("num", r, l);
var d = "Keno_ball_sel";
o(l) && (d = "Keno_ball_hit");
cc.find("icon", r).getComponent(cc.Sprite).spriteFrame = n.getSpriteFrame(d);
} else r.active = !1;
}
}
},
32: {
result_node: "22",
option_node: "lbl",
result: function(e, t) {
var i = t, n = e;
i.getComponent(cc.Label).string = "x" + (n.winMult || 0);
i.color = n.winMult > 0 ? cc.Color.GREEN : cc.Color.WHITE;
},
option: function(e, i) {
var n;
n = "Mines " + (JSON.parse(t._itemdata.result).mineCnt || 0);
i.getComponent(cc.Label).string = n;
}
},
33: {
result_node: "22",
option_node: "33",
option_scale: .3,
result: function(e, t) {
var i = e, n = t;
n.getComponent(cc.Label).string = 1 == i.result ? "WIN" : "LOSE";
n.color = i.res > 0 ? cc.Color.GREEN : cc.Color.WHITE;
},
option: function(e, i) {
var n = JSON.parse(t._itemdata.result);
i.getComponent("Poker").show16Poker(n.card);
}
},
34: {
result_node: "22",
option_node: "lbl",
result: function(e, t) {
var i = e;
t.getComponent(cc.Label).string = "x" + i.mult;
},
option: function(e, i) {
var n;
n = [ "Easy", "Medium", "Hard", "Extreme", "Nightmare" ][JSON.parse(t._itemdata.result).difficulty - 1];
i.getComponent(cc.Label).string = n;
}
},
35: {
result_node: "14",
option_node: "lbl",
result: function(e, t, i) {
var n = e;
cc.find("paoma_result", t).getComponent(cc.Sprite).spriteFrame = i.getSpriteFrame([ "rec_red_1", "rec_black_1", "rec_green_1" ][n.res - 1]);
},
option: function(e, t) {
t.getComponent(cc.Label).string = "--";
}
},
36: {
result_node: "22",
option_node: "spr",
result: function(e, t) {
var i = t, n = e;
i.getComponent(cc.Label).string = n.result == n.choose ? "WIN" : "LOSE";
i.color = n.result == n.choose ? cc.Color.GREEN : cc.Color.WHITE;
},
option: function(e, i, n) {
var a = 1 == JSON.parse(t._itemdata.result).choose ? 1 : 0;
i.getComponent(cc.Sprite).spriteFrame = n.getSpriteFrame([ "coin_small_white1", "coin_small_yellow1" ][a]);
}
},
37: {
result_node: "37",
option_node: "lbl",
result: function(e, t, i) {
for (var n = [ "dot_white", "dot1", "dot2", "dot3", "dot4", "dot5", "dot6", "dot7", "dot8" ], a = e.gems, o = [], c = 0; c < a.length; c++) {
var s = !1;
for (j = 0; j < o.length; j++) if (o[j].gem == a[c]) {
o[j].count++;
s = !0;
break;
}
s || o.push({
gem: a[c],
count: 1
});
}
o.sort(function(e, t) {
return t.count - e.count;
});
for (var r = 1, l = 0; l < o.length; l++) if (o[l].count > 1) for (var d = 0; d < o[l].count; d++) {
var h = cc.find("dot" + r, t);
h && (h.getComponent(cc.Sprite).spriteFrame = i.getSpriteFrame(n[o[l].gem]));
r++;
}
for (;r < 5; r++) {
var _ = cc.find("dot" + r, t);
_ && (_.getComponent(cc.Sprite).spriteFrame = i.getSpriteFrame(n[0]));
}
},
option: function(e, t) {
t.getComponent(cc.Label).string = "--";
}
},
38: {
result_node: "38",
option_node: "lbl",
result: function(e, t, i) {
for (var n = [ "triple_symbol_1_0", "triple_symbol_2_0", "triple_symbol_3_0" ], a = 0; a < 3; a++) cc.find("s" + a + "/icon", t).getComponent(cc.Sprite).spriteFrame = i.getSpriteFrame(n[e.res[a] - 1]);
},
option: function(e, t) {
t.getComponent(cc.Label).string = "--";
}
}
}[e];
}
});
cc._RF.pop();
}, {
Table_Record_Item: "Table_Record_Item"
} ],
yd_activity: [ function(e, t) {
"use strict";
cc._RF.push(t, "b515eoeOA5KUrdb1mNITPQI", "yd_activity");
cc.Class({
extends: cc.Component,
properties: {
listView: e("List"),
itemPage: cc.Node,
pageView: cc.PageView,
scrollView: cc.ScrollView,
indicator: cc.Node,
_indicatorList: []
},
onLoad: function() {
this.pageView.node.on("page-turning", this.pageTurning, this);
},
start: function() {},
updateView: function(e) {
var t = this;
this.localData = e;
for (var i = cc.find("view/content", this.scrollView.node), n = cc.find("dot0", i), a = function(a) {
var o = 0 == a ? t.itemPage : cc.instantiate(t.itemPage);
o.active = !0;
t.onUpdatePage(o, e[a]);
t.pageView.addPage(o);
var c = 0 == a ? n : cc.instantiate(n);
c.parent = i;
cc.find("dot1", c).active = 0 == a;
Global.btnClickEvent(c, function() {
t.dotClick(a);
}, t);
t._indicatorList.push(c);
}, o = 0; o < e.length; o++) a(o);
i.width = Math.min(e.length * n.width, this.scrollView.node.width);
this.scrollView.horizontal = e.length * n.width > this.scrollView.node.width;
i.getComponent(cc.Layout).updateLayout();
this.listView.numItems = e.length;
this.listView.selectedId = 0;
},
onUpdatePage: function(e, t) {
var i = cc.find("biaoti", e), n = cc.find("layout", e), a = cc.find("btn_go", e), o = cc.find("sprite", e);
if (t.img && t.img.indexOf("http") > -1) {
i.active = !1;
n.active = !1;
a.active = !1;
o.active = !0;
o.getComponent("UserHead").setHead(t.img, t.img);
Global.btnClickEvent(cc.find("btn", o), this.goBtnClick, this);
} else {
i.active = !0;
n.active = !0;
a.active = !0;
o.active = !1;
cc.find("title", i).getComponent(cc.Label).string = "" + t.title;
cc.find("label", n).getComponent(cc.RichText).string = "" + t.content;
Global.btnClickEvent(a, this.goBtnClick, this);
}
},
onUpdateMenuItem: function(e, t) {
var i = this.localData[t];
Global.setLabelString("unselect/lbl", e, i.btntxt);
Global.setLabelString("select/lbl", e, i.btntxt);
var n = Global.getFullDateStr(new Date() / 1e3), a = Global.getLocal("yd_activity_" + i.id, "");
cc.find("unselect/RedHitAnim", e).active = n != a;
},
onSelectMenuItem: function(e, t) {
var i = this.localData[t], n = Global.getFullDateStr(new Date() / 1e3);
Global.saveLocal("yd_activity_" + i.id, n);
cc.find("unselect/RedHitAnim", e).active = !1;
this.pageView.scrollToPage(t);
this._indicatorList.forEach(function(e, i) {
cc.find("dot1", e).active = i == t;
});
cc.find("view/content", this.scrollView.node).width > this.scrollView.node.width && this.scrollView.scrollToOffset(cc.v2(this._indicatorList[t].x, 0));
},
pageTurning: function() {
var e = this.pageView.getCurrentPageIndex();
this.listView.scrollTo(e, 0, .4);
this.listView.selectedId = e;
},
dotClick: function(e) {
this.listView.scrollTo(e, 0, .4);
this.listView.selectedId = e;
this.pageView.scrollToPage(e);
},
goBtnClick: function() {
var e = this.pageView.getCurrentPageIndex(), t = this.localData[e].jumpto;
if (t) {
var i = "";
if (t.indexOf("http") > -1) {
cc.vv.PlatformApiMgr.openURL(t);
cc.vv.PopupManager.removePopup(this.node);
} else "Bank" == t ? cc.vv.GameManager.jumpTo(5) : "Salon" == t ? cc.vv.GameManager.jumpTo(2) : "Game" == t ? cc.vv.GameManager.jumpTo(1) : "ReferEarn" == t ? cc.vv.GameManager.jumpTo(3) : "Social" == t ? cc.vv.GameManager.jumpTo(6) : "vip" == t ? i = "YD_Pro/prefab/yd_vip" : "customerservice" == t ? i = "YD_Pro/prefab/yd_service" : "inbox" == t ? i = "BalootClient/Hall/PopupMailView" : "lbdaily" == t ? cc.vv.GameManager.jumpTo(12.1) : "lbweek" == t ? cc.vv.GameManager.jumpTo(12.2) : "lbmonth" == t ? cc.vv.GameManager.jumpTo(12.3) : "lbref" == t ? cc.vv.GameManager.jumpTo(12.4) : "cashback" == t ? cc.vv.GameManager.jumpTo(11.1) : "task" == t ? cc.vv.GameManager.jumpTo(11.2) : "promo" == t ? cc.vv.GameManager.jumpTo(11.4) : "bonuslogin" == t ? cc.vv.GameManager.jumpTo(11.3) : "record" == t ? i = "YD_Pro/prefab/yd_historical_record" : "transactions" == t ? cc.vv.PopupManager.showTopWin("YD_Pro/prefab/yd_charge", {
onShow: function(e) {
e.getComponent("yd_charge").setURL(cc.vv.UserManager.transactionUrl);
}
}) : "slotlist" == t && cc.vv.GameManager.jumpTo(4);
if (i) {
cc.vv.PopupManager.addPopup(i);
cc.vv.PopupManager.removePopup(this.node);
}
}
}
});
cc._RF.pop();
}, {
List: "List"
} ],
yd_bonus_pro_detail: [ function(e, t) {
"use strict";
cc._RF.push(t, "ad42cq5mE5JfJWnagnHEjnf", "yd_bonus_pro_detail");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
Global.btnClickEvent(cc.find("btn_close", this.node), this.onClickClose, this);
},
start: function() {},
setInfo: function(e) {
cc.find("scv/view/content/item", this.node).getComponent("UserHead").setHead(e, e);
},
onClickClose: function() {
this.node.destroy();
}
});
cc._RF.pop();
}, {} ],
yd_bonus_pro_item: [ function(e, t) {
"use strict";
cc._RF.push(t, "dc507CBffpGq6H8dEG7AgQb", "yd_bonus_pro_item");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
Global.btnClickEvent(this.node, this.onClickItem, this);
},
start: function() {},
inititem: function(e) {
this._itemData = e;
this.node.getComponent("UserHead").setHead(e.banner, e.banner);
},
onClickItem: function() {
var e = this;
cc.loader.loadRes("YD_Pro/prefab/bonus_prom_detail", cc.Prefab, function(t, i) {
if (!t) {
var n = cc.find("Canvas"), a = cc.find("bonus_prom_detail", n);
if (!a) {
(a = cc.instantiate(i)).parent = n;
a.getComponent("yd_bonus_pro_detail").setInfo(e._itemData.memo[0]);
}
}
});
}
});
cc._RF.pop();
}, {} ],
yd_bonus_prom: [ function(e, t) {
"use strict";
cc._RF.push(t, "67c0cTS2y1NWaOEjk0KySdm", "yd_bonus_prom");
cc.Class({
extends: cc.Component,
properties: {
listView: e("List")
},
onLoad: function() {
this.node.addComponent("NetListenerCmp").registerMsg(MsgId.BONUS_PROM_LIST, this.BONUS_PROM_LIST, this);
},
onEnable: function() {
this.sendPromReq();
},
showLists: function() {
this.listView.numItems = this._listdata.length;
},
onUpdateItem: function(e, t) {
var i = this._listdata[t];
if (i) {
e.active = !0;
e.getComponent("yd_bonus_pro_item").inititem(i);
} else e.active = !1;
},
sendPromReq: function() {
cc.vv.NetManager.sendAndCache({
c: MsgId.BONUS_PROM_LIST
});
},
BONUS_PROM_LIST: function(e) {
if (200 == e.code) {
this._listdata = e.data;
this._listdata.sort(function(e, t) {
return e.ord - t.ord;
});
this.showLists();
}
}
});
cc._RF.pop();
}, {
List: "List"
} ],
yd_bonus: [ function(e, t) {
"use strict";
cc._RF.push(t, "81d6fHS+dFHlK3DDjh8xNGG", "yd_bonus");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
Global.btnClickEvent(cc.find("bottom/tog_menu/toggle1", this.node), this.onClickToggle1, this);
Global.btnClickEvent(cc.find("bottom/tog_menu/toggle2", this.node), this.onClickToggle2, this);
Global.btnClickEvent(cc.find("bottom/tog_menu/toggle3", this.node), this.onClickToggle3, this);
Global.btnClickEvent(cc.find("bottom/tog_menu/toggle4", this.node), this.onClickToggle4, this);
Global.registerEvent("Bonus_Tab", this.onShowTab, this);
},
start: function() {
this._showDefaultPage();
},
_showDefaultPage: function() {
var e = cc.vv.UserManager.isBonusPromOpen(), t = "Login", i = 305;
this._selXpos = [ 0, -295, 0, 295 ];
var n = 2, a = [ 0, 305, -305, 0 ];
if (e) {
t = "Prom";
i = 235;
this._selXpos = [ -346, -117.5, 117.5, 346 ];
n = 1;
a = [ 117.5, 352.5, -117.5, -352.5 ];
}
for (var o = 1; o < 5; o++) {
var c = cc.find("bottom/tog_menu/toggle" + o, this.node);
c.width = i;
c.x = a[o - 1];
4 == o && (c.active = e);
}
cc.find("bottom/tog_menu/tab_sel", this.node).width = i + 5;
this.showPanel(t);
this.showBtnSel(n);
},
onClickToggle1: function() {
this.showPanel("betting");
this.showBtnSel(3);
},
onClickToggle2: function() {
this.showPanel("task");
this.showBtnSel(4);
},
onClickToggle3: function() {
this.showPanel("Login");
this.showBtnSel(2);
},
onClickToggle4: function() {
this.showPanel("Prom");
this.showBtnSel(1);
},
showPanel: function(e) {
cc.find("panel_return", this.node).active = "betting" == e;
cc.find("bottom/tog_menu/toggle1", this.node).getComponent(cc.Toggle).isChecked = "betting" == e;
cc.find("panel_task", this.node).active = "task" == e;
cc.find("bottom/tog_menu/toggle2", this.node).getComponent(cc.Toggle).isChecked = "task" == e;
cc.find("PageLogin", this.node).active = "Login" == e;
cc.find("bottom/tog_menu/toggle3", this.node).getComponent(cc.Toggle).isChecked = "Login" == e;
cc.find("PageProm", this.node).active = "Prom" == e;
cc.find("bottom/tog_menu/toggle4", this.node).getComponent(cc.Toggle).isChecked = "Prom" == e;
},
showBtnSel: function(e) {
var t = cc.find("bottom/tog_menu/tab_sel", this.node);
t.active = !0;
t.x = this._selXpos[e - 1];
},
onShowTab: function(e) {
var t = e.detail;
1 == t ? this.onClickToggle1() : 2 == t ? this.onClickToggle2() : 3 == t ? this.onClickToggle3() : 4 == t && this.onClickToggle4();
}
});
cc._RF.pop();
}, {} ],
yd_call_back: [ function(e, t) {
"use strict";
cc._RF.push(t, "aed453JGKBOXrQGcfUjBgK8", "yd_call_back");
cc.Class({
extends: cc.Component,
properties: {
contentEdit: cc.EditBox,
mobileEdit: cc.EditBox,
lanLabel: cc.Label,
lanBtn: cc.Button,
lanSelect: cc.Node,
lanSelBtn1: cc.Button,
lanSelBtn2: cc.Button,
confirmBtn: cc.Button,
photoBtn: cc.Button,
imgListView: e("ListView"),
_langType: 2
},
onLoad: function() {
this.imgUrlList = [];
this._langType = 2;
this.updateLangView();
this.node.addComponent("NetListenerCmp").registerMsg(MsgId.EVENT_FEEDBACK, this.EVENT_FEEDBACK, this);
Global.btnClickEvent(this.photoBtn.node, this.onClickSelect, this);
Global.btnClickEvent(this.lanBtn.node, this.lanBtnClick, this);
Global.btnClickEvent(this.lanSelBtn1.node, this.lanSelectHBtnClick, this);
Global.btnClickEvent(this.lanSelBtn2.node, this.lanSelectEBtnClick, this);
Global.btnClickEvent(this.confirmBtn.node, this.confirmBtnClick, this);
},
start: function() {},
updateLangView: function() {
this.lanLabel.string = 1 == this._langType ? "हिंदी" : "English";
cc.find("item_hi/isSelect", this.lanSelect).active = 1 == this._langType;
cc.find("item_en/isSelect", this.lanSelect).active = 2 == this._langType;
},
showLangSelect: function() {
this.lanSelect.stopAllActions();
if (this.lanSelect.active) this.lanSelect.active = !1; else {
this.lanSelect.active = !0;
this.lanSelect.y = -36;
this.lanSelect.opacity = 100;
cc.tween(this.lanSelect).to(.1, {
y: -88,
opacity: 255
}).start();
}
},
lanBtnClick: function() {
this.showLangSelect();
},
lanSelectHBtnClick: function() {
this._langType = 1;
this.updateLangView();
this.showLangSelect();
},
lanSelectEBtnClick: function() {
this._langType = 2;
this.updateLangView();
this.showLangSelect();
},
confirmBtnClick: function() {
this.contentEdit.string ? this.mobileEdit.string ? cc.vv.NetManager.send({
c: MsgId.EVENT_FEEDBACK,
content: this.contentEdit.string,
phone: this.mobileEdit.string,
lang: 1 == this._langType ? "हिंदी" : "English",
imgs: this.imgUrlList
}) : cc.vv.FloatTip.show("Cannot send an empty mobile number") : cc.vv.FloatTip.show("Cannot send an empty message!");
},
EVENT_FEEDBACK: function(e) {
if (200 == e.code) {
cc.vv.FloatTip.show("Send successfully");
cc.vv.PopupManager.removePopup(this.node);
}
},
onClickSelect: function() {
var e = this;
this.imgUrlList.length >= 3 ? cc.vv.FloatTip.show(___("最多选取3张图片")) : cc.vv.PlatformApiMgr.OpenTakephoto(JSON.stringify({
width: 2e3,
height: 2e3,
size: 1e7,
from: 0,
crop: 0
}), function(t) {
var i = t.result, n = t.data;
if (1 == Number(i)) {
var a = n;
cc.sys.isNative && jsb && (a = "data:image/png;base64," + n);
cc.vv.NetManager.requestHttp("/", {
uid: cc.vv.UserManager.uid,
img: a
}, function(t, i) {
if (t) if (200 == i.code) {
e.imgUrlList.push(i.url);
e.imgListView.numItems = e.imgUrlList.length;
} else 500 == i.code ? cc.vv.FloatTip.show(___("上传失败")) : 501 == i.code ? cc.vv.FloatTip.show(___("用户不在线")) : 502 == i.code && cc.vv.FloatTip.show(___("图片格式错误"));
}, cc.vv.UserManager.uploadlink, "POST", !0, 2e4);
} else -1 == i ? cc.vv.FloatTip.show(___("取消选择图片")) : cc.vv.FloatTip.show(___("选择图片失败"));
});
},
onClickRemovePhoto: function(e) {
var t = this.imgUrlList[e.currentTarget._listId];
this.imgUrlList = this.imgUrlList.filter(function(e) {
return e != t;
});
this.imgListView.numItems = this.imgUrlList.length;
},
onUpdateItem: function(e, t) {
var i = this.imgUrlList[t], n = cc.find("icon", e).getComponent(cc.Sprite);
n._reqHandle && n._reqHandle.rejectFunc();
n._reqHandle = cc.vv.ResManager.loadImage(i, function(e, t) {
cc.isValid(n) && cc.isValid(n.node) && t && (n.spriteFrame = new cc.SpriteFrame(t));
n._reqHandle = null;
});
}
});
cc._RF.pop();
}, {
ListView: "ListView"
} ],
yd_charge: [ function(e, t) {
"use strict";
cc._RF.push(t, "d87c1i3w7pAiK92yYqYDYy6", "yd_charge");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
Global.FixDesignScale_V(this.node);
Global.btnClickEvent(cc.find("top/btn_back", this.node), this.onClickBack, this);
},
start: function() {
var e = cc.find("webview", this.node).getComponent(cc.WebView), t = this.node;
e.setJavascriptInterfaceScheme("openurl");
e.setOnJSCallback(function(e, i) {
AppLog.warn("===webview open url", i);
var n = i.replace("openurl://", "");
if ("close" == n) t.destroy(); else if (0 == n.indexOf("save#")) {
n = n.replace("save#", "");
cc.vv.PlatformApiMgr.SaveUrlToAlumb(n);
} else if (0 == n.indexOf("send#")) {
var a = {
sender: n.replace("send#", ""),
title: "MY UID:" + cc.vv.UserManager.uid,
content: "Please let us know how can we help!",
sendway: "sendto"
};
cc.vv.PlatformApiMgr.SendMail(JSON.stringify(a));
} else 0 == n.indexOf("relogin#") ? cc.vv.GameManager.goBackLoginScene() : cc.vv.PlatformApiMgr.openURL(n);
});
},
setURL: function(e, t, i) {
void 0 === t && (t = null);
void 0 === i && (i = null);
if (e) {
var n = cc.vv.UserManager.uid;
n || (n = Global.playerData.uid);
var a = cc.vv.UserManager.token;
a || (a = Global.playerData.token);
e = cc.js.formatStr("%s?uid=%s&token=%s", e, n, a);
i && (e += "&amount=" + i);
t && t.postfix && (e += t.postfix);
cc.find("webview", this.node).getComponent(cc.WebView).url = e;
}
},
setURL_2: function(e, t, i) {
void 0 === t && (t = null);
void 0 === i && (i = null);
e && (cc.find("webview", this.node).getComponent(cc.WebView).url = e);
},
onClickBack: function() {
cc.game.removePersistRootNode(this.node);
cc.vv.EventManager.emit("EVENT_BTN_CLOSE_SOUNDS");
this.node.destroy();
}
});
cc._RF.pop();
}, {} ],
yd_feedback: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8cdb0Awgx9KvLp+HwgM60/0", "yd_feedback");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.listViewNode = null;
t.typeContainer = null;
t.editBox = null;
t.photoBtn = null;
t.upBtn = null;
return t;
}
Object.defineProperty(t.prototype, "feedType", {
get: function() {
for (var e = 0; e < this.typeContainer.toggleItems.length; e++) if (this.typeContainer.toggleItems[e].isChecked) return e + 1;
},
enumerable: !1,
configurable: !0
});
t.prototype.onLoad = function() {
this.imgListView = this.listViewNode.getComponent("ListView");
this.imgUrlList = [];
this.photoBtn.node.on("click", this.onClickSelect, this);
this.upBtn.node.on("click", this.onClickSubmit, this);
this.node.addComponent("NetListenerCmp").registerMsg(MsgId.USER_FEEDBAKC, this.USER_FEEDBAKC, this);
};
t.prototype.USER_FEEDBAKC = function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show(cc.vv.UserConfig.spcode2String(e.spcode), !0); else {
cc.vv.PopupManager.removePopup(this.node);
cc.vv.FloatTip.show("Submitted successfully!");
}
};
t.prototype.onUpdateItem = function(e, t) {
var i = this.imgUrlList[t], n = cc.find("icon", e).getComponent(cc.Sprite);
n._reqHandle && n._reqHandle.rejectFunc();
n._reqHandle = cc.vv.ResManager.loadImage(i, function(e, t) {
cc.isValid(n) && cc.isValid(n.node) && t && (n.spriteFrame = new cc.SpriteFrame(t));
n._reqHandle = null;
});
};
t.prototype.onClickSelect = function() {
var e = this;
this.imgUrlList.length >= 3 ? cc.vv.FloatTip.show(___("最多选取3张图片")) : cc.vv.PlatformApiMgr.OpenTakephoto(JSON.stringify({
width: 2e3,
height: 2e3,
size: 1e7,
from: 0,
crop: 0
}), function(t) {
var i = t.result, n = t.data;
if (1 == Number(i)) {
var a = n;
cc.sys.isNative && jsb && (a = "data:image/png;base64," + n);
cc.vv.NetManager.requestHttp("/", {
uid: cc.vv.UserManager.uid,
img: a
}, function(t, i) {
if (t) if (200 == i.code) {
e.imgUrlList.push(i.url);
e.imgListView.numItems = e.imgUrlList.length;
} else 500 == i.code ? cc.vv.FloatTip.show(___("上传失败")) : 501 == i.code ? cc.vv.FloatTip.show(___("用户不在线")) : 502 == i.code && cc.vv.FloatTip.show(___("图片格式错误"));
}, cc.vv.UserManager.uploadlink, "POST", !0, 2e4);
} else -1 == i ? cc.vv.FloatTip.show(___("取消选择图片")) : cc.vv.FloatTip.show(___("选择图片失败"));
});
};
t.prototype.onClickRemovePhoto = function(e) {
var t = this.imgUrlList[e.currentTarget._listId];
this.imgUrlList = this.imgUrlList.filter(function(e) {
return e != t;
});
this.imgListView.numItems = this.imgUrlList.length;
};
t.prototype.onClickSubmit = function() {
this.imgUrlList.length <= 0 && this.editBox.string.trim().length <= 0 ? cc.vv.FloatTip.show(___("请选择图片或者进行文字描述")) : cc.vv.NetManager.send({
c: MsgId.USER_FEEDBAKC,
stype: this.feedType,
content: this.editBox.string.trim(),
imgs: this.imgUrlList
});
};
__decorate([ o(cc.Node) ], t.prototype, "listViewNode", void 0);
__decorate([ o(cc.ToggleContainer) ], t.prototype, "typeContainer", void 0);
__decorate([ o(cc.EditBox) ], t.prototype, "editBox", void 0);
__decorate([ o(cc.Button) ], t.prototype, "photoBtn", void 0);
__decorate([ o(cc.Button) ], t.prototype, "upBtn", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
yd_float_service: [ function(e, t) {
"use strict";
cc._RF.push(t, "ce691atpG9LvJAwCbgk7U1Q", "yd_float_service");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
Global.btnClickEvent(this.node, this.init, this);
},
start: function() {},
onEnable: function() {},
init: function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_2_SOUNDS");
var e = cc.vv.UserManager.contactus, t = Global.customerUrl, i = cc.vv.UserManager.uid;
i || (i = Global.playerData.uid);
e || (e = Global.getLocal("contacturl"));
e || (Global.appId == Global.APPID.YonoGames ? e = cc.js.formatStr("%s?name=%s", t, i) : Global.appId == Global.APPID.RummyVIP && (e = cc.js.formatStr("%s?name=%s", t, i)));
(e = cc.js.formatStr("%s?name=%s", t, i)) && cc.vv.PlatformApiMgr.openURL(e);
}
});
cc._RF.pop();
}, {} ],
yd_historical_record: [ function(e, t) {
"use strict";
cc._RF.push(t, "c67efdnH+BAWYPolGvsMWgq", "yd_historical_record");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
var o = e("List");
cc.Class({
extends: cc.Component,
properties: {
pageView: cc.PageView,
pageNode: cc.Node,
listviewTable: o,
listviewBet: o,
_curPage: 1,
_gameid: null,
_serverdata: [],
gameItemList: []
},
onLoad: function() {
cc.vv.NetManager.registerMsg(MsgId.GAME_BET_RECORDS, this.OnRcvRecords, this);
Global.btnClickEvent(cc.find("tog_type/toggle1", this.node), this.onClickToggle1, this);
Global.btnClickEvent(cc.find("tog_type/toggle2", this.node), this.onClickToggle2, this);
Global.btnClickEvent(cc.find("tog_type/toggle3", this.node), this.onClickToggle3, this);
},
start: function() {},
onDestroy: function() {
cc.vv.NetManager.unregisterMsg(MsgId.GAME_BET_RECORDS, this.OnRcvRecords, !1, this);
},
init: function(e) {
if (e) {
if (e.page) {
this._curPage = e.page;
this._showPage();
}
if (e.gameid) {
this._gameid = e.gameid;
var t = cc.vv.UserConfig.getGameMapInfo(this._gameid);
this._curPage = t ? t.bBetSelect ? 2 : 1 : 3;
this._showPage();
}
} else {
this._curPage = 1;
this._showPage();
}
},
sendBetRecordsReq: function(e) {
var t = {
c: MsgId.GAME_BET_RECORDS
};
t.gameid = e;
t.limit = 35;
cc.vv.NetManager.sendAndCache(t);
},
OnRcvRecords: function(e) {
if (200 == e.code) {
this._gameid = e.gameid;
this._serverdata = e.records;
this._showRecordsList();
}
},
_showRecordsList: function() {
1 == this._curPage ? this.listviewTable.numItems = this._serverdata.length : this.listviewBet.numItems = this._serverdata.length;
},
onClickToggle1: function() {
if (1 != this._curPage) {
this._curPage = 1;
this._gameid = null;
this._showPage();
}
},
onClickToggle2: function() {
if (2 != this._curPage) {
this._curPage = 2;
this._gameid = null;
this._showPage();
}
},
onClickToggle3: function() {
if (3 != this._curPage) {
this._curPage = 3;
this._gameid = null;
this._showPage();
}
},
_showPage: function() {
cc.find("tog_type/toggle1", this.node).getComponent(cc.Toggle).isChecked = 1 == this._curPage;
cc.find("tog_type/toggle2", this.node).getComponent(cc.Toggle).isChecked = 2 == this._curPage;
cc.find("tog_type/toggle3", this.node).getComponent(cc.Toggle).isChecked = 3 == this._curPage;
var e = [];
if (1 == this._curPage) for (var t = cc.vv.UserConfig.allTableSelectIds(), n = 0; n < t.length; n++) cc.vv.UserManager.isGameOpen(t[n]) && e.push(t[n]); else if (2 == this._curPage) for (var a = cc.vv.UserConfig.allBetSelectIds(), o = 0; o < a.length; o++) cc.vv.UserManager.isGameOpen(a[o]) && e.push(a[o]); else if (3 == this._curPage) for (var c, s = i(cc.vv.UserManager.slotsList); !(c = s()).done; ) {
var r = c.value;
691 != r.id && e.push(r.id);
}
this.gameItemList = [];
this.pageView.removeAllPages();
for (var l = []; e.length > 0; ) l.push(e.splice(0, 10));
for (var d = 0, h = l; d < h.length; d++) {
var _ = h[d], p = cc.instantiate(this.pageNode);
p.active = !0;
cc.find("item", p).active = !1;
for (var u = !1, f = 0; f < 10; f++) {
var g = cc.instantiate(cc.find("item", p));
g.parent = p;
g.active = !0;
cc.find("select", g).active = !1;
cc.find("select", g).width = 3 == this._curPage ? 174 : 194;
cc.find("bg", g).width = 3 == this._curPage ? 144 : 166;
if (_[f]) {
if (1 == this._curPage || 2 == this._curPage) {
cc.find("icon", g).active = !0;
cc.find("spine", g).active = !1;
cc.vv.ResManager.setSpriteFrame(cc.find("icon", g).getComponent(cc.Sprite), "BalootClient/GameIcon/" + _[f], null, null);
} else if (3 == this._curPage) {
cc.find("icon", g).active = !1;
cc.find("spine", g).active = !0;
var m = cc.vv.GameItemCfg[_[f]], v = cc.find("spine", g).getComponent(sp.Skeleton);
cc.vv.ResManager.setSkeleton(v, "BalootClient/Slots/icon/" + m.action + "/spine", function(e) {
e.setAnimation(0, "animation2", !0);
});
}
g.on("click", this.onClickGameItem.bind(this, _[f]), this);
g.gameid = _[f];
this.gameItemList.push(g);
if (this._gameid == _[f]) {
g.emit("click");
u = !0;
}
} else {
cc.find("icon", g).active = !1;
cc.find("spine", g).active = !1;
}
}
this.pageView.addPage(p);
u && this.pageView.scrollToPage(this.pageView.getPages().length - 1);
}
cc.find("list_table", this.node).active = 1 == this._curPage;
cc.find("list_bet", this.node).active = 2 == this._curPage || 3 == this._curPage;
if (!this._gameid) {
this._gameid = this.gameItemList[0].gameid;
this.gameItemList[0].emit("click");
}
},
onClickGameItem: function(e) {
this.sendBetRecordsReq(e);
for (var t, n = i(this.gameItemList); !(t = n()).done; ) {
var a = t.value;
cc.find("select", a).active = e == a.gameid;
}
},
onRenderListBet: function(e, t) {
var i = this._serverdata[t];
if (i) {
e.active = !0;
e.getComponent("Table_Record_Bet_Item").init(i);
} else e.active = !1;
},
onRenderListTable: function(e, t) {
var i = this._serverdata[t];
if (i) {
e.active = !0;
e.getComponent("yd_Record_Item").setGameId(this._gameid);
e.getComponent("yd_Record_Item").init(i);
} else e.active = !1;
}
});
cc._RF.pop();
}, {
List: "List"
} ],
yd_manage: [ function(e, t) {
"use strict";
cc._RF.push(t, "35e82m4JkNAkLXqBVUesTDz", "yd_manage");
cc.Class({
extends: cc.Component,
properties: {
bankTabs: [],
myBankList: [],
verifyNewBtn: {
displayName: "换新银行卡",
default: null,
type: cc.Button
}
},
onLoad: function() {
var e = cc.find("btn_return", this.node);
Global.btnClickEvent(e, this.onClickClose, this);
this.netListener = this.node.addComponent("NetListenerCmp");
cc.find("mybankContainer", this.node);
var t = {
c: MsgId.BANK_CARD_GET
};
cc.vv.NetManager.send(t);
this.netListener.registerMsg(MsgId.BANK_CARD_GET, this.onBankCardReturn, this);
this.verifyNewBtn.node.on("click", this.onClickVerifyNew, this);
this.netListener.registerMsg(MsgId.BANK_CARD_DEL, this.DEL_BANK, this);
cc.find("btn_customer_top", this.node).on("click", this.onClickCustomer, this);
},
start: function() {},
onBankCardReturn: function(e) {
var t = this;
this.bankTabs.length = 0;
this.myBankList.length = 0;
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show("No Bank Card "); else {
var i = cc.find("mybankContainer", this.node);
i.removeAllChildren();
for (var n = cc.find("bank_template", this.node), a = function(a) {
var o = cc.instantiate(n);
o.parent = i;
o.setPosition(0, 0);
var c, s = cc.find("Background", o);
cc.find("check", s).active = !1;
cc.find("del_btn", s).on("click", function() {
t.onDelBankClick(e.bankList[a].id);
});
cc.find("banknumber", s).getComponent(cc.Label).string = (c = String(e.bankList[a].account)).substr(0, 4) + "******" + c.substr(c.length - 2, c.length);
t.bankTabs[a] = o;
t.myBankList[a] = e.bankList[a];
}, o = 0; o < e.bankList.length; o++) a(o);
}
},
onClickClose: function() {
this.node.destroy();
},
DEL_BANK: function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show("Delete error "); else {
cc.vv.FloatTip.show("Delete Bank card successfully");
var t = {
c: MsgId.BANK_CARD_GET
};
cc.vv.NetManager.send(t);
}
},
onDelBankClick: function(e) {
cc.vv.AlertView.show("Are you sure you want to delete your bank card information?", function() {
if (e) {
var t = {
c: MsgId.BANK_CARD_DEL,
id: e
};
cc.vv.NetManager.send(t);
}
}.bind(this), function() {}.bind(this), !1, null, null, null, "Confirm");
},
onClickVerifyNew: function() {
cc.vv.PopupManager.addPopup("YD_Pro/prefab/yd_verify_bank", {
onShow: function() {}
});
},
onClickCustomer: function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_2_SOUNDS");
var e = cc.vv.UserManager.contactus, t = Global.customerUrl, i = cc.vv.UserManager.uid;
i || (i = Global.playerData.uid);
e || (e = Global.getLocal("contacturl"));
e || (Global.appId == Global.APPID.YonoGames ? e = cc.js.formatStr("%s?name=%s", t, i) : Global.appId == Global.APPID.RummyVIP && (e = cc.js.formatStr("%s?name=%s", t, i)));
(e = cc.js.formatStr("%s?name=%s", t, i)) && cc.vv.PlatformApiMgr.openURL(e);
}
});
cc._RF.pop();
}, {} ],
yd_money_record: [ function(e, t) {
"use strict";
cc._RF.push(t, "e741fTOlMBBB6rxJ2zrWCa1", "yd_money_record");
var i = e("List");
cc.Class({
extends: cc.Component,
properties: {
deposit_listview: i,
withdraw_listview: i,
balance_listview: i,
deposit_filter: cc.Node,
withdraw_filter: cc.Node,
balance_filter: cc.Node
},
onLoad: function() {
cc.vv.NetManager.registerMsg(MsgId.GET_PAY_RECORD, this.OnRcvDepositRecords, this);
cc.vv.NetManager.registerMsg(MsgId.GET_WITHDRAW_RECORD, this.OnRcvWithdrawRecords, this);
cc.vv.NetManager.registerMsg(MsgId.GET_BALANCE_RECORD, this.OnRcvBalanceRecords, this);
var e = cc.find("btn_return", this.node);
Global.btnClickEvent(e, this.onClickClose, this);
var t = cc.find("tog_type/toggle1", this.node);
t && t.on("toggle", this.onClickToggle1, this);
var i = cc.find("tog_type/toggle2", this.node);
i && i.on("toggle", this.onClickToggle2, this);
var n = cc.find("tog_type/toggle3", this.node);
n && n.on("toggle", this.onClickToggle3, this);
var a = cc.find("btn_customer_top", this.node);
Global.btnClickEvent(a, this.onClickCusBtn, this);
this.currentIndex = 1;
},
onClickCusBtn: function() {
var e = Global.customerUrl, t = cc.vv.UserManager.uid;
t || (t = Global.playerData.uid);
var i = cc.js.formatStr("%s?name=%s", e, t);
cc.vv.PlatformApiMgr.openURL(i);
},
start: function() {
this.sendDepositReq();
this._showPage(1);
},
onDestroy: function() {
cc.vv.NetManager.unregisterMsg(MsgId.GET_PAY_RECORD, this.OnRcvDepositRecords, !1, this);
cc.vv.NetManager.unregisterMsg(MsgId.GET_WITHDRAW_RECORD, this.OnRcvWithdrawRecords, !1, this);
cc.vv.NetManager.unregisterMsg(MsgId.GET_BALANCE_RECORD, this.OnRcvBalanceRecords, !1, this);
},
initFilterBtns: function() {
if (1 == this.currentIndex) {
var e = cc.find("all_btn", this.deposit_filter), t = cc.find("Label", e), i = cc.find("suc_btn", this.deposit_filter), n = cc.find("Label", i), a = cc.find("failed_btn", this.deposit_filter), o = cc.find("Label", a);
t.color = new cc.color(19, 255, 194, 255);
n.color = new cc.color(255, 255, 255, 255);
o.color = new cc.color(255, 255, 255, 255);
} else if (2 == this.currentIndex) {
var c = cc.find("all_btn", this.withdraw_filter), s = cc.find("Label", c), r = cc.find("suc_btn", this.withdraw_filter), l = cc.find("Label", r), d = cc.find("inpro_btn", this.withdraw_filter), h = cc.find("Label", d), _ = cc.find("failed_btn", this.withdraw_filter), p = cc.find("Label", _);
s.color = new cc.color(19, 255, 194, 255);
l.color = new cc.color(255, 255, 255, 255);
h.color = new cc.color(255, 255, 255, 255);
p.color = new cc.color(255, 255, 255, 255);
} else if (3 == this.currentIndex) {
var u = cc.find("all_btn", this.balance_filter), f = cc.find("Label", u), g = cc.find("win_btn", this.balance_filter), m = cc.find("Label", g), v = cc.find("lose_btn", this.balance_filter), S = cc.find("Label", v);
f.color = new cc.color(19, 255, 194, 255);
m.color = new cc.color(255, 255, 255, 255);
S.color = new cc.color(255, 255, 255, 255);
}
},
btns_clicks: function(e) {
if (1 == this.currentIndex) {
var t = cc.find("all_btn", this.deposit_filter), i = cc.find("Label", t), n = cc.find("suc_btn", this.deposit_filter), a = cc.find("Label", n), o = cc.find("failed_btn", this.deposit_filter), c = cc.find("Label", o);
if ("all_btn" == e.target.name) {
i.color = new cc.color(19, 255, 194, 255);
a.color = new cc.color(255, 255, 255, 255);
c.color = new cc.color(255, 255, 255, 255);
this.__depositList = this.__depositList_all;
this._showDepositRecordsList(this.__depositList_all);
} else if ("suc_btn" == e.target.name) {
i.color = new cc.color(255, 255, 255, 255);
a.color = new cc.color(19, 255, 194, 255);
c.color = new cc.color(255, 255, 255, 255);
var s = [];
this.__depositList_all.forEach(function(e) {
2 == e.status && s.push(e);
});
this.__depositList = s;
this._showDepositRecordsList(s);
} else if ("failed_btn" == e.target.name) {
i.color = new cc.color(255, 255, 255, 255);
a.color = new cc.color(255, 255, 255, 255);
c.color = new cc.color(19, 255, 194, 255);
var r = [];
this.__depositList_all.forEach(function(e) {
1 == e.status && r.push(e);
});
this.__depositList = r;
this._showDepositRecordsList(r);
}
} else if (2 == this.currentIndex) {
var l = cc.find("all_btn", this.withdraw_filter), d = cc.find("Label", l), h = cc.find("suc_btn", this.withdraw_filter), _ = cc.find("Label", h), p = cc.find("inpro_btn", this.withdraw_filter), u = cc.find("Label", p), f = cc.find("failed_btn", this.withdraw_filter), g = cc.find("Label", f);
if ("all_btn" == e.target.name) {
d.color = new cc.color(19, 255, 194, 255);
_.color = new cc.color(255, 255, 255, 255);
u.color = new cc.color(255, 255, 255, 255);
g.color = new cc.color(255, 255, 255, 255);
this._withdrawList = this._withdrawList_all;
this._showWithdrawRecordsList(this._withdrawList_all);
} else if ("suc_btn" == e.target.name) {
d.color = new cc.color(255, 255, 255, 255);
_.color = new cc.color(19, 255, 194, 255);
u.color = new cc.color(255, 255, 255, 255);
g.color = new cc.color(255, 255, 255, 255);
var m = [];
this._withdrawList_all.forEach(function(e) {
2 == e.status && m.push(e);
});
this._withdrawList = m;
this._showWithdrawRecordsList(m);
} else if ("inpro_btn" == e.target.name) {
d.color = new cc.color(255, 255, 255, 255);
_.color = new cc.color(255, 255, 255, 255);
u.color = new cc.color(19, 255, 194, 255);
g.color = new cc.color(255, 255, 255, 255);
var v = [];
this._withdrawList_all.forEach(function(e) {
0 != e.status && 1 != e.status && 4 !== e.status || v.push(e);
});
this._withdrawList = v;
this._showWithdrawRecordsList(v);
} else if ("failed_btn" == e.target.name) {
d.color = new cc.color(255, 255, 255, 255);
_.color = new cc.color(255, 255, 255, 255);
u.color = new cc.color(255, 255, 255, 255);
g.color = new cc.color(19, 255, 194, 255);
var S = [];
this._withdrawList_all.forEach(function(e) {
3 == e.status && S.push(e);
});
this._withdrawList = S;
this._showWithdrawRecordsList(S);
}
} else if (3 == this.currentIndex) {
var C = cc.find("all_btn", this.balance_filter), b = cc.find("Label", C), E = cc.find("win_btn", this.balance_filter), y = cc.find("Label", E), L = cc.find("lose_btn", this.balance_filter), T = cc.find("Label", L);
if ("all_btn" == e.target.name) {
b.color = new cc.color(19, 255, 194, 255);
y.color = new cc.color(255, 255, 255, 255);
T.color = new cc.color(255, 255, 255, 255);
this._balanceList = this._balanceList_all;
this._showBalanceRecordsList(this._balanceList);
} else if ("win_btn" == e.target.name) {
b.color = new cc.color(255, 255, 255, 255);
y.color = new cc.color(19, 255, 194, 255);
T.color = new cc.color(255, 255, 255, 255);
var I = [];
this._balanceList_all.forEach(function(e) {
e.win > 0 && I.push(e);
});
this._balanceList = I;
this._showBalanceRecordsList(I);
} else if ("lose_btn" == e.target.name) {
b.color = new cc.color(255, 255, 255, 255);
y.color = new cc.color(255, 255, 255, 255);
T.color = new cc.color(19, 255, 194, 255);
var A = [];
this._balanceList_all.forEach(function(e) {
e.win <= 0 && A.push(e);
});
this._balanceList = A;
this._showBalanceRecordsList(A);
}
}
},
sendDepositReq: function() {
var e = {
c: MsgId.GET_PAY_RECORD
};
cc.vv.NetManager.sendAndCache(e);
},
sendWithdrawReq: function() {
var e = {
c: MsgId.GET_WITHDRAW_RECORD,
cat: 2
};
cc.vv.NetManager.sendAndCache(e);
},
sendBalanceReq: function() {
var e = {
c: MsgId.GET_BALANCE_RECORD
};
cc.vv.NetManager.sendAndCache(e);
},
OnRcvDepositRecords: function(e) {
if (200 == e.code) {
cc.log("看看充值记录---", e);
this._depositList = e.dataList;
this.__depositList_all = e.dataList;
this._showDepositRecordsList(e.dataList);
}
},
OnRcvWithdrawRecords: function(e) {
if (200 == e.code) {
cc.log("看看提现记录---", e);
this._withdrawList = e.dataList;
this._withdrawList_all = e.dataList;
this._showWithdrawRecordsList(e.dataList);
}
},
OnRcvBalanceRecords: function(e) {
if (200 == e.code) {
cc.log("看看流水记录---", e);
this._balanceList = e.records;
this._balanceList_all = e.records;
this._showBalanceRecordsList(e.records);
}
},
_showDepositRecordsList: function(e) {
this.deposit_listview.numItems = e.length;
},
_showWithdrawRecordsList: function(e) {
this.withdraw_listview.numItems = e.length;
},
_showBalanceRecordsList: function(e) {
this.balance_listview.numItems = e.length;
},
onRenderDepositList: function(e, t) {
var i = this._depositList[t];
if (i) {
e.active = !0;
e.getComponent("deposit_record_item").init(i);
} else e.active = !0;
},
onRenderWithdrawList: function(e, t) {
var i = this._withdrawList[t];
if (i) {
e.active = !0;
e.getComponent("withdraw_record_item").init(i);
} else e.active = !0;
},
onRenderBalanceList: function(e, t) {
var i = this._balanceList[t];
if (i) {
e.active = !0;
e.getComponent("balance_record_item").init(i);
} else e.active = !0;
},
onClickToggle1: function() {
this.sendDepositReq();
this._showPage(1);
},
onClickToggle2: function() {
this.sendWithdrawReq();
this._showPage(2);
},
onClickToggle3: function() {
this.sendBalanceReq();
this._showPage(3);
},
_showPage: function(e) {
var t = cc.find("deposit_list", this.node), i = cc.find("withdraw_list", this.node), n = cc.find("balance_list", this.node);
t && (t.active = 1 == e);
i && (i.active = 2 == e);
n && (n.active = 3 == e);
1 == e ? this.currentIndex = 1 : 2 == e ? this.currentIndex = 2 : 3 == e && (this.currentIndex = 3);
this.deposit_filter.active = 1 == e;
this.withdraw_filter.active = 2 == e;
this.balance_filter.active = 3 == e;
this.initFilterBtns();
},
onClickClose: function() {
this.node.destroy();
}
});
cc._RF.pop();
}, {
List: "List"
} ],
yd_more_coins: [ function(e, t) {
"use strict";
cc._RF.push(t, "6cf41p3UYtHkau8yY2ZWv0K", "yd_more_coins");
cc.Class({
extends: cc.Component,
properties: {
itemList: [],
localData: []
},
onLoad: function() {
for (var e = 1; e <= 6; e++) {
var t = cc.find("bg/layout/item" + e, this.node);
cc.find("btn", t).on("click", this.onClickPay.bind(this, t), this);
this.itemList.push(t);
}
this.netListener = this.node.addComponent("NetListenerCmp");
this.netListener.registerMsg(MsgId.REQ_SHOP_EX, this.REQ_SHOP_EX, this);
this.netListener.registerMsg(MsgId.PURCHASE_RECHARGE_SUC, this.PURCHASE_RECHARGE_SUC, this);
},
start: function() {
cc.vv.NetManager.sendAndCache({
c: MsgId.REQ_SHOP_EX,
stype: "31",
platform: Global.isIOS() ? 2 : 1
}, !0);
},
REQ_SHOP_EX: function(e) {
if (200 == e.code && !(e.spcode && e.spcode > 0)) {
var t = e.shoplist || {};
this.localData = [];
if (t.data31) {
this.localData = t.data31;
this.updateView();
}
}
},
updateView: function() {
for (var e = 0; e < this.itemList.length; e++) {
var t = this.itemList[e], i = this.localData[e];
if (i) {
t.active = !0;
t.data = i;
cc.find("lbl_val", t).getComponent(cc.Label).string = Global.FormatNumToComma(i.count);
var n = "";
cc.vv.PayMgr.getLocalPrice && (n = cc.vv.PayMgr.getLocalPrice(i.productid));
n = n || __(i.unit, Global.FormatNumToComma(i.amount));
cc.find("btn/label", t).getComponent(cc.Label).string = "₹" + Global.FormatNumToComma(i.amount);
} else t.active = !1;
}
},
onClickPay: function(e) {
var t = e.data;
if (t) {
StatisticsMgr.reqReportNow(ReportConfig.new_quickpaydlg_click, t.id);
this.lastClickPos = cc.find("btn", e).convertToWorldSpaceAR(cc.v2(0, 0));
Global.isNative() && (Global.appId == Global.APPID.TestPokerHero ? cc.vv.NetManager.send({
c: 356,
id: t.id
}) : cc.vv.PayMgr.reqPurchaseOrder(t.id));
}
},
PURCHASE_RECHARGE_SUC: function(e) {
if (200 == e.code) {
e.rewards && Global.RewardFly(e.rewards, this.lastClickPos);
cc.vv.PopupManager.removePopup(this.node);
}
}
});
cc._RF.pop();
}, {} ],
yd_rank_cashgame: [ function(e, t) {
"use strict";
cc._RF.push(t, "15b76MLZtpLQqal1PNl2i+H", "yd_rank_cashgame");
cc.Class({
extends: cc.Component,
properties: {
listView: e("List"),
backBtn: cc.Node
},
onLoad: function() {
this.netListener = this.node.addComponent("NetListenerCmp");
Global.btnClickEvent(cc.find("tog_date/toggle1", this.node), this.onClickToggle1, this);
Global.btnClickEvent(cc.find("tog_date/toggle2", this.node), this.onClickToggle2, this);
Global.btnClickEvent(cc.find("tog_date/toggle3", this.node), this.onClickToggle3, this);
Global.btnClickEvent(cc.find("btn_view", this.node), this.onClickViewAll, this);
Global.btnClickEvent(cc.find("info/winners/btn_info", this.node), this.onClickInfo, this);
},
onEnable: function() {
this.netListener.registerMsg(MsgId.EVENT_GET_RANK_INFO, this.EVENT_GET_RANK_INFO, this);
this.netListener.registerMsg(MsgId.EVENT_REGISTER_RANK_INFO, this.EVENT_REGISTER_RANK_INFO, this);
},
onDisable: function() {
this.netListener.clear();
},
start: function() {},
setRankInfo: function(e) {
cc.vv.NetManager.sendAndCache({
c: MsgId.EVENT_GET_RANK_INFO,
rtype: e
});
},
setRegisterRank: function(e) {
cc.vv.NetManager.sendAndCache({
c: MsgId.EVENT_REGISTER_RANK_INFO,
rtype: e
});
},
EVENT_GET_RANK_INFO: function(e) {
if (200 == e.code) {
758 == e.spcode ? this.updateJoinBtn(e.spcode) : this.updateJoinBtn(1);
if (1 == e.rtype || 2 == e.rtype || 3 == e.rtype) {
this._rtype = e.rtype;
cc.find("tog_date/toggle1", this.node).getComponent(cc.Toggle).isChecked = 1 == this._rtype;
cc.find("tog_date/toggle2", this.node).getComponent(cc.Toggle).isChecked = 2 == this._rtype;
cc.find("tog_date/toggle3", this.node).getComponent(cc.Toggle).isChecked = 3 == this._rtype;
this.localData = e.list;
this.showData = e.list.slice(0, 3);
this.selfInfo = e.myInfo;
this.updateView();
}
}
},
EVENT_REGISTER_RANK_INFO: function(e) {
var t = this;
804 == e.spcode && cc.vv.AlertView.show("You don't have enough money to join learderboard.", function() {
if (Global.isIOSAndroidReview()) cc.vv.PopupManager.addPopup("YD_Pro/Review/yd_more_coins"); else {
var e = "YD_Pro/prefab/yd_shop";
cc.vv.UserManager.isbindphone > 0 || (e = "YD_Pro/prefab/Register");
cc.vv.PopupManager.addPopup(e, {
onShow: function() {}
});
}
}, null, !0, function() {}, "Not Enough Funds", null, "Add Cash");
if (200 == e.code && 0 == e.spcode) {
cc.vv.AlertView.show("You have successfully joined the Leaderboard", function() {
cc.find("info/btn_play", t.node).emit("click");
}, null, !0, function() {}, "Congratulations", null, "Play Now");
this.updateJoinBtn(1);
this.setRankInfo(this._rtype);
}
},
onClickToggle1: function() {
this._rtype = 1;
this.setRankInfo(1);
},
onClickToggle2: function() {
this._rtype = 2;
this.setRankInfo(2);
},
onClickToggle3: function() {
this._rtype = 3;
this.setRankInfo(3);
},
updatePanel: function(e, t) {
void 0 === t && (t = null);
this.coinfig = e;
this._rtype = t || this._rtype || 1;
var i = this.checkRankOpen(this._rtype);
-1 != i && (this._rtype = i);
this.setRankInfo(this._rtype);
},
checkRankOpen: function(e) {
for (var t = -1, i = 0; i < 3; i++) {
var n = i + 1, a = cc.find("tog_date/toggle" + n, this.node), o = this.getConfigByType(n);
if (o) {
cc.find("node_lock", a).active = !o.open;
o.open && (e == n ? t = n : -1 == t && (t = n));
}
}
cc.find("tog_date", this.node).getComponent(cc.Layout).updateLayout();
return t;
},
updateView: function() {
var e = this.getConfigByType(this._rtype);
this.updateCfgInfo();
this.updateSelfInfo();
this.listView.numItems = this.showData.length;
if (this.localData.length > 0) {
cc.find("btn_view", this.node).active = e && e.open;
cc.find("lbl_empty", this.node).active = !1;
} else {
cc.find("btn_view", this.node).active = !1;
cc.find("lbl_empty", this.node).active = !0;
var t = [ "Daily", "Weekly", "Monthly" ][this._rtype - 1];
t += " Leaderboard will be live soon. Keep checking this space for more updates.";
cc.find("lbl_empty", this.node).getComponent(cc.Label).string = t;
}
cc.find("tit/spr", this.node).getComponent("ImgSwitchCmp").setIndex(this._rtype - 1);
},
onUpdateItem: function(e, t) {
var i = this.showData[t];
e.getComponent("yd_rank_item").updateView(i, !1);
},
updateSelfInfo: function() {
cc.find("listview/self", this.node).getComponent("yd_rank_item").updateView(this.selfInfo, !0);
},
getConfigByType: function(e) {
if (this.coinfig) for (var t = 0; t < this.coinfig.length; t++) if (this.coinfig[t].rtype == e) return this.coinfig[t];
},
updateCfgInfo: function() {
var e = cc.find("info", this.node), t = this.getConfigByType(this._rtype);
if (t) {
cc.find("win/Label2", e).getComponent(cc.Label).string = [ "Daily", "Weekly", "Monthly" ][this._rtype - 1];
cc.find("win/lbl", e).getComponent(cc.Label).string = Global.FormatNumToComma(t.prize);
cc.find("prize/lbl", e).getComponent(cc.Label).string = Global.FormatNumToComma(t.prize);
cc.find("criteria/lbl", e).getComponent(cc.Label).string = Global.FormatNumToComma(t.limit);
cc.find("winners/lbl", e).getComponent(cc.Label).string = t.winners;
var i;
i = 1 == this._rtype ? Global.getDateStrNoYear(t.start_time) : Global.getDateStrNoYear(t.start_time) + " - " + Global.getDateStrNoYear(t.stop_time);
cc.find("duration/lbl", e).getComponent(cc.Label).string = i;
}
cc.find("node_lock", this.node).active = t && !t.open;
},
updateJoinBtn: function(e) {
var t = this, i = cc.find("info/btn_join", this.node), n = cc.find("info/btn_play", this.node), a = cc.find("info/lbl_tips", this.node).getComponent(cc.Label);
i.active = 758 == e;
n.active = 1 == e;
if (758 == e) {
var o = this.getConfigByType(this._rtype);
if (o) {
a.string = "*Opt in Mandatory to join leaderboard";
var c = Number(o.register), s = Number(o.limit), r = "Join Now", l = "", d = this;
if (0 == c) l = 'Click "Yes" button to join the Leaderboard'; else if (c > 0) {
r = "Join for ₹" + Global.FormatNumToComma(c);
l = "You will pay " + Global.FormatNumToComma(c) + " to join " + [ "Daily", "Weekly", "Monthly" ][this._rtype - 1] + " Leaderboard";
}
cc.find("label", i).getComponent(cc.Label).string = r;
i.off("click");
i.on("click", function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_2_SOUNDS");
cc.vv.UserManager.coin < s ? cc.vv.FloatTip.show("You need deposit at least " + s + " to join learderboard.") : cc.vv.AlertView.show(l, function() {
d.setRegisterRank(d._rtype);
}, function() {}, !1, null, "Leaderboard Registration", "No", "Yes");
});
}
} else if (1 == e) {
a.string = "You have already Opted in for the leaderboard";
n.off("click");
n.on("click", function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_2_SOUNDS");
t.backBtn && t.backBtn.getComponent(cc.Button) && t.backBtn.emit("click");
});
}
},
onClickViewAll: function() {
var e = this;
this.localData && cc.vv.PopupManager.addPopup("YD_Pro/rank/yd_rank_detail", {
onShow: function(t) {
t.getComponent("yd_rank_detail").updateView(e.localData, e.selfInfo, e._rtype);
}
});
},
onClickInfo: function() {
var e = this;
cc.vv.PopupManager.addPopup("YD_Pro/rank/yd_rule_rewards", {
onShow: function(t) {
t.getComponent("yd_rank_rule_rewards").setRankInfo(e._rtype);
}
});
}
});
cc._RF.pop();
}, {
List: "List"
} ],
yd_rank_detail: [ function(e, t) {
"use strict";
cc._RF.push(t, "60d47DZUshKzJNyn0hwvadC", "yd_rank_detail");
cc.Class({
extends: cc.Component,
properties: {
listView: e("List")
},
start: function() {},
updateView: function(e, t, i) {
this.localData = e;
this.listView.numItems = this.localData.length;
this.selfInfo = t;
this.updateSelfInfo();
cc.find("ui/tit", this.node).getComponent("ImgSwitchCmp").setIndex(i - 1);
},
onUpdateItem: function(e, t) {
var i = this.localData[t];
e.getComponent("yd_rank_item").updateView(i, !1, 0);
},
updateSelfInfo: function() {
cc.find("ui/listview/self", this.node).getComponent("yd_rank_item").updateView(this.selfInfo, !0, 0);
}
});
cc._RF.pop();
}, {
List: "List"
} ],
yd_rank_gamesitem: [ function(e, t) {
"use strict";
cc._RF.push(t, "d9cf3M0YqpDtqDA4y+1OfIs", "yd_rank_gamesitem");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
Global.btnClickEvent(this.node, this.onClickItem, this);
},
start: function() {},
updateView: function(e) {
this._gameid = e;
var t = this._isSlot(e), i = cc.find("icon", this.node), n = cc.find("spine", this.node);
i.active = !t;
n.active = t;
if (t) {
var a = cc.vv.GameItemCfg[e], o = n.getComponent(sp.Skeleton);
cc.vv.ResManager.setSkeleton(o, "BalootClient/Slots/icon/" + a.action + "/spine", function(e) {
e.setAnimation(0, "animation2", !0);
});
} else cc.vv.ResManager.setSpriteFrame(i.getComponent(cc.Sprite), "BalootClient/GameIcon/" + e, null, null);
},
onClickItem: function() {
this._isSlot(this._gameid) ? cc.vv.PopupManager.addPopup("BalootClient/Slots/page_slots", {
opacityIn: !0
}) : Global.dispatchEvent("GO_ROOMGAME_ID", this._gameid);
Global.dispatchEvent("Close_Rank_View");
},
_isSlot: function(e) {
for (var t = !1, i = cc.vv.UserManager.slotsList, n = 0; n < i.length; n++) e == i[n].id && (t = !0);
return t;
}
});
cc._RF.pop();
}, {} ],
yd_rank_games: [ function(e, t) {
"use strict";
cc._RF.push(t, "84642TMty9P7YQ/qA88XxeQ", "yd_rank_games");
cc.Class({
extends: cc.Component,
properties: {
listView: e("List"),
_listdata: null
},
start: function() {
this._listdata = cc.vv.UserManager.getLepGames() || [];
this.listView.numItems = this._listdata.length;
},
onListRender: function(e, t) {
var i = this._listdata[t];
if (i) {
e.active = !0;
e.getComponent("yd_rank_gamesitem").updateView(i);
} else e.active = !1;
}
});
cc._RF.pop();
}, {
List: "List"
} ],
yd_rank_item: [ function(e, t) {
"use strict";
cc._RF.push(t, "f4fe2UcxV9Ncq/W15IAwVh+", "yd_rank_item");
cc.Class({
extends: cc.Component,
properties: {},
start: function() {},
updateView: function(e, t, i) {
void 0 === i && (i = 0);
this.node.getComponent("ImgSwitchCmp").setIndex(t ? 1 + i : 0 + i);
if (t) {
e.ord ? this.showRank(e.ord) : this.showRank("--");
cc.find("name", this.node).getComponent(cc.Label).string = cc.vv.UserManager.nickName;
cc.find("node_head", this.node).getComponent("HeadCmp").setHead(cc.vv.UserManager.uid, cc.vv.UserManager.userIcon);
cc.find("node_head", this.node).getComponent("HeadCmp").setAvatarFrame(cc.vv.UserManager.avatarframe);
} else {
this.showRank(e.ord);
cc.find("name", this.node).getComponent(cc.Label).string = e.playername;
cc.find("node_head", this.node).getComponent("HeadCmp").setHead(e.uid, e.usericon);
cc.find("node_head", this.node).getComponent("HeadCmp").setAvatarFrame(e.avatarframe);
}
cc.find("prize", this.node).getComponent(cc.Label).string = Global.FormatNumToComma(e.reward_coin || 0);
cc.find("points", this.node).getComponent(cc.Label).string = Global.FormatNumToComma(e.score || 0);
},
showRank: function(e) {
cc.find("icon_rank1", this.node).active = 1 == e;
cc.find("icon_rank2", this.node).active = 2 == e;
cc.find("icon_rank3", this.node).active = 3 == e;
cc.find("rank", this.node).active = e > 3 || "string" == typeof e;
cc.find("rank", this.node).getComponent(cc.Label).string = e;
}
});
cc._RF.pop();
}, {} ],
yd_rank_referrals: [ function(e, t) {
"use strict";
cc._RF.push(t, "bd7ceUvcOhKYK5RmGGBA8vF", "yd_rank_referrals");
cc.Class({
extends: cc.Component,
properties: {
listView: e("List"),
backBtn: cc.Node
},
onLoad: function() {
this.netListener = this.node.addComponent("NetListenerCmp");
Global.btnClickEvent(cc.find("info/winners/btn_info", this.node), this.onClickInfo, this);
},
onEnable: function() {
this.netListener.registerMsg(MsgId.EVENT_GET_RANK_INFO, this.EVENT_GET_RANK_INFO, this);
},
onDisable: function() {
this.netListener.clear();
},
setRankInfo: function(e) {
cc.vv.NetManager.sendAndCache({
c: MsgId.EVENT_GET_RANK_INFO,
rtype: e
});
},
start: function() {},
EVENT_GET_RANK_INFO: function(e) {
if (200 == e.code && 4 == e.rtype) {
this.localData = e.list;
this.selfInfo = e.myInfo;
this.updateView();
}
},
getConfigByType: function(e) {
if (this.coinfig) for (var t = 0; t < this.coinfig.length; t++) if (this.coinfig[t].rtype == e) return this.coinfig[t];
},
updateCfgInfo: function() {
var e = this, t = this.getConfigByType(this._rtype);
if (t) {
var i, n = cc.find("info", this.node);
cc.find("prize/lbl", n).getComponent(cc.Label).string = Global.FormatNumToComma(t.prize);
cc.find("duration/lbl", n).getComponent(cc.Label).string = "--";
cc.find("winners/lbl", n).getComponent(cc.Label).string = t.winners;
i = 1 == this._rtype ? Global.getDateStrNoYear(t.start_time) : Global.getDateStrNoYear(t.start_time) + " - " + Global.getDateStrNoYear(t.stop_time);
cc.find("duration/lbl", n).getComponent(cc.Label).string = i;
var a = cc.find("btn_join", n);
a.off("click");
a.on("click", function() {
if (e.backBtn && e.backBtn.getComponent(cc.Button)) {
e.backBtn.emit("click");
cc.vv.GameManager.jumpTo(3);
}
});
}
cc.find("node_lock", this.node).active = t && !t.open;
},
updatePanel: function(e) {
this.coinfig = e;
this._rtype = 4;
this.setRankInfo(this._rtype);
},
updateView: function() {
this.updateCfgInfo();
this.updateSelfInfo();
this.listView.numItems = this.localData.length;
this.localData.length > 0 ? cc.find("lbl_empty", this.node).active = !1 : cc.find("lbl_empty", this.node).active = !0;
},
onUpdateItem: function(e, t) {
var i = this.localData[t];
e.getComponent("yd_rank_item").updateView(i, !1, 2);
},
updateSelfInfo: function() {
cc.find("listview/self", this.node).getComponent("yd_rank_item").updateView(this.selfInfo, !0, 2);
},
onClickInfo: function() {
cc.vv.PopupManager.addPopup("YD_Pro/rank/yd_rule_rewards", {
onShow: function(e) {
e.getComponent("yd_rank_rule_rewards").setRankInfo(4);
}
});
}
});
cc._RF.pop();
}, {
List: "List"
} ],
yd_rank_rule_rewards: [ function(e, t) {
"use strict";
cc._RF.push(t, "e52e6cCIZdERbTt8IESeYZL", "yd_rank_rule_rewards");
e("os").type;
cc.Class({
extends: cc.Component,
properties: {
sprTableBottom: cc.SpriteFrame
},
onLoad: function() {
this.netListener = this.node.addComponent("NetListenerCmp");
this.netListener.registerMsg(MsgId.EVENT_GET_RANK_REWARDS_CFG, this.EVENT_GET_RANK_REWARDS_CFG, this);
this.inited = !1;
},
setRankInfo: function(e) {
this._rtype;
cc.vv.NetManager.sendAndCache({
c: MsgId.EVENT_GET_RANK_REWARDS_CFG,
rtype: e
});
},
EVENT_GET_RANK_REWARDS_CFG: function(e) {
200 == e.code && this.updateView(e.rtype, e.rewards);
},
updateView: function(e, t) {
if (!this.inited) {
this.inited = !0;
Global.setLabelString("rules/item/lbl_name", this.node, [ "", "Daily", "Weekly", "Monthly", "Referrals" ][e]);
for (var i = cc.find("rules/ScrollView/view/content", this.node), n = cc.find("rules/ScrollView/view/item", this.node), a = 0; a < t.length; a++) {
var o = t[a], c = cc.instantiate(n);
o.l_ord == o.r_ord ? Global.setLabelString("lbl_name", c, "" + o.l_ord) : Global.setLabelString("lbl_name", c, o.l_ord + "-" + o.r_ord);
Global.setLabelString("lbl_val", c, o.coin);
a == t.length - 1 && (c.getChildByName("bg").getComponent(cc.Sprite).spriteFrame = this.sprTableBottom);
c.parent = i;
c.active = !0;
}
}
}
});
cc._RF.pop();
}, {
os: 1
} ],
yd_rank: [ function(e, t) {
"use strict";
cc._RF.push(t, "72c81FQ/fFFcqNZR2ZXjjMN", "yd_rank");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.netListener = this.node.addComponent("NetListenerCmp");
Global.btnClickEvent(cc.find("ui/tog_menu/toggle1", this.node), this.onClickToggle1, this);
Global.btnClickEvent(cc.find("ui/tog_menu/toggle2", this.node), this.onClickToggle2, this);
Global.btnClickEvent(cc.find("ui/btn_return", this.node), this.onClickBack, this);
Global.registerEvent("Close_Rank_View", this.onEventCloseRank, this);
},
onEnable: function() {
this.netListener.registerMsg(MsgId.EVENT_GET_RANK_CONFIG, this.EVENT_GET_RANK_CONFIG, this);
this.netListener.registerMsg(MsgId.EVENT_GET_RANK_INFO, this.EVENT_GET_RANK_INFO, this);
},
onDisable: function() {
this.netListener.clear();
},
start: function() {},
EVENT_GET_RANK_CONFIG: function(e) {
if (200 == e.code) {
this.pics = e.pics;
this.coinfig = e.config;
2 == this.checkRankOpen() && (this._openPageType = 4);
this._openPageType > 3 ? this.showPanel(2) : this.showPanel(1, this._openPageType);
}
},
checkRankOpen: function() {
var e = this.getConfigByType(4), t = cc.find("ui/tog_menu/toggle1", this.node), i = cc.find("ui/tog_menu/toggle2", this.node), n = this.getConfigByType(1), a = this.getConfigByType(2), o = this.getConfigByType(3), c = n.open || a.open || o.open;
cc.find("node_lock", i).active = !e.open;
cc.find("node_lock", t).active = !c;
return c ? 1 : 2;
},
getConfigByType: function(e) {
if (this.coinfig) for (var t = 0; t < this.coinfig.length; t++) if (this.coinfig[t].rtype == e) return this.coinfig[t];
},
EVENT_GET_RANK_INFO: function(e) {
var t = this;
if (200 == e.code && e.rtype) {
var i = cc.find("ui/gg", this.node).getComponent(cc.Sprite), n = "";
this.pics && (1 == e.rtype ? n = this.pics.leaderpic1 : 2 == e.rtype ? n = this.pics.leaderpic2 : 3 == e.rtype ? n = this.pics.leaderpic3 : 4 == e.rtype && (n = this.pics.leaderpic4));
if (n && n.indexOf("http") > -1) {
this._reqHandle && this._reqHandle.rejectFunc();
this._reqHandle = cc.vv.ResManager.loadImage(n, function(e, n) {
cc.isValid(i) && cc.isValid(i.node) && n && (i.spriteFrame = new cc.SpriteFrame(n));
t._reqHandle = null;
});
} else i.node.getComponent("ImgSwitchCmp").setIndex(e.rtype - 1);
}
},
initPage: function(e) {
this._openPageType = e || 1;
cc.vv.NetManager.sendAndCache({
c: MsgId.EVENT_GET_RANK_CONFIG
});
},
onClickToggle1: function() {
this.showPanel(1);
},
onClickToggle2: function() {
this.showPanel(2);
},
showPanel: function(e, t) {
cc.find("ui/panel_cash", this.node).active = 1 == e;
cc.find("ui/tog_menu/toggle1", this.node).getComponent(cc.Toggle).isChecked = 1 == e;
cc.find("ui/panel_referrals", this.node).active = 2 == e;
cc.find("ui/tog_menu/toggle2", this.node).getComponent(cc.Toggle).isChecked = 2 == e;
1 == e ? cc.find("ui/panel_cash", this.node).getComponent("yd_rank_cashgame").updatePanel(this.coinfig, t) : 2 == e && cc.find("ui/panel_referrals", this.node).getComponent("yd_rank_referrals").updatePanel(this.coinfig);
},
onClickBack: function() {
cc.vv.PopupManager.removePopup(this.node);
},
onEventCloseRank: function() {
cc.vv.PopupManager.removePopup(this.node);
}
});
cc._RF.pop();
}, {} ],
yd_reward_today: [ function(e, t) {
"use strict";
cc._RF.push(t, "4bb6dBLDX5M6at85876s0P0", "yd_reward_today");
cc.Class({
extends: cc.Component,
properties: {
listView: e("List"),
_canClickCnt: 0
},
onLoad: function() {
var e = this.node.addComponent("NetListenerCmp");
e.registerMsg(MsgId.REQ_OPEN_GIFT, this.REQ_OPEN_GIFT, this);
e.registerMsg(MsgId.EVENT_RETURN_WATER_REWARD, this.EVENT_RETURN_WATER_REWARD, this);
},
start: function() {},
updateView: function() {
var e = cc.vv.UserManager.todayrewards, t = [], i = this;
this._canClickCnt = 0;
for (var n in e) if (e[n] > 0) {
var a = {};
a.key = n;
a.coin = e[n];
if ("week" == n) {
a.pngIdx = 0;
a.title = "Weekly Bonus";
a.claimFunc = function() {
i.sendVipReq(2);
};
} else if ("month" == n) {
a.pngIdx = 1;
a.title = "Monthly Bonus";
a.claimFunc = function() {
i.sendVipReq(3);
};
} else if ("upgrade" == n) {
a.pngIdx = 2;
a.title = "Level Up Bonus";
a.claimFunc = function() {
i.sendVipReq(4);
};
} else if ("rakeback" == n) {
a.pngIdx = 3;
a.title = "Rakeback Bonus";
a.claimFunc = function() {
i.sendRakeBack();
};
}
t.push(a);
}
this.localData = t;
this._canClickCnt = t.length;
this.listView.numItems = t.length;
},
sendVipReq: function(e) {
cc.vv.NetManager.send({
c: MsgId.REQ_OPEN_GIFT,
type: e,
vip: cc.vv.UserManager.svip
});
},
sendRakeBack: function() {
cc.vv.NetManager.send({
c: MsgId.EVENT_RETURN_WATER_REWARD,
isall: 1
});
},
onUpdateItem: function(e, t) {
var i = this, n = this.localData[t];
cc.find("bg", e).getComponent("ImgSwitchCmp").setIndex(n.pngIdx);
cc.find("icon", e).getComponent("ImgSwitchCmp").setIndex(n.pngIdx);
cc.find("title", e).getComponent("ImgSwitchCmp").setIndex(n.pngIdx);
Global.setLabelString("coin", e, Global.FormatNumToComma(n.coin));
var a = cc.find("btn_claim", e);
Global.btnClickEvent(a, function() {
i.clickItem = a;
a.getComponent(cc.Button).interactable = !1;
cc.vv.UserManager.todayrewards[n.key] = 0;
n.claimFunc();
}, this);
cc.find("Sprite", e);
},
REQ_OPEN_GIFT: function(e) {
if (200 == e.code && 0 == e.spcode) {
var t = e.rewards;
Global.RewardFly(t, this.clickItem.convertToWorldSpaceAR(cc.v2(0, 0)));
this._canClickCnt -= 1;
this._canClickCnt <= 0 && this.close();
}
},
EVENT_RETURN_WATER_REWARD: function(e) {
if (200 == e.code) {
e.rewards && Global.RewardFly(e.rewards, this.clickItem.convertToWorldSpaceAR(cc.v2(0, 0)));
this._canClickCnt -= 1;
this._canClickCnt <= 0 && this.close();
}
},
close: function() {
cc.vv.PopupManager.removePopup(this.node);
}
});
cc._RF.pop();
}, {
List: "List"
} ],
yd_service: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "001acRykMNDGavJADT2wxll", "yd_service");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, a = n.ccclass, o = n.property, c = function(e) {
__extends(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.listNode = null;
t.feedbackBtn = null;
t.infoNode = null;
t.nor_item = null;
t.www_item = null;
t.lblCfg = {
1: {
title: "WhatsApp",
desc: "Tap to message us from WhatsApp"
},
2: {
title: "Telegram",
desc: "Tap to join our Telegram channel"
},
3: {
title: "Other",
desc: "Other methods"
},
4: {
title: "Email",
desc: "Tap to send email to support@yonogames.com"
},
5: {
title: "Online customer service",
desc: "Tap to connect customer service 24/7"
},
6: {
title: "Telephone",
desc: "Tap to call us to get help"
},
7: {
title: "Complaint",
desc: "Apply,commission,complain"
},
8: {
title: "Call Back",
desc: "Tap to order a call back from us"
},
1e3: {
title: "www.yonogames.com",
desc: "Tap to visit our official website"
}
};
return t;
}
t.prototype.onLoad = function() {
this.list = this.listNode.getComponent("List");
this.node.addComponent("NetListenerCmp").registerMsg(MsgId.REQ_SERVICES_INFO, this.REQ_SERVICES_INFO, this);
this.feedbackBtn && Global.btnClickEvent(this.feedbackBtn.node, function() {
cc.vv.PopupManager.addPopup("YD_Pro/prefab/yd_feedback");
}, this);
cc.find("UserHead", this.infoNode).getComponent("HeadCmp").setHead(cc.vv.UserManager.uid, cc.vv.UserManager.userIcon);
cc.find("UserHead", this.infoNode).getComponent("HeadCmp").setAvatarFrame(cc.vv.UserManager.avatarframe);
Global.setLabelString("uid/label", this.infoNode, cc.vv.UserManager.uid);
Global.btnClickEvent(cc.find("uid/btn_copy", this.infoNode), function() {
cc.vv.FloatTip.show(___("复制成功"));
cc.vv.PlatformApiMgr.Copy(cc.vv.UserManager.uid + "");
}, this);
};
t.prototype.start = function() {
cc.vv.NetManager.send({
c: MsgId.REQ_SERVICES_INFO
});
};
t.prototype.REQ_SERVICES_INFO = function(e) {
if (200 == e.code && !(e.spcode && e.spcode > 0)) {
this.dataList = e.data;
this.dataList.sort(function(e, t) {
return e.ord - t.ord;
});
this.list.numItems = this.dataList.length;
this.smedias = e.medialist;
this.showMedias();
}
};
t.prototype.onUpdateItem = function(e, t) {
var i = this.dataList[t], n = i.type - 1, a = this.lblCfg[i.type].desc;
i.memo && (a = i.memo);
var o = this.nor_item, c = cc.find("lbl1", e);
c.active = !0;
var s = this.lblCfg[i.type].title, r = cc.color().fromHEX("#A6B0B0");
if (1e3 == i.type) {
n = 8;
o = this.www_item;
r = cc.color().fromHEX("#FFFFFF");
s = i.url;
}
e.getComponent(cc.Sprite).spriteFrame = o;
cc.find("icon", e).getComponent("ImgSwitchCmp").setIndex(n);
c.getComponent(cc.Label).string = s;
var l = cc.find("lbl2", e);
l.getComponent(cc.Label).string = a;
l.color = r;
e.off("click");
e.on("click", function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_SOUNDS");
if (1 == i.type) {
if (i.url) {
cc.vv.PlatformApiMgr.openURL(i.url);
cc.log("这是第1个-----");
}
} else if (2 == i.type) {
if (i.url) {
cc.vv.PlatformApiMgr.openURL(i.url);
cc.log("这是第2个-----");
}
} else if (3 == i.type) {
if (i.url) {
cc.vv.PlatformApiMgr.openURL(i.url);
cc.log("这是第3个-----");
}
} else if (4 == i.type) {
if (i.url) {
var e = {
sender: i.url,
title: "MY UID:" + cc.vv.UserManager.uid,
content: "Please let us know how can we help!",
sendway: "sendto"
};
cc.vv.PlatformApiMgr.SendMail(JSON.stringify(e));
cc.log("这是第4个-----");
}
} else if (5 == i.type) {
if (i.url) {
var t = cc.vv.UserManager.uid;
t || (t = Global.playerData.uid);
var n = cc.js.formatStr("%s?name=%s", i.url, t);
cc.vv.PlatformApiMgr.openURL(n);
cc.log("这是第5个-----", i.url);
}
} else if (6 == i.type) {
if (i.url) {
cc.vv.PlatformApiMgr.callPhone(i.url);
cc.log("这是第6个-----");
}
} else if (7 == i.type) {
if (i.url) {
cc.vv.PlatformApiMgr.openURL(i.url);
cc.log("这是第7个-----");
}
} else if (8 == i.type) cc.vv.PopupManager.addPopup("YD_Pro/prefab/yd_call_back"); else if (1e3 == i.type) {
cc.vv.PlatformApiMgr.openURL(i.url);
cc.log("这是第8个-----");
}
});
};
t.prototype.showMedias = function() {
for (var e = cc.find("media_list/layout", this.node), t = [ {
type: 9,
name: "m_fb"
}, {
type: 10,
name: "m_youtobe"
}, {
type: 11,
name: "m_ins"
}, {
type: 2,
name: "m_telgram"
} ], i = function(i) {
var a = t[i], o = cc.find(a.name, e), c = n.getMediaData(a.type);
o.active = !!c;
o.on("click", function() {
cc.vv.PlatformApiMgr.openURL(c.url);
});
}, n = this, a = 0; a < t.length; a++) i(a);
};
t.prototype.getMediaData = function(e) {
for (var t = 0; t < this.smedias.length; t++) if (this.smedias[t].type == e) return this.smedias[t];
};
__decorate([ o(cc.Node) ], t.prototype, "listNode", void 0);
__decorate([ o(cc.Button) ], t.prototype, "feedbackBtn", void 0);
__decorate([ o(cc.Node) ], t.prototype, "infoNode", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "nor_item", void 0);
__decorate([ o(cc.SpriteFrame) ], t.prototype, "www_item", void 0);
return __decorate([ a ], t);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
yd_shop_view: [ function(e, t) {
"use strict";
cc._RF.push(t, "c14dbqP4ppEwoFtOf2eQf7Y", "yd_shop_view");
cc.Class({
extends: cc.Component,
properties: {
goldsNode: cc.Node,
item_support: cc.Node,
itemList: [],
localData: []
},
onLoad: function() {
for (var e = 1; e <= 6; e++) {
var t = cc.find("layout/item" + e, this.goldsNode);
cc.find("btn", t).on("click", this.onClickPay.bind(this, t), this);
this.itemList.push(t);
}
cc.find("btn_go", this.item_support).on("click", function() {
cc.vv.PopupManager.addPopup("YD_Pro/prefab/yd_service", {
isWait: !0,
scaleIn: !0
});
});
this.netListener = this.node.addComponent("NetListenerCmp");
},
onEnable: function() {
this.netListener.registerMsg(MsgId.REQ_SHOP_EX, this.REQ_SHOP_EX, this);
this.netListener.registerMsg(MsgId.PURCHASE_RECHARGE_SUC, this.PURCHASE_RECHARGE_SUC, this);
cc.vv.NetManager.sendAndCache({
c: MsgId.REQ_SHOP_EX,
stype: "1",
platform: Global.isIOS() ? 2 : 1
}, !0);
},
start: function() {},
REQ_SHOP_EX: function(e) {
if (200 == e.code && !(e.spcode && e.spcode > 0)) {
var t = e.shoplist || {};
this.localData = [];
if (t.data1) {
this.localData = t.data1;
this.updateView();
}
}
},
updateView: function() {
for (var e = 0; e < this.itemList.length; e++) {
var t = this.itemList[e], i = this.localData[e];
if (i) {
t.active = !0;
t.data = i;
cc.find("lbl_val", t).getComponent(cc.Label).string = Global.FormatNumToComma(i.count);
var n = "";
cc.vv.PayMgr.getLocalPrice && (n = cc.vv.PayMgr.getLocalPrice(i.productid));
n = n || __(i.unit, Global.FormatNumToComma(i.amount));
cc.find("btn/label", t).getComponent(cc.Label).string = n;
} else t.active = !1;
}
},
onClickPay: function(e) {
var t = e.data;
if (t) {
this.lastClickPos = cc.find("btn", e).convertToWorldSpaceAR(cc.v2(0, 0));
Global.isNative() && (Global.appId == Global.APPID.TestPokerHero ? cc.vv.NetManager.send({
c: 356,
id: t.id
}) : cc.vv.PayMgr.reqPurchaseOrder(t.id));
}
},
PURCHASE_RECHARGE_SUC: function(e) {
200 == e.code && e.rewards && Global.RewardFly(e.rewards, this.lastClickPos);
}
});
cc._RF.pop();
}, {} ],
yd_shop: [ function(e, t) {
"use strict";
cc._RF.push(t, "ffbfdbAetlEc6C6DZx0c1vj", "yd_shop");
var i = cc.Class({
name: "AmountItem",
properties: {
selectNode: {
displayName: "选中节点",
default: null,
type: cc.Node
},
unSelectNode: {
displayName: "未选中节点",
default: null,
type: cc.Node
},
num: {
displayName: "金额",
default: null,
type: cc.Label
}
}
}), n = cc.Class({
name: "MethodItem",
properties: {
selectPay: {
displayName: "选中的支付节点",
default: null,
type: cc.Node
},
unSelectPay: {
displayName: "未选中支付节点",
default: null,
type: cc.Node
}
}
});
cc.Class({
extends: cc.Component,
properties: {
tabs: {
default: [],
type: [ i ]
},
defaultIndex: 3,
_index: -1,
index: {
get: function() {
return this._index;
}
},
showText: {
displayName: "上面显示金额",
default: null,
type: cc.Label
},
showCash: {
displayName: "下面显示金额",
default: null,
type: cc.Label
},
showBonus: {
displayName: "Bonus数量",
default: null,
type: cc.Label
},
methodTabs: {
default: [],
type: [ n ]
},
payMethodIndex: -1,
defaultPayIndex: -1,
curBalance: {
displayName: "我的余额",
default: null,
type: cc.Label
}
},
onLoad: function() {
var e = this, t = cc.find("btn_return", this.node);
Global.btnClickEvent(t, this.onClickClose, this);
this.node.addComponent("EventListenerCmp").registerEvent(EventId.UPATE_COINS, this.updateCoin, this);
for (var i = function(t) {
var i = e.tabs[t];
if (t < cc.vv.UserManager.product_cfg.length) {
i.num.string = String(cc.vv.UserManager.product_cfg[t].amount);
if (i.unSelectNode) {
var n = i.unSelectNode.addComponent(cc.Button);
n.addComponent("ButtonClick2SoundCmp");
n && n.node.on("click", function() {
e.onSelectItem(i);
});
}
}
}, n = 0; n < this.tabs.length; n++) i(n);
for (var a = function(t) {
var i = e.methodTabs[t];
if (i.unSelectPay) {
var n = i.unSelectPay.addComponent(cc.Button);
n.addComponent("ButtonClick2SoundCmp");
n && n.node.on("click", function() {
e.onSelectPay(i);
});
}
}, o = 0; o < this.methodTabs.length; o++) a(o);
var c = cc.find("btn_customer", this.node);
Global.btnClickEvent(c, this.onClickCusBtn, this);
var s = cc.find("btn_deposit", this.node);
Global.btnClickEvent(s, this.onClickDeposit, this);
this.onSelectItem(this.tabs[this.defaultIndex]);
this.onSelectPay(this.methodTabs[this.defaultPayIndex]);
this.curBalance.string = String(cc.vv.UserManager.coin.toFixed(2));
var r = cc.find("btn_record", this.node);
Global.btnClickEvent(r, this.onClickRecord, this);
},
updateCoin: function() {
this.curBalance.string = String(cc.vv.UserManager.coin.toFixed(2));
},
onSelectItem: function(e) {
for (var t = 0; t < this.tabs.length; t++) this.tabs[t].selectNode.active = !1;
e.selectNode.active = !0;
this._index = this.tabs.indexOf(e);
this.showText.string = String(cc.vv.UserManager.product_cfg[this.index].amount);
this.showCash.string = String(cc.vv.UserManager.product_cfg[this.index].amount.toFixed(2));
this.showBonus.string = String(cc.vv.UserManager.product_cfg[this.index].extra.toFixed(2));
},
onSelectPay: function(e) {
for (var t = 0; t < this.methodTabs.length; t++) this.methodTabs[t].selectPay.active = !1;
e.selectPay.active = !0;
this.payMethodIndex = this.methodTabs.indexOf(e);
},
onClickCusBtn: function() {
var e = Global.customerUrl, t = cc.vv.UserManager.uid;
t || (t = Global.playerData.uid);
var i = cc.js.formatStr("%s?name=%s", e, t);
cc.vv.PlatformApiMgr.openURL(i);
},
onClickRecord: function() {
cc.vv.PopupManager.addPopup("YD_Pro/prefab/yd_money_record", {
onShow: function() {}
});
},
onClickDeposit: function() {
var e = cc.vv.UserManager.uid;
e || (e = Global.playerData.uid);
var t = cc.vv.UserManager.token;
t || (t = Global.playerData.token);
var i = {};
i.uid = e;
i.id = 20;
i.token = t;
i.amount = cc.vv.UserManager.product_cfg[this.index].amount;
StatisticsMgr.reqReportNow(ReportConfig.PLAY_CLICk, i.amount);
cc.vv.NetManager.requestHttpPost("", i, function(e, t) {
if (e && 0 === t.code) {
var i = t.data.payurl;
cc.vv.PlatformApiMgr.openURL(i);
}
}, cc.vv.UserManager.payurl, "POST");
},
onClickClose: function() {
this.node.destroy();
},
start: function() {}
});
cc._RF.pop();
}, {} ],
yd_transaction: [ function(e, t) {
"use strict";
cc._RF.push(t, "7a4a3iz4yVPIoXLgDDN9IzP", "yd_transaction");
cc.Class({
extends: cc.Component,
properties: {
listView: e("List")
},
onLoad: function() {
this.netListener = this.node.addComponent("NetListenerCmp");
},
onEnable: function() {
this.netListener.registerMsg(MsgId.EVENT_BONUS_RECORD, this.EVENT_BONUS_RECORD, this);
cc.vv.NetManager.sendAndCache({
c: MsgId.EVENT_BONUS_RECORD,
rtype: 0
});
},
onDisable: function() {
this.netListener.clear();
},
start: function() {},
EVENT_BONUS_RECORD: function(e) {
if (200 == e.code) {
this.localData = e.data;
this.updateView();
}
},
updateView: function() {
this.listView.numItems = this.localData.length;
},
onUpdateItem: function(e, t) {
var i = this.localData[t];
Global.setLabelString("time", e, Global.getTimeStr(i.time));
Global.setLabelString("type", e, this.getTypeStr(i.rtype));
Global.setLabelString("coin", e, Global.FormatNumToComma(i.coin));
},
getTypeStr: function(e) {
return {
1: "Register bonus",
101: "Refer & earn bonus referral register",
2: "Deposit bonus",
201: "Refer & earn bonus referral deposit",
3: "User Bet",
301: "Refer & earn bonus referral bet",
4: "Quest",
5: "VIP level up bonus",
6: "Transfer out",
9: "VIP weekly bonus",
10: "VIP monthly bonus",
11: "Task bonus deposit task",
22: "Task bonus game task",
23: "Task bonus profit task",
33: "Task bonus betting task",
34: "Transfer to Cash Balance",
35: "Login bonus",
36: "Share & spin bonus",
37: "Betting Cash back bonus",
38: "Salon room tax bonus",
39: "Free Winnings transfer in"
}[e] || "Lucky bonus";
}
});
cc._RF.pop();
}, {
List: "List"
} ],
yd_verify_bank: [ function(e, t) {
"use strict";
cc._RF.push(t, "a7c7a/FAUVHZ6KPJJg1bMbT", "yd_verify_bank");
cc.Class({
extends: cc.Component,
properties: {
bankEditBox: {
displayName: "银行卡输入框",
default: null,
type: cc.EditBox
},
bankEdit_repeat: {
displayName: "银行卡再次输入",
default: null,
type: cc.EditBox
},
ifscEditBox: {
displayName: "IFSC输入框",
default: null,
type: cc.EditBox
},
nameEditBox: {
displayName: "玩家姓名",
default: null,
type: cc.EditBox
},
phoneEditBox: {
displayName: "手机号码",
default: null,
type: cc.EditBox
},
emailEditBox: {
displayName: "邮箱",
default: null,
type: cc.EditBox
},
submitBtn: {
displayName: "提交按钮",
default: null,
type: cc.Button
}
},
onLoad: function() {
this.netListener = this.node.addComponent("NetListenerCmp");
this.netListener.registerMsg(MsgId.BANK_CARD_VERIFY, this.BIND_BANK, this);
var e = cc.find("btn_return", this.node);
Global.btnClickEvent(e, this.onClickClose, this);
this.submitBtn.node.on("click", this.onClickSubmit, this);
this.bankEditBox.node.on("text-changed", this.updateView, this);
this.bankEditBox.node.on("editing-did-ended", this.onBankNumberFinished, this);
this.bankEdit_repeat.node.on("text-changed", this.updateView, this);
this.bankEdit_repeat.node.on("editing-did-ended", this.onBankRepeatFinished, this);
this.ifscEditBox.node.on("text-changed", this.updateView, this);
this.ifscEditBox.node.on("editing-did-ended", this.onIFSCCodeFinished, this);
this.nameEditBox.node.on("text-changed", this.updateView, this);
this.nameEditBox.node.on("editing-did-ended", this.onNameFinished, this);
this.phoneEditBox.node.on("text-changed", this.updateView, this);
this.phoneEditBox.node.on("editing-did-ended", this.onPhoneFinished, this);
this.emailEditBox.node.on("text-changed", this.updateView, this);
this.emailEditBox.node.on("editing-did-ended", this.onEmailFinished, this);
cc.find("btn_customer_top", this.node).on("click", this.onClickCustomer, this);
},
start: function() {},
onClickSubmit: function() {
if (this.validateIndianBankCard(this.bankEditBox.string)) if (this.validateIndianBankCard(this.bankEdit_repeat.string)) if (this.validateIFSCcode(this.ifscEditBox.string)) if (this.validateName(this.nameEditBox.string)) if (this.validatePhone(this.phoneEditBox.string)) if (this.validateEmail(this.emailEditBox.string)) {
var e = {
c: MsgId.BANK_CARD_VERIFY,
account: this.bankEditBox.string,
ifsc: this.ifscEditBox.string,
username: this.nameEditBox.string,
email: this.emailEditBox.string,
bankid: "1",
phone: this.phoneEditBox.string
};
cc.vv.NetManager.send(e);
} else cc.vv.FloatTip.show("Please input correct email number "); else cc.vv.FloatTip.show("Please input correct phone number "); else cc.vv.FloatTip.show("Please input correct name "); else cc.vv.FloatTip.show("Please input correct IFSC code "); else cc.vv.FloatTip.show("Please input correct Bank card number "); else cc.vv.FloatTip.show("Please input correct Bank card number ");
},
BIND_BANK: function(e) {
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show("Verify error "); else {
cc.vv.FloatTip.show("Verify successfully");
Global.playerData.bindbank = 1;
cc.vv.PopupManager.removeAll();
}
},
updateView: function() {
this.submitBtn.getComponent("ButtonGrayCmp").interactable = !1;
},
onClickClose: function() {
this.node.destroy();
},
onBankNumberFinished: function() {
this.bankEditBox.string = this.bankEditBox.string.replace(/\s+/g, "");
this.validateIndianBankCard(this.bankEditBox.string) ? this.submitBtn.getComponent("ButtonGrayCmp").interactable = !0 : cc.vv.FloatTip.show("Bank card number input error");
},
onBankRepeatFinished: function() {
this.bankEdit_repeat.string = this.bankEdit_repeat.string.replace(/\s+/g, "");
this.validateIndianBankCard(this.bankEdit_repeat.string) ? this.submitBtn.getComponent("ButtonGrayCmp").interactable = !0 : cc.vv.FloatTip.show("Bank card number input error");
},
convertToUpperCase: function(e) {
return e.replace(/[a-z]/g, function(e) {
return String.fromCharCode(e.charCodeAt(0) - 32);
});
},
onIFSCCodeFinished: function() {
this.ifscEditBox.string = this.ifscEditBox.string.replace(/\s+/g, "");
var e = this.convertToUpperCase(this.ifscEditBox.string);
if (this.validateIFSCcode(e)) {
this.ifscEditBox.string = e;
this.submitBtn.getComponent("ButtonGrayCmp").interactable = !0;
} else cc.vv.FloatTip.show("IFSC code input error");
},
onNameFinished: function() {
this.nameEditBox.string = this.nameEditBox.string.replace(/\s+/g, "");
this.validateName(this.nameEditBox.string) ? this.submitBtn.getComponent("ButtonGrayCmp").interactable = !0 : cc.vv.FloatTip.show("Name input error");
},
onPhoneFinished: function() {
this.phoneEditBox.string = this.phoneEditBox.string.replace(/\s+/g, "");
this.validatePhone(this.phoneEditBox.string) ? this.submitBtn.getComponent("ButtonGrayCmp").interactable = !0 : cc.vv.FloatTip.show("Phone input error");
},
onEmailFinished: function() {
this.emailEditBox.string = this.emailEditBox.string.replace(/\s+/g, "");
this.validateEmail(this.emailEditBox.string) ? this.submitBtn.getComponent("ButtonGrayCmp").interactable = !0 : cc.vv.FloatTip.show("Email input error");
},
validateIndianBankCard: function(e) {
return !!/^[0-9]\d*$/.test(e);
},
validateIFSCcode: function(e) {
return !!/^[A-Z]{4}[0][a-zA-Z0-9]{6}$/.test(e);
},
validateName: function(e) {
return !!/^[a-zA-Z]+$/.test(e);
},
validatePhone: function(e) {
return !!/^\d{10}$/.test(e);
},
validateEmail: function(e) {
return !!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e);
},
onClickCustomer: function() {
cc.vv.EventManager.emit("EVENT_BTN_CLICK_2_SOUNDS");
var e = cc.vv.UserManager.contactus, t = Global.customerUrl, i = cc.vv.UserManager.uid;
i || (i = Global.playerData.uid);
e || (e = Global.getLocal("contacturl"));
e || (Global.appId == Global.APPID.YonoGames ? e = cc.js.formatStr("%s?name=%s", t, i) : Global.appId == Global.APPID.RummyVIP && (e = cc.js.formatStr("%s?name=%s", t, i)));
(e = cc.js.formatStr("%s?name=%s", t, i)) && cc.vv.PlatformApiMgr.openURL(e);
}
});
cc._RF.pop();
}, {} ],
yd_vip_help: [ function(e, t) {
"use strict";
cc._RF.push(t, "3e053sxmFpJJYuRLjKbNtt9", "yd_vip_help");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
var e = cc.vv.UserConfig.getAppName(), t = cc.js.formatStr("Here at %s, your VIP benefits and privileges are permanent!", e);
Global.setLabelString("ui/lbl_des3", this.node, t);
},
start: function() {}
});
cc._RF.pop();
}, {} ],
yd_vip: [ function(e, t) {
"use strict";
cc._RF.push(t, "d4a5dESsUVBBLMPH7rWOqeF", "yd_vip");
function i(e, t) {
var i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
if (i) return (i = i.call(e)).next.bind(i);
if (Array.isArray(e) || (i = n(e)) || t && e && "number" == typeof e.length) {
i && (e = i);
var a = 0;
return function() {
return a >= e.length ? {
done: !0
} : {
done: !1,
value: e[a++]
};
};
}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function n(e, t) {
if (e) {
if ("string" == typeof e) return a(e, t);
var i = Object.prototype.toString.call(e).slice(8, -1);
"Object" === i && e.constructor && (i = e.constructor.name);
return "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? a(e, t) : void 0;
}
}
function a(e, t) {
(null == t || t > e.length) && (t = e.length);
for (var i = 0, n = new Array(t); i < t; i++) n[i] = e[i];
return n;
}
cc.Class({
extends: cc.Component,
properties: {
index: {
set: function(e) {
this._index = this.calcIndex(e);
this.updateView();
},
get: function() {
return this._index;
}
}
},
onLoad: function() {
var e = this;
Global.FixDesignScale_V(this.node);
this.panel = cc.find("ui", this.node);
this._timeDownW = cc.find("vip_info/btn2", this.panel).getComponent("TimeDownCpt");
this._timeDownW.setTimeFormatStr("hh:mm:ss");
this._timeDownW.setCallback(this.sendGetVipInfo.bind(this));
this._timeDownM = cc.find("vip_info/btn3", this.panel).getComponent("TimeDownCpt");
this._timeDownM.setTimeFormatStr("hh:mm:ss");
this._timeDownM.setCallback(this.sendGetVipInfo.bind(this));
var t = cc.find("btn_left", this.panel);
t.active = !1;
Global.btnClickEvent(t, function() {
e.index--;
});
var i = cc.find("btn_right", this.panel);
i.active = !1;
Global.btnClickEvent(i, function() {
e.index++;
});
Global.btnClickEvent(cc.find("vip_info/btn2", this.panel), function() {
e.clickRewards(e.btnInfow);
}, this);
Global.btnClickEvent(cc.find("vip_info/btn3", this.panel), function() {
e.clickRewards(e.btnInfom);
}, this);
Global.btnClickEvent(cc.find("vip_info/btn4", this.panel), function() {
e.clickRewards(e.btnInfol);
}, this);
Global.btnClickEvent(cc.find("btn_tip", this.panel), function() {
cc.vv.PopupManager.addPopup("YD_Pro/prefab/yd_vip_help");
}, this);
Global.btnClickEvent(cc.find("btn_buy", this.panel), function() {
if (Global.isIOSAndroidReview()) cc.vv.EventManager.emit("HALL_OPEN_SHOP", {
open: 1
}); else {
var e = "YD_Pro/prefab/yd_shop";
cc.vv.UserManager.isbindphone > 0 || (e = "YD_Pro/prefab/Register");
cc.vv.PopupManager.addPopup(e, {
onShow: function() {}
});
}
}, this);
var n = this.node.addComponent("NetListenerCmp");
n.registerMsg(MsgId.REQ_GET_VIP_INFO, this.REQ_GET_VIP_INFO, this);
n.registerMsg(MsgId.REQ_OPEN_GIFT, this.REQ_OPEN_GIFT, this);
},
start: function() {
this.sendGetVipInfo();
},
sendGetVipInfo: function() {
cc.vv.NetManager.send({
c: MsgId.REQ_GET_VIP_INFO
});
},
REQ_GET_VIP_INFO: function(e) {
if (200 == e.code) {
this.max_vip = cc.vv.UserConfig.max_vip + 1;
this.vipData = e.data;
this.wend = e.wend;
this.wstatus = e.wstatus;
this.mstatus = e.mstatus;
this.mend = e.mend;
this.index = this.index >= 0 ? this.index : cc.vv.UserManager.svip;
cc.find("btn_left", this.panel).active = !0;
cc.find("btn_right", this.panel).active = !0;
}
},
REQ_OPEN_GIFT: function(e) {
if (200 == e.code && 0 == e.spcode) {
var t = e.rewards;
Global.RewardFly(t, this.clickItem.convertToWorldSpaceAR(cc.v2(0, 0)));
cc.vv.NetManager.send({
c: MsgId.REQ_GET_VIP_INFO
});
}
},
calcIndex: function(e) {
var t = this.max_vip;
e < 0 && (e += (Math.floor(Math.abs(e / t)) + 1) * t);
return e % t;
},
updateView: function() {
var e = this.index, t = cc.vv.UserManager.svip;
e = Math.max(e, 0);
e = Math.min(e, this.max_vip);
var i = this.vipData[e], n = this.vipData[e + 1];
if (n) {
cc.find("layout/icon", this.panel).x = -330;
cc.find("layout/icon2", this.panel).active = !0;
cc.vv.UserConfig.setVipFrame(cc.find("layout/icon", this.panel).getComponent(cc.Sprite), i.lv);
cc.vv.UserConfig.setVipFrame(cc.find("layout/icon2", this.panel).getComponent(cc.Sprite), n.lv);
var a = Math.min(cc.vv.UserManager.svipexp, n.exp);
cc.find("layout/progress", this.panel).active = !0;
cc.find("layout/progress", this.panel).getComponent(cc.ProgressBar).progress = a / n.exp;
cc.find("layout/progress/label", this.panel).getComponent(cc.Label).string = "Current deposit:" + Global.FormatNumToComma(a);
cc.find("layout/des/New Label", this.panel).active = !0;
cc.find("layout/des/lbl", this.panel).active = !0;
cc.find("layout/des/lbl", this.panel).getComponent(cc.Label).string = Global.FormatNumToComma(n.exp);
} else {
cc.find("layout/icon", this.panel).x = 0;
cc.find("layout/icon2", this.panel).active = !1;
cc.vv.UserConfig.setVipFrame(cc.find("layout/icon", this.panel).getComponent(cc.Sprite), i.lv);
cc.find("layout/progress", this.panel).active = !1;
cc.find("layout/des/New Label", this.panel).active = !1;
cc.find("layout/des/lbl", this.panel).active = !1;
}
var o = cc.find("vip_info/btn2/endT", this.panel), c = cc.find("vip_info/btn3/endT", this.panel), s = Math.floor(new Date().getTime() / 1e3);
if (this.wend - s > 86400) {
this._timeDownW.label.string = Global.getTimeStr(this.wend);
this._timeDownW.label.node.x = 0;
cc.find("daojishi", o).active = !1;
} else {
this._timeDownW.timelife = this.wend - s;
this._timeDownW.label.node.x = 16.5;
cc.find("daojishi", o).active = !0;
}
if (this.mend - s > 86400) {
this._timeDownM.label.string = Global.getTimeStr(this.mend);
this._timeDownM.label.node.x = 0;
cc.find("daojishi", c).active = !1;
} else {
this._timeDownM.timelife = this.mend - s;
this._timeDownM.label.node.x = 16.5;
cc.find("daojishi", c).active = !0;
}
o.active = !1;
c.active = !1;
var r = i.status_bonusw, l = i.status_bonusm;
if (e == t) {
i.bonusw.length > 0 && s < this.wend && 1 != this.wstatus && (o.active = !0);
i.bonusm.length > 0 && s < this.mend && 1 != this.mstatus && (c.active = !0);
r = this.wstatus;
l = this.mstatus;
}
this.showBtnState(cc.find("vip_info/btn2", this.panel), r, i.bonusw);
this.showBtnState(cc.find("vip_info/btn3", this.panel), l, i.bonusm);
this.showBtnState(cc.find("vip_info/btn4", this.panel), i.status_bonusl, i.bonusl);
this.btnInfos = {
info: i.bonuss,
status: i.status_bonuss,
type: 1
};
this.btnInfow = {
info: i.bonusw,
status: r,
type: 2
};
this.btnInfom = {
info: i.bonusm,
status: l,
type: 3
};
this.btnInfol = {
info: i.bonusl,
status: i.status_bonusl,
type: 4
};
this.showBtnRedHit();
},
showBtnState: function(e, t, n) {
cc.find("weilinqu", e).active = 1 === t;
cc.find("red", e).active = 1 === t;
Global.showSpriteGray(cc.find("jinli_icon01", e), 2 == t);
cc.find("icon_ok_3", e).active = 2 === t;
cc.find("lock", e).active = cc.vv.UserManager.svip < this.index;
cc.find("coin", e).active = !1;
cc.find("claim", e).active = 1 === t;
for (var a, o = i(n); !(a = o()).done; ) {
var c = a.value;
if (1 === c.type) {
cc.find("coin", e).active = !0;
cc.find("coin/lbl", e).getComponent(cc.Label).string = Global.FormatNumToComma(c.count);
}
}
},
clickRewards: function(e) {
if (0 == e.status) cc.vv.FloatTip.show("Claim when there is a red dot shows"); else if (1 == e.status) {
this.clickItem = cc.find("vip_info/btn" + e.type, this.panel);
cc.vv.NetManager.send({
c: MsgId.REQ_OPEN_GIFT,
type: e.type,
vip: this.index
});
} else e.status;
},
showBtnRedHit: function() {
var e = this.index, t = cc.vv.UserManager.svip, i = cc.find("btn_left/RedHitAnim", this.panel), n = cc.find("btn_right/RedHitAnim", this.panel);
i.active = !1;
n.active = !1;
for (var a = 0; a < e; a++) if (1 === this.vipData[a].status_bonusl || 1 === this.vipData[a].status_bonusm || 1 === this.vipData[a].status_bonuss || 1 === this.vipData[a].status_bonusw) {
i.active = !0;
break;
}
for (var o = e + 1; o <= t; o++) if (1 === this.vipData[o].status_bonusl || 1 === this.vipData[o].status_bonusm || 1 === this.vipData[o].status_bonuss || 1 === this.vipData[o].status_bonusw) {
n.active = !0;
break;
}
}
});
cc._RF.pop();
}, {} ],
yd_withdrawChoice: [ function(e, t) {
"use strict";
cc._RF.push(t, "5625bDoFHpCFqNlLzdV/5cq", "yd_withdrawChoice");
cc.Class({
extends: cc.Component,
properties: {
myBalance: {
displayName: "可提现金额",
default: null,
type: cc.Label
},
bankBtn: {
displayName: "银行按钮",
default: null,
type: cc.Button
},
upiBtn: {
displayName: "upi按钮",
default: null,
type: cc.Button
}
},
onLoad: function() {
var e = cc.find("btn_return", this.node);
Global.btnClickEvent(e, this.onClickClose, this);
this.myBalance.string = String(cc.vv.UserManager.dcoin.toFixed(2));
this.bankBtn.node.on("click", this.onClickBankBtn, this);
this.upiBtn.node.on("click", this.onClickUpiBtn, this);
var t = cc.find("btn_record", this.node);
Global.btnClickEvent(t, this.onClickRecord, this);
var i = cc.find("bottom_layout", this.node), n = cc.find("btn_customer", i);
Global.btnClickEvent(n, this.onClickCusBtn, this);
this.eventListener = this.node.addComponent("EventListenerCmp");
this.eventListener.registerEvent("USER_INFO_CHANGE", this.USER_INFO_CHANGE, this);
},
start: function() {},
USER_INFO_CHANGE: function() {
this.myBalance.string = String(cc.vv.UserManager.dcoin.toFixed(2));
},
onClickBankBtn: function() {
var e = "YD_Pro/prefab/yd_withdraw_tobank";
if (Global.playerData.bindbank > 0) {
e = "YD_Pro/prefab/yd_withdraw_tobank";
cc.vv.PopupManager.addPopup(e, {
onShow: function() {}
});
} else e = "YD_Pro/prefab/yd_verify_bank";
cc.vv.PopupManager.addPopup(e, {
onShow: function() {}
});
},
onClickUpiBtn: function() {},
onClickClose: function() {
this.node.destroy();
},
onClickRecord: function() {
cc.vv.PopupManager.addPopup("YD_Pro/prefab/yd_money_record", {
onShow: function() {}
});
},
onClickCusBtn: function() {
var e = Global.customerUrl, t = cc.vv.UserManager.uid;
t || (t = Global.playerData.uid);
var i = cc.js.formatStr("%s?name=%s", e, t);
cc.vv.PlatformApiMgr.openURL(i);
}
});
cc._RF.pop();
}, {} ],
yd_withdrawTips: [ function(e, t) {
"use strict";
cc._RF.push(t, "81560EvoExDaZFSRe9EH+8b", "yd_withdrawTips");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
var e = cc.find("btn_no", this.node);
Global.btnClickEvent(e, this.onClickLeft, this);
var t = cc.find("btn_yes", this.node);
Global.btnClickEvent(t, this.onClickRight, this);
},
start: function() {},
showTipType: function(e, t) {
this._showTipsType = e;
var i = cc.find("content_bg/tip1", this.node), n = cc.find("content_bg/tip2", this.node);
i.active = 1 == e;
n.active = 2 == e;
var a = "Deposit Later", o = "Deposit Now";
if (1 == e) {
a = "Withdraw Now";
o = "Deposit Now";
var c = "₹ " + cc.vv.UserManager.ecoin.toFixed(2);
Global.setLabelString("lbl_win/val", i, c);
var s = "₹ " + cc.vv.UserManager.dcoin.toFixed(2);
Global.setLabelString("lbl_withdraw/val", i, s);
var r = t, l = cc.js.formatStr("<color=00ff90>Package 1.</c><br/>You can withdraw up to <color=#ffd56a>₹ %s</c> without deposit,then all your free winnings will be transfer to Cash Bonus(Not available for withdrawal).", r);
cc.find("package1", i).getComponent(cc.RichText).string = l;
var d = cc.js.formatStr("<color=00ff90>Package 2.</c><br />You can deposit any amount to claim 100% free winnings back.");
cc.find("package2", i).getComponent(cc.RichText).string = d;
} else {
var h = "₹ " + cc.vv.UserManager.ecoin.toFixed(2);
Global.setLabelString("lbl_win/val", n, h);
var _ = cc.js.formatStr("<color=00ff90>Most Vaule Package:</c><br/>You can deposit your current free winnings <color=#ffd56a>%s</c> or any higher amount to claim 100% free winnings back.<br/><br/><color=00ff90>Most Popular Package:</c><br/>You can deposit any amount(<color=#ffd56a>Less than %s</c>) to unlock same amount free winnings,then remaining free winnings will be transferred to Cash Bonus (Not available for withdrawal).", h, h);
cc.find("package1", n).getComponent(cc.RichText).string = _;
}
Global.setLabelString("btn_no/Background/lbl", this.node, a);
Global.setLabelString("btn_yes/Background/lbl", this.node, o);
},
onClickLeft: function() {
if (1 == this._showTipsType) {
cc.vv.PopupManager.showTopWin("YD_Pro/prefab/yd_charge", {
onShow: function(e) {
e.getComponent("yd_charge").setURL(cc.vv.UserManager.drawUrl);
e.addComponent("NodeLifeCallBack").setDestroyCall(function() {
cc.vv.NetManager.sendAndCache({
c: MsgId.PERSIONAL_INFO,
otheruid: cc.vv.UserManager.uid
}, !0);
});
}
});
this._doClose();
} else this._doClose();
},
onClickRight: function() {
cc.vv.PopupManager.showTopWin("YD_Pro/prefab/yd_charge", {
onShow: function(e) {
var t = cc.vv.UserManager.ecoin.toFixed(2);
e.getComponent("yd_charge").setURL(cc.vv.UserManager.payurl, null, t);
}
});
this._doClose();
},
_doClose: function() {
this.node.destroy();
}
});
cc._RF.pop();
}, {} ],
yd_withdraw_tobank: [ function(e, t) {
"use strict";
cc._RF.push(t, "d9de8KsI5dOwJuIkX6hu6i8", "yd_withdraw_tobank");
cc.Class({
extends: cc.Component,
properties: {
bankTabs: [],
withdrawEditBox: {
displayName: "提现金额输入框",
default: null,
type: cc.EditBox
},
withdrawBtn: {
displayName: "提现按钮",
default: null,
type: cc.Button
},
myBankList: [],
selectIndex: -1,
clickTime: 0,
myBalance: {
displayName: "可提现金额",
default: null,
type: cc.Label
}
},
onLoad: function() {
var e = cc.find("btn_return", this.node);
Global.btnClickEvent(e, this.onClickClose, this);
this.myBalance.string = String(cc.vv.UserManager.dcoin.toFixed(2));
this.netListener = this.node.addComponent("NetListenerCmp");
cc.find("mybankContainer", this.node);
var t = {
c: MsgId.BANK_CARD_GET
};
cc.vv.NetManager.send(t);
this.netListener.registerMsg(MsgId.BANK_CARD_GET, this.onBankCardReturn, this);
this.eventListener = this.node.addComponent("EventListenerCmp");
this.eventListener.registerEvent("USER_INFO_CHANGE", this.USER_INFO_CHANGE, this);
this.withdrawEditBox.node.on("text-changed", this.updateView, this);
this.withdrawEditBox.node.on("editing-did-ended", this.onWithdrawInputFinished, this);
this.withdrawBtn.node.on("click", this.onClickWithdraw, this);
var i = cc.find("btn_Service", this.node);
Global.btnClickEvent(i, this.onClickCusBtn, this);
var n = cc.find("btn_record", this.node);
Global.btnClickEvent(n, this.onClickRecord, this);
this.getCurNumInfo();
},
getCurNumInfo: function() {
var e = this, t = cc.vv.UserManager.uid;
t || (t = Global.playerData.uid);
var i = cc.vv.UserManager.token;
i || (i = Global.playerData.token);
var n = {};
n.token = i;
n.uid = t;
cc.vv.NetManager.requestHttpPost("", n, function(t, i) {
if (t && 0 === i.code) {
e._toBankNumArray = i.data.pay_num_list;
e._max_draw = i.data.max_draw;
e._current_draw = i.data.current_draw;
} else if (t) {
e._toBankNumArray = [ 200, 500, 1e3, 2e3, 5e3, 1e4, 2e4, 5e4 ];
e._max_draw = 3;
e._current_draw = 0;
}
e._selectNum = e._toBankNumArray[0];
e.initNumSelectInfo();
e.initWithdrewNum();
}, "https://pay.hdreocal2023.xyz/api/preDai", "POST");
},
initWithdrewNum: function() {
var e = cc.find("btn_withdrew", this.node);
cc.find("num_label", e).getComponent(cc.Label).string = this._toBankNumArray[0];
var t = cc.find("flagBg", e);
cc.find("time_label", t).getComponent(cc.Label).string = this._current_draw + "/" + this._max_draw;
},
initNumSelectInfo: function() {
for (var e = cc.find("scro", this.node), t = cc.find("view", e), i = cc.find("content", t), n = cc.find("Num_layout", i), a = 1; a <= 9; a++) cc.find("toggle" + a, n).active = !1;
for (var o = 1; o <= 9; o++) {
var c = cc.find("toggle" + o, n), s = cc.find("Background", c), r = cc.find("num_Label", s).getComponent(cc.Label);
if (this._toBankNumArray[o - 1]) {
r.string = this._toBankNumArray[o - 1];
c.active = !0;
}
}
},
onToggleSelect: function(e, t) {
var i = cc.find("btn_withdrew", this.node);
cc.find("num_label", i).getComponent(cc.Label).string = this._toBankNumArray[t];
this._selectNum = this._toBankNumArray[t];
},
USER_INFO_CHANGE: function() {
this.myBalance.string = String(cc.vv.UserManager.dcoin.toFixed(2));
},
updateView: function() {
this.withdrawBtn.getComponent("ButtonGrayCmp").interactable = !1;
},
onWithdrawInputFinished: function() {
Number(this.withdrawEditBox.string) < 100 ? cc.vv.FloatTip.show("At least 100") : Number(this.withdrawEditBox.string) > cc.vv.UserManager.dcoin ? cc.vv.FloatTip.show("Insufficient withdrawal amount") : this.withdrawBtn.getComponent("ButtonGrayCmp").interactable = !0;
},
onBankCardReturn: function(e) {
var t = this;
this.bankTabs.length = 0;
this.myBankList.length = 0;
if (200 == e.code) if (e.spcode && e.spcode > 0) cc.vv.FloatTip.show("No Bank Card "); else {
for (var i, n = cc.find("scro/view/content/mybankContainer", this.node), a = cc.find("bank_template", this.node), o = 0; o < e.bankList.length; o++) {
var c = cc.instantiate(a);
c.parent = n;
c.setPosition(0, 0);
var s = cc.find("Background", c);
cc.find("check", s).active = !1;
cc.find("banknumber", s).getComponent(cc.Label).string = (i = String(e.bankList[o].account)).substr(0, 4) + "******" + i.substr(i.length - 2, i.length);
this.bankTabs[o] = c;
this.myBankList[o] = e.bankList[o];
}
for (var r = function(e) {
var i = t.bankTabs[e];
i.on("click", function() {
t.onClickOneBank(i);
});
t.onClickOneBank(t.bankTabs[0]);
}, l = 0; l < this.bankTabs.length; l++) r(l);
}
},
onClickRecord: function() {
cc.vv.PopupManager.addPopup("YD_Pro/prefab/yd_money_record", {
onShow: function() {}
});
},
onClickWithdraw: function() {
if (!(Date.now() - this.clickTime <= 200)) {
var e = this;
this.clickTime = Date.now();
var t = cc.vv.UserManager.dcoin.toFixed(2);
if (Number(t) < Number(this._selectNum)) cc.vv.FloatTip.show("The amount of cash that can be withdrawn is insufficient"); else {
var i = cc.vv.UserManager.uid;
i || (i = Global.playerData.uid);
var n = {};
n.bankid = this.myBankList[this.selectIndex].id;
n.dcoin = Number(this._selectNum);
n.id = 19;
var a = cc.vv.UserManager.token;
a || (a = Global.playerData.token);
n.token = a;
n.uid = i;
cc.log("看看看提现url----", cc.vv.UserManager.drawUrl);
cc.vv.NetManager.requestHttpPost("", n, function(t, i) {
if (t && 0 === i.code) {
cc.vv.FloatTip.show("Operate succussfully,please wait");
e.getCurNumInfo();
} else t && 540 == i.code ? cc.vv.FloatTip.show("Wrong account number") : t && 541 == i.code ? cc.vv.FloatTip.show("username is wrong") : t && 542 == i.code ? cc.vv.FloatTip.show("ifsc is wrong") : t && 543 == i.code ? cc.vv.FloatTip.show("Bank name is incorrect") : t && 544 == i.code ? cc.vv.FloatTip.show("email is incorrect") : t && 545 == i.code ? cc.vv.FloatTip.show("phone is incorrect") : t && 546 == i.code ? cc.vv.FloatTip.show("upi is incorrect") : t && 547 == i.code ? cc.vv.FloatTip.show("usdt addr is incorrect") : t && 548 == i.code ? cc.vv.FloatTip.show("Withdrawal amount requires jungle 0") : t && 549 == i.code ? cc.vv.FloatTip.show("Account information is incorrect") : t && 550 == i.code ? cc.vv.FloatTip.show("Insufficient withdrawal amount") : t && 563 == i.code ? cc.vv.FloatTip.show("The bet amount is not enough, please continue playing or contact customer service.") : t && cc.vv.FloatTip.show("Withdrawal failed, please check your withdrawal information");
}, cc.vv.UserManager.drawUrl, "POST");
}
}
},
onClickClose: function() {
this.node.destroy();
},
onClickOneBank: function(e) {
for (var t = 0; t < this.bankTabs.length; t++) {
var i = this.bankTabs[t], n = cc.find("Background", i);
cc.find("check", n).active = !1;
}
var a = this.bankTabs.indexOf(e);
this.selectIndex = a;
var o = this.bankTabs[a], c = cc.find("Background", o);
cc.find("check", c).active = !0;
},
onClickCusBtn: function() {
var e = Global.customerUrl, t = cc.vv.UserManager.uid;
t || (t = Global.playerData.uid);
var i = cc.js.formatStr("%s?name=%s", e, t);
cc.vv.PlatformApiMgr.openURL(i);
},
onClickVerifyNew: function() {
cc.vv.PopupManager.addPopup("YD_Pro/prefab/yd_verify_bank", {
onShow: function() {}
});
},
start: function() {}
});
cc._RF.pop();
}, {} ]
}, {}, [ "RewardFlyAnim", "FilterWordConfig", "GameDataCfg", "GameIdMgr", "GameItemCfg", "GameManagerEx", "GlobalVar", "ChangeLanguageScene", "DurakGameList", "GameBtnList", "GameHall", "GamePreLoading", "HallAdCpt", "HallAdItemCpt", "HallFloatMenuCpt", "HallSlotBtn", "LeagueExpCpt", "LevelCpt", "PageHall_Ani", "ToGameLoading", "UserCoinCpt", "UserDiamondCpt", "UserInfoCmp", "VipExpCpt", "FeedbackBtn", "GameConfig", "GameHotupdate", "GameIcon", "GameLaunch", "GameLogin", "GameTips", "GameTipsAr", "GameYono", "HotUpdateModule", "LangBoxBtnCpt", "LangBoxCpt", "Logo", "MD5", "PhoneBindingView", "PhoneForgetView", "PhoneLoginView", "PokerProgressCpt", "RegisterView", "MsgIdConfig", "ReportConfig", "UserConfig", "UserManagerEx", "YD_Pro", "CommonStyle", "FlyDiamonds", "ItemsConfig", "LevelCfg", "PromiseLock", "CDButtonProxy", "ImgSwitchCmpTS", "MaskProgress", "MoveShapeChange", "NetImg", "NetResLoader", "TurnCmp", "UserAvatar", "BaseHandler", "WSReqest", "i18nComEx", "PBClickEffect", "BtnGameChangeCardSizeCpt", "RoomLeagueCpt", "PopupRoomLeagueView", "RoomIdCpt", "BtnGameRoundCardsCpt", "RoomSettlementCpt", "RoomSocialSalonDisplay", "DebugPanel", "DeskFrameMap", "PBCommonData", "PBCommonProxy", "PBEvent", "PBGameData", "PBLayerMgr", "PBLogic", "PBRule", "PBSkinMgr", "PBUtils", "PBVoiceCtrl", "YDAppShow", "YD_float_service", "PBAutoHost", "PBBgCtrl", "PBCardData", "PBCardItem", "PBCardItemSimple", "PBHandCard", "PBHideHandCard", "PBChat", "PBChatData", "PBChatRecordItem", "PBEmotionPlayer", "PBInteractiveCtrl", "PBInteractiveEmotionPanel", "PBMiniGame777", "PBMiniGame777_reel", "PBMsgCmd", "PBMsgHandler", "PBMsgHandlerEx", "PBMsgWriter", "DeskLightCpt", "Desk_Table_code", "PBLightCtrl", "PBOperate", "btn_h5_download", "btn_h5_fb", "PBPlayer", "PBPlayerData", "PBPlayersCtrl", "PBToggleVoice", "PBUserInfoCmp", "PBSettlementInfoChange", "PBSettlementInfoChangeInPlayer", "PBTotalSettlement", "PBSoundCtrl", "SubGameClickSoundCmp", "PBClock", "PBCountdown", "PBExitWarning", "PBFingerTip", "PBInviteFriends", "PBMenu", "PBNetDelay", "PBPopupDismiss", "PBPopupInvite", "PBQualifying", "PBRpFullScreenAni", "PBSelfExpChange", "PBTipsCoinRecharge", "PBTrickRoundCards", "PBViewerList", "BroadcastCpt", "BroadcastManager", "DebugGameBtn", "DebugGameCmdBtn", "DebugLaunch", "DebugShow", "EcsUtils", "ID", "System", "Utils", "World", "AudioCfgCpt", "BtnEvtCpt", "JettonActionInCpt", "JettonActionOutCpt", "JettonCpt", "JettonLayoutCpt", "KeyCpt", "PokerActionChangeCpt", "PokerActionInCpt", "PokerActionOutCpt", "PokerCpt", "PokerLayoutCpt", "PrefabCfgCpt", "AnimSystem", "JettonSystem", "NetQueueSystem", "PokerSystem", "GlobalTools", "HeadManager", "NetHeadImg", "NetManagerEx", "PH_NetCacheMgr", "PayMgrEx", "PopupBtnCmp", "PopupCloseBtnCmp", "PopupLifeCmp", "PopupManager", "RedHitCmp", "RedHitManager", "RedHitMsgCmp", "ResManager", "RuleBtnCpt", "RuleViewCpt", "DelayCmp", "EventBtnCmp", "EventListenerCmp", "NetListenerCmp", "ButtonClick2SoundCmp", "ButtonClickLimitCmp", "ButtonClickSoundCmp", "ButtonGrayCmp", "ButtonSoundCpt", "CH_CommPopBgLayer", "CarouselCpt", "CarouselIndicatorCpt", "CarouselItemCpt", "FloatTipEx", "HeadCmp", "IsReviewCpt", "LeftMenuCpt", "ListView", "ListViewItem", "LongTouchCpt", "LoopPageView", "NavigationPageItem", "NavigationPageView", "PopupReward", "PreloadingPrefab", "ProgressBarTarget", "RewardItemCpt", "RewardListCpt", "SafeWidget", "SceneTranslate", "ScrollViewDrawCallOpacity", "SingleHide", "Slideshow3D", "Slideshow3DItem", "Tabbar", "TimeDownCpt", "ActionType", "UIActionIn", "UIActionLoop", "UIActionMove", "i18SpriteButton", "i18nCom", "i18nConst", "i18nLabel", "i18nManager", "i18nRichLabel", "i18nSkeleton", "i18nSprite", "i18nTransform", "AlertView", "AlertViewMgr", "FloatTip", "LoadingTip", "NetworkTip", "Poker", "ShowErrorReport", "randomText_tip", "hall_pre_loading", "hotupdate", "subGameMgr", "msgpack.min", "AppData", "DoubleWinCoins", "GameCommUtil", "GameDataInterface", "GameEventId", "GameInit", "GameJackpot", "JsonMgr", "ShaderController", "Android_IOS_Review", "AppLog", "AssetMgr", "AudioManager", "EventDef", "EventManager", "FBMgr", "GameManager", "GlobalCfg", "GlobalFunc", "HeadLoaderMgr", "Http", "CH_List", "List", "ListItem", "Md5", "MsgIdDef", "NetCacheMgr", "NetErrorCode", "NetManager", "PayMgr", "PlatformApi", "SceneMgr", "StatisticsMgr", "TimerMgr", "TradPlusAdMgr", "UI_popwin_interface", "UserManager", "WxMgr", "ChineseCfg", "EnglishCfg", "LanguageButton", "LanguageFont", "LanguageLabel", "LanguageSpine", "LanguageSprite", "LanguageUIAdjust", "LanguageUIBase", "LanguageUtil", "CCAction_Shake", "CCSafeArea", "CH_popwin_base", "DragObjCmp", "ImgSwitchCmp", "LabelRollCmp", "LabelSwitchCmp", "MemoryPrintTool", "NodeLifeCallBack", "ReTimer", "UIFixDesign", "UserHead", "WebView_Ex", "use_reversed_rotateBy", "EventJump", "BeInviteView", "CafeGameInvite", "CafeUIDInvite", "GameShareView", "InviteBindCodeView", "InviteCodeView", "KnockoutMatchView", "KnockoutDeskInfoCpt", "KnockoutDetailsInfoView", "KnockoutHintStartView", "KnockoutRankCpt", "KnockoutResultRegisterView", "KnockoutScheduleView", "NewAppHintView", "NewerGiftView", "NewGuideHintCpt", "PopupNewGuideName", "PopupSign", "GameTableList", "RoomListView", "BaseRoomCpt", "BundleUpdateModule", "LikeGameCpt", "PageRoomBaloot", "PageRoomHand", "PopupLeagueRecord", "RoomLeagueRule", "RoomRankCpt", "RoomTypeBtn", "PopupExchangeCode", "PopupFeedback", "PopupSetting", "PopupZCService", "SettingLangBoxCpt", "ShopViewMainV3View", "PopupSelectSendTypeView", "PopupShopVip", "PopupVipUpgrade", "ShopFriendSendCoin", "ShopHeadItem", "ShopSendCoin", "ShopViewBtn", "ShopViewCoin", "ShopViewDiamond", "ShopViewGift", "ShopViewSalon", "ShopViewSkin", "ShopViewSkinItem", "ShopViewVip", "ShopViewVipBenefits", "SkinShop", "SkinShopInfoCmp", "SkinShopItemCmp", "GameFlagShow", "LMSlotMachine_PrizePool", "PageSlots", "SlotIcon", "SlotsItem", "node_downing", "BuyUserHeadCmp", "ChangeUserCountryCmp", "ChangeUserGenderCmp", "ChangeUserHead", "ChangeUserIntroductionCmp", "ChangeUserNameCmp", "GameRecordCpt", "GiftAnimCpt", "GiftItemCpt", "PersonalInfo", "PopupGameRecordCpt", "PopupReport", "UserExpRule", "UserGiftListCmp", "VipUserBgCpt", "FishData", "Fish_Animation", "Fish_Bullet", "Fish_Chains", "Fish_CoinSticks", "Fish_Fish", "Fish_FishArray", "Fish_FishMgr", "Fish_Library_BRS", "Fish_Menu_BRS", "Fish_Menu_p99", "Fish_MsgId", "Fish_Recycle", "Fish_Utils", "Simple_Bottom", "Simple_OP", "Simple_Quickbet", "Input_Nums", "Interactive_emotion_ex", "Number_Tuning", "PBInteractiveEmotionPanel_ex", "Table_Area", "Table_BetAreas_Base", "Table_BetChip_Base", "Table_BetChip_Base_Ex", "Table_BetList_Base", "Table_BetList_Base_Ex", "Table_Bottom_Base", "Table_Chips_Nodepool", "Table_Config", "Table_CountDown", "Table_FlyScore", "Table_GameData_Base", "Table_Game_Base", "Table_Help_prefab", "Table_History_Detail", "Table_Logic_Base", "Table_Matching", "Table_Observers", "Table_Observers_List", "Table_Player_Base", "Table_Player_List_Base", "Table_Record_Bet_Item", "Table_Record_Item", "Table_Record_Menu", "Table_Record_Pannel", "Table_Record_Room_Pannel", "Table_Recount_3", "Table_Room_Info", "Table_Sound", "Table_menu", "Table_menu_charge", "Table_menu_detail", "yd_more_coins", "yd_shop_view", "TaskCompleteHintCpt", "yd_rank", "yd_rank_cashgame", "yd_rank_detail", "yd_rank_games", "yd_rank_gamesitem", "yd_rank_item", "yd_rank_referrals", "yd_rank_rule_rewards", "YD_Safe", "YD_Withdraw", "balance_record_item", "deposit_record_item", "newergift_rule", "withdraw_record_item", "yd_Record_Item", "yd_activity", "yd_bonus", "yd_bonus_pro_detail", "yd_bonus_pro_item", "yd_bonus_prom", "yd_call_back", "yd_charge", "yd_feedback", "yd_float_service", "yd_historical_record", "yd_manage", "yd_money_record", "yd_reward_today", "yd_service", "yd_shop", "yd_transaction", "yd_verify_bank", "yd_vip", "yd_vip_help", "yd_withdrawChoice", "yd_withdrawTips", "yd_withdraw_tobank", "LMSlots_Asset_Base", "LMSlots_Bg_Adapt", "LMSlots_Bottom_Base", "LMSlots_Bottom_BetTips", "LMSlots_GameData_Base", "LMSlots_Help_Base", "LMSlots_Help_Base_2", "LMSlots_Loading_Base", "LMSlots_Logic_Base", "LMSlots_Logo_Adapt", "LMSlots_Panel_Click", "LMSlots_PauseUI_Base", "LMSlots_PrizePool_Base", "LMSlots_RP", "LMSlots_Reel_Base", "LMSlots_Slots_Base", "LMSlots_Sound", "LMSlots_Symbol_Base", "LMSlots_SysFloat", "LMSlots_Top_Base", "LMSlots_backlobby", "LMSots_OtherSys", "BigWin", "DropCoins", "LMSlotMachine_MenuNode", "SlotMachine_GameEventId", "SlotMachine_MsgId", "LMSlots_Subgame777", "LMSlots_Subgame777_item", "LMSlots_Subgame777_reel" ]);